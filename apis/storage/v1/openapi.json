{
  "openapi": "3.0.0",
  "externalDocs": {
    "description": "See documentation for Akamai's NetStorage Configuration API",
    "url": "https://techdocs.akamai.com/netstorage/reference"
  },
  "info": {
    "title": "Akamai: NetStorage Configuration API",
    "version": "1",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "paths": {
    "/cpcodes": {
      "post": {
        "description": "This operation creates a CP code for use with NetStorage.",
        "operationId": "post-cpcodes",
        "summary": "Create a CP code",
        "tags": [
          "CP codes"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's NetStorage Configuration API",
          "url": "https://techdocs.akamai.com/netstorage/reference/post-cpcodes"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "contractId": "K-0N7RAK7",
                "cpcodeName": "MediaStorage"
              },
              "schema": {
                "additionalProperties": false,
                "description": "View and create CP codes for use with NetStorage. The CP code serves as the root for upload directory. This is also referred to as the CP code root.",
                "type": "object",
                "required": [
                  "contractId",
                  "cpcodeName"
                ],
                "properties": {
                  "contractId": {
                    "description": "The unique identifier set for the contract that contains your instance of NetStorage and this group.",
                    "example": "{{contractId}}",
                    "type": "string"
                  },
                  "cpcodeName": {
                    "description": "A unique name you provide to identify this CP code.",
                    "example": "{{cpcodeName}}",
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/cpcode-post.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "example": {
                  "contractId": "K-0N7RAK7",
                  "cpcodeName": "MediaStorage"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "View and create CP codes for use with NetStorage. The CP code serves as the root for upload directory. This is also referred to as the CP code root.",
                  "type": "object",
                  "required": [
                    "contractId",
                    "cpcodeName"
                  ],
                  "properties": {
                    "contractId": {
                      "description": "The unique identifier set for the contract that contains your instance of NetStorage and this group.",
                      "type": "string"
                    },
                    "cpcodeName": {
                      "description": "A unique name you provide to identify this CP code.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/cpcode-post.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/cpcodes/unused": {
      "get": {
        "description": "Get a list of CP codes that aren't assigned to a storage group.",
        "operationId": "get-cpcodes-unused",
        "summary": "List unused CP Codes",
        "tags": [
          "CP codes"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's NetStorage Configuration API",
          "url": "https://techdocs.akamai.com/netstorage/reference/get-cpcodes-unused"
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The unique identifier for the contract that contains your instance of NetStorage and this CP code.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/cpcodes/used": {
      "get": {
        "description": "Get a list of all CP codes that are assigned to a storage group.",
        "operationId": "get-cpcodes-used",
        "summary": "List CP codes in use",
        "tags": [
          "CP codes"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's NetStorage Configuration API",
          "url": "https://techdocs.akamai.com/netstorage/reference/get-cpcodes-used"
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/cpcodes/{cpcodeId}/age-deletions": {
      "get": {
        "description": "View the automatic purge routines for a `cpcodeId`. You can optionally include a URL-encoded `ageDeletionDirectoryPrefix` to filter an individual purge routine.",
        "operationId": "get-cpcode-age-deletions",
        "summary": "View the automatic purge routine",
        "tags": [
          "CP codes"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's NetStorage Configuration API",
          "url": "https://techdocs.akamai.com/netstorage/reference/get-cpcode-age-deletions"
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "ageDeletionDays": 5,
                      "ageDeletionDirectory": "/456789",
                      "ageDeletionExclusionRegex": "/a*",
                      "ageDeletionInclusionRegex": "/pg*",
                      "ageDeletionRecursivePurge": false,
                      "ageDeletionSelectionRegex": "/pgbh",
                      "ageDeletionSizeBytes": 60
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "ageDeletionDays": {
                            "type": "number"
                          },
                          "ageDeletionDirectory": {
                            "type": "string"
                          },
                          "ageDeletionExclusionRegex": {
                            "type": "string"
                          },
                          "ageDeletionInclusionRegex": {
                            "type": "string"
                          },
                          "ageDeletionRecursivePurge": {
                            "type": "boolean"
                          },
                          "ageDeletionSelectionRegex": {
                            "type": "string"
                          },
                          "ageDeletionSizeBytes": {
                            "type": "number"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/age-deletion-get.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/age-deletions-get.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "This identifies a subdirectory to target for purging.",
            "example": "{{ageDeletionDirectoryPrefix}}",
            "in": "query",
            "name": "ageDeletionDirectoryPrefix",
            "schema": {
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/ageDeletionDirectoryPrefix-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Make changes to an automatic purge routine for a specific CP code.",
        "operationId": "put-cpcode-age-deletions",
        "summary": "Modify a purge routine",
        "tags": [
          "CP codes"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's NetStorage Configuration API",
          "url": "https://techdocs.akamai.com/netstorage/reference/put-cpcode-age-deletions"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "ageDeletionDays": 100,
                "ageDeletionDirectory": "/979672/file",
                "ageDeletionExclusionRegex": "*.pdf",
                "ageDeletionRecursivePurge": true,
                "ageDeletionSelectionRegex": "*.mp4",
                "ageDeletionSizeBytes": 100,
                "ageDeletionSizeUnit": "GB"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Automatic purge routines perform a routine scan of a target directory, and once a specified capacity is reached, the system will begin to purge files that are older than a date you specify.",
                "type": "object",
                "properties": {
                  "ageDeletionDays": {
                    "description": "When the `ageDeletionSizeBytes` value is reached for the target directory, this number is subtracted from the current date to determine a timestamp. Files older than this timestamp are purged.",
                    "example": "{{ageDeletionDays}}",
                    "type": "integer"
                  },
                  "ageDeletionDirectory": {
                    "description": "The target directory for an Automatic Purge Routine.",
                    "example": "{{ageDeletionDirectory}}",
                    "type": "string"
                  },
                  "ageDeletionExclusionRegex": {
                    "description": "POSIX regular expression pattern matching the filenames to exclude from the purge.",
                    "example": "{{ageDeletionExclusionRegex}}",
                    "type": "string"
                  },
                  "ageDeletionRecursivePurge": {
                    "default": "false",
                    "description": "Whether subdirectories within the target directory are also included in the purge. If `false`, only files within the target directory are purged.",
                    "example": "{{ageDeletionRecursivePurge}}",
                    "type": "boolean"
                  },
                  "ageDeletionSelectionRegex": {
                    "description": "POSIX regular expression pattern matching the filenames to include in the purge.",
                    "example": "{{ageDeletionSelectionRegex}}",
                    "type": "string"
                  },
                  "ageDeletionSizeBytes": {
                    "description": "Automatic purge occurs when the target directory reaches this size, in bytes.",
                    "example": "{{ageDeletionSizeBytes}}",
                    "type": "integer"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/automatic-purge-put.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "This identifies a subdirectory to target for purging.",
            "example": "{{ageDeletionDirectoryPrefix}}",
            "in": "query",
            "name": "ageDeletionDirectoryPrefix",
            "schema": {
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/ageDeletionDirectoryPrefix-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Delete the automatic purge routine for a specific CP code.",
        "operationId": "delete-cpcode-age-deletions",
        "summary": "Delete an automatic purge routine",
        "tags": [
          "CP codes"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's NetStorage Configuration API",
          "url": "https://techdocs.akamai.com/netstorage/reference/delete-cpcode-age-deletions"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "ageDeletionDirectoryPrefix": {
                    "description": "This identifies a subdirectory to target for purging.",
                    "example": "dir1",
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/delete-cpcode-age-deletions.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "This identifies a subdirectory to target for purging.",
            "example": "{{ageDeletionDirectoryPrefix}}",
            "in": "query",
            "name": "ageDeletionDirectoryPrefix",
            "schema": {
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/ageDeletionDirectoryPrefix-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Uniquely identifies a Content Provider.",
          "example": "{{cpcodeId}}",
          "in": "path",
          "name": "cpcodeId",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/cpcodeId-path.yaml"
          }
        }
      ]
    },
    "/rule-sets": {
      "post": {
        "description": "Create a rule set.",
        "operationId": "post-rule-sets",
        "summary": "Create a rule set",
        "tags": [
          "Rule sets"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's NetStorage Configuration API",
          "url": "https://techdocs.akamai.com/netstorage/reference/post-rule-sets"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "allowRest": true,
                "contractId": 123,
                "description": "Allow Asia and deny UA. Allow and deny specific IPs.",
                "groupId": 23,
                "lastModifiedDate": "16-10-2020",
                "name": "newRuleSet",
                "ruleSetId": 2,
                "uploadAccounts": [
                  "abxupllasgx"
                ],
                "ruleSetGEOs": {
                  "allowGEOs": [
                    "asia"
                  ],
                  "denyGEOs": [
                    "ua"
                  ]
                },
                "ruleSetIPs": {
                  "allowIPs": [
                    "192.0.2.205"
                  ],
                  "denyIPs": [
                    "192.0.2.98"
                  ]
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "Access Control List (ACL) Rule Sets are collections of IP Addresses or Geographic Regions that you create to either allow or block their access to a storage group.",
                "type": "object",
                "required": [
                  "contractId",
                  "name"
                ],
                "properties": {
                  "allowRest": {
                    "description": "Set to `false` to add allowed geos. Set to `true` to add denied geos.",
                    "example": "{{allowRest}}",
                    "type": "boolean"
                  },
                  "contractId": {
                    "description": "The unique identifier for the contract that contains your instance of NetStorage and this rule set.",
                    "example": "{{contractId}}",
                    "type": "number"
                  },
                  "description": {
                    "description": "A description for this ACL rule set.",
                    "example": "{{description}}",
                    "type": "string"
                  },
                  "groupId": {
                    "description": "The unique identifier for the account that this rule set is associated with.",
                    "example": "{{groupId}}",
                    "type": "number"
                  },
                  "lastModifiedDate": {
                    "description": "The date the rule set was last modified.",
                    "example": "{{lastModifiedDate}}",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name for this ACL rule set. For easy recognition, use a unique, easy-to-remember value.",
                    "example": "{{name}}",
                    "type": "string"
                  },
                  "ruleSetGEOs": {
                    "additionalProperties": false,
                    "description": "GEO rule sets are associated with a specific upload account, which controls access to the storage group.",
                    "type": "object",
                    "properties": {
                      "allowGEOs": {
                        "description": "The geographic regions that are allowed access to the applicable storage group.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "denyGEOs": {
                        "description": "The geographic regions that are denied access to the applicable storage group.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "ruleSetIPs": {
                    "additionalProperties": false,
                    "description": "IP rule sets are associated with a specific upload account which controls access to the storage group.",
                    "type": "object",
                    "properties": {
                      "allowIPs": {
                        "description": "IP addresses or CIDR blocks that are allowed access to the applicable storage group.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "denyIPs": {
                        "description": "IP addresses that are denied access to the applicable storage group. ACL rule sets are associated with a specific upload account which controls access to the storage group.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "ruleSetId": {
                    "description": "The unique ID assigned to this rule set.",
                    "example": "{{ruleSetId}}",
                    "type": "number"
                  },
                  "uploadAccounts": {
                    "description": "These upload accounts are associated with this rule set.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/rule-set-post.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "allowRest": true,
                      "lastModifiedDate": "2017-10-26T04:50:31Z",
                      "name": "aa",
                      "ruleSetId": 20224,
                      "uploadAccounts": []
                    },
                    {
                      "allowRest": false,
                      "lastModifiedDate": "2014-04-14T00:00:00Z",
                      "name": "acl_one",
                      "ruleSetId": 11400,
                      "uploadAccounts": [
                        {
                          "storageGroupId": 38431,
                          "storageGroupName": "croquequ",
                          "uploadAccountId": "email"
                        }
                      ]
                    },
                    {
                      "allowRest": false,
                      "description": "migration",
                      "lastModifiedDate": "2013-11-22T00:00:00Z",
                      "name": "RuleSet Used By:11p99",
                      "ruleSetId": 10502,
                      "uploadAccounts": [
                        {
                          "storageGroupId": 38431,
                          "storageGroupName": "croquequ",
                          "uploadAccountId": "11p99"
                        },
                        {
                          "storageGroupId": 45240,
                          "storageGroupName": "Media PM NetStorage",
                          "uploadAccountId": "bgangadh"
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "A set of Access Control List Rule Set objects. ACLs are collections of IP addresses or geographic regions that you create to either allow or block their access to a storage group.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Access Control List (ACL) Rule Sets are collections of IP addresses or geographic regions that you create to either allow or block their access to a storage group.",
                        "type": "object",
                        "properties": {
                          "allowRest": {
                            "type": "boolean"
                          },
                          "description": {
                            "type": "string"
                          },
                          "lastModifiedDate": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "ruleSetId": {
                            "type": "number"
                          },
                          "uploadAccounts": {
                            "description": "Upload accounts control access to the storage group.",
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "storageGroupId": {
                                  "description": "The unique identifier that's set for each storage group.",
                                  "type": "number"
                                },
                                "storageGroupName": {
                                  "description": "The name set for the storage group.",
                                  "type": "string"
                                },
                                "uploadAccountId": {
                                  "description": "The unique identifier that's set for each upload account.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/rule-set-get.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/rule-sets-get.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Badly formatted JSON. Compare with the schema.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "Unauthorized Request.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "Application permission error.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "429": {
            "description": "The maximum request count for a specific time duration for this resource has been reached.",
            "content": {
              "*/*": {}
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Limit.yaml"
                }
              },
              "X-RateLimit-Remaining": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Remaining.yaml"
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/429.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Get a list of rule sets.",
        "operationId": "get-rule-sets",
        "summary": "List all rule sets",
        "tags": [
          "Rule sets"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's NetStorage Configuration API",
          "url": "https://techdocs.akamai.com/netstorage/reference/get-rule-sets"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "allowRest": true,
                      "lastModifiedDate": "2017-10-26T04:50:31Z",
                      "name": "aa",
                      "ruleSetId": 20224,
                      "uploadAccounts": []
                    },
                    {
                      "allowRest": false,
                      "lastModifiedDate": "2014-04-14T00:00:00Z",
                      "name": "acl_one",
                      "ruleSetId": 11400,
                      "uploadAccounts": [
                        {
                          "storageGroupId": 38431,
                          "storageGroupName": "croquequ",
                          "uploadAccountId": "email"
                        }
                      ]
                    },
                    {
                      "allowRest": false,
                      "description": "migration",
                      "lastModifiedDate": "2013-11-22T00:00:00Z",
                      "name": "RuleSet Used By:11p99",
                      "ruleSetId": 10502,
                      "uploadAccounts": [
                        {
                          "storageGroupId": 38431,
                          "storageGroupName": "croquequ",
                          "uploadAccountId": "11p99"
                        },
                        {
                          "storageGroupId": 45240,
                          "storageGroupName": "Media PM NetStorage",
                          "uploadAccountId": "bgangadh"
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "A set of Access Control List Rule Set objects. ACLs are collections of IP addresses or geographic regions that you create to either allow or block their access to a storage group.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Access Control List (ACL) Rule Sets are collections of IP addresses or geographic regions that you create to either allow or block their access to a storage group.",
                        "type": "object",
                        "properties": {
                          "allowRest": {
                            "type": "boolean"
                          },
                          "description": {
                            "type": "string"
                          },
                          "lastModifiedDate": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "ruleSetId": {
                            "type": "number"
                          },
                          "uploadAccounts": {
                            "description": "Upload accounts control access to the storage group.",
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "storageGroupId": {
                                  "description": "The unique identifier that's set for each storage group.",
                                  "type": "number"
                                },
                                "storageGroupName": {
                                  "description": "The name set for the storage group.",
                                  "type": "string"
                                },
                                "uploadAccountId": {
                                  "description": "The unique identifier that's set for each upload account.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/rule-set-get.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/rule-sets-get.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Badly formatted JSON. Compare with the schema.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "Unauthorized Request.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "Application permission error.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "429": {
            "description": "The maximum request count for a specific time duration for this resource has been reached.",
            "content": {
              "*/*": {}
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Limit.yaml"
                }
              },
              "X-RateLimit-Remaining": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Remaining.yaml"
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/429.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/rule-sets/{ruleSetId}": {
      "get": {
        "description": "Get details for a specific rule set.",
        "operationId": "get-rule-set",
        "summary": "Get a rule set",
        "tags": [
          "Rule sets"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's NetStorage Configuration API",
          "url": "https://techdocs.akamai.com/netstorage/reference/get-rule-set"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "allowRest": true,
                      "lastModifiedDate": "2017-10-26T04:50:31Z",
                      "name": "aa",
                      "ruleSetId": 20224,
                      "uploadAccounts": []
                    },
                    {
                      "allowRest": false,
                      "lastModifiedDate": "2014-04-14T00:00:00Z",
                      "name": "acl_one",
                      "ruleSetId": 11400,
                      "uploadAccounts": [
                        {
                          "storageGroupId": 38431,
                          "storageGroupName": "croquequ",
                          "uploadAccountId": "email"
                        }
                      ]
                    },
                    {
                      "allowRest": false,
                      "description": "migration",
                      "lastModifiedDate": "2013-11-22T00:00:00Z",
                      "name": "RuleSet Used By:11p99",
                      "ruleSetId": 10502,
                      "uploadAccounts": [
                        {
                          "storageGroupId": 38431,
                          "storageGroupName": "croquequ",
                          "uploadAccountId": "11p99"
                        },
                        {
                          "storageGroupId": 45240,
                          "storageGroupName": "Media PM NetStorage",
                          "uploadAccountId": "bgangadh"
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "A set of Access Control List Rule Set objects. ACLs are collections of IP addresses or geographic regions that you create to either allow or block their access to a storage group.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Access Control List (ACL) Rule Sets are collections of IP addresses or geographic regions that you create to either allow or block their access to a storage group.",
                        "type": "object",
                        "properties": {
                          "allowRest": {
                            "type": "boolean"
                          },
                          "description": {
                            "type": "string"
                          },
                          "lastModifiedDate": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "ruleSetId": {
                            "type": "number"
                          },
                          "uploadAccounts": {
                            "description": "Upload accounts control access to the storage group.",
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "storageGroupId": {
                                  "description": "The unique identifier that's set for each storage group.",
                                  "type": "number"
                                },
                                "storageGroupName": {
                                  "description": "The name set for the storage group.",
                                  "type": "string"
                                },
                                "uploadAccountId": {
                                  "description": "The unique identifier that's set for each upload account.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/rule-set-get.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/rule-sets-get.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Badly formatted JSON. Compare with the schema.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "Unauthorized Request.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "Application permission error.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "429": {
            "description": "The maximum request count for a specific time duration for this resource has been reached.",
            "content": {
              "*/*": {}
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Limit.yaml"
                }
              },
              "X-RateLimit-Remaining": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Remaining.yaml"
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/429.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Update a specific rule set.",
        "operationId": "put-rule-set",
        "summary": "Update a rule set",
        "tags": [
          "Rule sets"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's NetStorage Configuration API",
          "url": "https://techdocs.akamai.com/netstorage/reference/put-rule-set"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "allowRest": true,
                "contractId": 123,
                "description": "Allow Asia and deny UA. Allow and deny specific IPs.",
                "groupId": 23,
                "lastModifiedDate": "16-10-2020",
                "name": "newRuleSet",
                "ruleSetId": 2,
                "uploadAccounts": [
                  "abxupllasgx"
                ],
                "ruleSetGEOs": {
                  "allowGEOs": [
                    "asia"
                  ],
                  "denyGEOs": [
                    "ua"
                  ]
                },
                "ruleSetIPs": {
                  "allowIPs": [
                    "192.0.2.224"
                  ],
                  "denyIPs": [
                    "192.0.2.237"
                  ]
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "Access Control List (ACL) Rule Sets are collections of IP Addresses or Geographic Regions that you create to either allow or block their access to a storage group.",
                "type": "object",
                "required": [
                  "contractId",
                  "name"
                ],
                "properties": {
                  "allowRest": {
                    "description": "Set to `false` to add allowed geos. Set to `true` to add denied geos.",
                    "example": "{{allowRest}}",
                    "type": "boolean"
                  },
                  "contractId": {
                    "description": "The unique identifier for the contract that contains your instance of NetStorage and this rule set.",
                    "example": "{{contractId}}",
                    "type": "number"
                  },
                  "description": {
                    "description": "A description for this ACL rule set.",
                    "example": "{{description}}",
                    "type": "string"
                  },
                  "groupId": {
                    "description": "The unique identifier for the account that this rule set is associated with.",
                    "example": "{{groupId}}",
                    "type": "number"
                  },
                  "lastModifiedDate": {
                    "description": "The date the rule set was last modified.",
                    "example": "{{lastModifiedDate}}",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name for this ACL rule set. For easy recognition, use a unique, easy-to-remember value.",
                    "example": "{{name}}",
                    "type": "string"
                  },
                  "ruleSetGEOs": {
                    "additionalProperties": false,
                    "description": "GEO rule sets are associated with a specific upload account, which controls access to the storage group.",
                    "type": "object",
                    "properties": {
                      "allowGEOs": {
                        "description": "The geographic regions that are allowed access to the applicable storage group.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "denyGEOs": {
                        "description": "The geographic regions that are denied access to the applicable storage group.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "ruleSetIPs": {
                    "additionalProperties": false,
                    "description": "IP rule sets are associated with a specific upload account which controls access to the storage group.",
                    "type": "object",
                    "properties": {
                      "allowIPs": {
                        "description": "IP addresses or CIDR blocks that are allowed access to the applicable storage group.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "denyIPs": {
                        "description": "IP addresses that are denied access to the applicable storage group. ACL rule sets are associated with a specific upload account which controls access to the storage group.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "ruleSetId": {
                    "description": "The unique ID assigned to this rule set.",
                    "example": "{{ruleSetId}}",
                    "type": "number"
                  },
                  "uploadAccounts": {
                    "description": "These upload accounts are associated with this rule set.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/rule-set-post.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "allowRest": true,
                  "lastModifiedDate": "16-10-2020",
                  "name": "newRuleSet",
                  "ruleSetId": 2,
                  "ruleSetGEOs": {
                    "allowGEOs": [
                      "asia"
                    ],
                    "denyGEOs": [
                      "ua"
                    ]
                  },
                  "ruleSetIPs": {
                    "allowIPs": [
                      "192.0.2.227"
                    ],
                    "denyIPs": [
                      "192.0.2.71"
                    ]
                  },
                  "uploadAccounts": [
                    {
                      "uploadAccountId": "abxupllasgx"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Access Control List (ACL) Rule Sets are collections of IP addresses or geographic regions that you create to either allow or block their access to a storage group.",
                  "type": "object",
                  "properties": {
                    "allowRest": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "string"
                    },
                    "lastModifiedDate": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "ruleSetId": {
                      "type": "number"
                    },
                    "uploadAccounts": {
                      "description": "Upload accounts control access to the storage group.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "storageGroupId": {
                            "description": "The unique identifier that's set for each storage group.",
                            "type": "number"
                          },
                          "storageGroupName": {
                            "description": "The name set for the storage group.",
                            "type": "string"
                          },
                          "uploadAccountId": {
                            "description": "The unique identifier that's set for each upload account.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/rule-set-get.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Badly formatted JSON. Compare with the schema.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "Unauthorized Request.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "Application permission error.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "429": {
            "description": "The maximum request count for a specific time duration for this resource has been reached.",
            "content": {
              "*/*": {}
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Limit.yaml"
                }
              },
              "X-RateLimit-Remaining": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Remaining.yaml"
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/429.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Delete a specified rule set.",
        "operationId": "delete-rule-set",
        "summary": "Delete a rule set",
        "tags": [
          "Rule sets"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's NetStorage Configuration API",
          "url": "https://techdocs.akamai.com/netstorage/reference/delete-rule-set"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          },
          "400": {
            "description": "Badly formatted JSON. Compare with the schema.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "Unauthorized Request.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "Application permission error.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "429": {
            "description": "The maximum request count for a specific time duration for this resource has been reached.",
            "content": {
              "*/*": {}
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Limit.yaml"
                }
              },
              "X-RateLimit-Remaining": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Remaining.yaml"
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/429.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Uniquely identifies a rule set ID.",
          "example": "{{ruleSetId}}",
          "in": "path",
          "name": "ruleSetId",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/ruleSetId-path.yaml"
          }
        }
      ]
    },
    "/site-snapshots": {
      "post": {
        "description": "Use this operation to create a new site snapshot configuration.",
        "operationId": "post-snapshots",
        "summary": "Create a site snapshot",
        "tags": [
          "Snapshots"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's NetStorage Configuration API",
          "url": "https://techdocs.akamai.com/netstorage/reference/post-snapshots"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "baseDirectory": "/689576/basedir",
                "command": "sst --header 'autoHeaders' --recursive --level 2 --convert-links --page-requisites --domains 'autoDomain' --load-cookies '/689576/cookie' --ignore-robots --passive-ftp --retr-symlinks --timestamping --quota 4 --timeout 30 --output-file '/689576/logfile' 'autoUrl.com' ",
                "cpcodeId": 1234567,
                "dayOfMonth": "*",
                "dayOfWeek": "*",
                "executeNow": false,
                "hour": "1",
                "minute": "15",
                "month": "*",
                "scheduled": true,
                "snapshotId": 45192,
                "snapshotName": "CobSstProd20AugExFalse1",
                "wizard": true,
                "commandConfig": {
                  "convertLinks": true,
                  "cookiesFile": "/689576/cookie",
                  "ignoreRobots": true,
                  "level": 2,
                  "outputFile": "/689576/logfile",
                  "pageRequisites": true,
                  "passiveFtp": true,
                  "quota": 4,
                  "recursive": true,
                  "retrSymlinks": true,
                  "timeOut": 30,
                  "timestamping": true,
                  "domains": [
                    "autoDomain"
                  ],
                  "headers": [
                    "autoHeaders"
                  ],
                  "urls": [
                    "autoUrl.com"
                  ]
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "The Site Snapshot Tool (SST) is an advanced, robust, and flexible failover (continuity) solution that automates the process of downloading content from an enterprise onto the Edge Platform.",
                "type": "object",
                "required": [
                  "snapshotName",
                  "cpcodeId",
                  "baseDirectory"
                ],
                "properties": {
                  "baseDirectory": {
                    "example": "{{baseDirectory}}",
                    "type": "string"
                  },
                  "command": {
                    "example": "{{command}}",
                    "type": "string"
                  },
                  "commandConfig": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "convertAbsolute": {
                        "type": "boolean"
                      },
                      "convertLinks": {
                        "type": "boolean"
                      },
                      "cookiesFile": {
                        "type": "string"
                      },
                      "directoryPrefix": {
                        "type": "string"
                      },
                      "domains": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "headers": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "ignoreRobots": {
                        "type": "boolean"
                      },
                      "inputFile": {
                        "type": "string"
                      },
                      "level": {
                        "type": "integer"
                      },
                      "outputFile": {
                        "type": "string"
                      },
                      "pageRequisites": {
                        "type": "boolean"
                      },
                      "passiveFtp": {
                        "type": "boolean"
                      },
                      "quota": {
                        "type": "integer"
                      },
                      "recursive": {
                        "type": "boolean"
                      },
                      "retrSymlinks": {
                        "type": "boolean"
                      },
                      "timeOut": {
                        "type": "integer"
                      },
                      "timestamping": {
                        "type": "boolean"
                      },
                      "urls": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "cpcodeId": {
                    "example": "{{cpcodeId}}",
                    "type": "integer"
                  },
                  "dayOfMonth": {
                    "example": "{{dayOfMonth}}",
                    "type": "string"
                  },
                  "dayOfWeek": {
                    "description": "Day of week cron accepts 0 and 7 both as Sunday but as per back-end implementation we have given it as 0.",
                    "example": "{{dayOfWeek}}",
                    "type": "string"
                  },
                  "executeNow": {
                    "example": "{{executeNow}}",
                    "type": "boolean"
                  },
                  "hour": {
                    "example": "{{hour}}",
                    "type": "string"
                  },
                  "minute": {
                    "example": "{{minute}}",
                    "type": "string"
                  },
                  "month": {
                    "example": "{{month}}",
                    "type": "string"
                  },
                  "scheduled": {
                    "example": "{{scheduled}}",
                    "type": "boolean"
                  },
                  "snapshotId": {
                    "example": "{{snapshotId}}",
                    "type": "integer"
                  },
                  "snapshotName": {
                    "example": "{{snapshotName}}",
                    "type": "string"
                  },
                  "wizard": {
                    "example": "{{wizard}}",
                    "type": "boolean"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/site-snapshot-post.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Site snapshot entity created and returned.",
            "content": {
              "application/json": {
                "example": {
                  "baseDirectory": "/689576/basedir",
                  "command": "sst --header 'autoHeaders' --recursive --level 2 --convert-links --page-requisites --domains 'autoDomain' --load-cookies '/689576/cookie' --ignore-robots --passive-ftp --retr-symlinks --timestamping --quota 4 --timeout 30 --output-file '/689576/logfile' 'autoUrl.com' ",
                  "cpcodeId": 1234567,
                  "dayOfMonth": "*",
                  "dayOfWeek": "*",
                  "executeNow": false,
                  "hour": "1",
                  "minute": "15",
                  "month": "*",
                  "scheduled": true,
                  "snapshotId": 45192,
                  "snapshotName": "CobSstProd20AugExFalse1",
                  "wizard": true,
                  "commandConfig": {
                    "convertLinks": true,
                    "cookiesFile": "/689576/cookie",
                    "ignoreRobots": true,
                    "level": 2,
                    "outputFile": "/689576/logfile",
                    "pageRequisites": true,
                    "passiveFtp": true,
                    "quota": 4,
                    "recursive": true,
                    "retrSymlinks": true,
                    "timeOut": 30,
                    "timestamping": true,
                    "domains": [
                      "autoDomain"
                    ],
                    "headers": [
                      "autoHeaders"
                    ],
                    "urls": [
                      "autoUrl.com"
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The Site Snapshot Tool (SST) is an advanced, robust, and flexible failover (continuity) solution that automates the process of downloading content from an enterprise onto the Edge Platform.",
                  "type": "object",
                  "required": [
                    "snapshotName",
                    "cpcodeId",
                    "baseDirectory"
                  ],
                  "properties": {
                    "baseDirectory": {
                      "type": "string"
                    },
                    "command": {
                      "type": "string"
                    },
                    "commandConfig": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "convertAbsolute": {
                          "type": "boolean"
                        },
                        "convertLinks": {
                          "type": "boolean"
                        },
                        "cookiesFile": {
                          "type": "string"
                        },
                        "directoryPrefix": {
                          "type": "string"
                        },
                        "domains": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "headers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "ignoreRobots": {
                          "type": "boolean"
                        },
                        "inputFile": {
                          "type": "string"
                        },
                        "level": {
                          "type": "integer"
                        },
                        "outputFile": {
                          "type": "string"
                        },
                        "pageRequisites": {
                          "type": "boolean"
                        },
                        "passiveFtp": {
                          "type": "boolean"
                        },
                        "quota": {
                          "type": "integer"
                        },
                        "recursive": {
                          "type": "boolean"
                        },
                        "retrSymlinks": {
                          "type": "boolean"
                        },
                        "timeOut": {
                          "type": "integer"
                        },
                        "timestamping": {
                          "type": "boolean"
                        },
                        "urls": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "cpcodeId": {
                      "type": "integer"
                    },
                    "dayOfMonth": {
                      "type": "string"
                    },
                    "dayOfWeek": {
                      "description": "Day of week cron accepts 0 and 7 both as Sunday but as per back-end implementation we have given it as 0.",
                      "type": "string"
                    },
                    "executeNow": {
                      "type": "boolean"
                    },
                    "hour": {
                      "type": "string"
                    },
                    "minute": {
                      "type": "string"
                    },
                    "month": {
                      "type": "string"
                    },
                    "scheduled": {
                      "type": "boolean"
                    },
                    "snapshotId": {
                      "type": "integer"
                    },
                    "snapshotName": {
                      "type": "string"
                    },
                    "wizard": {
                      "type": "boolean"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/site-snapshot-post.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Badly formatted JSON. Compare with the schema.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "Unauthorized Request.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "Application permission error.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "429": {
            "description": "The maximum request count for a specific time duration for this resource has been reached.",
            "content": {
              "*/*": {}
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Limit.yaml"
                }
              },
              "X-RateLimit-Remaining": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Remaining.yaml"
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/429.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Get a list of all site snapshots.",
        "operationId": "get-snapshots",
        "summary": "List all site snapshots",
        "tags": [
          "Snapshots"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's NetStorage Configuration API",
          "url": "https://techdocs.akamai.com/netstorage/reference/get-snapshots"
        },
        "responses": {
          "200": {
            "description": "List of site snapshot schedules.",
            "content": {
              "application/json": {
                "example": {
                  "baseDirectory": "/123456/basedir",
                  "command": "sst --header 'autoHeaders' --recursive --level 2 --convert-links --page-requisites --domains 'autoDomain' --load-cookies '/123456/cookie' --ignore-robots --passive-ftp --retr-symlinks --timestamping --quota 4 --timeout 30 --output-file '/123456/logfile' 'example.com' ",
                  "cpcodeId": 1234567,
                  "dayOfMonth": "*",
                  "dayOfWeek": "*",
                  "executeNow": false,
                  "hour": "1",
                  "lastEnd": "Wed Mar 11 02:37:45 GMT 2020",
                  "lastStart": "Wed Mar 11 02:37:43 GMT 2020",
                  "minute": "15",
                  "month": "*",
                  "scheduled": true,
                  "snapshotId": 45192,
                  "snapshotName": "Snapshot of ObjectStore",
                  "status": "ERROR_CONFIG",
                  "wizard": true,
                  "commandConfig": {
                    "convertLinks": true,
                    "cookiesFile": "/123456/cookie",
                    "ignoreRobots": true,
                    "level": 2,
                    "outputFile": "/123456/logfile",
                    "pageRequisites": true,
                    "passiveFtp": true,
                    "quota": 4,
                    "recursive": true,
                    "retrSymlinks": true,
                    "timeOut": 30,
                    "timestamping": true,
                    "domains": [
                      "autoDomain"
                    ],
                    "headers": [
                      "autoHeaders"
                    ],
                    "urls": [
                      "example.com"
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "items": {
                      "description": "A set of Site Snapshot Tool objects. SST is an advanced, robust, and flexible failover (continuity) solution that automates the process of downloading content from an enterprise onto the Edge Platform.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "The Site Snapshot Tool (SST) is an advanced, robust, and flexible failover (continuity) solution that automates the process of downloading content from an enterprise onto the Edge Platform.",
                        "type": "object",
                        "properties": {
                          "baseDirectory": {
                            "description": "The specified directory to store your snapshot.",
                            "type": "string"
                          },
                          "command": {
                            "description": "This is the full `SST` command string. View the [SST command format](https://techdocs.akamai.com/netstorage/docs/create-a-site-snapshot#available-command-options) for available command options.",
                            "type": "string"
                          },
                          "commandConfig": {
                            "additionalProperties": false,
                            "description": "This object contains all of the individual elements that make up your Site Snapshot configuration.",
                            "type": "object",
                            "properties": {
                              "convertAbsolute": {
                                "description": "Change relative hyperlinks to absolute.",
                                "type": "boolean"
                              },
                              "convertLinks": {
                                "description": "Change absolute hyperlinks to relative.",
                                "type": "boolean"
                              },
                              "cookiesFile": {
                                "description": "Prior to the first download, load the cookies contained in this file. The cookie file needs to follow a specific format: <br>domain<br>ignore<br>path<br>secure<br>expires<br>name",
                                "type": "string"
                              },
                              "directoryPrefix": {
                                "description": "Download all files and subdirectories to this directory.",
                                "type": "string"
                              },
                              "domains": {
                                "description": "Follow only domains specified as the `<LIST>` variable. Separate multiple entries with a whitespace.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "headers": {
                                "description": "Specify a desired `<STRING>` to include with HTTP request headers.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "ignoreRobots": {
                                "description": "Don't honor the `robot.txt` file or the `robots` `<meta>` tag.",
                                "type": "boolean"
                              },
                              "inputFile": {
                                "description": "Get the list of URLs to download from a named file. Input the complete path and filename for this file as a string.",
                                "type": "string"
                              },
                              "level": {
                                "description": "Limit recursion depth to a specific number of levels. The maximum recursion depth is 10. Recursion limits apply to directory depth and following links.",
                                "type": "integer"
                              },
                              "outputFile": {
                                "description": "Send operation information to a specified file instead of to the standard output. Include the desired path and filename for this file.",
                                "type": "string"
                              },
                              "pageRequisites": {
                                "description": "In addition to the specified HTML page, also download any other associated files that may be required to properly display the page, such as image files and CSS style sheets.",
                                "type": "boolean"
                              },
                              "passiveFtp": {
                                "description": "Use passive mode to require the client to start communications with the server.",
                                "type": "boolean"
                              },
                              "quota": {
                                "description": "Set a byte-count limit for downloading multiple files recursively, or from an input file. Suffix with `k` for kilobytes or `m` for megabytes. For example, `20m` for 20 megabytes.",
                                "type": "integer"
                              },
                              "recursive": {
                                "description": "Include this option to perform the download recursively. Links within the targeted page are followed and their associated pages are also downloaded. See [Considerations when using the Site Snapshot Tool](https://techdocs.akamai.com/netstorage/docs/create-a-site-snapshot#considerations-using-site-snapshot) for recursion considerations.",
                                "type": "boolean"
                              },
                              "retrSymlinks": {
                                "description": "Ignore symbolic links when performing a recursive download, and download the link targets instead, unless the target is a directory.",
                                "type": "boolean"
                              },
                              "timeOut": {
                                "description": "Don't allow DNS lookups, connection attempts, or read idle times to exceed a specific number of seconds.",
                                "type": "integer"
                              },
                              "timestamping": {
                                "description": "Only include files if they're newer than any files that were previously downloaded.",
                                "type": "boolean"
                              },
                              "urls": {
                                "description": "Site Snapshot takes a snapshot of the specified URLs.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "cpcodeId": {
                            "description": "A CP code assigned to the group, and used to identify requests to a specific upload directory. The CP code serves as the root for upload directory. This is also referred to as the CP code root.",
                            "type": "integer"
                          },
                          "dayOfMonth": {
                            "description": "Your scheduled snapshot runs on the day specified. This value uses standard cron time syntax. Valid options are digits between `1` and `31`, or `*` to run every day.",
                            "type": "string"
                          },
                          "dayOfWeek": {
                            "description": "Your scheduled snapshot runs on a specific day of the week. This value uses standard cron time syntax. Valid options are digits up to `6`, with `0` starting at Sunday, or `*` to run every day.",
                            "type": "string"
                          },
                          "executeNow": {
                            "description": "Set this to `true` to create a snapshot now, or `false` to use your defined schedule.",
                            "type": "boolean"
                          },
                          "hour": {
                            "description": "Your scheduled snapshot runs on the hour specified. This value uses standard cron time syntax. Valid options are digits up to `24`, or `*` to run every hour.",
                            "type": "string"
                          },
                          "lastEnd": {
                            "description": "The time this snapshot completed.",
                            "type": "string"
                          },
                          "lastStart": {
                            "description": "The most recent start time for this snapshot.",
                            "type": "string"
                          },
                          "minute": {
                            "description": "Your scheduled snapshot runs on the minute specified. This value uses standard cron time syntax. Valid options are digits up to `59`, or `*` to run every minute.",
                            "type": "string"
                          },
                          "month": {
                            "description": "Your scheduled snapshot runs on the month specified. This value uses standard cron time syntax. Valid options are digits between `1` and `12`, or `*` to run every month.",
                            "type": "string"
                          },
                          "scheduled": {
                            "description": "Set this to `true` use your defined schedule, or `false` to disable the schedule.",
                            "type": "boolean"
                          },
                          "snapshotId": {
                            "description": "The unique identifier for each snapshot.",
                            "type": "integer"
                          },
                          "snapshotName": {
                            "description": "Name associated with each snapshot.",
                            "type": "string"
                          },
                          "status": {
                            "description": "Displays the status of your Site Snapshot. These are the available status messages: `WAITING`, `OK`, `ERROR`, `INPROGRESS`, `ERROR_CONFIG`, `LIMITS_ERROR`, `AUTH_ERROR`, `MAX_RETRY_ERROR`, `DNS_FAILURE`, `CONNECT_FAILURE`, `CONNECT_TIMEOUT`, AND `REQUEST_TIMEOUT`.",
                            "type": "string",
                            "enum": [
                              "WAITING",
                              "OK",
                              "ERROR",
                              "INPROGRESS",
                              "ERROR_CONFIG",
                              "LIMITS_ERROR",
                              "AUTH_ERROR",
                              "MAX_RETRY_ERROR",
                              "DNS_FAILURE",
                              "CONNECT_FAILURE",
                              "CONNECT_TIMEOUT",
                              "REQUEST_TIMEOUT"
                            ]
                          },
                          "wizard": {
                            "description": "When set to `true`, Site Snapshot uses the `command` configuration. When set to `false`, Site Snapshot uses the `commandConfig` option.",
                            "type": "boolean"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/site-snapshot-get.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/site-snapshots-get.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Badly formatted JSON. Compare with the schema.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "Unauthorized Request.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "Application permission error.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "429": {
            "description": "The maximum request count for a specific time duration for this resource has been reached.",
            "content": {
              "*/*": {}
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Limit.yaml"
                }
              },
              "X-RateLimit-Remaining": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Remaining.yaml"
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/429.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/site-snapshots/schedule-now": {
      "post": {
        "description": "Create an immediate snapshot for a `snapshotId` and `snapshotName` you provide.",
        "operationId": "post-snapshots-schedule-now",
        "summary": "Create an immediate site snapshot",
        "tags": [
          "Snapshots"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's NetStorage Configuration API",
          "url": "https://techdocs.akamai.com/netstorage/reference/post-snapshots-schedule-now"
        },
        "responses": {
          "200": {
            "description": "Site snapshot object created.",
            "content": {
              "application/json": {
                "example": {
                  "baseDirectory": "/123456/basedir",
                  "command": "sst --header 'autoHeaders' --recursive --level 2 --convert-links --page-requisites --domains 'autoDomain' --load-cookies '/123456/cookie' --ignore-robots --passive-ftp --retr-symlinks --timestamping --quota 4 --timeout 30 --output-file '/123456/logfile' 'example.com' ",
                  "cpcodeId": 1234567,
                  "dayOfMonth": "*",
                  "dayOfWeek": "*",
                  "executeNow": false,
                  "hour": "1",
                  "lastEnd": "Wed Mar 11 02:37:45 GMT 2020",
                  "lastStart": "Wed Mar 11 02:37:43 GMT 2020",
                  "minute": "15",
                  "month": "*",
                  "scheduled": true,
                  "snapshotId": 45192,
                  "snapshotName": "Snapshot of ObjectStore",
                  "status": "ERROR_CONFIG",
                  "wizard": true,
                  "commandConfig": {
                    "convertLinks": true,
                    "cookiesFile": "/123456/cookie",
                    "ignoreRobots": true,
                    "level": 2,
                    "outputFile": "/123456/logfile",
                    "pageRequisites": true,
                    "passiveFtp": true,
                    "quota": 4,
                    "recursive": true,
                    "retrSymlinks": true,
                    "timeOut": 30,
                    "timestamping": true,
                    "domains": [
                      "autoDomain"
                    ],
                    "headers": [
                      "autoHeaders"
                    ],
                    "urls": [
                      "example.com"
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The Site Snapshot Tool (SST) is an advanced, robust, and flexible failover (continuity) solution that automates the process of downloading content from an enterprise onto the Edge Platform.",
                  "type": "object",
                  "properties": {
                    "baseDirectory": {
                      "description": "The specified directory to store your snapshot.",
                      "type": "string"
                    },
                    "command": {
                      "description": "This is the full `SST` command string. View the [SST command format](https://techdocs.akamai.com/netstorage/docs/create-a-site-snapshot#available-command-options) for available command options.",
                      "type": "string"
                    },
                    "commandConfig": {
                      "additionalProperties": false,
                      "description": "This object contains all of the individual elements that make up your Site Snapshot configuration.",
                      "type": "object",
                      "properties": {
                        "convertAbsolute": {
                          "description": "Change relative hyperlinks to absolute.",
                          "type": "boolean"
                        },
                        "convertLinks": {
                          "description": "Change absolute hyperlinks to relative.",
                          "type": "boolean"
                        },
                        "cookiesFile": {
                          "description": "Prior to the first download, load the cookies contained in this file. The cookie file needs to follow a specific format: <br>domain<br>ignore<br>path<br>secure<br>expires<br>name",
                          "type": "string"
                        },
                        "directoryPrefix": {
                          "description": "Download all files and subdirectories to this directory.",
                          "type": "string"
                        },
                        "domains": {
                          "description": "Follow only domains specified as the `<LIST>` variable. Separate multiple entries with a whitespace.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "headers": {
                          "description": "Specify a desired `<STRING>` to include with HTTP request headers.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "ignoreRobots": {
                          "description": "Don't honor the `robot.txt` file or the `robots` `<meta>` tag.",
                          "type": "boolean"
                        },
                        "inputFile": {
                          "description": "Get the list of URLs to download from a named file. Input the complete path and filename for this file as a string.",
                          "type": "string"
                        },
                        "level": {
                          "description": "Limit recursion depth to a specific number of levels. The maximum recursion depth is 10. Recursion limits apply to directory depth and following links.",
                          "type": "integer"
                        },
                        "outputFile": {
                          "description": "Send operation information to a specified file instead of to the standard output. Include the desired path and filename for this file.",
                          "type": "string"
                        },
                        "pageRequisites": {
                          "description": "In addition to the specified HTML page, also download any other associated files that may be required to properly display the page, such as image files and CSS style sheets.",
                          "type": "boolean"
                        },
                        "passiveFtp": {
                          "description": "Use passive mode to require the client to start communications with the server.",
                          "type": "boolean"
                        },
                        "quota": {
                          "description": "Set a byte-count limit for downloading multiple files recursively, or from an input file. Suffix with `k` for kilobytes or `m` for megabytes. For example, `20m` for 20 megabytes.",
                          "type": "integer"
                        },
                        "recursive": {
                          "description": "Include this option to perform the download recursively. Links within the targeted page are followed and their associated pages are also downloaded. See [Considerations when using the Site Snapshot Tool](https://techdocs.akamai.com/netstorage/docs/create-a-site-snapshot#considerations-using-site-snapshot) for recursion considerations.",
                          "type": "boolean"
                        },
                        "retrSymlinks": {
                          "description": "Ignore symbolic links when performing a recursive download, and download the link targets instead, unless the target is a directory.",
                          "type": "boolean"
                        },
                        "timeOut": {
                          "description": "Don't allow DNS lookups, connection attempts, or read idle times to exceed a specific number of seconds.",
                          "type": "integer"
                        },
                        "timestamping": {
                          "description": "Only include files if they're newer than any files that were previously downloaded.",
                          "type": "boolean"
                        },
                        "urls": {
                          "description": "Site Snapshot takes a snapshot of the specified URLs.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "cpcodeId": {
                      "description": "A CP code assigned to the group, and used to identify requests to a specific upload directory. The CP code serves as the root for upload directory. This is also referred to as the CP code root.",
                      "type": "integer"
                    },
                    "dayOfMonth": {
                      "description": "Your scheduled snapshot runs on the day specified. This value uses standard cron time syntax. Valid options are digits between `1` and `31`, or `*` to run every day.",
                      "type": "string"
                    },
                    "dayOfWeek": {
                      "description": "Your scheduled snapshot runs on a specific day of the week. This value uses standard cron time syntax. Valid options are digits up to `6`, with `0` starting at Sunday, or `*` to run every day.",
                      "type": "string"
                    },
                    "executeNow": {
                      "description": "Set this to `true` to create a snapshot now, or `false` to use your defined schedule.",
                      "type": "boolean"
                    },
                    "hour": {
                      "description": "Your scheduled snapshot runs on the hour specified. This value uses standard cron time syntax. Valid options are digits up to `24`, or `*` to run every hour.",
                      "type": "string"
                    },
                    "lastEnd": {
                      "description": "The time this snapshot completed.",
                      "type": "string"
                    },
                    "lastStart": {
                      "description": "The most recent start time for this snapshot.",
                      "type": "string"
                    },
                    "minute": {
                      "description": "Your scheduled snapshot runs on the minute specified. This value uses standard cron time syntax. Valid options are digits up to `59`, or `*` to run every minute.",
                      "type": "string"
                    },
                    "month": {
                      "description": "Your scheduled snapshot runs on the month specified. This value uses standard cron time syntax. Valid options are digits between `1` and `12`, or `*` to run every month.",
                      "type": "string"
                    },
                    "scheduled": {
                      "description": "Set this to `true` use your defined schedule, or `false` to disable the schedule.",
                      "type": "boolean"
                    },
                    "snapshotId": {
                      "description": "The unique identifier for each snapshot.",
                      "type": "integer"
                    },
                    "snapshotName": {
                      "description": "Name associated with each snapshot.",
                      "type": "string"
                    },
                    "status": {
                      "description": "Displays the status of your Site Snapshot. These are the available status messages: `WAITING`, `OK`, `ERROR`, `INPROGRESS`, `ERROR_CONFIG`, `LIMITS_ERROR`, `AUTH_ERROR`, `MAX_RETRY_ERROR`, `DNS_FAILURE`, `CONNECT_FAILURE`, `CONNECT_TIMEOUT`, AND `REQUEST_TIMEOUT`.",
                      "type": "string",
                      "enum": [
                        "WAITING",
                        "OK",
                        "ERROR",
                        "INPROGRESS",
                        "ERROR_CONFIG",
                        "LIMITS_ERROR",
                        "AUTH_ERROR",
                        "MAX_RETRY_ERROR",
                        "DNS_FAILURE",
                        "CONNECT_FAILURE",
                        "CONNECT_TIMEOUT",
                        "REQUEST_TIMEOUT"
                      ]
                    },
                    "wizard": {
                      "description": "When set to `true`, Site Snapshot uses the `command` configuration. When set to `false`, Site Snapshot uses the `commandConfig` option.",
                      "type": "boolean"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/site-snapshot-get.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Badly formatted JSON. Compare with the schema.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "Unauthorized Request.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "Application permission error.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "429": {
            "description": "The maximum request count for a specific time duration for this resource has been reached.",
            "content": {
              "*/*": {}
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Limit.yaml"
                }
              },
              "X-RateLimit-Remaining": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Remaining.yaml"
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/429.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "ID of the snapshot schedule being requested.",
            "example": "{{snapshotId}}",
            "in": "query",
            "name": "snapshotId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/snapshotId-query.yaml"
            }
          },
          {
            "description": "Name of the snapshot schedule requested.",
            "example": "{{snapshotName}}",
            "in": "query",
            "name": "snapshotName",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/snapshotName-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/site-snapshots/{snapshotId}": {
      "get": {
        "description": "Get the site snapshot schedule for a `snapshotId`.",
        "operationId": "get-snapshot",
        "summary": "Get a site snapshot schedule",
        "tags": [
          "Snapshots"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's NetStorage Configuration API",
          "url": "https://techdocs.akamai.com/netstorage/reference/get-snapshot"
        },
        "responses": {
          "200": {
            "description": "Successful Request.",
            "content": {
              "application/json": {
                "example": {
                  "baseDirectory": "/123456/basedir",
                  "command": "sst --header 'autoHeaders' --recursive --level 2 --convert-links --page-requisites --domains 'autoDomain' --load-cookies '/123456/cookie' --ignore-robots --passive-ftp --retr-symlinks --timestamping --quota 4 --timeout 30 --output-file '/123456/logfile' 'example.com' ",
                  "cpcodeId": 1234567,
                  "dayOfMonth": "*",
                  "dayOfWeek": "*",
                  "executeNow": false,
                  "hour": "1",
                  "lastEnd": "Wed Mar 11 02:37:45 GMT 2020",
                  "lastStart": "Wed Mar 11 02:37:43 GMT 2020",
                  "minute": "15",
                  "month": "*",
                  "scheduled": true,
                  "snapshotId": 45192,
                  "snapshotName": "Snapshot of ObjectStore",
                  "status": "ERROR_CONFIG",
                  "wizard": true,
                  "commandConfig": {
                    "convertLinks": true,
                    "cookiesFile": "/123456/cookie",
                    "ignoreRobots": true,
                    "level": 2,
                    "outputFile": "/123456/logfile",
                    "pageRequisites": true,
                    "passiveFtp": true,
                    "quota": 4,
                    "recursive": true,
                    "retrSymlinks": true,
                    "timeOut": 30,
                    "timestamping": true,
                    "domains": [
                      "autoDomain"
                    ],
                    "headers": [
                      "autoHeaders"
                    ],
                    "urls": [
                      "example.com"
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The Site Snapshot Tool (SST) is an advanced, robust, and flexible failover (continuity) solution that automates the process of downloading content from an enterprise onto the Edge Platform.",
                  "type": "object",
                  "properties": {
                    "baseDirectory": {
                      "description": "The specified directory to store your snapshot.",
                      "type": "string"
                    },
                    "command": {
                      "description": "This is the full `SST` command string. View the [SST command format](https://techdocs.akamai.com/netstorage/docs/create-a-site-snapshot#available-command-options) for available command options.",
                      "type": "string"
                    },
                    "commandConfig": {
                      "additionalProperties": false,
                      "description": "This object contains all of the individual elements that make up your Site Snapshot configuration.",
                      "type": "object",
                      "properties": {
                        "convertAbsolute": {
                          "description": "Change relative hyperlinks to absolute.",
                          "type": "boolean"
                        },
                        "convertLinks": {
                          "description": "Change absolute hyperlinks to relative.",
                          "type": "boolean"
                        },
                        "cookiesFile": {
                          "description": "Prior to the first download, load the cookies contained in this file. The cookie file needs to follow a specific format: <br>domain<br>ignore<br>path<br>secure<br>expires<br>name",
                          "type": "string"
                        },
                        "directoryPrefix": {
                          "description": "Download all files and subdirectories to this directory.",
                          "type": "string"
                        },
                        "domains": {
                          "description": "Follow only domains specified as the `<LIST>` variable. Separate multiple entries with a whitespace.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "headers": {
                          "description": "Specify a desired `<STRING>` to include with HTTP request headers.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "ignoreRobots": {
                          "description": "Don't honor the `robot.txt` file or the `robots` `<meta>` tag.",
                          "type": "boolean"
                        },
                        "inputFile": {
                          "description": "Get the list of URLs to download from a named file. Input the complete path and filename for this file as a string.",
                          "type": "string"
                        },
                        "level": {
                          "description": "Limit recursion depth to a specific number of levels. The maximum recursion depth is 10. Recursion limits apply to directory depth and following links.",
                          "type": "integer"
                        },
                        "outputFile": {
                          "description": "Send operation information to a specified file instead of to the standard output. Include the desired path and filename for this file.",
                          "type": "string"
                        },
                        "pageRequisites": {
                          "description": "In addition to the specified HTML page, also download any other associated files that may be required to properly display the page, such as image files and CSS style sheets.",
                          "type": "boolean"
                        },
                        "passiveFtp": {
                          "description": "Use passive mode to require the client to start communications with the server.",
                          "type": "boolean"
                        },
                        "quota": {
                          "description": "Set a byte-count limit for downloading multiple files recursively, or from an input file. Suffix with `k` for kilobytes or `m` for megabytes. For example, `20m` for 20 megabytes.",
                          "type": "integer"
                        },
                        "recursive": {
                          "description": "Include this option to perform the download recursively. Links within the targeted page are followed and their associated pages are also downloaded. See [Considerations when using the Site Snapshot Tool](https://techdocs.akamai.com/netstorage/docs/create-a-site-snapshot#considerations-using-site-snapshot) for recursion considerations.",
                          "type": "boolean"
                        },
                        "retrSymlinks": {
                          "description": "Ignore symbolic links when performing a recursive download, and download the link targets instead, unless the target is a directory.",
                          "type": "boolean"
                        },
                        "timeOut": {
                          "description": "Don't allow DNS lookups, connection attempts, or read idle times to exceed a specific number of seconds.",
                          "type": "integer"
                        },
                        "timestamping": {
                          "description": "Only include files if they're newer than any files that were previously downloaded.",
                          "type": "boolean"
                        },
                        "urls": {
                          "description": "Site Snapshot takes a snapshot of the specified URLs.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "cpcodeId": {
                      "description": "A CP code assigned to the group, and used to identify requests to a specific upload directory. The CP code serves as the root for upload directory. This is also referred to as the CP code root.",
                      "type": "integer"
                    },
                    "dayOfMonth": {
                      "description": "Your scheduled snapshot runs on the day specified. This value uses standard cron time syntax. Valid options are digits between `1` and `31`, or `*` to run every day.",
                      "type": "string"
                    },
                    "dayOfWeek": {
                      "description": "Your scheduled snapshot runs on a specific day of the week. This value uses standard cron time syntax. Valid options are digits up to `6`, with `0` starting at Sunday, or `*` to run every day.",
                      "type": "string"
                    },
                    "executeNow": {
                      "description": "Set this to `true` to create a snapshot now, or `false` to use your defined schedule.",
                      "type": "boolean"
                    },
                    "hour": {
                      "description": "Your scheduled snapshot runs on the hour specified. This value uses standard cron time syntax. Valid options are digits up to `24`, or `*` to run every hour.",
                      "type": "string"
                    },
                    "lastEnd": {
                      "description": "The time this snapshot completed.",
                      "type": "string"
                    },
                    "lastStart": {
                      "description": "The most recent start time for this snapshot.",
                      "type": "string"
                    },
                    "minute": {
                      "description": "Your scheduled snapshot runs on the minute specified. This value uses standard cron time syntax. Valid options are digits up to `59`, or `*` to run every minute.",
                      "type": "string"
                    },
                    "month": {
                      "description": "Your scheduled snapshot runs on the month specified. This value uses standard cron time syntax. Valid options are digits between `1` and `12`, or `*` to run every month.",
                      "type": "string"
                    },
                    "scheduled": {
                      "description": "Set this to `true` use your defined schedule, or `false` to disable the schedule.",
                      "type": "boolean"
                    },
                    "snapshotId": {
                      "description": "The unique identifier for each snapshot.",
                      "type": "integer"
                    },
                    "snapshotName": {
                      "description": "Name associated with each snapshot.",
                      "type": "string"
                    },
                    "status": {
                      "description": "Displays the status of your Site Snapshot. These are the available status messages: `WAITING`, `OK`, `ERROR`, `INPROGRESS`, `ERROR_CONFIG`, `LIMITS_ERROR`, `AUTH_ERROR`, `MAX_RETRY_ERROR`, `DNS_FAILURE`, `CONNECT_FAILURE`, `CONNECT_TIMEOUT`, AND `REQUEST_TIMEOUT`.",
                      "type": "string",
                      "enum": [
                        "WAITING",
                        "OK",
                        "ERROR",
                        "INPROGRESS",
                        "ERROR_CONFIG",
                        "LIMITS_ERROR",
                        "AUTH_ERROR",
                        "MAX_RETRY_ERROR",
                        "DNS_FAILURE",
                        "CONNECT_FAILURE",
                        "CONNECT_TIMEOUT",
                        "REQUEST_TIMEOUT"
                      ]
                    },
                    "wizard": {
                      "description": "When set to `true`, Site Snapshot uses the `command` configuration. When set to `false`, Site Snapshot uses the `commandConfig` option.",
                      "type": "boolean"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/site-snapshot-get.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Badly formatted JSON. Compare with the schema.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "Unauthorized Request.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "Application permission error.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "429": {
            "description": "The maximum request count for a specific time duration for this resource has been reached.",
            "content": {
              "*/*": {}
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Limit.yaml"
                }
              },
              "X-RateLimit-Remaining": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Remaining.yaml"
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/429.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Update a site snapshot schedule for a `snapshotId`.",
        "operationId": "put-snapshot",
        "summary": "Update a site snapshot schedule",
        "tags": [
          "Snapshots"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's NetStorage Configuration API",
          "url": "https://techdocs.akamai.com/netstorage/reference/put-snapshot"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "baseDirectory": "/689576/basedir",
                "command": "sst --header 'autoHeaders' --recursive --level 2 --convert-links --page-requisites --domains 'autoDomain' --load-cookies '/689576/cookie' --ignore-robots --passive-ftp --retr-symlinks --timestamping --quota 4 --timeout 30 --output-file '/689576/logfile' 'autoUrl.com' ",
                "cpcodeId": 1234567,
                "dayOfMonth": "*",
                "dayOfWeek": "*",
                "executeNow": false,
                "hour": "1",
                "minute": "15",
                "month": "*",
                "scheduled": true,
                "snapshotId": 45192,
                "snapshotName": "CobSstProd20AugExFalse1",
                "wizard": true,
                "commandConfig": {
                  "convertLinks": true,
                  "cookiesFile": "/689576/cookie",
                  "ignoreRobots": true,
                  "level": 2,
                  "outputFile": "/689576/logfile",
                  "pageRequisites": true,
                  "passiveFtp": true,
                  "quota": 4,
                  "recursive": true,
                  "retrSymlinks": true,
                  "timeOut": 30,
                  "timestamping": true,
                  "domains": [
                    "autoDomain"
                  ],
                  "headers": [
                    "autoHeaders"
                  ],
                  "urls": [
                    "autoUrl.com"
                  ]
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "The Site Snapshot Tool (SST) is an advanced, robust, and flexible failover (continuity) solution that automates the process of downloading content from an enterprise onto the Edge Platform.",
                "type": "object",
                "required": [
                  "snapshotName",
                  "cpcodeId",
                  "baseDirectory"
                ],
                "properties": {
                  "baseDirectory": {
                    "example": "{{baseDirectory}}",
                    "type": "string"
                  },
                  "command": {
                    "example": "{{command}}",
                    "type": "string"
                  },
                  "commandConfig": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "convertAbsolute": {
                        "type": "boolean"
                      },
                      "convertLinks": {
                        "type": "boolean"
                      },
                      "cookiesFile": {
                        "type": "string"
                      },
                      "directoryPrefix": {
                        "type": "string"
                      },
                      "domains": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "headers": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "ignoreRobots": {
                        "type": "boolean"
                      },
                      "inputFile": {
                        "type": "string"
                      },
                      "level": {
                        "type": "integer"
                      },
                      "outputFile": {
                        "type": "string"
                      },
                      "pageRequisites": {
                        "type": "boolean"
                      },
                      "passiveFtp": {
                        "type": "boolean"
                      },
                      "quota": {
                        "type": "integer"
                      },
                      "recursive": {
                        "type": "boolean"
                      },
                      "retrSymlinks": {
                        "type": "boolean"
                      },
                      "timeOut": {
                        "type": "integer"
                      },
                      "timestamping": {
                        "type": "boolean"
                      },
                      "urls": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "cpcodeId": {
                    "example": "{{cpcodeId}}",
                    "type": "integer"
                  },
                  "dayOfMonth": {
                    "example": "{{dayOfMonth}}",
                    "type": "string"
                  },
                  "dayOfWeek": {
                    "description": "Day of week cron accepts 0 and 7 both as Sunday but as per back-end implementation we have given it as 0.",
                    "example": "{{dayOfWeek}}",
                    "type": "string"
                  },
                  "executeNow": {
                    "example": "{{executeNow}}",
                    "type": "boolean"
                  },
                  "hour": {
                    "example": "{{hour}}",
                    "type": "string"
                  },
                  "minute": {
                    "example": "{{minute}}",
                    "type": "string"
                  },
                  "month": {
                    "example": "{{month}}",
                    "type": "string"
                  },
                  "scheduled": {
                    "example": "{{scheduled}}",
                    "type": "boolean"
                  },
                  "snapshotId": {
                    "example": "{{snapshotId}}",
                    "type": "integer"
                  },
                  "snapshotName": {
                    "example": "{{snapshotName}}",
                    "type": "string"
                  },
                  "wizard": {
                    "example": "{{wizard}}",
                    "type": "boolean"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/site-snapshot-post.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The modified snapshot schedule.",
            "content": {
              "application/json": {
                "example": {
                  "baseDirectory": "/123456/basedir",
                  "command": "sst --header 'autoHeaders' --recursive --level 2 --convert-links --page-requisites --domains 'autoDomain' --load-cookies '/123456/cookie' --ignore-robots --passive-ftp --retr-symlinks --timestamping --quota 4 --timeout 30 --output-file '/123456/logfile' 'example.com' ",
                  "cpcodeId": 1234567,
                  "dayOfMonth": "*",
                  "dayOfWeek": "*",
                  "executeNow": false,
                  "hour": "1",
                  "lastEnd": "Wed Mar 11 02:37:45 GMT 2020",
                  "lastStart": "Wed Mar 11 02:37:43 GMT 2020",
                  "minute": "15",
                  "month": "*",
                  "scheduled": true,
                  "snapshotId": 45192,
                  "snapshotName": "Snapshot of ObjectStore",
                  "status": "ERROR_CONFIG",
                  "wizard": true,
                  "commandConfig": {
                    "convertLinks": true,
                    "cookiesFile": "/123456/cookie",
                    "ignoreRobots": true,
                    "level": 2,
                    "outputFile": "/123456/logfile",
                    "pageRequisites": true,
                    "passiveFtp": true,
                    "quota": 4,
                    "recursive": true,
                    "retrSymlinks": true,
                    "timeOut": 30,
                    "timestamping": true,
                    "domains": [
                      "autoDomain"
                    ],
                    "headers": [
                      "autoHeaders"
                    ],
                    "urls": [
                      "example.com"
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The Site Snapshot Tool (SST) is an advanced, robust, and flexible failover (continuity) solution that automates the process of downloading content from an enterprise onto the Edge Platform.",
                  "type": "object",
                  "properties": {
                    "baseDirectory": {
                      "description": "The specified directory to store your snapshot.",
                      "type": "string"
                    },
                    "command": {
                      "description": "This is the full `SST` command string. View the [SST command format](https://techdocs.akamai.com/netstorage/docs/create-a-site-snapshot#available-command-options) for available command options.",
                      "type": "string"
                    },
                    "commandConfig": {
                      "additionalProperties": false,
                      "description": "This object contains all of the individual elements that make up your Site Snapshot configuration.",
                      "type": "object",
                      "properties": {
                        "convertAbsolute": {
                          "description": "Change relative hyperlinks to absolute.",
                          "type": "boolean"
                        },
                        "convertLinks": {
                          "description": "Change absolute hyperlinks to relative.",
                          "type": "boolean"
                        },
                        "cookiesFile": {
                          "description": "Prior to the first download, load the cookies contained in this file. The cookie file needs to follow a specific format: <br>domain<br>ignore<br>path<br>secure<br>expires<br>name",
                          "type": "string"
                        },
                        "directoryPrefix": {
                          "description": "Download all files and subdirectories to this directory.",
                          "type": "string"
                        },
                        "domains": {
                          "description": "Follow only domains specified as the `<LIST>` variable. Separate multiple entries with a whitespace.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "headers": {
                          "description": "Specify a desired `<STRING>` to include with HTTP request headers.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "ignoreRobots": {
                          "description": "Don't honor the `robot.txt` file or the `robots` `<meta>` tag.",
                          "type": "boolean"
                        },
                        "inputFile": {
                          "description": "Get the list of URLs to download from a named file. Input the complete path and filename for this file as a string.",
                          "type": "string"
                        },
                        "level": {
                          "description": "Limit recursion depth to a specific number of levels. The maximum recursion depth is 10. Recursion limits apply to directory depth and following links.",
                          "type": "integer"
                        },
                        "outputFile": {
                          "description": "Send operation information to a specified file instead of to the standard output. Include the desired path and filename for this file.",
                          "type": "string"
                        },
                        "pageRequisites": {
                          "description": "In addition to the specified HTML page, also download any other associated files that may be required to properly display the page, such as image files and CSS style sheets.",
                          "type": "boolean"
                        },
                        "passiveFtp": {
                          "description": "Use passive mode to require the client to start communications with the server.",
                          "type": "boolean"
                        },
                        "quota": {
                          "description": "Set a byte-count limit for downloading multiple files recursively, or from an input file. Suffix with `k` for kilobytes or `m` for megabytes. For example, `20m` for 20 megabytes.",
                          "type": "integer"
                        },
                        "recursive": {
                          "description": "Include this option to perform the download recursively. Links within the targeted page are followed and their associated pages are also downloaded. See [Considerations when using the Site Snapshot Tool](https://techdocs.akamai.com/netstorage/docs/create-a-site-snapshot#considerations-using-site-snapshot) for recursion considerations.",
                          "type": "boolean"
                        },
                        "retrSymlinks": {
                          "description": "Ignore symbolic links when performing a recursive download, and download the link targets instead, unless the target is a directory.",
                          "type": "boolean"
                        },
                        "timeOut": {
                          "description": "Don't allow DNS lookups, connection attempts, or read idle times to exceed a specific number of seconds.",
                          "type": "integer"
                        },
                        "timestamping": {
                          "description": "Only include files if they're newer than any files that were previously downloaded.",
                          "type": "boolean"
                        },
                        "urls": {
                          "description": "Site Snapshot takes a snapshot of the specified URLs.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "cpcodeId": {
                      "description": "A CP code assigned to the group, and used to identify requests to a specific upload directory. The CP code serves as the root for upload directory. This is also referred to as the CP code root.",
                      "type": "integer"
                    },
                    "dayOfMonth": {
                      "description": "Your scheduled snapshot runs on the day specified. This value uses standard cron time syntax. Valid options are digits between `1` and `31`, or `*` to run every day.",
                      "type": "string"
                    },
                    "dayOfWeek": {
                      "description": "Your scheduled snapshot runs on a specific day of the week. This value uses standard cron time syntax. Valid options are digits up to `6`, with `0` starting at Sunday, or `*` to run every day.",
                      "type": "string"
                    },
                    "executeNow": {
                      "description": "Set this to `true` to create a snapshot now, or `false` to use your defined schedule.",
                      "type": "boolean"
                    },
                    "hour": {
                      "description": "Your scheduled snapshot runs on the hour specified. This value uses standard cron time syntax. Valid options are digits up to `24`, or `*` to run every hour.",
                      "type": "string"
                    },
                    "lastEnd": {
                      "description": "The time this snapshot completed.",
                      "type": "string"
                    },
                    "lastStart": {
                      "description": "The most recent start time for this snapshot.",
                      "type": "string"
                    },
                    "minute": {
                      "description": "Your scheduled snapshot runs on the minute specified. This value uses standard cron time syntax. Valid options are digits up to `59`, or `*` to run every minute.",
                      "type": "string"
                    },
                    "month": {
                      "description": "Your scheduled snapshot runs on the month specified. This value uses standard cron time syntax. Valid options are digits between `1` and `12`, or `*` to run every month.",
                      "type": "string"
                    },
                    "scheduled": {
                      "description": "Set this to `true` use your defined schedule, or `false` to disable the schedule.",
                      "type": "boolean"
                    },
                    "snapshotId": {
                      "description": "The unique identifier for each snapshot.",
                      "type": "integer"
                    },
                    "snapshotName": {
                      "description": "Name associated with each snapshot.",
                      "type": "string"
                    },
                    "status": {
                      "description": "Displays the status of your Site Snapshot. These are the available status messages: `WAITING`, `OK`, `ERROR`, `INPROGRESS`, `ERROR_CONFIG`, `LIMITS_ERROR`, `AUTH_ERROR`, `MAX_RETRY_ERROR`, `DNS_FAILURE`, `CONNECT_FAILURE`, `CONNECT_TIMEOUT`, AND `REQUEST_TIMEOUT`.",
                      "type": "string",
                      "enum": [
                        "WAITING",
                        "OK",
                        "ERROR",
                        "INPROGRESS",
                        "ERROR_CONFIG",
                        "LIMITS_ERROR",
                        "AUTH_ERROR",
                        "MAX_RETRY_ERROR",
                        "DNS_FAILURE",
                        "CONNECT_FAILURE",
                        "CONNECT_TIMEOUT",
                        "REQUEST_TIMEOUT"
                      ]
                    },
                    "wizard": {
                      "description": "When set to `true`, Site Snapshot uses the `command` configuration. When set to `false`, Site Snapshot uses the `commandConfig` option.",
                      "type": "boolean"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/site-snapshot-get.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Badly formatted JSON. Compare with the schema.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "Unauthorized Request.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "Application permission error.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "429": {
            "description": "The maximum request count for a specific time duration for this resource has been reached.",
            "content": {
              "*/*": {}
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Limit.yaml"
                }
              },
              "X-RateLimit-Remaining": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Remaining.yaml"
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/429.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Use this operation to delete a specific site snapshot configuration using its `snapshotId`.",
        "operationId": "delete-snapshot",
        "summary": "Delete a site snapshot",
        "tags": [
          "Snapshots"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's NetStorage Configuration API",
          "url": "https://techdocs.akamai.com/netstorage/reference/delete-snapshot"
        },
        "responses": {
          "200": {
            "description": "Successful Response.",
            "content": {
              "*/*": {}
            }
          },
          "400": {
            "description": "Badly formatted JSON. Compare with the schema.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "Unauthorized Request.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "Application permission error.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "429": {
            "description": "The maximum request count for a specific time duration for this resource has been reached.",
            "content": {
              "*/*": {}
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Limit.yaml"
                }
              },
              "X-RateLimit-Remaining": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Remaining.yaml"
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/429.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Uniquely identifies a site snapshot configuration. Perform a GET request to /site-snapshots to get this ID.",
          "example": "{{snapshotId}}",
          "in": "path",
          "name": "snapshotId",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/snapshotId-path.yaml"
          }
        }
      ]
    },
    "/storage-groups": {
      "post": {
        "description": "This operation creates a new storage group to house your content.",
        "operationId": "post-storage-groups",
        "summary": "Create a storage group",
        "tags": [
          "Groups"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's NetStorage Configuration API",
          "url": "https://techdocs.akamai.com/netstorage/reference/post-storage-groups"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "contractId": "K-0N7RAK71",
                "domainPrefix": "akastorage",
                "storageGroupName": "aka_storage",
                "cpcodes": [
                  {
                    "cpcodeId": 1234567,
                    "downloadSecurity": "ALL_EDGE_SERVERS",
                    "enableQuickDelete": false,
                    "pathCheckAndConversion": "DISALLOW_ALL_IMPROPER_PATHS",
                    "requestUriCaseConversion": "NO_CONVERSION",
                    "sendHash": true,
                    "serveFromZip": true,
                    "useSsl": false,
                    "dirListing": {
                      "indexFileName": "index.html",
                      "maxListSize": 1,
                      "searchOn404": "LOOK_FOR_EXPLICIT_DIR_ONLY"
                    },
                    "encodingConfig": {
                      "encoding": "UTF_8",
                      "enforceEncoding": true
                    },
                    "queryStringConversion": {
                      "queryStringConversionMode": "STRIP_ALL_INCOMING_QUERY"
                    },
                    "ageDeletions": [
                      {
                        "ageDeletionDays": 200,
                        "ageDeletionDirectory": "/456789/EN",
                        "ageDeletionExclusionRegex": ".zip*",
                        "ageDeletionRecursivePurge": true,
                        "ageDeletionSelectionRegex": ".*",
                        "ageDeletionSizeBytes": 10000000
                      }
                    ]
                  }
                ],
                "zones": [
                  {
                    "allowDownload": "YES",
                    "allowUpload": "YES",
                    "noCapacityAction": "SPILL_OUTSIDE",
                    "zoneName": "AU"
                  },
                  {
                    "allowDownload": "YES",
                    "allowUpload": "YES",
                    "noCapacityAction": "SPILL_OUTSIDE",
                    "zoneName": "IN"
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Encapsulates the configuration of a group. You can list and get details of a group.",
                "type": "object",
                "required": [
                  "contractId",
                  "storageGroupName",
                  "domainPrefix",
                  "cpcodes",
                  "zones"
                ],
                "properties": {
                  "contractId": {
                    "description": "The unique identifier set for the contract that contains your instance of NetStorage and this group.",
                    "example": "{{contractId}}",
                    "type": "string"
                  },
                  "cpcodes": {
                    "description": "Encapsulates CP codes assigned to a group.",
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "ageDeletions": {
                          "description": "Automatic Purge Routines that have been set up for the group.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "ageDeletionDays": {
                                "description": "When the `ageDeletionSizeBytes` value is reached for the target directory, this number is subtracted from the current date to determine a timestamp. Files older than this timestamp are purged.",
                                "type": "integer"
                              },
                              "ageDeletionDirectory": {
                                "description": "The target directory for an Automatic Purge Routine.",
                                "type": "string"
                              },
                              "ageDeletionExclusionRegex": {
                                "description": "POSIX regular expression pattern matching the filenames to exclude from the purge.",
                                "type": "string"
                              },
                              "ageDeletionRecursivePurge": {
                                "default": false,
                                "description": "Whether subdirectories within the target directory are also included in the purge. If `false`, only files within the target directory are purged.",
                                "type": "boolean"
                              },
                              "ageDeletionSelectionRegex": {
                                "description": "POSIX regular expression pattern matching the filenames to include in the purge.",
                                "type": "string"
                              },
                              "ageDeletionSizeBytes": {
                                "description": "Automatic purge occurs when the target directory reaches this size, in bytes.",
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "cpcodeId": {
                          "description": "A CP code assigned to the group, and used to identify requests to a specific upload directory. The CP code serves as the root for upload directory. This is also referred to as the CP code root.",
                          "type": "integer"
                        },
                        "dirListing": {
                          "additionalProperties": false,
                          "description": "Specifies the file to serve if a request doesn't end in a specific filename and extension.",
                          "type": "object",
                          "properties": {
                            "indexFileName": {
                              "description": "If a request doesn't specifically end in a filename and extension, this specifies the default file that's served.",
                              "type": "string"
                            },
                            "maxListSize": {
                              "description": "Whether the file path is truncated or hidden in the file path displayed in the HTML directory listing for the index name file. `-1` indicates the full path is displayed, `0` indicates directory listings aren't served, but the search for the requested index name file continues, and an integer greater than zero indicates directory listings in the path are limited to this number.",
                              "type": "integer"
                            },
                            "searchOn404": {
                              "description": "The action taken in the event of a 404 error, where the client was able to access NetStorage, but not the requested content or directory. `DO_NOT_SEARCH` stops additional searches, and returns a 404 error, `LOOK_FOR_EXPLICIT_DIR_ONLY` looks for an explicit directory matching the path specified in the request, and `LOOK_FOR_IMPLICIT_AND_EXPLICIT_DIR` looks for both an explicit and implicit directory that may match a path defined in the request.",
                              "type": "string",
                              "enum": [
                                "DO_NOT_SEARCH",
                                "LOOK_FOR_EXPLICIT_DIR_ONLY",
                                "LOOK_FOR_IMPLICIT_AND_EXPLICIT_DIR"
                              ]
                            }
                          }
                        },
                        "downloadSecurity": {
                          "description": "The level of security to obtain download access to the group. `ALL_EDGE_SERVERS` allows requests from all edge servers. `STREAMING_SERVERS_ONLY` only allows requests from edge servers dedicated to streaming media. `G_2_O_AND_ALL_EDGE_SERVERS` allows requests from all edge servers, but a warning is issued. It also allows all requests that include a valid G2O token, `G_2_O_ONLY` requires inclusion of a valid G2O token.",
                          "type": "string",
                          "enum": [
                            "ALL_EDGE_SERVERS",
                            "STREAMING_SERVERS_ONLY",
                            "G_2_O_AND_ALL_EDGE_SERVERS",
                            "G_2_O_ONLY"
                          ]
                        },
                        "enableQuickDelete": {
                          "default": false,
                          "description": "Whether the `quick-delete` operation is available in the NetStorage Usage API and the CMShell.  Targets a specific directory in this group and recursively deletes all of its contents.",
                          "type": "boolean"
                        },
                        "encodingConfig": {
                          "additionalProperties": false,
                          "description": "The type of encoding to use when displaying paths in XML-aware contexts.",
                          "type": "object",
                          "properties": {
                            "encoding": {
                              "description": "The selected encoding format, either `ISO_8859_1` which are 8-bit, single-byte coded graphic character sets, or `UTF_8` which are variable length, 8-bit code units via UTF-8 character encoding.",
                              "type": "string",
                              "enum": [
                                "ISO_8859_1",
                                "UTF_8"
                              ]
                            },
                            "enforceEncoding": {
                              "default": false,
                              "description": "Whether upload operations verify that all path values defined within the URL for target content are properly formatted using the selected encoding method.",
                              "type": "boolean"
                            }
                          }
                        },
                        "f2hConfig": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "f2hCookies": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "f2hDirectories": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "pathCheckAndConversion": {
                          "description": "Specifies the action taken when analyzing the request path. With `DISALLOW_ALL_IMPROPER_PATHS`, paths using naming conventions outside of what's supported for use as an explicit or implicit directory name are blocked, and an error message is displayed. With `DISALLOW_IMPROPER_PATHS_ON_UPLOAD_ONLY`, as previous, but only for upload requests.  Download requests are translated to canonical. With `TRANSLATE_TO_CANONICAL`, a forward slash (/) is seen as a path delimiter and repeat instances are treated as a single instance in a path. For example, if an upload request is sent to target the directory, `//files/new///mp4/movie1.mp4`, the file is uploaded to `/files/new/mp4/movie1.mp4`. (And, non-existent directories within the path are auto-generated to exist as explicit ones). With `DO_NOT_CHECK_PATHS`, paths aren't checked and are interpreted exactly as they're sent.",
                          "type": "string",
                          "enum": [
                            "DISALLOW_ALL_IMPROPER_PATHS",
                            "DISALLOW_IMPROPER_PATHS_ON_UPLOAD_ONLY",
                            "TRANSLATE_TO_CANONICAL",
                            "DO_NOT_CHECK_PATHS"
                          ]
                        },
                        "queryStringConversion": {
                          "additionalProperties": false,
                          "description": "Specifies how query strings appended to request paths to this group are handled.",
                          "type": "object",
                          "properties": {
                            "queryStringConversionExclude": {
                              "description": "A list of query string values that have been explicitly set to be excluded from conversion. Only applicable if `APPLY_ACS_QUERY_CONVERSION` is set as the `queryStringConversionMode`.",
                              "type": "string"
                            },
                            "queryStringConversionKeyOrder": {
                              "description": "If `APPLY_ACS_QUERY_CONVERSION` is set as the `queryStringConversionMode`, this specifies a list of query string values that should be included for ACS Query String Conversion, in the specific order they should be interpreted.",
                              "type": "string"
                            },
                            "queryStringConversionMode": {
                              "description": "Specifies how upload and download request query strings should be transformed before processing the request. With `STRIP_ALL_INCOMING_QUERY`, all query strings are stripped and ignored.  With `APPLY_ACS_QUERY_CONVERSION`, the key is reviewed and stripped down using settings defined for `queryStringConversionKeyOrder` and `queryStringConversionExclude`; a hash of the string is also applied and used for matching at request time. With `LEAVE_INCOMING_QUERY_AS_IS`, the string is left as is.",
                              "type": "string",
                              "enum": [
                                "STRIP_ALL_INCOMING_QUERY",
                                "APPLY_ACS_QUERY_CONVERSION",
                                "LEAVE_INCOMING_QUERY_AS_IS"
                              ]
                            },
                            "queryStringConversionVersion": {
                              "description": "The version in use for `queryStringConversion` with this group.",
                              "type": "string"
                            }
                          }
                        },
                        "requestUriCaseConversion": {
                          "description": "Standardizes case usage for filenames uploaded to your selected upload directory. `NO_CONVERSION`, `CONVERT_TO_UPPER` and `CONVERT_TO_LOWER` are self-explanatory. `STREAM_OS` indicates case requirements are applied to support the Stream OS product. This is only seen in a very limited number of legacy groups.",
                          "type": "string",
                          "enum": [
                            "NO_CONVERSION",
                            "CONVERT_TO_UPPER",
                            "CONVERT_TO_LOWER",
                            "STREAM_OS"
                          ]
                        },
                        "sendHash": {
                          "default": false,
                          "description": "Whether a content item's MD5 digest values is sent in the HTTP `Content-MD5` response header.",
                          "type": "boolean"
                        },
                        "serveFromZip": {
                          "default": false,
                          "description": "Whether NetStorage dynamically examines archived files to directly serve individual files from within the archive.",
                          "type": "boolean"
                        },
                        "useSsl": {
                          "default": false,
                          "description": "Whether the contents within the upload directory are replicated securely via Secure Sockets Layer (SSL).",
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "domainPrefix": {
                    "description": "Your unique domain prefix (subdomain) value that the NetStorage system applies to the Domain Names used to access the group.",
                    "example": "{{domainPrefix}}",
                    "type": "string"
                  },
                  "groupId": {
                    "description": "The unique identifier for the storage group in Control Center under which you want to provision.",
                    "example": "{{groupId}}",
                    "type": "integer"
                  },
                  "storageGroupName": {
                    "description": "The name you've set for the group.",
                    "example": "{{storageGroupName}}",
                    "type": "string"
                  },
                  "zones": {
                    "description": "The geographic replication zones configured for use with this group.  These are also referred to as replicas.",
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "zoneName": {
                          "description": "The name of the geographic replication zone.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/storage-group-post.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created storage group.",
            "content": {
              "application/json": {
                "example": {
                  "allowEdit": true,
                  "asperaEnabled": false,
                  "contractId": "C-0N7RAC7",
                  "domainPrefix": "akastorage",
                  "estimatedUsageGB": 0,
                  "lastModifiedBy": "hgildong",
                  "lastModifiedDate": "2018-08-07T09:25:35Z",
                  "migrationStatus": "-",
                  "pciEnabled": false,
                  "provisionStatus": "PROVISIONED",
                  "storageGroupId": 1234568,
                  "storageGroupName": "aka_storage",
                  "storageGroupPurpose": "NETSTORAGE",
                  "storageGroupType": "OBJECTSTORE",
                  "propagationStatus": {
                    "status": "PENDING",
                    "activeChanges": [],
                    "pendingChanges": [
                      "PORTAL_COBRA_METADATA",
                      "PORTAL_PLANNER_METADATA",
                      "PLANNER_PLACEMENT",
                      "CNAMES"
                    ]
                  },
                  "cpcodes": [
                    {
                      "cpcodeId": 1234567,
                      "downloadSecurity": "ALL_EDGE_SERVERS",
                      "lastChangesPropagated": false,
                      "lastModifiedBy": "afero",
                      "lastModifiedDate": "2018-08-07T09:25:35Z",
                      "numberOfBytes": -1,
                      "numberOfFiles": -1,
                      "pathCheckAndConversion": "DISALLOW_ALL_IMPROPER_PATHS",
                      "quickDelete": false,
                      "requestUriCaseConversion": "NO_CONVERSION",
                      "sendHash": true,
                      "serveFromZip": true,
                      "useSsl": false,
                      "dirListing": {
                        "indexFileName": "index.html",
                        "maxListSize": 1,
                        "searchOn404": "LOOK_FOR_EXPLICIT_DIR_ONLY"
                      },
                      "encodingConfig": {
                        "encoding": "UTF_8",
                        "enforceEncoding": true
                      },
                      "queryStringConversion": {
                        "queryStringConversionMode": "STRIP_ALL_INCOMING_QUERY"
                      },
                      "ageDeletions": [
                        {
                          "ageDeletionDays": 200,
                          "ageDeletionDirectory": "/456789/EN",
                          "ageDeletionExclusionRegex": ".zip*",
                          "ageDeletionRecursivePurge": true,
                          "ageDeletionSelectionRegex": ".*",
                          "ageDeletionSizeBytes": 10000000
                        }
                      ]
                    }
                  ],
                  "links": [
                    {
                      "href": "/storage-services/api/v1/storage-groups/1234568",
                      "rel": "self"
                    },
                    {
                      "href": "/storage-services/api/v1/upload-accounts?storageGroupId=1234568",
                      "rel": "uploadAccounts"
                    },
                    {
                      "href": "/storage-services/api/v1/zones",
                      "rel": "zones"
                    }
                  ],
                  "zones": [
                    {
                      "allowDownload": "YES",
                      "allowUpload": "YES",
                      "lastModifiedBy": "mrossi",
                      "lastModifiedDate": "2018-08-07T09:25:35Z",
                      "noCapacityAction": "SPILL_OUTSIDE",
                      "zoneName": "AU"
                    },
                    {
                      "allowDownload": "YES",
                      "allowUpload": "YES",
                      "lastModifiedBy": "tyamada",
                      "lastModifiedDate": "2018-08-07T09:25:35Z",
                      "noCapacityAction": "SPILL_OUTSIDE",
                      "zoneName": "IN"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The basic unit within a NetStorage instance is referred to as a \"storage group.\" A storage group is where you house your content for distribution. You can list and get details of a group.",
                  "type": "object",
                  "properties": {
                    "allowEdit": {
                      "default": true,
                      "description": "Whether this group is enabled for editing.",
                      "type": "boolean"
                    },
                    "asperaEnabled": {
                      "description": "Whether Aspera Upload Acceleration has been enabled in an upload account that has access to this group.",
                      "type": "boolean"
                    },
                    "comments": {
                      "description": "Individual comments that briefly describe the last update made to the group.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "contractId": {
                      "description": "The unique identifier set for the contract that contains your instance of NetStorage and this group.",
                      "type": "string"
                    },
                    "cpcodes": {
                      "description": "Encapsulates CP codes assigned to a group.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "ageDeletions": {
                            "description": "Automatic Purge Routines that have been set up for the group.",
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "ageDeletionDays": {
                                  "description": "When the `ageDeletionSizeBytes` value is reached for the target directory, this number is subtracted from the current date to determine a timestamp. Files older than this timestamp are purged.",
                                  "type": "number"
                                },
                                "ageDeletionDirectory": {
                                  "description": "The target directory for an Automatic Purge Routine.",
                                  "type": "string"
                                },
                                "ageDeletionExclusionRegex": {
                                  "description": "POSIX regular expression pattern matching the filenames to exclude from the purge.",
                                  "type": "string"
                                },
                                "ageDeletionInclusionRegex": {
                                  "description": "POSIX regular expression pattern matching the filenames to include in the purge.",
                                  "type": "string"
                                },
                                "ageDeletionRecursivePurge": {
                                  "default": "false",
                                  "description": "Whether subdirectories within the target directory are also included in the purge. If `false`, only files within the target directory are purged.",
                                  "type": "boolean"
                                },
                                "ageDeletionSelectionRegex": {
                                  "type": "string"
                                },
                                "ageDeletionSizeBytes": {
                                  "description": "Automatic purge occurs when the target directory reaches this size, in bytes.",
                                  "type": "number"
                                }
                              }
                            }
                          },
                          "cpcodeId": {
                            "description": "A CP code assigned to the group, and used to identify requests to a specific upload directory. The CP code serves as the root for upload directory. This is also referred to as the CP code root.",
                            "type": "integer"
                          },
                          "dirListing": {
                            "additionalProperties": false,
                            "description": "Specifies the file to serve if a request doesn't end in a specific filename and extension.",
                            "type": "object",
                            "properties": {
                              "indexFileName": {
                                "description": "If a request doesn't specifically end in a filename and extension, this specifies the default file that's served.",
                                "type": "string"
                              },
                              "maxListSize": {
                                "description": "Whether the file path is truncated or hidden in the file path displayed in the HTML directory listing for the index name file. `-1` indicates the full path is displayed, `0` indicates directory listings aren't served, but the search for the requested index name file continues, and an integer greater than zero indicates directory listings in the path are limited to this number.",
                                "type": "integer"
                              },
                              "searchOn404": {
                                "description": "The action taken in the event of a 404 error, where the client was able to access NetStorage, but not the requested content or directory. `DO_NOT_SEARCH` stops additional searches, and returns a 404 error, `LOOK_FOR_EXPLICIT_DIR_ONLY` looks for an explicit directory matching the path specified in the request, and `LOOK_FOR_IMPLICIT_AND_EXPLICIT_DIR` looks for both an explicit and implicit directory that may match a path defined in the request.",
                                "type": "string",
                                "enum": [
                                  "DO_NOT_SEARCH",
                                  "LOOK_FOR_EXPLICIT_DIR_ONLY",
                                  "LOOK_FOR_IMPLICIT_AND_EXPLICIT_DIR"
                                ]
                              }
                            }
                          },
                          "downloadSecurity": {
                            "description": "The level of security to obtain download access to the group. `ALL_EDGE_SERVERS` allows requests from all edge servers. `STREAMING_SERVERS_ONLY` only allows requests from edge servers dedicated to streaming media. `G_2_O_AND_ALL_EDGE_SERVERS` allows requests from all edge servers, but a warning is issued. It also allows all requests that include a valid G2O token, `G_2_O_ONLY` requires inclusion of a valid G2O token.",
                            "type": "string",
                            "enum": [
                              "ALL_EDGE_SERVERS",
                              "STREAMING_SERVERS_ONLY",
                              "G_2_O_AND_ALL_EDGE_SERVERS",
                              "G_2_O_ONLY"
                            ]
                          },
                          "encodingConfig": {
                            "additionalProperties": false,
                            "description": "The type of encoding to use when displaying paths in XML-aware contexts.",
                            "type": "object",
                            "properties": {
                              "encoding": {
                                "description": "The selected encoding format, either `ISO_8859_1` which are 8-bit, single-byte coded graphic character sets, or `UTF_8` which are variable length, 8-bit code units via UTF-8 character encoding.",
                                "type": "string",
                                "enum": [
                                  "ISO_8859_1",
                                  "UTF_8"
                                ]
                              },
                              "enforceEncoding": {
                                "default": "false",
                                "description": "Whether upload operations verify that all path values defined within the URL for target content are properly formatted using the selected encoding method.",
                                "type": "boolean"
                              }
                            }
                          },
                          "f2hConfig": {
                            "additionalProperties": false,
                            "description": "FTP to HTTP (F2H) conversion for FTP download efficiency.",
                            "type": "object",
                            "properties": {
                              "f2hCookies": {
                                "description": "A listing of cookies generated in support of F2H for this group.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "f2hDirectories": {
                                "description": "A listing of directories in the group that have been set up to support F2H.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "g2o": {
                            "additionalProperties": false,
                            "description": "Keys you can use to access the group with the NetStorage Usage API.",
                            "type": "object",
                            "properties": {
                              "key": {
                                "description": "The G2O key. This is the `key` set in the upload account named as the `user`. Learn more about [G2O security settings](https://techdocs.akamai.com/netstorage/docs/create-a-storage-group#security-settings).",
                                "type": "string"
                              },
                              "lastModifiedBy": {
                                "description": "The user who added or last modified the key.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp that represents when the G2O key was last modified.",
                                "type": "string"
                              },
                              "user": {
                                "description": "The G2O user upload account.  This is the name of an upload account for this group that enables access to the NetStorage Usage API.",
                                "type": "string"
                              }
                            }
                          },
                          "lastChangesPropagated": {
                            "description": "When you create or modify an upload directory and changes are propagated to the NetStorage network, `true` indicates propagation is complete.",
                            "type": "boolean"
                          },
                          "lastModifiedBy": {
                            "description": "The user who last modified the upload directory.",
                            "type": "string"
                          },
                          "lastModifiedDate": {
                            "description": "The date the upload directory was last modified.",
                            "type": "string"
                          },
                          "numberOfBytes": {
                            "description": "The total number of bytes used by the upload directory.",
                            "type": "integer"
                          },
                          "numberOfFiles": {
                            "description": "The total number of files contained in the upload directory.",
                            "type": "integer"
                          },
                          "pathCheckAndConversion": {
                            "description": "Specifies the action taken when analyzing the request path.  See the set of [available values](https://techdocs.akamai.com/netstorage/reference/enumerations).",
                            "type": "string",
                            "enum": [
                              "DISALLOW_ALL_IMPROPER_PATHS",
                              "DISALLOW_IMPROPER_PATHS_ON_UPLOAD_ONLY",
                              "TRANSLATE_TO_CANONICAL",
                              "DO_NOT_CHECK_PATHS"
                            ]
                          },
                          "queryStringConversion": {
                            "additionalProperties": false,
                            "description": "Specifies how query strings appended to request paths to this group are handled.",
                            "type": "object",
                            "properties": {
                              "queryStringConversionExclude": {
                                "description": "A list of query string values that have been explicitly set to be excluded from conversion. Only applicable if `APPLY_ACS_QUERY_CONVERSION` is set as the `queryStringConversionMode`.",
                                "type": "string"
                              },
                              "queryStringConversionKeyOrder": {
                                "description": "If `APPLY_ACS_QUERY_CONVERSION` is set as the `queryStringConversionMode`, this specifies a list of query string values that should be included for ACS Query String Conversion, in the specific order they should be interpreted.",
                                "type": "string"
                              },
                              "queryStringConversionMode": {
                                "description": "Specifies how upload and download request query strings should be transformed before processing the request. With `STRIP_ALL_INCOMING_QUERY`, all query strings are stripped and ignored.  With `APPLY_ACS_QUERY_CONVERSION`, the key is reviewed and stripped down using settings defined for `queryStringConversionKeyOrder` and `queryStringConversionExclude`; a hash of the string is also applied and used for matching at request time. With `LEAVE_INCOMING_QUERY_AS_IS`, the string is left as is.",
                                "type": "string",
                                "enum": [
                                  "STRIP_ALL_INCOMING_QUERY",
                                  "APPLY_ACS_QUERY_CONVERSION",
                                  "LEAVE_INCOMING_QUERY_AS_IS"
                                ]
                              },
                              "queryStringConversionVersion": {
                                "description": "The version in use for `queryStringConversion` with this group.",
                                "type": "string"
                              }
                            }
                          },
                          "quickDelete": {
                            "default": "false",
                            "description": "Whether the `quick-delete` operation is available in the NetStorage Usage API and the CMShell.  Targets a specific directory in this group and recursively deletes all of its contents.",
                            "type": "boolean"
                          },
                          "requestUriCaseConversion": {
                            "description": "Standardizes case usage for filenames uploaded to your selected upload directory. `NO_CONVERSION`, `CONVERT_TO_UPPER` and `CONVERT_TO_LOWER` are self-explanatory. `STREAM_OS` indicates case requirements are applied to support the Stream OS product. This is only seen in a very limited number of legacy groups.",
                            "type": "string",
                            "enum": [
                              "NO_CONVERSION",
                              "CONVERT_TO_UPPER",
                              "CONVERT_TO_LOWER",
                              "STREAM_OS"
                            ]
                          },
                          "rootDirectory": {
                            "description": "The CP code root for the upload directory.",
                            "type": "string"
                          },
                          "sendHash": {
                            "default": "false",
                            "description": "Whether a content item's MD5 digest values is sent in the HTTP `Content-MD5` response header.",
                            "type": "boolean"
                          },
                          "serveFromZip": {
                            "default": "false",
                            "description": "Whether NetStorage dynamically examines archived files to directly serve individual files from within the archive.",
                            "type": "boolean"
                          },
                          "useSsl": {
                            "default": "false",
                            "description": "Whether the contents within the upload directory are replicated securely via Secure Sockets Layer (SSL).",
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "domainPrefix": {
                      "description": "Your unique domain prefix (subdomain) value that the NetStorage system applies to the Domain Names used to access the group.",
                      "type": "string"
                    },
                    "estimatedUsageGB": {
                      "description": "The current volume of the group, in gigabytes.",
                      "type": "number"
                    },
                    "lastModifiedBy": {
                      "description": "The user who last modified the group.",
                      "type": "string"
                    },
                    "lastModifiedDate": {
                      "description": "The date the group was last modified.",
                      "type": "string"
                    },
                    "links": {
                      "description": "[Hypermedia](https://techdocs.akamai.com/netstorage/reference/hypermedia) links to the specific group, as well as any upload accounts or geographic replication zones assigned to it.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "href": {
                            "description": "A navigable path to the specific `rel` resource, once you prefix it with your hostname token.",
                            "type": "string"
                          },
                          "rel": {
                            "description": "This represents the link relation to the storage group resource.  This can be either `self` for a link referring to the storage group itself, `uploadAccounts` for a link to an associated upload account, or `zones` for a geographic replication zone that can be used with the group.",
                            "type": "string",
                            "enum": [
                              "self",
                              "uploadAccounts",
                              "zones"
                            ]
                          }
                        }
                      }
                    },
                    "migrationStatus": {
                      "description": "The current migration status from FileStore format to ObjectStore format, if migration has been initiated.",
                      "type": "string"
                    },
                    "pciEnabled": {
                      "description": "Whether Payment Card Industry (PCI) Data Security Standard support has been enabled for the storage group. These standards are designed to ensure that all companies that accept, process, store or transmit credit card information maintain a secure environment.",
                      "type": "boolean"
                    },
                    "postFileDomainEnabled": {
                      "default": "false",
                      "description": "The postfile domain, `{domain prefix}.postfile.akamai.com` configured for use with this group. The `{domain prefix}` variable is set up by you during the creation of the group.",
                      "type": "boolean"
                    },
                    "propagationStatus": {
                      "additionalProperties": false,
                      "description": "The current propagation status of the group.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Propagation statuses can be `PENDING`  which indicates the item is in queue or `ACTIVE` which indicates the group is propagated.",
                          "type": "string",
                          "enum": [
                            "PENDING",
                            "ACTIVE"
                          ]
                        }
                      }
                    },
                    "provisionStatus": {
                      "description": "The current provisioning status of the group. `PROVISIONED` indicates the group is ready for use. `MARKED_FOR_DEPROVISIONING` indicates deprovisioning has been requested, but the group is still accessible. `DEPROVISIONED`  indicates deprovisioning has completed, and the group is no longer available. `NOT_PROVISIONED` indicates the group hasn't been requested for provisioning.",
                      "type": "string",
                      "enum": [
                        "NOT_PROVISIONED",
                        "PROVISIONED",
                        "MARKED_FOR_DEPROVISIONING",
                        "DEPROVISIONED"
                      ]
                    },
                    "storageGroupId": {
                      "description": "The unique identifier that's automatically set for the group.",
                      "type": "integer"
                    },
                    "storageGroupName": {
                      "description": "The name you've set for the group.",
                      "type": "string"
                    },
                    "storageGroupPurpose": {
                      "description": "The specific purpose defined for the storage group. See the set of [available values](https://techdocs.akamai.com/netstorage/reference/enumerations).",
                      "type": "string",
                      "enum": [
                        "NETSTORAGE",
                        "EDGESTREAM",
                        "EDGESTREAM_IPHONE",
                        "ADAPTIVEEDGE",
                        "AD_INSERTION",
                        "CONTENT_PREPARATION",
                        "MSL_ORIGIN",
                        "FEO"
                      ]
                    },
                    "uploadDomain": {
                      "description": "The Upload Domain Name for this group. It's used to access the group to upload content. This is automatically constructed using the domain prefix that you define when creating the group.",
                      "type": "string"
                    },
                    "zones": {
                      "description": "The geographic replication zones configured for use with this group.  These are also referred to as replicas.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "allowDownload": {
                            "description": "How this zone has been configured to support direct downloads (rather than just for replication use). `YES` download from the zone is supported, `NO` not supported, and `FAILOVER` if other zones aren't available.",
                            "type": "string",
                            "enum": [
                              "YES",
                              "NO",
                              "FAILOVER"
                            ]
                          },
                          "allowUpload": {
                            "description": "How this zone has been configured to support direct uploads (rather than just for replication use). `YES` indicates uploads are supported. `NO` indicates uploads aren't supported. `FAILOVER` indicates uploads are supported to this zone only if no other zones are available.",
                            "type": "string",
                            "enum": [
                              "YES",
                              "NO",
                              "FAILOVER"
                            ]
                          },
                          "lastModifiedBy": {
                            "description": "The user who last modified zone settings for this group.",
                            "type": "string"
                          },
                          "lastModifiedDate": {
                            "description": "The date these zone settings were last modified.",
                            "type": "string"
                          },
                          "noCapacityAction": {
                            "description": "The action taken if the zone has no capacity for additional upload content. `SPILL_OUTSIDE` indicates content is temporarily uploaded outside the zone, to another zone configured for the group. `DENY_UPLOADS` indicates the zone doesn't support uploads for a `noCapacityAction`.",
                            "type": "string",
                            "enum": [
                              "SPILL_OUTSIDE",
                              "DENY_UPLOADS"
                            ]
                          },
                          "overrideReason": {
                            "description": "The reason that a zone should be overridden for another zone.",
                            "type": "string"
                          },
                          "overrideZoneName": {
                            "description": "The zone that's used for override to accommodate the `noCapacityAction` operation, if applicable.",
                            "type": "string"
                          },
                          "zoneName": {
                            "description": "The name of the geographic replication zone.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/storage-group-get.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Badly formatted JSON. Compare with the schema.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "Unauthorized Request.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "Application permission error.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "429": {
            "description": "The maximum request count for a specific time duration for this resource has been reached.",
            "content": {
              "*/*": {}
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Limit.yaml"
                }
              },
              "X-RateLimit-Remaining": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Remaining.yaml"
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/429.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Get a list of all of the storage groups in your NetStorage instance, optionally filtered by CP code or the storage group's categorized purpose.",
        "operationId": "get-storage-groups",
        "summary": "List storage groups",
        "tags": [
          "Groups"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's NetStorage Configuration API",
          "url": "https://techdocs.akamai.com/netstorage/reference/get-storage-groups"
        },
        "responses": {
          "200": {
            "description": "Request OK.",
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "allowEdit": true,
                      "asperaEnabled": false,
                      "contractId": "C-0N7RAC7",
                      "domainPrefix": "akastorage",
                      "estimatedUsageGB": 0,
                      "lastModifiedBy": "szhang",
                      "lastModifiedDate": "2018-08-07T09:25:35Z",
                      "migrationStatus": "-",
                      "pciEnabled": false,
                      "provisionStatus": "PROVISIONED",
                      "storageGroupId": 1234568,
                      "storageGroupName": "aka_storage",
                      "storageGroupPurpose": "NETSTORAGE",
                      "storageGroupType": "OBJECTSTORE",
                      "propagationStatus": {
                        "status": "PENDING",
                        "activeChanges": [],
                        "pendingChanges": [
                          "PORTAL_COBRA_METADATA",
                          "PORTAL_PLANNER_METADATA",
                          "PLANNER_PLACEMENT",
                          "CNAMES"
                        ]
                      },
                      "cpcodes": [
                        {
                          "cpcodeId": 1234567,
                          "downloadSecurity": "ALL_EDGE_SERVERS",
                          "lastChangesPropagated": false,
                          "lastModifiedBy": "afero",
                          "lastModifiedDate": "2018-08-07T09:25:35Z",
                          "numberOfBytes": -1,
                          "numberOfFiles": -1,
                          "pathCheckAndConversion": "DISALLOW_ALL_IMPROPER_PATHS",
                          "quickDelete": false,
                          "requestUriCaseConversion": "NO_CONVERSION",
                          "sendHash": true,
                          "serveFromZip": true,
                          "useSsl": false,
                          "dirListing": {
                            "indexFileName": "index.html",
                            "maxListSize": 1,
                            "searchOn404": "LOOK_FOR_EXPLICIT_DIR_ONLY"
                          },
                          "encodingConfig": {
                            "encoding": "UTF_8",
                            "enforceEncoding": true
                          },
                          "queryStringConversion": {
                            "queryStringConversionMode": "STRIP_ALL_INCOMING_QUERY"
                          },
                          "ageDeletions": [
                            {
                              "ageDeletionDays": 200,
                              "ageDeletionDirectory": "/456789/EN",
                              "ageDeletionExclusionRegex": ".zip*",
                              "ageDeletionRecursivePurge": true,
                              "ageDeletionSelectionRegex": ".*",
                              "ageDeletionSizeBytes": 10000000
                            }
                          ]
                        }
                      ],
                      "links": [
                        {
                          "href": "/storage-services/api/v1/storage-groups/1234568",
                          "rel": "self"
                        },
                        {
                          "href": "/storage-services/api/v1/upload-accounts?storageGroupId=1234568",
                          "rel": "uploadAccounts"
                        },
                        {
                          "href": "/storage-services/api/v1/zones",
                          "rel": "zones"
                        }
                      ],
                      "zones": [
                        {
                          "allowDownload": "YES",
                          "allowUpload": "YES",
                          "lastModifiedBy": "jdupont",
                          "lastModifiedDate": "2018-08-07T09:25:35Z",
                          "noCapacityAction": "SPILL_OUTSIDE",
                          "zoneName": "AU"
                        },
                        {
                          "allowDownload": "YES",
                          "allowUpload": "YES",
                          "lastModifiedBy": "mrossi",
                          "lastModifiedDate": "2018-08-07T09:25:35Z",
                          "noCapacityAction": "SPILL_OUTSIDE",
                          "zoneName": "IN"
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The basic unit within a NetStorage instance is referred to as a \"storage group.\" A storage group is where you house your content for distribution. You can list and get details of a group.",
                  "type": "object",
                  "properties": {
                    "allowEdit": {
                      "default": true,
                      "description": "Whether this group is enabled for editing.",
                      "type": "boolean"
                    },
                    "asperaEnabled": {
                      "description": "Whether Aspera Upload Acceleration has been enabled in an upload account that has access to this group.",
                      "type": "boolean"
                    },
                    "comments": {
                      "description": "Individual comments that briefly describe the last update made to the group.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "contractId": {
                      "description": "The unique identifier set for the contract that contains your instance of NetStorage and this group.",
                      "type": "string"
                    },
                    "cpcodes": {
                      "description": "Encapsulates CP codes assigned to a group.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "ageDeletions": {
                            "description": "Automatic Purge Routines that have been set up for the group.",
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "ageDeletionDays": {
                                  "description": "When the `ageDeletionSizeBytes` value is reached for the target directory, this number is subtracted from the current date to determine a timestamp. Files older than this timestamp are purged.",
                                  "type": "number"
                                },
                                "ageDeletionDirectory": {
                                  "description": "The target directory for an Automatic Purge Routine.",
                                  "type": "string"
                                },
                                "ageDeletionExclusionRegex": {
                                  "description": "POSIX regular expression pattern matching the filenames to exclude from the purge.",
                                  "type": "string"
                                },
                                "ageDeletionInclusionRegex": {
                                  "description": "POSIX regular expression pattern matching the filenames to include in the purge.",
                                  "type": "string"
                                },
                                "ageDeletionRecursivePurge": {
                                  "default": "false",
                                  "description": "Whether subdirectories within the target directory are also included in the purge. If `false`, only files within the target directory are purged.",
                                  "type": "boolean"
                                },
                                "ageDeletionSelectionRegex": {
                                  "type": "string"
                                },
                                "ageDeletionSizeBytes": {
                                  "description": "Automatic purge occurs when the target directory reaches this size, in bytes.",
                                  "type": "number"
                                }
                              }
                            }
                          },
                          "cpcodeId": {
                            "description": "A CP code assigned to the group, and used to identify requests to a specific upload directory. The CP code serves as the root for upload directory. This is also referred to as the CP code root.",
                            "type": "integer"
                          },
                          "dirListing": {
                            "additionalProperties": false,
                            "description": "Specifies the file to serve if a request doesn't end in a specific filename and extension.",
                            "type": "object",
                            "properties": {
                              "indexFileName": {
                                "description": "If a request doesn't specifically end in a filename and extension, this specifies the default file that's served.",
                                "type": "string"
                              },
                              "maxListSize": {
                                "description": "Whether the file path is truncated or hidden in the file path displayed in the HTML directory listing for the index name file. `-1` indicates the full path is displayed, `0` indicates directory listings aren't served, but the search for the requested index name file continues, and an integer greater than zero indicates directory listings in the path are limited to this number.",
                                "type": "integer"
                              },
                              "searchOn404": {
                                "description": "The action taken in the event of a 404 error, where the client was able to access NetStorage, but not the requested content or directory. `DO_NOT_SEARCH` stops additional searches, and returns a 404 error, `LOOK_FOR_EXPLICIT_DIR_ONLY` looks for an explicit directory matching the path specified in the request, and `LOOK_FOR_IMPLICIT_AND_EXPLICIT_DIR` looks for both an explicit and implicit directory that may match a path defined in the request.",
                                "type": "string",
                                "enum": [
                                  "DO_NOT_SEARCH",
                                  "LOOK_FOR_EXPLICIT_DIR_ONLY",
                                  "LOOK_FOR_IMPLICIT_AND_EXPLICIT_DIR"
                                ]
                              }
                            }
                          },
                          "downloadSecurity": {
                            "description": "The level of security to obtain download access to the group. `ALL_EDGE_SERVERS` allows requests from all edge servers. `STREAMING_SERVERS_ONLY` only allows requests from edge servers dedicated to streaming media. `G_2_O_AND_ALL_EDGE_SERVERS` allows requests from all edge servers, but a warning is issued. It also allows all requests that include a valid G2O token, `G_2_O_ONLY` requires inclusion of a valid G2O token.",
                            "type": "string",
                            "enum": [
                              "ALL_EDGE_SERVERS",
                              "STREAMING_SERVERS_ONLY",
                              "G_2_O_AND_ALL_EDGE_SERVERS",
                              "G_2_O_ONLY"
                            ]
                          },
                          "encodingConfig": {
                            "additionalProperties": false,
                            "description": "The type of encoding to use when displaying paths in XML-aware contexts.",
                            "type": "object",
                            "properties": {
                              "encoding": {
                                "description": "The selected encoding format, either `ISO_8859_1` which are 8-bit, single-byte coded graphic character sets, or `UTF_8` which are variable length, 8-bit code units via UTF-8 character encoding.",
                                "type": "string",
                                "enum": [
                                  "ISO_8859_1",
                                  "UTF_8"
                                ]
                              },
                              "enforceEncoding": {
                                "default": "false",
                                "description": "Whether upload operations verify that all path values defined within the URL for target content are properly formatted using the selected encoding method.",
                                "type": "boolean"
                              }
                            }
                          },
                          "f2hConfig": {
                            "additionalProperties": false,
                            "description": "FTP to HTTP (F2H) conversion for FTP download efficiency.",
                            "type": "object",
                            "properties": {
                              "f2hCookies": {
                                "description": "A listing of cookies generated in support of F2H for this group.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "f2hDirectories": {
                                "description": "A listing of directories in the group that have been set up to support F2H.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "g2o": {
                            "additionalProperties": false,
                            "description": "Keys you can use to access the group with the NetStorage Usage API.",
                            "type": "object",
                            "properties": {
                              "key": {
                                "description": "The G2O key. This is the `key` set in the upload account named as the `user`. Learn more about [G2O security settings](https://techdocs.akamai.com/netstorage/docs/create-a-storage-group#security-settings).",
                                "type": "string"
                              },
                              "lastModifiedBy": {
                                "description": "The user who added or last modified the key.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp that represents when the G2O key was last modified.",
                                "type": "string"
                              },
                              "user": {
                                "description": "The G2O user upload account.  This is the name of an upload account for this group that enables access to the NetStorage Usage API.",
                                "type": "string"
                              }
                            }
                          },
                          "lastChangesPropagated": {
                            "description": "When you create or modify an upload directory and changes are propagated to the NetStorage network, `true` indicates propagation is complete.",
                            "type": "boolean"
                          },
                          "lastModifiedBy": {
                            "description": "The user who last modified the upload directory.",
                            "type": "string"
                          },
                          "lastModifiedDate": {
                            "description": "The date the upload directory was last modified.",
                            "type": "string"
                          },
                          "numberOfBytes": {
                            "description": "The total number of bytes used by the upload directory.",
                            "type": "integer"
                          },
                          "numberOfFiles": {
                            "description": "The total number of files contained in the upload directory.",
                            "type": "integer"
                          },
                          "pathCheckAndConversion": {
                            "description": "Specifies the action taken when analyzing the request path.  See the set of [available values](https://techdocs.akamai.com/netstorage/reference/enumerations).",
                            "type": "string",
                            "enum": [
                              "DISALLOW_ALL_IMPROPER_PATHS",
                              "DISALLOW_IMPROPER_PATHS_ON_UPLOAD_ONLY",
                              "TRANSLATE_TO_CANONICAL",
                              "DO_NOT_CHECK_PATHS"
                            ]
                          },
                          "queryStringConversion": {
                            "additionalProperties": false,
                            "description": "Specifies how query strings appended to request paths to this group are handled.",
                            "type": "object",
                            "properties": {
                              "queryStringConversionExclude": {
                                "description": "A list of query string values that have been explicitly set to be excluded from conversion. Only applicable if `APPLY_ACS_QUERY_CONVERSION` is set as the `queryStringConversionMode`.",
                                "type": "string"
                              },
                              "queryStringConversionKeyOrder": {
                                "description": "If `APPLY_ACS_QUERY_CONVERSION` is set as the `queryStringConversionMode`, this specifies a list of query string values that should be included for ACS Query String Conversion, in the specific order they should be interpreted.",
                                "type": "string"
                              },
                              "queryStringConversionMode": {
                                "description": "Specifies how upload and download request query strings should be transformed before processing the request. With `STRIP_ALL_INCOMING_QUERY`, all query strings are stripped and ignored.  With `APPLY_ACS_QUERY_CONVERSION`, the key is reviewed and stripped down using settings defined for `queryStringConversionKeyOrder` and `queryStringConversionExclude`; a hash of the string is also applied and used for matching at request time. With `LEAVE_INCOMING_QUERY_AS_IS`, the string is left as is.",
                                "type": "string",
                                "enum": [
                                  "STRIP_ALL_INCOMING_QUERY",
                                  "APPLY_ACS_QUERY_CONVERSION",
                                  "LEAVE_INCOMING_QUERY_AS_IS"
                                ]
                              },
                              "queryStringConversionVersion": {
                                "description": "The version in use for `queryStringConversion` with this group.",
                                "type": "string"
                              }
                            }
                          },
                          "quickDelete": {
                            "default": "false",
                            "description": "Whether the `quick-delete` operation is available in the NetStorage Usage API and the CMShell.  Targets a specific directory in this group and recursively deletes all of its contents.",
                            "type": "boolean"
                          },
                          "requestUriCaseConversion": {
                            "description": "Standardizes case usage for filenames uploaded to your selected upload directory. `NO_CONVERSION`, `CONVERT_TO_UPPER` and `CONVERT_TO_LOWER` are self-explanatory. `STREAM_OS` indicates case requirements are applied to support the Stream OS product. This is only seen in a very limited number of legacy groups.",
                            "type": "string",
                            "enum": [
                              "NO_CONVERSION",
                              "CONVERT_TO_UPPER",
                              "CONVERT_TO_LOWER",
                              "STREAM_OS"
                            ]
                          },
                          "rootDirectory": {
                            "description": "The CP code root for the upload directory.",
                            "type": "string"
                          },
                          "sendHash": {
                            "default": "false",
                            "description": "Whether a content item's MD5 digest values is sent in the HTTP `Content-MD5` response header.",
                            "type": "boolean"
                          },
                          "serveFromZip": {
                            "default": "false",
                            "description": "Whether NetStorage dynamically examines archived files to directly serve individual files from within the archive.",
                            "type": "boolean"
                          },
                          "useSsl": {
                            "default": "false",
                            "description": "Whether the contents within the upload directory are replicated securely via Secure Sockets Layer (SSL).",
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "domainPrefix": {
                      "description": "Your unique domain prefix (subdomain) value that the NetStorage system applies to the Domain Names used to access the group.",
                      "type": "string"
                    },
                    "estimatedUsageGB": {
                      "description": "The current volume of the group, in gigabytes.",
                      "type": "number"
                    },
                    "lastModifiedBy": {
                      "description": "The user who last modified the group.",
                      "type": "string"
                    },
                    "lastModifiedDate": {
                      "description": "The date the group was last modified.",
                      "type": "string"
                    },
                    "links": {
                      "description": "[Hypermedia](https://techdocs.akamai.com/netstorage/reference/hypermedia) links to the specific group, as well as any upload accounts or geographic replication zones assigned to it.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "href": {
                            "description": "A navigable path to the specific `rel` resource, once you prefix it with your hostname token.",
                            "type": "string"
                          },
                          "rel": {
                            "description": "This represents the link relation to the storage group resource.  This can be either `self` for a link referring to the storage group itself, `uploadAccounts` for a link to an associated upload account, or `zones` for a geographic replication zone that can be used with the group.",
                            "type": "string",
                            "enum": [
                              "self",
                              "uploadAccounts",
                              "zones"
                            ]
                          }
                        }
                      }
                    },
                    "migrationStatus": {
                      "description": "The current migration status from FileStore format to ObjectStore format, if migration has been initiated.",
                      "type": "string"
                    },
                    "pciEnabled": {
                      "description": "Whether Payment Card Industry (PCI) Data Security Standard support has been enabled for the storage group. These standards are designed to ensure that all companies that accept, process, store or transmit credit card information maintain a secure environment.",
                      "type": "boolean"
                    },
                    "postFileDomainEnabled": {
                      "default": "false",
                      "description": "The postfile domain, `{domain prefix}.postfile.akamai.com` configured for use with this group. The `{domain prefix}` variable is set up by you during the creation of the group.",
                      "type": "boolean"
                    },
                    "propagationStatus": {
                      "additionalProperties": false,
                      "description": "The current propagation status of the group.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Propagation statuses can be `PENDING`  which indicates the item is in queue or `ACTIVE` which indicates the group is propagated.",
                          "type": "string",
                          "enum": [
                            "PENDING",
                            "ACTIVE"
                          ]
                        }
                      }
                    },
                    "provisionStatus": {
                      "description": "The current provisioning status of the group. `PROVISIONED` indicates the group is ready for use. `MARKED_FOR_DEPROVISIONING` indicates deprovisioning has been requested, but the group is still accessible. `DEPROVISIONED`  indicates deprovisioning has completed, and the group is no longer available. `NOT_PROVISIONED` indicates the group hasn't been requested for provisioning.",
                      "type": "string",
                      "enum": [
                        "NOT_PROVISIONED",
                        "PROVISIONED",
                        "MARKED_FOR_DEPROVISIONING",
                        "DEPROVISIONED"
                      ]
                    },
                    "storageGroupId": {
                      "description": "The unique identifier that's automatically set for the group.",
                      "type": "integer"
                    },
                    "storageGroupName": {
                      "description": "The name you've set for the group.",
                      "type": "string"
                    },
                    "storageGroupPurpose": {
                      "description": "The specific purpose defined for the storage group. See the set of [available values](https://techdocs.akamai.com/netstorage/reference/enumerations).",
                      "type": "string",
                      "enum": [
                        "NETSTORAGE",
                        "EDGESTREAM",
                        "EDGESTREAM_IPHONE",
                        "ADAPTIVEEDGE",
                        "AD_INSERTION",
                        "CONTENT_PREPARATION",
                        "MSL_ORIGIN",
                        "FEO"
                      ]
                    },
                    "uploadDomain": {
                      "description": "The Upload Domain Name for this group. It's used to access the group to upload content. This is automatically constructed using the domain prefix that you define when creating the group.",
                      "type": "string"
                    },
                    "zones": {
                      "description": "The geographic replication zones configured for use with this group.  These are also referred to as replicas.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "allowDownload": {
                            "description": "How this zone has been configured to support direct downloads (rather than just for replication use). `YES` download from the zone is supported, `NO` not supported, and `FAILOVER` if other zones aren't available.",
                            "type": "string",
                            "enum": [
                              "YES",
                              "NO",
                              "FAILOVER"
                            ]
                          },
                          "allowUpload": {
                            "description": "How this zone has been configured to support direct uploads (rather than just for replication use). `YES` indicates uploads are supported. `NO` indicates uploads aren't supported. `FAILOVER` indicates uploads are supported to this zone only if no other zones are available.",
                            "type": "string",
                            "enum": [
                              "YES",
                              "NO",
                              "FAILOVER"
                            ]
                          },
                          "lastModifiedBy": {
                            "description": "The user who last modified zone settings for this group.",
                            "type": "string"
                          },
                          "lastModifiedDate": {
                            "description": "The date these zone settings were last modified.",
                            "type": "string"
                          },
                          "noCapacityAction": {
                            "description": "The action taken if the zone has no capacity for additional upload content. `SPILL_OUTSIDE` indicates content is temporarily uploaded outside the zone, to another zone configured for the group. `DENY_UPLOADS` indicates the zone doesn't support uploads for a `noCapacityAction`.",
                            "type": "string",
                            "enum": [
                              "SPILL_OUTSIDE",
                              "DENY_UPLOADS"
                            ]
                          },
                          "overrideReason": {
                            "description": "The reason that a zone should be overridden for another zone.",
                            "type": "string"
                          },
                          "overrideZoneName": {
                            "description": "The zone that's used for override to accommodate the `noCapacityAction` operation, if applicable.",
                            "type": "string"
                          },
                          "zoneName": {
                            "description": "The name of the geographic replication zone.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/pageable-get-storage-group.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Badly formatted JSON. Compare with the schema.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "Unauthorized Request.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "Application permission error.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "429": {
            "description": "The maximum request count for a specific time duration for this resource has been reached.",
            "content": {
              "*/*": {}
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Limit.yaml"
                }
              },
              "X-RateLimit-Remaining": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Remaining.yaml"
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/429.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "Include a specific CP code to filter response output to the storage group using it for an upload directory.",
            "example": "{{cpcodeId}}",
            "in": "query",
            "name": "cpcodeId",
            "schema": {
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/cpcodeId-query.yaml"
            }
          },
          {
            "description": "__Enum__ The specific purpose defined for the storage group. See the set of [available values](https://techdocs.akamai.com/netstorage/reference/enumerations).",
            "example": "{{storageGroupPurpose}}",
            "in": "query",
            "name": "storageGroupPurpose",
            "schema": {
              "type": "string",
              "enum": [
                "NETSTORAGE",
                "EDGESTREAM",
                "EDGESTREAM_IPHONE",
                "ADAPTIVEEDGE",
                "AD_INSERTION",
                "CONTENT_PREPARATION",
                "MSL_ORIGIN",
                "FEO"
              ]
            },
            "x-akamai": {
              "file-path": "parameters/storageGroupPurpose-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/storage-groups/{storageGroupId}": {
      "get": {
        "description": "Get a specific storage group based on its `storageGroupId`.",
        "operationId": "get-storage-group",
        "summary": "Get a storage group",
        "tags": [
          "Groups"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's NetStorage Configuration API",
          "url": "https://techdocs.akamai.com/netstorage/reference/get-storage-group"
        },
        "responses": {
          "200": {
            "description": "Request OK.",
            "content": {
              "application/json": {
                "example": {
                  "allowEdit": true,
                  "asperaEnabled": false,
                  "contractId": "C-0N7RAC71",
                  "domainPrefix": "akastorage",
                  "estimatedUsageGB": 0,
                  "lastModifiedBy": "tyamada",
                  "lastModifiedDate": "2018-08-07T09:25:35Z",
                  "migrationStatus": "-",
                  "pciEnabled": false,
                  "provisionStatus": "PROVISIONED",
                  "storageGroupId": 1234568,
                  "storageGroupName": "aka_storage",
                  "storageGroupPurpose": "NETSTORAGE",
                  "storageGroupType": "OBJECTSTORE",
                  "propagationStatus": {
                    "status": "PENDING",
                    "activeChanges": [],
                    "pendingChanges": [
                      "PORTAL_COBRA_METADATA",
                      "PORTAL_PLANNER_METADATA",
                      "PLANNER_PLACEMENT",
                      "CNAMES"
                    ]
                  },
                  "cpcodes": [
                    {
                      "cpcodeId": 1234567,
                      "downloadSecurity": "ALL_EDGE_SERVERS",
                      "lastChangesPropagated": false,
                      "lastModifiedBy": "szhang",
                      "lastModifiedDate": "2018-08-07T09:25:35Z",
                      "numberOfBytes": -1,
                      "numberOfFiles": -1,
                      "pathCheckAndConversion": "DISALLOW_ALL_IMPROPER_PATHS",
                      "quickDelete": false,
                      "requestUriCaseConversion": "NO_CONVERSION",
                      "sendHash": true,
                      "serveFromZip": true,
                      "useSsl": false,
                      "dirListing": {
                        "indexFileName": "index.html",
                        "maxListSize": 1,
                        "searchOn404": "LOOK_FOR_EXPLICIT_DIR_ONLY"
                      },
                      "encodingConfig": {
                        "encoding": "UTF_8",
                        "enforceEncoding": true
                      },
                      "queryStringConversion": {
                        "queryStringConversionMode": "STRIP_ALL_INCOMING_QUERY"
                      },
                      "ageDeletions": [
                        {
                          "ageDeletionDays": 200,
                          "ageDeletionDirectory": "/456789/EN",
                          "ageDeletionExclusionRegex": ".zip*",
                          "ageDeletionRecursivePurge": true,
                          "ageDeletionSelectionRegex": ".*",
                          "ageDeletionSizeBytes": 10000000
                        }
                      ]
                    }
                  ],
                  "links": [
                    {
                      "href": "/storage-services/api/v1/storage-groups/1234568",
                      "rel": "self"
                    },
                    {
                      "href": "/storage-services/api/v1/upload-accounts?storageGroupId=1234568",
                      "rel": "uploadAccounts"
                    },
                    {
                      "href": "/storage-services/api/v1/zones",
                      "rel": "zones"
                    }
                  ],
                  "zones": [
                    {
                      "allowDownload": "YES",
                      "allowUpload": "YES",
                      "lastModifiedBy": "tyamada",
                      "lastModifiedDate": "2018-08-07T09:25:35Z",
                      "noCapacityAction": "SPILL_OUTSIDE",
                      "zoneName": "AU"
                    },
                    {
                      "allowDownload": "YES",
                      "allowUpload": "YES",
                      "lastModifiedBy": "jsmith",
                      "lastModifiedDate": "2018-08-07T09:25:35Z",
                      "noCapacityAction": "SPILL_OUTSIDE",
                      "zoneName": "IN"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The basic unit within a NetStorage instance is referred to as a \"storage group.\" A storage group is where you house your content for distribution. You can list and get details of a group.",
                  "type": "object",
                  "properties": {
                    "allowEdit": {
                      "default": true,
                      "description": "Whether this group is enabled for editing.",
                      "type": "boolean"
                    },
                    "asperaEnabled": {
                      "description": "Whether Aspera Upload Acceleration has been enabled in an upload account that has access to this group.",
                      "type": "boolean"
                    },
                    "comments": {
                      "description": "Individual comments that briefly describe the last update made to the group.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "contractId": {
                      "description": "The unique identifier set for the contract that contains your instance of NetStorage and this group.",
                      "type": "string"
                    },
                    "cpcodes": {
                      "description": "Encapsulates CP codes assigned to a group.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "ageDeletions": {
                            "description": "Automatic Purge Routines that have been set up for the group.",
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "ageDeletionDays": {
                                  "description": "When the `ageDeletionSizeBytes` value is reached for the target directory, this number is subtracted from the current date to determine a timestamp. Files older than this timestamp are purged.",
                                  "type": "number"
                                },
                                "ageDeletionDirectory": {
                                  "description": "The target directory for an Automatic Purge Routine.",
                                  "type": "string"
                                },
                                "ageDeletionExclusionRegex": {
                                  "description": "POSIX regular expression pattern matching the filenames to exclude from the purge.",
                                  "type": "string"
                                },
                                "ageDeletionInclusionRegex": {
                                  "description": "POSIX regular expression pattern matching the filenames to include in the purge.",
                                  "type": "string"
                                },
                                "ageDeletionRecursivePurge": {
                                  "default": "false",
                                  "description": "Whether subdirectories within the target directory are also included in the purge. If `false`, only files within the target directory are purged.",
                                  "type": "boolean"
                                },
                                "ageDeletionSelectionRegex": {
                                  "type": "string"
                                },
                                "ageDeletionSizeBytes": {
                                  "description": "Automatic purge occurs when the target directory reaches this size, in bytes.",
                                  "type": "number"
                                }
                              }
                            }
                          },
                          "cpcodeId": {
                            "description": "A CP code assigned to the group, and used to identify requests to a specific upload directory. The CP code serves as the root for upload directory. This is also referred to as the CP code root.",
                            "type": "integer"
                          },
                          "dirListing": {
                            "additionalProperties": false,
                            "description": "Specifies the file to serve if a request doesn't end in a specific filename and extension.",
                            "type": "object",
                            "properties": {
                              "indexFileName": {
                                "description": "If a request doesn't specifically end in a filename and extension, this specifies the default file that's served.",
                                "type": "string"
                              },
                              "maxListSize": {
                                "description": "Whether the file path is truncated or hidden in the file path displayed in the HTML directory listing for the index name file. `-1` indicates the full path is displayed, `0` indicates directory listings aren't served, but the search for the requested index name file continues, and an integer greater than zero indicates directory listings in the path are limited to this number.",
                                "type": "integer"
                              },
                              "searchOn404": {
                                "description": "The action taken in the event of a 404 error, where the client was able to access NetStorage, but not the requested content or directory. `DO_NOT_SEARCH` stops additional searches, and returns a 404 error, `LOOK_FOR_EXPLICIT_DIR_ONLY` looks for an explicit directory matching the path specified in the request, and `LOOK_FOR_IMPLICIT_AND_EXPLICIT_DIR` looks for both an explicit and implicit directory that may match a path defined in the request.",
                                "type": "string",
                                "enum": [
                                  "DO_NOT_SEARCH",
                                  "LOOK_FOR_EXPLICIT_DIR_ONLY",
                                  "LOOK_FOR_IMPLICIT_AND_EXPLICIT_DIR"
                                ]
                              }
                            }
                          },
                          "downloadSecurity": {
                            "description": "The level of security to obtain download access to the group. `ALL_EDGE_SERVERS` allows requests from all edge servers. `STREAMING_SERVERS_ONLY` only allows requests from edge servers dedicated to streaming media. `G_2_O_AND_ALL_EDGE_SERVERS` allows requests from all edge servers, but a warning is issued. It also allows all requests that include a valid G2O token, `G_2_O_ONLY` requires inclusion of a valid G2O token.",
                            "type": "string",
                            "enum": [
                              "ALL_EDGE_SERVERS",
                              "STREAMING_SERVERS_ONLY",
                              "G_2_O_AND_ALL_EDGE_SERVERS",
                              "G_2_O_ONLY"
                            ]
                          },
                          "encodingConfig": {
                            "additionalProperties": false,
                            "description": "The type of encoding to use when displaying paths in XML-aware contexts.",
                            "type": "object",
                            "properties": {
                              "encoding": {
                                "description": "The selected encoding format, either `ISO_8859_1` which are 8-bit, single-byte coded graphic character sets, or `UTF_8` which are variable length, 8-bit code units via UTF-8 character encoding.",
                                "type": "string",
                                "enum": [
                                  "ISO_8859_1",
                                  "UTF_8"
                                ]
                              },
                              "enforceEncoding": {
                                "default": "false",
                                "description": "Whether upload operations verify that all path values defined within the URL for target content are properly formatted using the selected encoding method.",
                                "type": "boolean"
                              }
                            }
                          },
                          "f2hConfig": {
                            "additionalProperties": false,
                            "description": "FTP to HTTP (F2H) conversion for FTP download efficiency.",
                            "type": "object",
                            "properties": {
                              "f2hCookies": {
                                "description": "A listing of cookies generated in support of F2H for this group.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "f2hDirectories": {
                                "description": "A listing of directories in the group that have been set up to support F2H.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "g2o": {
                            "additionalProperties": false,
                            "description": "Keys you can use to access the group with the NetStorage Usage API.",
                            "type": "object",
                            "properties": {
                              "key": {
                                "description": "The G2O key. This is the `key` set in the upload account named as the `user`. Learn more about [G2O security settings](https://techdocs.akamai.com/netstorage/docs/create-a-storage-group#security-settings).",
                                "type": "string"
                              },
                              "lastModifiedBy": {
                                "description": "The user who added or last modified the key.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp that represents when the G2O key was last modified.",
                                "type": "string"
                              },
                              "user": {
                                "description": "The G2O user upload account.  This is the name of an upload account for this group that enables access to the NetStorage Usage API.",
                                "type": "string"
                              }
                            }
                          },
                          "lastChangesPropagated": {
                            "description": "When you create or modify an upload directory and changes are propagated to the NetStorage network, `true` indicates propagation is complete.",
                            "type": "boolean"
                          },
                          "lastModifiedBy": {
                            "description": "The user who last modified the upload directory.",
                            "type": "string"
                          },
                          "lastModifiedDate": {
                            "description": "The date the upload directory was last modified.",
                            "type": "string"
                          },
                          "numberOfBytes": {
                            "description": "The total number of bytes used by the upload directory.",
                            "type": "integer"
                          },
                          "numberOfFiles": {
                            "description": "The total number of files contained in the upload directory.",
                            "type": "integer"
                          },
                          "pathCheckAndConversion": {
                            "description": "Specifies the action taken when analyzing the request path.  See the set of [available values](https://techdocs.akamai.com/netstorage/reference/enumerations).",
                            "type": "string",
                            "enum": [
                              "DISALLOW_ALL_IMPROPER_PATHS",
                              "DISALLOW_IMPROPER_PATHS_ON_UPLOAD_ONLY",
                              "TRANSLATE_TO_CANONICAL",
                              "DO_NOT_CHECK_PATHS"
                            ]
                          },
                          "queryStringConversion": {
                            "additionalProperties": false,
                            "description": "Specifies how query strings appended to request paths to this group are handled.",
                            "type": "object",
                            "properties": {
                              "queryStringConversionExclude": {
                                "description": "A list of query string values that have been explicitly set to be excluded from conversion. Only applicable if `APPLY_ACS_QUERY_CONVERSION` is set as the `queryStringConversionMode`.",
                                "type": "string"
                              },
                              "queryStringConversionKeyOrder": {
                                "description": "If `APPLY_ACS_QUERY_CONVERSION` is set as the `queryStringConversionMode`, this specifies a list of query string values that should be included for ACS Query String Conversion, in the specific order they should be interpreted.",
                                "type": "string"
                              },
                              "queryStringConversionMode": {
                                "description": "Specifies how upload and download request query strings should be transformed before processing the request. With `STRIP_ALL_INCOMING_QUERY`, all query strings are stripped and ignored.  With `APPLY_ACS_QUERY_CONVERSION`, the key is reviewed and stripped down using settings defined for `queryStringConversionKeyOrder` and `queryStringConversionExclude`; a hash of the string is also applied and used for matching at request time. With `LEAVE_INCOMING_QUERY_AS_IS`, the string is left as is.",
                                "type": "string",
                                "enum": [
                                  "STRIP_ALL_INCOMING_QUERY",
                                  "APPLY_ACS_QUERY_CONVERSION",
                                  "LEAVE_INCOMING_QUERY_AS_IS"
                                ]
                              },
                              "queryStringConversionVersion": {
                                "description": "The version in use for `queryStringConversion` with this group.",
                                "type": "string"
                              }
                            }
                          },
                          "quickDelete": {
                            "default": "false",
                            "description": "Whether the `quick-delete` operation is available in the NetStorage Usage API and the CMShell.  Targets a specific directory in this group and recursively deletes all of its contents.",
                            "type": "boolean"
                          },
                          "requestUriCaseConversion": {
                            "description": "Standardizes case usage for filenames uploaded to your selected upload directory. `NO_CONVERSION`, `CONVERT_TO_UPPER` and `CONVERT_TO_LOWER` are self-explanatory. `STREAM_OS` indicates case requirements are applied to support the Stream OS product. This is only seen in a very limited number of legacy groups.",
                            "type": "string",
                            "enum": [
                              "NO_CONVERSION",
                              "CONVERT_TO_UPPER",
                              "CONVERT_TO_LOWER",
                              "STREAM_OS"
                            ]
                          },
                          "rootDirectory": {
                            "description": "The CP code root for the upload directory.",
                            "type": "string"
                          },
                          "sendHash": {
                            "default": "false",
                            "description": "Whether a content item's MD5 digest values is sent in the HTTP `Content-MD5` response header.",
                            "type": "boolean"
                          },
                          "serveFromZip": {
                            "default": "false",
                            "description": "Whether NetStorage dynamically examines archived files to directly serve individual files from within the archive.",
                            "type": "boolean"
                          },
                          "useSsl": {
                            "default": "false",
                            "description": "Whether the contents within the upload directory are replicated securely via Secure Sockets Layer (SSL).",
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "domainPrefix": {
                      "description": "Your unique domain prefix (subdomain) value that the NetStorage system applies to the Domain Names used to access the group.",
                      "type": "string"
                    },
                    "estimatedUsageGB": {
                      "description": "The current volume of the group, in gigabytes.",
                      "type": "number"
                    },
                    "lastModifiedBy": {
                      "description": "The user who last modified the group.",
                      "type": "string"
                    },
                    "lastModifiedDate": {
                      "description": "The date the group was last modified.",
                      "type": "string"
                    },
                    "links": {
                      "description": "[Hypermedia](https://techdocs.akamai.com/netstorage/reference/hypermedia) links to the specific group, as well as any upload accounts or geographic replication zones assigned to it.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "href": {
                            "description": "A navigable path to the specific `rel` resource, once you prefix it with your hostname token.",
                            "type": "string"
                          },
                          "rel": {
                            "description": "This represents the link relation to the storage group resource.  This can be either `self` for a link referring to the storage group itself, `uploadAccounts` for a link to an associated upload account, or `zones` for a geographic replication zone that can be used with the group.",
                            "type": "string",
                            "enum": [
                              "self",
                              "uploadAccounts",
                              "zones"
                            ]
                          }
                        }
                      }
                    },
                    "migrationStatus": {
                      "description": "The current migration status from FileStore format to ObjectStore format, if migration has been initiated.",
                      "type": "string"
                    },
                    "pciEnabled": {
                      "description": "Whether Payment Card Industry (PCI) Data Security Standard support has been enabled for the storage group. These standards are designed to ensure that all companies that accept, process, store or transmit credit card information maintain a secure environment.",
                      "type": "boolean"
                    },
                    "postFileDomainEnabled": {
                      "default": "false",
                      "description": "The postfile domain, `{domain prefix}.postfile.akamai.com` configured for use with this group. The `{domain prefix}` variable is set up by you during the creation of the group.",
                      "type": "boolean"
                    },
                    "propagationStatus": {
                      "additionalProperties": false,
                      "description": "The current propagation status of the group.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Propagation statuses can be `PENDING`  which indicates the item is in queue or `ACTIVE` which indicates the group is propagated.",
                          "type": "string",
                          "enum": [
                            "PENDING",
                            "ACTIVE"
                          ]
                        }
                      }
                    },
                    "provisionStatus": {
                      "description": "The current provisioning status of the group. `PROVISIONED` indicates the group is ready for use. `MARKED_FOR_DEPROVISIONING` indicates deprovisioning has been requested, but the group is still accessible. `DEPROVISIONED`  indicates deprovisioning has completed, and the group is no longer available. `NOT_PROVISIONED` indicates the group hasn't been requested for provisioning.",
                      "type": "string",
                      "enum": [
                        "NOT_PROVISIONED",
                        "PROVISIONED",
                        "MARKED_FOR_DEPROVISIONING",
                        "DEPROVISIONED"
                      ]
                    },
                    "storageGroupId": {
                      "description": "The unique identifier that's automatically set for the group.",
                      "type": "integer"
                    },
                    "storageGroupName": {
                      "description": "The name you've set for the group.",
                      "type": "string"
                    },
                    "storageGroupPurpose": {
                      "description": "The specific purpose defined for the storage group. See the set of [available values](https://techdocs.akamai.com/netstorage/reference/enumerations).",
                      "type": "string",
                      "enum": [
                        "NETSTORAGE",
                        "EDGESTREAM",
                        "EDGESTREAM_IPHONE",
                        "ADAPTIVEEDGE",
                        "AD_INSERTION",
                        "CONTENT_PREPARATION",
                        "MSL_ORIGIN",
                        "FEO"
                      ]
                    },
                    "uploadDomain": {
                      "description": "The Upload Domain Name for this group. It's used to access the group to upload content. This is automatically constructed using the domain prefix that you define when creating the group.",
                      "type": "string"
                    },
                    "zones": {
                      "description": "The geographic replication zones configured for use with this group.  These are also referred to as replicas.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "allowDownload": {
                            "description": "How this zone has been configured to support direct downloads (rather than just for replication use). `YES` download from the zone is supported, `NO` not supported, and `FAILOVER` if other zones aren't available.",
                            "type": "string",
                            "enum": [
                              "YES",
                              "NO",
                              "FAILOVER"
                            ]
                          },
                          "allowUpload": {
                            "description": "How this zone has been configured to support direct uploads (rather than just for replication use). `YES` indicates uploads are supported. `NO` indicates uploads aren't supported. `FAILOVER` indicates uploads are supported to this zone only if no other zones are available.",
                            "type": "string",
                            "enum": [
                              "YES",
                              "NO",
                              "FAILOVER"
                            ]
                          },
                          "lastModifiedBy": {
                            "description": "The user who last modified zone settings for this group.",
                            "type": "string"
                          },
                          "lastModifiedDate": {
                            "description": "The date these zone settings were last modified.",
                            "type": "string"
                          },
                          "noCapacityAction": {
                            "description": "The action taken if the zone has no capacity for additional upload content. `SPILL_OUTSIDE` indicates content is temporarily uploaded outside the zone, to another zone configured for the group. `DENY_UPLOADS` indicates the zone doesn't support uploads for a `noCapacityAction`.",
                            "type": "string",
                            "enum": [
                              "SPILL_OUTSIDE",
                              "DENY_UPLOADS"
                            ]
                          },
                          "overrideReason": {
                            "description": "The reason that a zone should be overridden for another zone.",
                            "type": "string"
                          },
                          "overrideZoneName": {
                            "description": "The zone that's used for override to accommodate the `noCapacityAction` operation, if applicable.",
                            "type": "string"
                          },
                          "zoneName": {
                            "description": "The name of the geographic replication zone.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/storage-group-get.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Badly formatted JSON. Compare with the schema.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "Unauthorized Request.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "Application permission error.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "429": {
            "description": "The maximum request count for a specific time duration for this resource has been reached.",
            "content": {
              "*/*": {}
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Limit.yaml"
                }
              },
              "X-RateLimit-Remaining": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Remaining.yaml"
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/429.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Update storage group based on its unique ID value.",
        "operationId": "put-storage-group",
        "summary": "Edit a storage group",
        "tags": [
          "Groups"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's NetStorage Configuration API",
          "url": "https://techdocs.akamai.com/netstorage/reference/put-storage-group"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "storageGroupName": "aka_storage",
                "cpcodes": [
                  {
                    "cpcodeId": 1234567,
                    "downloadSecurity": "ALL_EDGE_SERVERS",
                    "enableQuickDelete": false,
                    "pathCheckAndConversion": "DISALLOW_ALL_IMPROPER_PATHS",
                    "requestUriCaseConversion": "NO_CONVERSION",
                    "sendHash": true,
                    "serveFromZip": true,
                    "useSsl": false,
                    "dirListing": {
                      "indexFileName": "index.html",
                      "maxListSize": 1,
                      "searchOn404": "LOOK_FOR_EXPLICIT_DIR_ONLY"
                    },
                    "encodingConfig": {
                      "encoding": "UTF_8",
                      "enforceEncoding": true
                    },
                    "queryStringConversion": {
                      "queryStringConversionMode": "STRIP_ALL_INCOMING_QUERY"
                    },
                    "ageDeletions": [
                      {
                        "ageDeletionDays": 200,
                        "ageDeletionDirectory": "/456789/EN",
                        "ageDeletionExclusionRegex": ".zip*",
                        "ageDeletionRecursivePurge": true,
                        "ageDeletionSelectionRegex": ".*",
                        "ageDeletionSizeBytes": 10000000
                      }
                    ]
                  }
                ],
                "zones": [
                  {
                    "allowDownload": "YES",
                    "allowUpload": "YES",
                    "noCapacityAction": "SPILL_OUTSIDE",
                    "zoneName": "AU"
                  },
                  {
                    "allowDownload": "YES",
                    "allowUpload": "YES",
                    "noCapacityAction": "SPILL_OUTSIDE",
                    "zoneName": "IN"
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Update storage group.",
                "type": "object",
                "properties": {
                  "cpcodes": {
                    "description": "The set of CP codes assigned to a group.",
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "ageDeletions": {
                          "description": "Automatic Purge Routines that have been set up for the group.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "ageDeletionDays": {
                                "description": "When the `ageDeletionSizeBytes` value is reached for the target directory, this number is subtracted from the current date to determine a timestamp. Files older than this timestamp are purged.",
                                "type": "integer"
                              },
                              "ageDeletionDirectory": {
                                "description": "The target directory for an Automatic Purge Routine.",
                                "type": "string"
                              },
                              "ageDeletionExclusionRegex": {
                                "description": "POSIX regular expression pattern matching the filenames to exclude from the purge.",
                                "type": "string"
                              },
                              "ageDeletionRecursivePurge": {
                                "default": "false",
                                "description": "Whether subdirectories within the target directory are also included in the purge. If `false`, only files within the target directory are purged.",
                                "type": "boolean"
                              },
                              "ageDeletionSelectionRegex": {
                                "description": "POSIX regular expression pattern matching the filenames to include in the purge.",
                                "type": "string"
                              },
                              "ageDeletionSizeBytes": {
                                "description": "Automatic purge occurs when the target directory reaches this size, in bytes.",
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "cpcodeId": {
                          "description": "A CP code assigned to the group and used to identify requests to a specific upload directory. The CP code serves as the root for upload directory. This is also referred to as the CP code root.",
                          "type": "integer"
                        },
                        "dirListing": {
                          "additionalProperties": false,
                          "description": "Specifies the file to serve if a request doesn't end in a specific filename and extension.",
                          "type": "object",
                          "properties": {
                            "indexFileName": {
                              "description": "If a request doesn't specifically end in a filename and extension, this specifies the default file that's served.",
                              "type": "string"
                            },
                            "maxListSize": {
                              "description": "Whether the file path is truncated or hidden in the file path displayed in the HTML directory listing for the index name file. `-1` indicates the full path is displayed, `0` indicates directory listings aren't served, but the search for the requested index name file continues, and an integer greater than zero indicates directory listings in the path are limited to this number.",
                              "type": "integer"
                            },
                            "searchOn404": {
                              "description": "The action taken in the event of a 404 error, where the client was able to access NetStorage, but not the requested content or directory. `DO_NOT_SEARCH` stops additional searches, and returns a 404 error, `LOOK_FOR_EXPLICIT_DIR_ONLY` looks for an explicit directory matching the path specified in the request, and `LOOK_FOR_IMPLICIT_AND_EXPLICIT_DIR` looks for both an explicit and implicit directory that may match a path defined in the request.",
                              "type": "string",
                              "enum": [
                                "DO_NOT_SEARCH",
                                "LOOK_FOR_EXPLICIT_DIR_ONLY",
                                "LOOK_FOR_IMPLICIT_AND_EXPLICIT_DIR"
                              ]
                            }
                          }
                        },
                        "downloadSecurity": {
                          "description": "The level of security to obtain download access to the group. `ALL_EDGE_SERVERS` allows requests from all edge servers. `STREAMING_SERVERS_ONLY` only allows requests from edge servers dedicated to streaming media. `G_2_O_AND_ALL_EDGE_SERVERS` allows requests from all edge servers, but a warning is issued. It also allows all requests that include a valid G2O token, `G_2_O_ONLY` requires inclusion of a valid G2O token.",
                          "type": "string",
                          "enum": [
                            "ALL_EDGE_SERVERS",
                            "STREAMING_SERVERS_ONLY",
                            "G_2_O_AND_ALL_EDGE_SERVERS",
                            "G_2_O_ONLY"
                          ]
                        },
                        "enableQuickDelete": {
                          "default": "false",
                          "description": "Whether the `quick-delete` operation is available in the NetStorage Usage API and the CMShell.  Targets a specific directory in this group and recursively deletes all of its contents.",
                          "type": "boolean"
                        },
                        "encodingConfig": {
                          "additionalProperties": false,
                          "description": "The type of encoding to use when displaying paths in XML-aware contexts.",
                          "type": "object",
                          "properties": {
                            "encoding": {
                              "description": "The selected encoding format, either `ISO_8859_1` which are 8-bit, single-byte coded graphic character sets, or `UTF_8` which are variable length, 8-bit code units via UTF-8 character encoding.",
                              "type": "string",
                              "enum": [
                                "ISO_8859_1",
                                "UTF_8"
                              ]
                            },
                            "enforceEncoding": {
                              "default": "false",
                              "description": "Whether upload operations verify that all path values defined within the URL for target content are properly formatted using the selected encoding method.",
                              "type": "boolean"
                            }
                          }
                        },
                        "f2hConfig": {
                          "additionalProperties": false,
                          "description": "FTP to HTTP (F2H) conversion for FTP download efficiency.",
                          "type": "object",
                          "properties": {
                            "f2hCookies": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "f2hDirectories": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "pathCheckAndConversion": {
                          "description": "Specifies the action taken when analyzing the request path. With `DISALLOW_ALL_IMPROPER_PATHS`, paths using naming conventions outside of what's supported for use as an explicit or implicit directory name are blocked, and an error message is displayed. With `DISALLOW_IMPROPER_PATHS_ON_UPLOAD_ONLY`, as previous, but only for upload requests.  Download requests are translated to canonical. With `TRANSLATE_TO_CANONICAL`, a forward slash (/) is seen as a path delimiter and repeat instances are treated as a single instance in a path. For example, if an upload request is sent to target the directory, `//files/new///mp4/movie1.mp4`, the file is uploaded to `/files/new/mp4/movie1.mp4`. (And, non-existent directories within the path are auto-generated to exist as explicit ones). With `DO_NOT_CHECK_PATHS`, paths aren't checked and are interpreted exactly as they're sent.",
                          "type": "string",
                          "enum": [
                            "DISALLOW_ALL_IMPROPER_PATHS",
                            "DISALLOW_IMPROPER_PATHS_ON_UPLOAD_ONLY",
                            "TRANSLATE_TO_CANONICAL",
                            "DO_NOT_CHECK_PATHS"
                          ]
                        },
                        "queryStringConversion": {
                          "additionalProperties": false,
                          "description": "Specifies how query strings appended to request paths to this group are handled.",
                          "type": "object",
                          "properties": {
                            "queryStringConversionExclude": {
                              "description": "A list of query string values that have been explicitly set to be excluded from conversion. Only applicable if `APPLY_ACS_QUERY_CONVERSION` is set as the `queryStringConversionMode`.",
                              "type": "string"
                            },
                            "queryStringConversionKeyOrder": {
                              "description": "If `APPLY_ACS_QUERY_CONVERSION` is set as the `queryStringConversionMode`, this specifies a list of query string values that should be included for ACS Query String Conversion, in the specific order they should be interpreted.",
                              "type": "string"
                            },
                            "queryStringConversionMode": {
                              "description": "Specifies how upload and download request query strings should be transformed before processing the request. With `STRIP_ALL_INCOMING_QUERY`, all query strings are stripped and ignored.  With `APPLY_ACS_QUERY_CONVERSION`, the key is reviewed and stripped down using settings defined for `queryStringConversionKeyOrder` and `queryStringConversionExclude`; a hash of the string is also applied and used for matching at request time. With `LEAVE_INCOMING_QUERY_AS_IS`, the string is left as is.",
                              "type": "string",
                              "enum": [
                                "STRIP_ALL_INCOMING_QUERY",
                                "APPLY_ACS_QUERY_CONVERSION",
                                "LEAVE_INCOMING_QUERY_AS_IS"
                              ]
                            },
                            "queryStringConversionVersion": {
                              "description": "The version in use for `queryStringConversion` with this group.",
                              "type": "string"
                            }
                          }
                        },
                        "requestUriCaseConversion": {
                          "description": "Standardizes case usage for filenames uploaded to your selected upload directory. `NO_CONVERSION`, `CONVERT_TO_UPPER` and `CONVERT_TO_LOWER` are self-explanatory. `STREAM_OS` indicates case requirements are applied to support the Stream OS product. This is only seen in a very limited number of legacy groups.",
                          "type": "string",
                          "enum": [
                            "NO_CONVERSION",
                            "CONVERT_TO_UPPER",
                            "CONVERT_TO_LOWER",
                            "STREAM_OS"
                          ]
                        },
                        "sendHash": {
                          "default": "false",
                          "description": "Whether a content item's MD5 digest values is sent in the HTTP `Content-MD5` response header.",
                          "type": "boolean"
                        },
                        "serveFromZip": {
                          "default": "false",
                          "description": "Whether NetStorage dynamically examines archived files to directly serve individual files from within the archive.",
                          "type": "boolean"
                        },
                        "useSsl": {
                          "default": "false",
                          "description": "Whether the contents within the upload directory are replicated securely via Secure Sockets Layer (SSL).",
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "storageGroupName": {
                    "description": "The name you set for the group.",
                    "example": "{{storageGroupName}}",
                    "type": "string"
                  },
                  "zones": {
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "zoneName": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/storage-group-put.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request OK.",
            "content": {
              "application/json": {
                "example": {
                  "allowEdit": true,
                  "asperaEnabled": false,
                  "contractId": "K-0N7RAK7",
                  "domainPrefix": "akastorage",
                  "estimatedUsageGB": 0,
                  "lastModifiedBy": "adevi",
                  "lastModifiedDate": "2018-08-07T09:25:35Z",
                  "migrationStatus": "-",
                  "pciEnabled": false,
                  "provisionStatus": "PROVISIONED",
                  "storageGroupId": 1234568,
                  "storageGroupName": "aka_storage",
                  "storageGroupPurpose": "NETSTORAGE",
                  "storageGroupType": "OBJECTSTORE",
                  "propagationStatus": {
                    "status": "PENDING",
                    "activeChanges": [],
                    "pendingChanges": [
                      "PORTAL_COBRA_METADATA",
                      "PORTAL_PLANNER_METADATA",
                      "PLANNER_PLACEMENT",
                      "CNAMES"
                    ]
                  },
                  "cpcodes": [
                    {
                      "cpcodeId": 1234567,
                      "downloadSecurity": "ALL_EDGE_SERVERS",
                      "lastChangesPropagated": false,
                      "lastModifiedBy": "szhang",
                      "lastModifiedDate": "2018-08-07T09:25:35Z",
                      "numberOfBytes": -1,
                      "numberOfFiles": -1,
                      "pathCheckAndConversion": "DISALLOW_ALL_IMPROPER_PATHS",
                      "quickDelete": false,
                      "requestUriCaseConversion": "NO_CONVERSION",
                      "sendHash": true,
                      "serveFromZip": true,
                      "useSsl": false,
                      "dirListing": {
                        "indexFileName": "index.html",
                        "maxListSize": 1,
                        "searchOn404": "LOOK_FOR_EXPLICIT_DIR_ONLY"
                      },
                      "encodingConfig": {
                        "encoding": "UTF_8",
                        "enforceEncoding": true
                      },
                      "queryStringConversion": {
                        "queryStringConversionMode": "STRIP_ALL_INCOMING_QUERY"
                      },
                      "ageDeletions": [
                        {
                          "ageDeletionDays": 200,
                          "ageDeletionDirectory": "/456789/EN",
                          "ageDeletionExclusionRegex": ".zip*",
                          "ageDeletionRecursivePurge": true,
                          "ageDeletionSelectionRegex": ".*",
                          "ageDeletionSizeBytes": 10000000
                        }
                      ]
                    }
                  ],
                  "links": [
                    {
                      "href": "/storage-services/api/v1/storage-groups/1234568",
                      "rel": "self"
                    },
                    {
                      "href": "/storage-services/api/v1/upload-accounts?storageGroupId=1234568",
                      "rel": "uploadAccounts"
                    },
                    {
                      "href": "/storage-services/api/v1/zones",
                      "rel": "zones"
                    }
                  ],
                  "zones": [
                    {
                      "allowDownload": "YES",
                      "allowUpload": "YES",
                      "lastModifiedBy": "szhang",
                      "lastModifiedDate": "2018-08-07T09:25:35Z",
                      "noCapacityAction": "SPILL_OUTSIDE",
                      "zoneName": "AU"
                    },
                    {
                      "allowDownload": "YES",
                      "allowUpload": "YES",
                      "lastModifiedBy": "mrossi",
                      "lastModifiedDate": "2018-08-07T09:25:35Z",
                      "noCapacityAction": "SPILL_OUTSIDE",
                      "zoneName": "IN"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The basic unit within a NetStorage instance is referred to as a \"storage group.\" A storage group is where you house your content for distribution. You can list and get details of a group.",
                  "type": "object",
                  "properties": {
                    "allowEdit": {
                      "default": true,
                      "description": "Whether this group is enabled for editing.",
                      "type": "boolean"
                    },
                    "asperaEnabled": {
                      "description": "Whether Aspera Upload Acceleration has been enabled in an upload account that has access to this group.",
                      "type": "boolean"
                    },
                    "comments": {
                      "description": "Individual comments that briefly describe the last update made to the group.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "contractId": {
                      "description": "The unique identifier set for the contract that contains your instance of NetStorage and this group.",
                      "type": "string"
                    },
                    "cpcodes": {
                      "description": "Encapsulates CP codes assigned to a group.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "ageDeletions": {
                            "description": "Automatic Purge Routines that have been set up for the group.",
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "properties": {
                                "ageDeletionDays": {
                                  "description": "When the `ageDeletionSizeBytes` value is reached for the target directory, this number is subtracted from the current date to determine a timestamp. Files older than this timestamp are purged.",
                                  "type": "number"
                                },
                                "ageDeletionDirectory": {
                                  "description": "The target directory for an Automatic Purge Routine.",
                                  "type": "string"
                                },
                                "ageDeletionExclusionRegex": {
                                  "description": "POSIX regular expression pattern matching the filenames to exclude from the purge.",
                                  "type": "string"
                                },
                                "ageDeletionInclusionRegex": {
                                  "description": "POSIX regular expression pattern matching the filenames to include in the purge.",
                                  "type": "string"
                                },
                                "ageDeletionRecursivePurge": {
                                  "default": "false",
                                  "description": "Whether subdirectories within the target directory are also included in the purge. If `false`, only files within the target directory are purged.",
                                  "type": "boolean"
                                },
                                "ageDeletionSelectionRegex": {
                                  "type": "string"
                                },
                                "ageDeletionSizeBytes": {
                                  "description": "Automatic purge occurs when the target directory reaches this size, in bytes.",
                                  "type": "number"
                                }
                              }
                            }
                          },
                          "cpcodeId": {
                            "description": "A CP code assigned to the group, and used to identify requests to a specific upload directory. The CP code serves as the root for upload directory. This is also referred to as the CP code root.",
                            "type": "integer"
                          },
                          "dirListing": {
                            "additionalProperties": false,
                            "description": "Specifies the file to serve if a request doesn't end in a specific filename and extension.",
                            "type": "object",
                            "properties": {
                              "indexFileName": {
                                "description": "If a request doesn't specifically end in a filename and extension, this specifies the default file that's served.",
                                "type": "string"
                              },
                              "maxListSize": {
                                "description": "Whether the file path is truncated or hidden in the file path displayed in the HTML directory listing for the index name file. `-1` indicates the full path is displayed, `0` indicates directory listings aren't served, but the search for the requested index name file continues, and an integer greater than zero indicates directory listings in the path are limited to this number.",
                                "type": "integer"
                              },
                              "searchOn404": {
                                "description": "The action taken in the event of a 404 error, where the client was able to access NetStorage, but not the requested content or directory. `DO_NOT_SEARCH` stops additional searches, and returns a 404 error, `LOOK_FOR_EXPLICIT_DIR_ONLY` looks for an explicit directory matching the path specified in the request, and `LOOK_FOR_IMPLICIT_AND_EXPLICIT_DIR` looks for both an explicit and implicit directory that may match a path defined in the request.",
                                "type": "string",
                                "enum": [
                                  "DO_NOT_SEARCH",
                                  "LOOK_FOR_EXPLICIT_DIR_ONLY",
                                  "LOOK_FOR_IMPLICIT_AND_EXPLICIT_DIR"
                                ]
                              }
                            }
                          },
                          "downloadSecurity": {
                            "description": "The level of security to obtain download access to the group. `ALL_EDGE_SERVERS` allows requests from all edge servers. `STREAMING_SERVERS_ONLY` only allows requests from edge servers dedicated to streaming media. `G_2_O_AND_ALL_EDGE_SERVERS` allows requests from all edge servers, but a warning is issued. It also allows all requests that include a valid G2O token, `G_2_O_ONLY` requires inclusion of a valid G2O token.",
                            "type": "string",
                            "enum": [
                              "ALL_EDGE_SERVERS",
                              "STREAMING_SERVERS_ONLY",
                              "G_2_O_AND_ALL_EDGE_SERVERS",
                              "G_2_O_ONLY"
                            ]
                          },
                          "encodingConfig": {
                            "additionalProperties": false,
                            "description": "The type of encoding to use when displaying paths in XML-aware contexts.",
                            "type": "object",
                            "properties": {
                              "encoding": {
                                "description": "The selected encoding format, either `ISO_8859_1` which are 8-bit, single-byte coded graphic character sets, or `UTF_8` which are variable length, 8-bit code units via UTF-8 character encoding.",
                                "type": "string",
                                "enum": [
                                  "ISO_8859_1",
                                  "UTF_8"
                                ]
                              },
                              "enforceEncoding": {
                                "default": "false",
                                "description": "Whether upload operations verify that all path values defined within the URL for target content are properly formatted using the selected encoding method.",
                                "type": "boolean"
                              }
                            }
                          },
                          "f2hConfig": {
                            "additionalProperties": false,
                            "description": "FTP to HTTP (F2H) conversion for FTP download efficiency.",
                            "type": "object",
                            "properties": {
                              "f2hCookies": {
                                "description": "A listing of cookies generated in support of F2H for this group.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "f2hDirectories": {
                                "description": "A listing of directories in the group that have been set up to support F2H.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "g2o": {
                            "additionalProperties": false,
                            "description": "Keys you can use to access the group with the NetStorage Usage API.",
                            "type": "object",
                            "properties": {
                              "key": {
                                "description": "The G2O key. This is the `key` set in the upload account named as the `user`. Learn more about [G2O security settings](https://techdocs.akamai.com/netstorage/docs/create-a-storage-group#security-settings).",
                                "type": "string"
                              },
                              "lastModifiedBy": {
                                "description": "The user who added or last modified the key.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp that represents when the G2O key was last modified.",
                                "type": "string"
                              },
                              "user": {
                                "description": "The G2O user upload account.  This is the name of an upload account for this group that enables access to the NetStorage Usage API.",
                                "type": "string"
                              }
                            }
                          },
                          "lastChangesPropagated": {
                            "description": "When you create or modify an upload directory and changes are propagated to the NetStorage network, `true` indicates propagation is complete.",
                            "type": "boolean"
                          },
                          "lastModifiedBy": {
                            "description": "The user who last modified the upload directory.",
                            "type": "string"
                          },
                          "lastModifiedDate": {
                            "description": "The date the upload directory was last modified.",
                            "type": "string"
                          },
                          "numberOfBytes": {
                            "description": "The total number of bytes used by the upload directory.",
                            "type": "integer"
                          },
                          "numberOfFiles": {
                            "description": "The total number of files contained in the upload directory.",
                            "type": "integer"
                          },
                          "pathCheckAndConversion": {
                            "description": "Specifies the action taken when analyzing the request path.  See the set of [available values](https://techdocs.akamai.com/netstorage/reference/enumerations).",
                            "type": "string",
                            "enum": [
                              "DISALLOW_ALL_IMPROPER_PATHS",
                              "DISALLOW_IMPROPER_PATHS_ON_UPLOAD_ONLY",
                              "TRANSLATE_TO_CANONICAL",
                              "DO_NOT_CHECK_PATHS"
                            ]
                          },
                          "queryStringConversion": {
                            "additionalProperties": false,
                            "description": "Specifies how query strings appended to request paths to this group are handled.",
                            "type": "object",
                            "properties": {
                              "queryStringConversionExclude": {
                                "description": "A list of query string values that have been explicitly set to be excluded from conversion. Only applicable if `APPLY_ACS_QUERY_CONVERSION` is set as the `queryStringConversionMode`.",
                                "type": "string"
                              },
                              "queryStringConversionKeyOrder": {
                                "description": "If `APPLY_ACS_QUERY_CONVERSION` is set as the `queryStringConversionMode`, this specifies a list of query string values that should be included for ACS Query String Conversion, in the specific order they should be interpreted.",
                                "type": "string"
                              },
                              "queryStringConversionMode": {
                                "description": "Specifies how upload and download request query strings should be transformed before processing the request. With `STRIP_ALL_INCOMING_QUERY`, all query strings are stripped and ignored.  With `APPLY_ACS_QUERY_CONVERSION`, the key is reviewed and stripped down using settings defined for `queryStringConversionKeyOrder` and `queryStringConversionExclude`; a hash of the string is also applied and used for matching at request time. With `LEAVE_INCOMING_QUERY_AS_IS`, the string is left as is.",
                                "type": "string",
                                "enum": [
                                  "STRIP_ALL_INCOMING_QUERY",
                                  "APPLY_ACS_QUERY_CONVERSION",
                                  "LEAVE_INCOMING_QUERY_AS_IS"
                                ]
                              },
                              "queryStringConversionVersion": {
                                "description": "The version in use for `queryStringConversion` with this group.",
                                "type": "string"
                              }
                            }
                          },
                          "quickDelete": {
                            "default": "false",
                            "description": "Whether the `quick-delete` operation is available in the NetStorage Usage API and the CMShell.  Targets a specific directory in this group and recursively deletes all of its contents.",
                            "type": "boolean"
                          },
                          "requestUriCaseConversion": {
                            "description": "Standardizes case usage for filenames uploaded to your selected upload directory. `NO_CONVERSION`, `CONVERT_TO_UPPER` and `CONVERT_TO_LOWER` are self-explanatory. `STREAM_OS` indicates case requirements are applied to support the Stream OS product. This is only seen in a very limited number of legacy groups.",
                            "type": "string",
                            "enum": [
                              "NO_CONVERSION",
                              "CONVERT_TO_UPPER",
                              "CONVERT_TO_LOWER",
                              "STREAM_OS"
                            ]
                          },
                          "rootDirectory": {
                            "description": "The CP code root for the upload directory.",
                            "type": "string"
                          },
                          "sendHash": {
                            "default": "false",
                            "description": "Whether a content item's MD5 digest values is sent in the HTTP `Content-MD5` response header.",
                            "type": "boolean"
                          },
                          "serveFromZip": {
                            "default": "false",
                            "description": "Whether NetStorage dynamically examines archived files to directly serve individual files from within the archive.",
                            "type": "boolean"
                          },
                          "useSsl": {
                            "default": "false",
                            "description": "Whether the contents within the upload directory are replicated securely via Secure Sockets Layer (SSL).",
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "domainPrefix": {
                      "description": "Your unique domain prefix (subdomain) value that the NetStorage system applies to the Domain Names used to access the group.",
                      "type": "string"
                    },
                    "estimatedUsageGB": {
                      "description": "The current volume of the group, in gigabytes.",
                      "type": "number"
                    },
                    "lastModifiedBy": {
                      "description": "The user who last modified the group.",
                      "type": "string"
                    },
                    "lastModifiedDate": {
                      "description": "The date the group was last modified.",
                      "type": "string"
                    },
                    "links": {
                      "description": "[Hypermedia](https://techdocs.akamai.com/netstorage/reference/hypermedia) links to the specific group, as well as any upload accounts or geographic replication zones assigned to it.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "href": {
                            "description": "A navigable path to the specific `rel` resource, once you prefix it with your hostname token.",
                            "type": "string"
                          },
                          "rel": {
                            "description": "This represents the link relation to the storage group resource.  This can be either `self` for a link referring to the storage group itself, `uploadAccounts` for a link to an associated upload account, or `zones` for a geographic replication zone that can be used with the group.",
                            "type": "string",
                            "enum": [
                              "self",
                              "uploadAccounts",
                              "zones"
                            ]
                          }
                        }
                      }
                    },
                    "migrationStatus": {
                      "description": "The current migration status from FileStore format to ObjectStore format, if migration has been initiated.",
                      "type": "string"
                    },
                    "pciEnabled": {
                      "description": "Whether Payment Card Industry (PCI) Data Security Standard support has been enabled for the storage group. These standards are designed to ensure that all companies that accept, process, store or transmit credit card information maintain a secure environment.",
                      "type": "boolean"
                    },
                    "postFileDomainEnabled": {
                      "default": "false",
                      "description": "The postfile domain, `{domain prefix}.postfile.akamai.com` configured for use with this group. The `{domain prefix}` variable is set up by you during the creation of the group.",
                      "type": "boolean"
                    },
                    "propagationStatus": {
                      "additionalProperties": false,
                      "description": "The current propagation status of the group.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Propagation statuses can be `PENDING`  which indicates the item is in queue or `ACTIVE` which indicates the group is propagated.",
                          "type": "string",
                          "enum": [
                            "PENDING",
                            "ACTIVE"
                          ]
                        }
                      }
                    },
                    "provisionStatus": {
                      "description": "The current provisioning status of the group. `PROVISIONED` indicates the group is ready for use. `MARKED_FOR_DEPROVISIONING` indicates deprovisioning has been requested, but the group is still accessible. `DEPROVISIONED`  indicates deprovisioning has completed, and the group is no longer available. `NOT_PROVISIONED` indicates the group hasn't been requested for provisioning.",
                      "type": "string",
                      "enum": [
                        "NOT_PROVISIONED",
                        "PROVISIONED",
                        "MARKED_FOR_DEPROVISIONING",
                        "DEPROVISIONED"
                      ]
                    },
                    "storageGroupId": {
                      "description": "The unique identifier that's automatically set for the group.",
                      "type": "integer"
                    },
                    "storageGroupName": {
                      "description": "The name you've set for the group.",
                      "type": "string"
                    },
                    "storageGroupPurpose": {
                      "description": "The specific purpose defined for the storage group. See the set of [available values](https://techdocs.akamai.com/netstorage/reference/enumerations).",
                      "type": "string",
                      "enum": [
                        "NETSTORAGE",
                        "EDGESTREAM",
                        "EDGESTREAM_IPHONE",
                        "ADAPTIVEEDGE",
                        "AD_INSERTION",
                        "CONTENT_PREPARATION",
                        "MSL_ORIGIN",
                        "FEO"
                      ]
                    },
                    "uploadDomain": {
                      "description": "The Upload Domain Name for this group. It's used to access the group to upload content. This is automatically constructed using the domain prefix that you define when creating the group.",
                      "type": "string"
                    },
                    "zones": {
                      "description": "The geographic replication zones configured for use with this group.  These are also referred to as replicas.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "allowDownload": {
                            "description": "How this zone has been configured to support direct downloads (rather than just for replication use). `YES` download from the zone is supported, `NO` not supported, and `FAILOVER` if other zones aren't available.",
                            "type": "string",
                            "enum": [
                              "YES",
                              "NO",
                              "FAILOVER"
                            ]
                          },
                          "allowUpload": {
                            "description": "How this zone has been configured to support direct uploads (rather than just for replication use). `YES` indicates uploads are supported. `NO` indicates uploads aren't supported. `FAILOVER` indicates uploads are supported to this zone only if no other zones are available.",
                            "type": "string",
                            "enum": [
                              "YES",
                              "NO",
                              "FAILOVER"
                            ]
                          },
                          "lastModifiedBy": {
                            "description": "The user who last modified zone settings for this group.",
                            "type": "string"
                          },
                          "lastModifiedDate": {
                            "description": "The date these zone settings were last modified.",
                            "type": "string"
                          },
                          "noCapacityAction": {
                            "description": "The action taken if the zone has no capacity for additional upload content. `SPILL_OUTSIDE` indicates content is temporarily uploaded outside the zone, to another zone configured for the group. `DENY_UPLOADS` indicates the zone doesn't support uploads for a `noCapacityAction`.",
                            "type": "string",
                            "enum": [
                              "SPILL_OUTSIDE",
                              "DENY_UPLOADS"
                            ]
                          },
                          "overrideReason": {
                            "description": "The reason that a zone should be overridden for another zone.",
                            "type": "string"
                          },
                          "overrideZoneName": {
                            "description": "The zone that's used for override to accommodate the `noCapacityAction` operation, if applicable.",
                            "type": "string"
                          },
                          "zoneName": {
                            "description": "The name of the geographic replication zone.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/storage-group-get.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Badly formatted JSON. Compare with the schema.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "Unauthorized Request.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "Application permission error.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "429": {
            "description": "The maximum request count for a specific time duration for this resource has been reached.",
            "content": {
              "*/*": {}
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Limit.yaml"
                }
              },
              "X-RateLimit-Remaining": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Remaining.yaml"
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/429.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Uniquely identifies each Storage Group.",
          "example": "{{storageGroupId}}",
          "in": "path",
          "name": "storageGroupId",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/storageGroupId-path.yaml"
          }
        }
      ]
    },
    "/upload-accounts": {
      "post": {
        "description": "Create an upload account for a storage group.",
        "operationId": "post-upload-accounts",
        "summary": "Create a new upload account",
        "tags": [
          "Accounts"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's NetStorage Configuration API",
          "url": "https://techdocs.akamai.com/netstorage/reference/post-upload-accounts"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "email": "email@example.com",
                "enableHttpApiAccess": true,
                "ruleSetId": 555551,
                "storageGroupId": 1234568,
                "uploadAccountId": "aka_ua",
                "accessConfig": {
                  "chrootDirectory": "/456789",
                  "hasReadOnlyAccess": false,
                  "loginDirectory": "/456789",
                  "cpcodes": [
                    {
                      "cpcodeId": 1234567
                    }
                  ]
                },
                "bruteForceAttackConfig": {
                  "failedLoginThreshold": 10,
                  "lockDownDurationSeconds": 30
                },
                "keys": {
                  "ftp": [
                    {
                      "comments": "Added ftp password",
                      "key": "value"
                    }
                  ],
                  "g2o": [
                    {
                      "key": "value"
                    }
                  ],
                  "rsync": [
                    {
                      "comments": "Added rsync key",
                      "key": "value"
                    }
                  ],
                  "ssh": [
                    {
                      "comments": "Added ssh key",
                      "key": "ssh-rsa HASH your@example.com"
                    }
                  ]
                },
                "technicalContactInfo": {
                  "existingNetStorageTechnicalContact": {
                    "primarySfPin": "value",
                    "secondarySfPin": "value"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "Encapsulates the configuration of an account.  You can list, create and get details of an account.",
                "type": "object",
                "required": [
                  "uploadAccountId",
                  "storageGroupId",
                  "email"
                ],
                "properties": {
                  "accessConfig": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "chrootDirectory": {
                        "type": "string"
                      },
                      "cpcodes": {
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "cpcodeId": {
                              "type": "integer"
                            },
                            "subDirectoryRestrictions": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "hasReadOnlyAccess": {
                        "type": "boolean"
                      },
                      "loginDirectory": {
                        "type": "string"
                      }
                    }
                  },
                  "bruteForceAttackConfig": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "failedLoginThreshold": {
                        "type": "integer"
                      },
                      "lockDownDurationSeconds": {
                        "type": "integer"
                      }
                    }
                  },
                  "email": {
                    "example": "{{email}}",
                    "type": "string"
                  },
                  "enableAspera": {
                    "description": "Configure Aspera access for this account.",
                    "example": "{{enableAspera}}",
                    "type": "boolean"
                  },
                  "enableFileManagerAccess": {
                    "description": "Configure File Manager access for this account.",
                    "example": "{{enableFileManagerAccess}}",
                    "type": "boolean"
                  },
                  "enableHttpApiAccess": {
                    "description": "Configure HTTP API access for this account.",
                    "example": "{{enableHttpApiAccess}}",
                    "type": "boolean"
                  },
                  "isEditable": {
                    "example": "{{isEditable}}",
                    "type": "boolean"
                  },
                  "isVisible": {
                    "description": "Configure if this account is visible.",
                    "example": "{{isVisible}}",
                    "type": "boolean"
                  },
                  "keys": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "ftp": {
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "comments": {
                              "type": "string"
                            },
                            "key": {
                              "description": "Configure the password for FTP access. There are requirements that apply to [non-secure FTP passwords](https://techdocs.akamai.com/netstorage/docs/file-transfer-protocol#non-secure-password-requirements).",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "g2o": {
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "Token used for G2O authentication. Learn more about [G2O security settings](https://techdocs.akamai.com/netstorage/docs/create-a-storage-group#security-settings).",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "rsync": {
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "comments": {
                              "type": "string"
                            },
                            "key": {
                              "description": "Configure the password for rsync access. This field is for [non-secure rsync passwords](https://techdocs.akamai.com/netstorage/docs/rsync#netstorage-supports-two-authentication-methods-for-rsync). Use SSH for secure-rsync.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "ssh": {
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "comments": {
                              "type": "string"
                            },
                            "key": {
                              "description": "Configure the key for SSH access. Various requirements apply when you [generate and apply an SSH key](https://techdocs.akamai.com/netstorage/docs/configure-secure-ssh-access-methods) for NetStorage.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "ruleSetId": {
                    "example": "{{ruleSetId}}",
                    "type": "integer"
                  },
                  "storageGroupId": {
                    "example": "{{storageGroupId}}",
                    "type": "integer"
                  },
                  "technicalContactInfo": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "existingNetStorageTechnicalContact": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "primarySfPin": {
                            "type": "string"
                          },
                          "secondarySfPin": {
                            "type": "string"
                          }
                        }
                      },
                      "existingTechnicalContact": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "primarySfPin": {
                            "type": "string"
                          },
                          "secondarySfPin": {
                            "type": "string"
                          }
                        }
                      },
                      "newTechnicalContact": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string"
                          },
                          "firstName": {
                            "type": "string"
                          },
                          "lastName": {
                            "type": "string"
                          },
                          "phone": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "areaCode": {
                                "type": "string"
                              },
                              "countryCode": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "uploadAccountId": {
                    "example": "{{uploadAccountId}}",
                    "type": "string"
                  },
                  "uploadAccountStatus": {
                    "description": "Set the upload account status. Valid options are `ACTIVE` and `INACTIVE`.",
                    "example": "{{uploadAccountStatus}}",
                    "type": "string",
                    "enum": [
                      "ACTIVE",
                      "INACTIVE"
                    ]
                  },
                  "uploadAccountType": {
                    "description": "Configure the account type. Valid options are `NORMAL` and `AGEDELETION`.",
                    "example": "{{uploadAccountType}}",
                    "type": "string",
                    "enum": [
                      "NORMAL",
                      "AGEDELETION"
                    ]
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/upload-account-post.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created.",
            "content": {
              "application/json": {
                "example": {
                  "asperaEnabled": true,
                  "email": "email@example.com",
                  "ftpEnabled": true,
                  "hasFileManagerAccess": true,
                  "hasHttpApiAccess": true,
                  "hasPendingPropagation": true,
                  "isEditable": true,
                  "lastModifiedBy": "jsmith",
                  "lastModifiedDate": "2017-09-04T09:10:58Z",
                  "rsyncEnabled": true,
                  "ruleSetId": 555551,
                  "sshEnabled": true,
                  "status": "ACTIVE",
                  "storageGroupId": 1234568,
                  "uploadAccountId": "value",
                  "accessConfig": {
                    "chrootDirectory": "/456789/j",
                    "hasReadOnlyAccess": false,
                    "loginDirectory": "/456789/j",
                    "cpcodes": [
                      {
                        "cpcodeId": 1234567,
                        "lastModifiedBy": "mrossi",
                        "lastModifiedDate": "2017-09-04T09:10:58Z",
                        "subDirectoryRestrictions": [
                          "/456789/j/k/s"
                        ]
                      }
                    ]
                  },
                  "bruteForceAttackConfig": {
                    "failedLoginThreshold": 10,
                    "lockDownDurationSeconds": 30
                  },
                  "keys": {
                    "aspera": [
                      {
                        "identity": "value",
                        "isActive": true,
                        "key": "ssh-rsa HASH jdoe@hostname",
                        "lastModifiedBy": "hgildong",
                        "lastModifiedDate": "2017-09-04T09:10:58Z"
                      }
                    ],
                    "ftp": [
                      {
                        "identity": "value",
                        "isActive": true,
                        "lastModifiedBy": "mrossi",
                        "lastModifiedDate": "2017-09-04T09:10:58Z"
                      }
                    ],
                    "g2o": [
                      {
                        "identity": "value",
                        "isActive": true,
                        "key": "value",
                        "lastModifiedBy": "adevi",
                        "lastModifiedDate": "2017-09-04T09:10:58Z",
                        "user": "myuploadaccount2"
                      }
                    ],
                    "rsync": [
                      {
                        "identity": "value",
                        "isActive": true,
                        "key": "value",
                        "lastModifiedBy": "jsmith",
                        "lastModifiedDate": "2017-09-04T09:10:58Z"
                      }
                    ],
                    "ssh": [
                      {
                        "identity": "value",
                        "isActive": true,
                        "key": "ssh-rsa HASH jdoe@hostname",
                        "lastModifiedBy": "jdupont",
                        "lastModifiedDate": "2017-09-04T09:10:58Z"
                      }
                    ]
                  },
                  "technicalContactInfo": {
                    "newTechnicalContact": {
                      "email": "jadoe@email.com",
                      "firstName": "jane",
                      "lastName": "doe",
                      "phone": {
                        "areaCode": "7",
                        "countryCode": "+7",
                        "number": "767676767676"
                      }
                    }
                  },
                  "changeHistory": [
                    {
                      "action": "ADDED",
                      "changeType": "UPLOAD_ACCOUNT",
                      "lastModifiedBy": "jkowalski",
                      "lastModifiedDate": "2017-09-04T09:10:58Z",
                      "propagated": false
                    },
                    {
                      "action": "ADDED",
                      "changeType": "RULESET",
                      "lastModifiedBy": "adevi",
                      "lastModifiedDate": "2017-09-04T09:10:58Z",
                      "propagated": false
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "An upload account is used to access a specific storage group. You can list, create and get details of an account.",
                  "type": "object",
                  "properties": {
                    "accessConfig": {
                      "additionalProperties": false,
                      "description": "Specifies the settings for the upload directory that has been selected for this account.",
                      "type": "object",
                      "properties": {
                        "chrootDirectory": {
                          "description": "The directory set up to serve as the Directory Limit, if applicable. This is a directory other than the storage group's actual CP code root, that has been set up as the root for the account. Access for the account is limited to this directory and any existing subdirectories.",
                          "type": "string"
                        },
                        "cpcodes": {
                          "description": "The upload directory assigned to this account. The CP code for the upload directory is set as the `cpcodeId` via the `cpcodes` array for the account.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "cpcodeId": {
                                "description": "The CP code serving as an upload directory.",
                                "type": "integer"
                              },
                              "lastModifiedBy": {
                                "description": "The user who last modified this upload directory.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp labeling when this upload directory was last modified.",
                                "type": "string"
                              },
                              "subDirectoryRestrictions": {
                                "description": "A Subdirectory Restriction limits management operations to the specified directory.  The account can only upload, download, move, or delete content within that directory, or its children.  Multiple Subdirectory Restrictions can be applied to a single account.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "hasDirectoryLimit": {
                          "default": "false",
                          "description": "Whether a Directory Limit has been established for the account.",
                          "type": "boolean"
                        },
                        "hasReadOnlyAccess": {
                          "default": true,
                          "description": "The Read-Write vs. Read-only setting for the account. A value of `true` indicates the account can only view content in its associated storage group.",
                          "type": "boolean"
                        },
                        "loginDirectory": {
                          "description": "Specifies the default directory for the account, if configured. The directory named here is the default point of access when connecting to the storage group. If not configured, `loginDirectory` is blank.",
                          "type": "string"
                        }
                      }
                    },
                    "asperaEnabled": {
                      "default": "false",
                      "description": "Whether Aspera Upload Acceleration was enabled as an access method during creation of the account. Aspera Upload Acceleration makes use of a third party client application from AsperaSoft that offers expedited uploads to a storage group.",
                      "type": "boolean"
                    },
                    "bruteForceAttackConfig": {
                      "additionalProperties": false,
                      "description": "Configures how to prevent brute force attacks over FTP. This protects the target storage group from excessive incorrect FTP login attempts.",
                      "type": "object",
                      "properties": {
                        "failedLoginThreshold": {
                          "description": "The number of failed login attempts to trigger the lockdown for an offending client IP address.",
                          "type": "number"
                        },
                        "lockDownDurationSeconds": {
                          "description": "The number of seconds an offending IP address is blocked from FTP access once the `failedLoginThreshold` total is reached.",
                          "type": "number"
                        }
                      }
                    },
                    "changeHistory": {
                      "description": "Lists each change made to the account.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "action": {
                            "description": "The action performed with the change. `ADDED` indicates the account was actually added. `DELETED` indicates the account was deleted. `ENABLED` or `DISABLED` indicates the change was made to affect the availability of the account. `ROTATED` indicates a password or key assigned to an access method was rotated to a new instance. `UPDATED` indicates an option or setting was changed in the account.",
                            "type": "string",
                            "enum": [
                              "ADDED",
                              "DELETED",
                              "ENABLED",
                              "DISABLED",
                              "ROTATED",
                              "UPDATED"
                            ]
                          },
                          "changeType": {
                            "description": "The option or functionality that was modified. `CPCODE` indicates the change applied to the application of a CP code for use in an upload directory. `FTP` indicates the change applied to FTP authentication access. `SSH_KEY` indicates the change applied to SSH authentication access. `RSYNC` indicates the change applied to Rsync (password) authentication. `ASPERA` indicates the change applied to Aspera Upload Accelerations settings. `SUBDIR_RESTRICTION` indicates the change applied to a Subdirectory Restriction. `CHROOT` indicates the change applied to a Directory Limit. `LOGINDIR` indicates the change applied to a Default Directory. `CMS` indicates the change applied to settings for the Content Management (CM) Shell. `FM` indicates the change applied to FileManager access. `HTTP_UPLOAD_OPTIONS` indicates the change applied to HTTP Upload Service. `FTP_DOWNLOAD_OPTIONS` indicates the change applied to FTP Download Services. `UPLOAD_ACCOUNT` indicates the change applied to general account settings. `ACCESS` indicates the change applied to some form of access for the account. `G2O` indicates the change applied to the G2O Key used for access to the NetStorage Usage API. `RULESET` indicates the change applied to and Access Control Group (ACL) Rule Set. `BFA` indicates the change applied to BFA. `IP` indicates the change applied to IP. `SERVICE_VARIABLE` indicates the change applied to a service variable. `MFA_CONFIG` indicates the change applied to the actual configuration settings Two-factor authentication. `MFA_SECRET` indicates the change applied to the `ftpSecrets` assigned to Two-factor authentication for the account.",
                            "type": "string",
                            "enum": [
                              "CPCODE",
                              "FTP",
                              "SSH_KEY",
                              "RSYNC",
                              "ASPERA",
                              "SUBDIR_RESTRICTION",
                              "CHROOT",
                              "LOGINDIR",
                              "CMS",
                              "FM",
                              "HTTP_UPLOAD_OPTIONS",
                              "FTP_DOWNLOAD_OPTIONS",
                              "UPLOAD_ACCOUNT",
                              "ACCESS",
                              "G2O",
                              "RULESET",
                              "BFA",
                              "IP",
                              "SERVICE_VARIABLE",
                              "MFA_CONFIG",
                              "MFA_SECRET"
                            ]
                          },
                          "lastModifiedBy": {
                            "description": "The user who made the change.",
                            "type": "string"
                          },
                          "lastModifiedDate": {
                            "description": "The ISO 8601 timestamp labeling when the change occurred.",
                            "type": "string"
                          },
                          "propagated": {
                            "default": "false",
                            "description": "Whether the change has completed propagation to the NetStorage network. Propagation can take upwards of 60 minutes.",
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "email": {
                      "description": "The primary contact email address set up for the account.",
                      "type": "string"
                    },
                    "ftpEnabled": {
                      "default": "false",
                      "description": "Whether FTP was enabled as an access method when the account was created. This allows the account to access the storage group using FTP and a unique password you've set up for use with FTP.",
                      "type": "boolean"
                    },
                    "globalUploadAccount": {
                      "description": "Indicates the upload account is globally mapped.",
                      "type": "boolean"
                    },
                    "hasFileManagerAccess": {
                      "default": "false",
                      "description": "Whether access to FileManager was enabled during creation of the account. FileManager is a NetStorage interface that allows you to perform basic file management operations from Control Center. If enabled, this account can be used to access the storage group via FileManager.",
                      "type": "boolean"
                    },
                    "hasHttpApiAccess": {
                      "default": "false",
                      "description": "Whether access to the [NetStorage Usage API](https://techdocs.akamai.com/netstorage-usage/reference/api) was enabled during creation of the account. This API is used to interact with your content, including operations such as upload, download, move and delete.  If enabled, this account can be used to access the storage group via this API.",
                      "type": "boolean"
                    },
                    "hasPendingPropagation": {
                      "default": "false",
                      "description": "Whether the account is currently being propagated. Any changes made to an account needs to propagate to the NetStorage network.  This can take upwards of 60 minutes.",
                      "type": "boolean"
                    },
                    "isEditable": {
                      "description": "Whether this account is enabled for editing. Editing accounts is currently only supported in Control Center.",
                      "type": "boolean"
                    },
                    "isVisible": {
                      "type": "boolean"
                    },
                    "keys": {
                      "additionalProperties": false,
                      "description": "The various keys and passwords configured for the access methods set in this account.",
                      "type": "object",
                      "properties": {
                        "aspera": {
                          "description": "Settings pertaining to Aspera Upload Acceleration.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "comments": {
                                "description": "Any optional notes made for the SSH key.",
                                "type": "string"
                              },
                              "id": {
                                "description": "A unique identifier for Aspera Upload Acceleration.",
                                "type": "string"
                              },
                              "isActive": {
                                "default": "false",
                                "description": "Whether Aspera Upload Acceleration has been enabled for this account.",
                                "type": "boolean"
                              },
                              "key": {
                                "description": "The SSH key applied to the account that has been assigned to Aspera.  SSH-2 RSA and SSH-2 DSA formats are supported.",
                                "type": "string"
                              },
                              "lastModifiedBy": {
                                "description": "The user who last modified the SSH key.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp labeling when the SSH key was last modified.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "ftp": {
                          "description": "Settings applied for the FTP access method.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "comments": {
                                "description": "Any optional notes made for the FTP password.",
                                "type": "string"
                              },
                              "id": {
                                "description": "A unique identifier generated for FTP authentication.",
                                "type": "string"
                              },
                              "isActive": {
                                "default": true,
                                "description": "Whether the FTP password is active for the account. When added to an account, an FTP password is active by default.",
                                "type": "boolean"
                              },
                              "lastModifiedBy": {
                                "description": "The user who last modified the FTP password.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp labeling when the FTP password was last modified.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "g2o": {
                          "description": "This information applies to the G2O key applied to the account for use with the NetStorage Usage API. You can have up to three G2O keys per upload account.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "A unique identifier for the G2O Key.",
                                "type": "string"
                              },
                              "isActive": {
                                "default": "false",
                                "description": "Whether the NetStorage Usage API has been enabled for use with this account.",
                                "type": "boolean"
                              },
                              "key": {
                                "description": "The G2O Key. Referred to as the capitalized `Key` when used in the NetStorage Usage API.",
                                "type": "string"
                              },
                              "lastModifiedBy": {
                                "description": "The user who last modified the G2O Key settings.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp labeling when the G2O Key settings were last modified.",
                                "type": "string"
                              },
                              "user": {
                                "description": "The name of the upload account. This is referred to as the \"Id\" in the Control Center interface.  It serves as the `Key-name` when used in the NetStorage Usage API.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "rsync": {
                          "description": "Settings applied for the non-secure rsync access method.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "comments": {
                                "description": "Any optional notes made for rsync password.",
                                "type": "string"
                              },
                              "id": {
                                "description": "A unique identifier generated for rsync password authentication.",
                                "type": "string"
                              },
                              "isActive": {
                                "description": "Whether the non-secure rsync password is active for the account. When added to an account, this password is active by default.",
                                "type": "boolean"
                              },
                              "lastModifiedBy": {
                                "description": "The user who last modified the rsync password.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp labeling when the rsync password was last modified.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "ssh": {
                          "description": "Settings applied for the SSH access method.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "comments": {
                                "description": "Any optional notes made for the SSH key.",
                                "type": "string"
                              },
                              "emailId": {
                                "description": "The NetStorage technical contact email address set up for this upload account.",
                                "type": "string"
                              },
                              "id": {
                                "description": "A unique identifier generated for SSH authentication.",
                                "type": "string"
                              },
                              "isActive": {
                                "default": true,
                                "description": "Whether the SSH key is active for the account. When added to an account, an SSH key is active by default.",
                                "type": "boolean"
                              },
                              "key": {
                                "description": "The SSH key applied to the account, if applicable.  SSH-2 RSA and SSH-2 DSA formats are supported.",
                                "type": "string"
                              },
                              "lastModifiedBy": {
                                "description": "The user who last modified the SSH key.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp labeling when the SSH key was last modified.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "lastModifiedBy": {
                      "description": "The user who last modified the account.",
                      "type": "string"
                    },
                    "lastModifiedDate": {
                      "description": "The ISO 8601 timestamp labeling when the account was last modified.",
                      "type": "string"
                    },
                    "multiFactorAuthConfig": {
                      "additionalProperties": false,
                      "description": "Two-factor authentication settings for the account.",
                      "type": "object",
                      "properties": {
                        "ftpMode": {
                          "description": "The current enabled or disabled status of Two-factor authentication for the account. `NONE` indicates it's disabled. `STRICT` Two-factor authentication is enabled. `OPTIONAL` indicates the account owner can access via FTP by providing only the FTP username and password, or providing the FTP username and password with the applicable time-based one time password (TOTP) appended to it.",
                          "type": "string",
                          "enum": [
                            "NONE",
                            "STRICT",
                            "OPTIONAL"
                          ]
                        },
                        "ftpSecrets": {
                          "description": "This is revealed if the shared secret for Two-factor authentication is to be generated manually.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "comment": {
                                "description": "Manually defined comment text included for the key. This content is used in the generation of the shared secret, but is optional. If left out, placeholder content is automatically generated.",
                                "type": "string"
                              },
                              "key": {
                                "description": "The manual entry set to serve as the shared secret. The key is exactly 16 characters in length and uses BASE-32 alphanumeric characters. This includes uppercase letters (A-Z), and numbers within the 2 - 7 range.",
                                "type": "string"
                              },
                              "secretGeneratedBy": {
                                "description": "How the shared secret was rotated. `CLIENT` indicates it was defined manually. For example, the `key` member was used and a shared secret was manually input. `SERVER` indicates it was automatically generated. For example, the `\"generateSecret\": \"true\"` pair was used.",
                                "type": "string",
                                "enum": [
                                  "CLIENT",
                                  "SERVER"
                                ]
                              },
                              "secretProvisionedBy": {
                                "description": "The user account that was used to generate the shared secret.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "generateSecret": {
                          "default": "false",
                          "description": "Whether Akamai automatically generates the shared secret to be used with Two-factor authentication for this account.",
                          "type": "boolean"
                        }
                      }
                    },
                    "quickDelete": {
                      "default": "false",
                      "description": "Whether quick-delete functionality is enabled in the storage group that this account has been configured to access.",
                      "type": "boolean"
                    },
                    "rsyncEnabled": {
                      "default": "false",
                      "description": "Whether non-secure rsync was enabled as an access method during creation of the account. This allows the account to access the storage group using the rsync protocol and a unique password you've set up for use with rsync.",
                      "type": "boolean"
                    },
                    "ruleSetId": {
                      "description": "The unique ID assigned to the Access Control List (ACL) Rule Set for the account, if applicable. These rule sets are comprised of a list of IP Addresses or Geographic Regions that are allowed or blocked from access. The appropriate ID integer is set as the `type` for the `ruleSetId` object for the account.",
                      "type": "integer"
                    },
                    "sshEnabled": {
                      "default": "false",
                      "description": "Whether Secure Shell (SSH) is enabled as an access method for the account, through application of an SSH key during creation of the account. This allows access to the storage group via this account using SFTP, SecureCopy, Secure Rsync, Aspera Upload Acceleration and the NetStorage CMShell.",
                      "type": "boolean"
                    },
                    "status": {
                      "description": "The activation status and availability of the account. `INACTIVE` indicates the account has been deactivated. `NEW` indicates the account is being propagated. `ACTIVATIONSENT` indicates the initial activation email has been sent to the contact on the account, and NetStorage is awaiting a confirmation it was received. `ACTIVE` indicates the account is fully propagated and available for use.",
                      "type": "string",
                      "enum": [
                        "INACTIVE",
                        "NEW",
                        "ACTIVATIONSENT",
                        "ACTIVE"
                      ]
                    },
                    "storageGroupId": {
                      "description": "The unique identifier for the storage group that this account has been configured to access.",
                      "type": "integer"
                    },
                    "storageGroupName": {
                      "description": "The upload account has been configured to access this specific storage group.",
                      "type": "string"
                    },
                    "storageGroupType": {
                      "description": "The format or migration status of the storage group that this account has been configured to access. `FILESTORE` indicates an NS3 format group. `OBJECTSTORE` indicates an NS4 format group. `MIGRATING` indicates the group is being migrated from NS3 to NS4.",
                      "type": "string",
                      "enum": [
                        "FILESTORE",
                        "OBJECTSTORE",
                        "MIGRATING"
                      ]
                    },
                    "technicalContactInfo": {
                      "additionalProperties": false,
                      "description": "Technical Contact information set up for the account.",
                      "type": "object",
                      "properties": {
                        "existingNetStorageTechnicalContact": {
                          "additionalProperties": false,
                          "description": "The NetStorage [technical contact](https://techdocs.akamai.com/netstorage/docs/create-a-netstorage-technical-contact) serves as the default contact for this upload account. Configure these contacts in the NetStorage section of the [Identity and Access Management](https://techdocs.akamai.com/iam/docs) tool in Control Center.",
                          "type": "object",
                          "properties": {
                            "primarySfPin": {
                              "description": "The Control Center user account selected as the primary point of contact for the upload account.",
                              "type": "string"
                            },
                            "secondarySfPin": {
                              "description": "The Control Center user account selected as the secondary point of contact for the upload account.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/ua-existing-technical-contact.yaml"
                          }
                        },
                        "existingTechnicalContact": {
                          "additionalProperties": false,
                          "description": "A pair of existing Control Center user accounts that have been selected as Technical Contacts for the account. Use Control Center to set up contact information for these accounts.",
                          "type": "object",
                          "properties": {
                            "primarySfPin": {
                              "description": "The Control Center user account selected as the primary point of contact for the account.",
                              "type": "string"
                            },
                            "secondarySfPin": {
                              "description": "The Control Center user account selected as the secondary point of contact for the account.",
                              "type": "string"
                            }
                          }
                        },
                        "newTechnicalContact": {
                          "additionalProperties": false,
                          "description": "All details for the contact have been manually applied.",
                          "type": "object",
                          "properties": {
                            "email": {
                              "description": "The email address for the contact.",
                              "type": "string"
                            },
                            "firstName": {
                              "description": "The first name of the contact.",
                              "type": "string"
                            },
                            "lastName": {
                              "description": "The last name (surname) of the contact.",
                              "type": "string"
                            },
                            "phone": {
                              "additionalProperties": false,
                              "description": "Phone number details for the contact.",
                              "type": "object",
                              "properties": {
                                "areaCode": {
                                  "description": "The applicable area code for the contact phone number.",
                                  "type": "string"
                                },
                                "countryCode": {
                                  "description": "The applicable country code for the contact phone number.",
                                  "type": "string"
                                },
                                "number": {
                                  "description": "The contact phone number.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "uploadAccountId": {
                      "description": "The name you've set for the account. This is referred to as the ID in Control Center.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/upload-account-get.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Badly formatted JSON. Compare with the schema.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "Unauthorized Request.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "Application permission error.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "429": {
            "description": "The maximum request count for a specific time duration for this resource has been reached.",
            "content": {
              "*/*": {}
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Limit.yaml"
                }
              },
              "X-RateLimit-Remaining": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Remaining.yaml"
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/429.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Get a list of upload accounts for all storage groups in your NetStorage instance.",
        "operationId": "get-upload-accounts",
        "summary": "List upload accounts",
        "tags": [
          "Accounts"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's NetStorage Configuration API",
          "url": "https://techdocs.akamai.com/netstorage/reference/get-upload-accounts"
        },
        "responses": {
          "200": {
            "description": "Request OK.",
            "content": {
              "application/json": {
                "example": {
                  "items": [
                    {
                      "asperaEnabled": true,
                      "email": "email@example.com",
                      "ftpEnabled": true,
                      "hasFileManagerAccess": true,
                      "hasHttpApiAccess": true,
                      "hasPendingPropagation": true,
                      "isEditable": true,
                      "lastModifiedBy": "adevi",
                      "lastModifiedDate": "2017-09-04T09:10:58Z",
                      "rsyncEnabled": true,
                      "ruleSetId": 19205,
                      "sshEnabled": true,
                      "status": "ACTIVE",
                      "storageGroupId": 1234568,
                      "uploadAccountId": "value",
                      "accessConfig": {
                        "chrootDirectory": "/456789/j",
                        "hasReadOnlyAccess": false,
                        "loginDirectory": "/456789/j",
                        "cpcodes": [
                          {
                            "cpcodeId": 1234567,
                            "lastModifiedBy": "jsmith",
                            "lastModifiedDate": "2017-09-04T09:10:58Z",
                            "subDirectoryRestrictions": [
                              "/456789/j/k/s"
                            ]
                          }
                        ]
                      },
                      "bruteForceAttackConfig": {
                        "failedLoginThreshold": 10,
                        "lockDownDurationSeconds": 30
                      },
                      "keys": {
                        "aspera": [
                          {
                            "identity": "value",
                            "isActive": true,
                            "key": "ssh-rsa HASH your@example.com",
                            "lastModifiedBy": "jdupont",
                            "lastModifiedDate": "2017-09-04T09:10:58Z"
                          }
                        ],
                        "ftp": [
                          {
                            "identity": "value",
                            "isActive": true,
                            "lastModifiedBy": "jdupont",
                            "lastModifiedDate": "2017-09-04T09:10:58Z"
                          }
                        ],
                        "g2o": [
                          {
                            "identity": "value",
                            "isActive": true,
                            "key": "value",
                            "lastModifiedBy": "adevi",
                            "lastModifiedDate": "2017-09-04T09:10:58Z",
                            "user": "username"
                          }
                        ],
                        "rsync": [
                          {
                            "identity": "value",
                            "isActive": true,
                            "key": "value",
                            "lastModifiedBy": "hgildong",
                            "lastModifiedDate": "2017-09-04T09:10:58Z"
                          }
                        ],
                        "ssh": [
                          {
                            "identity": "value",
                            "isActive": true,
                            "key": "ssh-rsa HASH your@example.com",
                            "lastModifiedBy": "hgildong",
                            "lastModifiedDate": "2017-09-04T09:10:58Z"
                          }
                        ]
                      },
                      "technicalContactInfo": {
                        "newTechnicalContact": {
                          "email": "email@example.com",
                          "firstName": "j",
                          "lastName": "j",
                          "phone": {
                            "areaCode": "7",
                            "countryCode": "+7",
                            "number": "767676767676"
                          }
                        }
                      },
                      "changeHistory": [
                        {
                          "action": "ADDED",
                          "changeType": "UPLOAD_ACCOUNT",
                          "lastModifiedBy": "mrossi",
                          "lastModifiedDate": "2017-09-04T09:10:58Z",
                          "propagated": false
                        },
                        {
                          "action": "ADDED",
                          "changeType": "RULESET",
                          "lastModifiedBy": "szhang",
                          "lastModifiedDate": "2017-09-04T09:10:58Z",
                          "propagated": false
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "An upload account is used to access a specific storage group. You can list, create and get details of an account.",
                  "type": "object",
                  "properties": {
                    "accessConfig": {
                      "additionalProperties": false,
                      "description": "Specifies the settings for the upload directory that has been selected for this account.",
                      "type": "object",
                      "properties": {
                        "chrootDirectory": {
                          "description": "The directory set up to serve as the Directory Limit, if applicable. This is a directory other than the storage group's actual CP code root, that has been set up as the root for the account. Access for the account is limited to this directory and any existing subdirectories.",
                          "type": "string"
                        },
                        "cpcodes": {
                          "description": "The upload directory assigned to this account. The CP code for the upload directory is set as the `cpcodeId` via the `cpcodes` array for the account.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "cpcodeId": {
                                "description": "The CP code serving as an upload directory.",
                                "type": "integer"
                              },
                              "lastModifiedBy": {
                                "description": "The user who last modified this upload directory.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp labeling when this upload directory was last modified.",
                                "type": "string"
                              },
                              "subDirectoryRestrictions": {
                                "description": "A Subdirectory Restriction limits management operations to the specified directory.  The account can only upload, download, move, or delete content within that directory, or its children.  Multiple Subdirectory Restrictions can be applied to a single account.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "hasDirectoryLimit": {
                          "default": "false",
                          "description": "Whether a Directory Limit has been established for the account.",
                          "type": "boolean"
                        },
                        "hasReadOnlyAccess": {
                          "default": true,
                          "description": "The Read-Write vs. Read-only setting for the account. A value of `true` indicates the account can only view content in its associated storage group.",
                          "type": "boolean"
                        },
                        "loginDirectory": {
                          "description": "Specifies the default directory for the account, if configured. The directory named here is the default point of access when connecting to the storage group. If not configured, `loginDirectory` is blank.",
                          "type": "string"
                        }
                      }
                    },
                    "asperaEnabled": {
                      "default": "false",
                      "description": "Whether Aspera Upload Acceleration was enabled as an access method during creation of the account. Aspera Upload Acceleration makes use of a third party client application from AsperaSoft that offers expedited uploads to a storage group.",
                      "type": "boolean"
                    },
                    "bruteForceAttackConfig": {
                      "additionalProperties": false,
                      "description": "Configures how to prevent brute force attacks over FTP. This protects the target storage group from excessive incorrect FTP login attempts.",
                      "type": "object",
                      "properties": {
                        "failedLoginThreshold": {
                          "description": "The number of failed login attempts to trigger the lockdown for an offending client IP address.",
                          "type": "number"
                        },
                        "lockDownDurationSeconds": {
                          "description": "The number of seconds an offending IP address is blocked from FTP access once the `failedLoginThreshold` total is reached.",
                          "type": "number"
                        }
                      }
                    },
                    "changeHistory": {
                      "description": "Lists each change made to the account.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "action": {
                            "description": "The action performed with the change. `ADDED` indicates the account was actually added. `DELETED` indicates the account was deleted. `ENABLED` or `DISABLED` indicates the change was made to affect the availability of the account. `ROTATED` indicates a password or key assigned to an access method was rotated to a new instance. `UPDATED` indicates an option or setting was changed in the account.",
                            "type": "string",
                            "enum": [
                              "ADDED",
                              "DELETED",
                              "ENABLED",
                              "DISABLED",
                              "ROTATED",
                              "UPDATED"
                            ]
                          },
                          "changeType": {
                            "description": "The option or functionality that was modified. `CPCODE` indicates the change applied to the application of a CP code for use in an upload directory. `FTP` indicates the change applied to FTP authentication access. `SSH_KEY` indicates the change applied to SSH authentication access. `RSYNC` indicates the change applied to Rsync (password) authentication. `ASPERA` indicates the change applied to Aspera Upload Accelerations settings. `SUBDIR_RESTRICTION` indicates the change applied to a Subdirectory Restriction. `CHROOT` indicates the change applied to a Directory Limit. `LOGINDIR` indicates the change applied to a Default Directory. `CMS` indicates the change applied to settings for the Content Management (CM) Shell. `FM` indicates the change applied to FileManager access. `HTTP_UPLOAD_OPTIONS` indicates the change applied to HTTP Upload Service. `FTP_DOWNLOAD_OPTIONS` indicates the change applied to FTP Download Services. `UPLOAD_ACCOUNT` indicates the change applied to general account settings. `ACCESS` indicates the change applied to some form of access for the account. `G2O` indicates the change applied to the G2O Key used for access to the NetStorage Usage API. `RULESET` indicates the change applied to and Access Control Group (ACL) Rule Set. `BFA` indicates the change applied to BFA. `IP` indicates the change applied to IP. `SERVICE_VARIABLE` indicates the change applied to a service variable. `MFA_CONFIG` indicates the change applied to the actual configuration settings Two-factor authentication. `MFA_SECRET` indicates the change applied to the `ftpSecrets` assigned to Two-factor authentication for the account.",
                            "type": "string",
                            "enum": [
                              "CPCODE",
                              "FTP",
                              "SSH_KEY",
                              "RSYNC",
                              "ASPERA",
                              "SUBDIR_RESTRICTION",
                              "CHROOT",
                              "LOGINDIR",
                              "CMS",
                              "FM",
                              "HTTP_UPLOAD_OPTIONS",
                              "FTP_DOWNLOAD_OPTIONS",
                              "UPLOAD_ACCOUNT",
                              "ACCESS",
                              "G2O",
                              "RULESET",
                              "BFA",
                              "IP",
                              "SERVICE_VARIABLE",
                              "MFA_CONFIG",
                              "MFA_SECRET"
                            ]
                          },
                          "lastModifiedBy": {
                            "description": "The user who made the change.",
                            "type": "string"
                          },
                          "lastModifiedDate": {
                            "description": "The ISO 8601 timestamp labeling when the change occurred.",
                            "type": "string"
                          },
                          "propagated": {
                            "default": "false",
                            "description": "Whether the change has completed propagation to the NetStorage network. Propagation can take upwards of 60 minutes.",
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "email": {
                      "description": "The primary contact email address set up for the account.",
                      "type": "string"
                    },
                    "ftpEnabled": {
                      "default": "false",
                      "description": "Whether FTP was enabled as an access method when the account was created. This allows the account to access the storage group using FTP and a unique password you've set up for use with FTP.",
                      "type": "boolean"
                    },
                    "globalUploadAccount": {
                      "description": "Indicates the upload account is globally mapped.",
                      "type": "boolean"
                    },
                    "hasFileManagerAccess": {
                      "default": "false",
                      "description": "Whether access to FileManager was enabled during creation of the account. FileManager is a NetStorage interface that allows you to perform basic file management operations from Control Center. If enabled, this account can be used to access the storage group via FileManager.",
                      "type": "boolean"
                    },
                    "hasHttpApiAccess": {
                      "default": "false",
                      "description": "Whether access to the [NetStorage Usage API](https://techdocs.akamai.com/netstorage-usage/reference/api) was enabled during creation of the account. This API is used to interact with your content, including operations such as upload, download, move and delete. If enabled, this account can be used to access the storage group via this API.",
                      "type": "boolean"
                    },
                    "hasPendingPropagation": {
                      "default": "false",
                      "description": "Whether the account is currently being propagated. Any changes made to an account needs to propagate to the NetStorage network. This can take upwards of 60 minutes.",
                      "type": "boolean"
                    },
                    "isEditable": {
                      "description": "Whether this account is enabled for editing. Editing accounts is currently only supported in Control Center.",
                      "type": "boolean"
                    },
                    "isVisible": {
                      "type": "boolean"
                    },
                    "keys": {
                      "additionalProperties": false,
                      "description": "The various keys and passwords configured for the access methods set in this account.",
                      "type": "object",
                      "properties": {
                        "aspera": {
                          "description": "Settings pertaining to Aspera Upload Acceleration.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "comments": {
                                "description": "Any optional notes made for the SSH key.",
                                "type": "string"
                              },
                              "id": {
                                "description": "A unique identifier for Aspera Upload Acceleration.",
                                "type": "string"
                              },
                              "isActive": {
                                "default": "false",
                                "description": "Whether Aspera Upload Acceleration has been enabled for this account.",
                                "type": "boolean"
                              },
                              "key": {
                                "description": "The SSH key applied to the account that has been assigned to Aspera. SSH-2 RSA and SSH-2 DSA formats are supported.",
                                "type": "string"
                              },
                              "lastModifiedBy": {
                                "description": "The user who last modified the SSH key.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp labeling when the SSH key was last modified.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "ftp": {
                          "description": "Settings applied for the FTP access method.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "comments": {
                                "description": "Any optional notes made for the FTP password.",
                                "type": "string"
                              },
                              "id": {
                                "description": "A unique identifier generated for FTP authentication.",
                                "type": "string"
                              },
                              "isActive": {
                                "default": true,
                                "description": "Whether the FTP password is active for the account. When added to an account, an FTP password is active by default.",
                                "type": "boolean"
                              },
                              "lastModifiedBy": {
                                "description": "The user who last modified the FTP password.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp labeling when the FTP password was last modified.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "g2o": {
                          "description": "This information applies to the G2O key applied to the account for use with the NetStorage Usage API. You can have up to three G2O keys per upload account.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "A unique identifier for the G2O Key.",
                                "type": "string"
                              },
                              "isActive": {
                                "default": "false",
                                "description": "Whether the NetStorage Usage API has been enabled for use with this account.",
                                "type": "boolean"
                              },
                              "key": {
                                "description": "The G2O Key. Referred to as the capitalized `Key` when used in the NetStorage Usage API.",
                                "type": "string"
                              },
                              "lastModifiedBy": {
                                "description": "The user who last modified the G2O Key settings.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp labeling when the G2O Key settings were last modified.",
                                "type": "string"
                              },
                              "user": {
                                "description": "The name of the upload account. This is referred to as the \"Id\" in the Control Center interface. It serves as the `Key-name` when used in the NetStorage Usage API.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "rsync": {
                          "description": "Settings applied for the non-secure rsync access method.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "comments": {
                                "description": "Any optional notes made for rsync password.",
                                "type": "string"
                              },
                              "id": {
                                "description": "A unique identifier generated for rsync password authentication.",
                                "type": "string"
                              },
                              "isActive": {
                                "description": "Whether the non-secure rsync password is active for the account. When added to an account, this password is active by default.",
                                "type": "boolean"
                              },
                              "lastModifiedBy": {
                                "description": "The user who last modified the rsync password.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp labeling when the rsync password was last modified.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "ssh": {
                          "description": "Settings applied for the SSH access method.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "comments": {
                                "description": "Any optional notes made for the SSH key.",
                                "type": "string"
                              },
                              "emailId": {
                                "description": "The NetStorage technical contact email address set up for this upload account.",
                                "type": "string"
                              },
                              "id": {
                                "description": "A unique identifier generated for SSH authentication.",
                                "type": "string"
                              },
                              "isActive": {
                                "default": true,
                                "description": "Whether the SSH key is active for the account. When added to an account, an SSH key is active by default.",
                                "type": "boolean"
                              },
                              "key": {
                                "description": "The SSH key applied to the account, if applicable. SSH-2 RSA and SSH-2 DSA formats are supported.",
                                "type": "string"
                              },
                              "lastModifiedBy": {
                                "description": "The user who last modified the SSH key.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp labeling when the SSH key was last modified.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "lastModifiedBy": {
                      "description": "The user who last modified the account.",
                      "type": "string"
                    },
                    "lastModifiedDate": {
                      "description": "The ISO 8601 timestamp labeling when the account was last modified.",
                      "type": "string"
                    },
                    "multiFactorAuthConfig": {
                      "additionalProperties": false,
                      "description": "Two-factor authentication settings for the account.",
                      "type": "object",
                      "properties": {
                        "ftpMode": {
                          "description": "The current enabled or disabled status of Two-factor authentication for the account. `NONE` indicates it's disabled. `STRICT` Two-factor authentication is enabled. `OPTIONAL` indicates the account owner can access via FTP by providing only the FTP username and password, or providing the FTP username and password with the applicable time-based one time password (TOTP) appended to it.",
                          "type": "string",
                          "enum": [
                            "NONE",
                            "STRICT",
                            "OPTIONAL"
                          ]
                        },
                        "ftpSecrets": {
                          "description": "This is revealed if the shared secret for Two-factor authentication is to be generated manually.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "comment": {
                                "description": "Manually defined comment text included for the key. This content is used in the generation of the shared secret, but is optional. If left out, placeholder content is automatically generated.",
                                "type": "string"
                              },
                              "key": {
                                "description": "The manual entry set to serve as the shared secret. The key is exactly 16 characters in length and uses BASE-32 alphanumeric characters. This includes uppercase letters (A-Z), and numbers within the 2 - 7 range.",
                                "type": "string"
                              },
                              "secretGeneratedBy": {
                                "description": "How the shared secret was rotated. `CLIENT` indicates it was defined manually. For example, the `key` member was used and a shared secret was manually input. `SERVER` indicates it was automatically generated. For example, the `\"generateSecret\": \"true\"` pair was used.",
                                "type": "string",
                                "enum": [
                                  "CLIENT",
                                  "SERVER"
                                ]
                              },
                              "secretProvisionedBy": {
                                "description": "The user account that was used to generate the shared secret.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "generateSecret": {
                          "default": "false",
                          "description": "Whether Akamai automatically generates the shared secret to be used with Two-factor authentication for this account.",
                          "type": "boolean"
                        }
                      }
                    },
                    "quickDelete": {
                      "default": "false",
                      "description": "Whether quick-delete functionality is enabled in the storage group that this account has been configured to access.",
                      "type": "boolean"
                    },
                    "rsyncEnabled": {
                      "default": "false",
                      "description": "Whether non-secure rsync was enabled as an access method during creation of the account. This allows the account to access the storage group using the rsync protocol and a unique password you've set up for use with rsync.",
                      "type": "boolean"
                    },
                    "ruleSetId": {
                      "description": "The unique ID assigned to the Access Control List (ACL) Rule Set for the account, if applicable. These rule sets are comprised of a list of IP Addresses or Geographic Regions that are allowed or blocked from access. The appropriate ID integer is set as the `type` for the `ruleSetId` object for the account.",
                      "type": "integer"
                    },
                    "sshEnabled": {
                      "default": "false",
                      "description": "Whether Secure Shell (SSH) is enabled as an access method for the account, through application of an SSH key during creation of the account. This allows access to the storage group via this account using SFTP, SecureCopy, Secure Rsync, Aspera Upload Acceleration and the NetStorage CMShell.",
                      "type": "boolean"
                    },
                    "status": {
                      "description": "The activation status and availability of the account. `INACTIVE` indicates the account has been deactivated. `NEW` indicates the account is being propagated. `ACTIVATIONSENT` indicates the initial activation email has been sent to the contact on the account, and NetStorage is awaiting a confirmation it was received. `ACTIVE` indicates the account is fully propagated and available for use.",
                      "type": "string",
                      "enum": [
                        "INACTIVE",
                        "NEW",
                        "ACTIVATIONSENT",
                        "ACTIVE"
                      ]
                    },
                    "storageGroupId": {
                      "description": "The unique identifier for the storage group that this account has been configured to access.",
                      "type": "integer"
                    },
                    "storageGroupName": {
                      "description": "The upload account has been configured to access this specific storage group.",
                      "type": "string"
                    },
                    "storageGroupType": {
                      "description": "The format or migration status of the storage group that this account has been configured to access. `FILESTORE` indicates an NS3 format group. `OBJECTSTORE` indicates an NS4 format group. `MIGRATING` indicates the group is being migrated from NS3 to NS4.",
                      "type": "string",
                      "enum": [
                        "FILESTORE",
                        "OBJECTSTORE",
                        "MIGRATING"
                      ]
                    },
                    "technicalContactInfo": {
                      "additionalProperties": false,
                      "description": "Technical Contact information set up for the account.",
                      "type": "object",
                      "properties": {
                        "existingNetStorageTechnicalContact": {
                          "additionalProperties": false,
                          "description": "The NetStorage Technical Contact serves as the default contact for this upload account. Configure these contacts in the NetStorage section of the [Identity and Access Management](https://techdocs.akamai.com/iam/docs) tool in Control Center.",
                          "type": "object",
                          "properties": {
                            "primarySfPin": {
                              "description": "The Control Center user account selected as the primary point of contact for the upload account.",
                              "type": "string"
                            },
                            "secondarySfPin": {
                              "description": "The Control Center user account selected as the secondary point of contact for the upload account.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/ua-existing-technical-contact.yaml"
                          }
                        },
                        "existingTechnicalContact": {
                          "additionalProperties": false,
                          "description": "A pair of existing Control Center user accounts that have been selected as [technical contacts](https://techdocs.akamai.com/netstorage/docs/create-a-netstorage-technical-contact) for the account. Use Control Center to set up contact information for these accounts.",
                          "type": "object",
                          "properties": {
                            "primarySfPin": {
                              "description": "The Control Center user account selected as the primary point of contact for the account.",
                              "type": "string"
                            },
                            "secondarySfPin": {
                              "description": "The Control Center user account selected as the secondary point of contact for the account.",
                              "type": "string"
                            }
                          }
                        },
                        "newTechnicalContact": {
                          "additionalProperties": false,
                          "description": "All details for the contact have been manually applied.",
                          "type": "object",
                          "properties": {
                            "email": {
                              "description": "The email address for the contact.",
                              "type": "string"
                            },
                            "firstName": {
                              "description": "The first name of the contact.",
                              "type": "string"
                            },
                            "lastName": {
                              "description": "The last name (surname) of the contact.",
                              "type": "string"
                            },
                            "phone": {
                              "additionalProperties": false,
                              "description": "Phone number details for the contact.",
                              "type": "object",
                              "properties": {
                                "areaCode": {
                                  "description": "The applicable area code for the contact phone number.",
                                  "type": "string"
                                },
                                "countryCode": {
                                  "description": "The applicable country code for the contact phone number.",
                                  "type": "string"
                                },
                                "number": {
                                  "description": "The contact phone number.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "uploadAccountId": {
                      "description": "The name you've set for the account. This is referred to as the ID in Control Center.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/pageable-get-upload-account.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/upload-accounts/{uploadAccountId}": {
      "get": {
        "description": "Get a specific upload account based on its unique ID value.",
        "operationId": "get-upload-account",
        "summary": "Get an upload account",
        "tags": [
          "Accounts"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's NetStorage Configuration API",
          "url": "https://techdocs.akamai.com/netstorage/reference/get-upload-account"
        },
        "responses": {
          "200": {
            "description": "Request OK.",
            "content": {
              "application/json": {
                "example": {
                  "asperaEnabled": true,
                  "email": "email@example.com",
                  "ftpEnabled": true,
                  "hasFileManagerAccess": true,
                  "hasHttpApiAccess": true,
                  "hasPendingPropagation": true,
                  "isEditable": true,
                  "lastModifiedBy": "jdupont",
                  "lastModifiedDate": "2017-09-04T09:10:58Z",
                  "rsyncEnabled": true,
                  "ruleSetId": 555551,
                  "sshEnabled": true,
                  "status": "ACTIVE",
                  "storageGroupId": 1234568,
                  "uploadAccountId": "value",
                  "accessConfig": {
                    "chrootDirectory": "/456789/j",
                    "hasReadOnlyAccess": false,
                    "loginDirectory": "/456789/j",
                    "cpcodes": [
                      {
                        "cpcodeId": 1234567,
                        "lastModifiedBy": "adevi",
                        "lastModifiedDate": "2017-09-04T09:10:58Z",
                        "subDirectoryRestrictions": [
                          "/456789/j/k/s"
                        ]
                      }
                    ]
                  },
                  "bruteForceAttackConfig": {
                    "failedLoginThreshold": 10,
                    "lockDownDurationSeconds": 30
                  },
                  "keys": {
                    "aspera": [
                      {
                        "identity": "value",
                        "isActive": true,
                        "key": "ssh-rsa HASH jdoe@hostname",
                        "lastModifiedBy": "jdupont",
                        "lastModifiedDate": "2017-09-04T09:10:58Z"
                      }
                    ],
                    "ftp": [
                      {
                        "identity": "value",
                        "isActive": true,
                        "lastModifiedBy": "jsmith",
                        "lastModifiedDate": "2017-09-04T09:10:58Z"
                      }
                    ],
                    "g2o": [
                      {
                        "identity": "value",
                        "isActive": true,
                        "key": "value",
                        "lastModifiedBy": "adevi",
                        "lastModifiedDate": "2017-09-04T09:10:58Z",
                        "user": "myuploadaccount2"
                      }
                    ],
                    "rsync": [
                      {
                        "identity": "value",
                        "isActive": true,
                        "key": "value",
                        "lastModifiedBy": "hgildong",
                        "lastModifiedDate": "2017-09-04T09:10:58Z"
                      }
                    ],
                    "ssh": [
                      {
                        "identity": "value",
                        "isActive": true,
                        "key": "ssh-rsa HASH jdoe@hostname",
                        "lastModifiedBy": "mrossi",
                        "lastModifiedDate": "2017-09-04T09:10:58Z"
                      }
                    ]
                  },
                  "technicalContactInfo": {
                    "newTechnicalContact": {
                      "email": "jadoe@email.com",
                      "firstName": "jane",
                      "lastName": "doe",
                      "phone": {
                        "areaCode": "7",
                        "countryCode": "+7",
                        "number": "767676767676"
                      }
                    }
                  },
                  "changeHistory": [
                    {
                      "action": "ADDED",
                      "changeType": "UPLOAD_ACCOUNT",
                      "lastModifiedBy": "tyamada",
                      "lastModifiedDate": "2017-09-04T09:10:58Z",
                      "propagated": false
                    },
                    {
                      "action": "ADDED",
                      "changeType": "RULESET",
                      "lastModifiedBy": "szhang",
                      "lastModifiedDate": "2017-09-04T09:10:58Z",
                      "propagated": false
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "An upload account is used to access a specific storage group. You can list, create and get details of an account.",
                  "type": "object",
                  "properties": {
                    "accessConfig": {
                      "additionalProperties": false,
                      "description": "Specifies the settings for the upload directory that has been selected for this account.",
                      "type": "object",
                      "properties": {
                        "chrootDirectory": {
                          "description": "The directory set up to serve as the Directory Limit, if applicable. This is a directory other than the storage group's actual CP code root, that has been set up as the root for the account. Access for the account is limited to this directory and any existing subdirectories.",
                          "type": "string"
                        },
                        "cpcodes": {
                          "description": "The upload directory assigned to this account. The CP code for the upload directory is set as the `cpcodeId` via the `cpcodes` array for the account.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "cpcodeId": {
                                "description": "The CP code serving as an upload directory.",
                                "type": "integer"
                              },
                              "lastModifiedBy": {
                                "description": "The user who last modified this upload directory.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp labeling when this upload directory was last modified.",
                                "type": "string"
                              },
                              "subDirectoryRestrictions": {
                                "description": "A Subdirectory Restriction limits management operations to the specified directory.  The account can only upload, download, move, or delete content within that directory, or its children.  Multiple Subdirectory Restrictions can be applied to a single account.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "hasDirectoryLimit": {
                          "default": "false",
                          "description": "Whether a Directory Limit has been established for the account.",
                          "type": "boolean"
                        },
                        "hasReadOnlyAccess": {
                          "default": true,
                          "description": "The Read-Write vs. Read-only setting for the account. A value of `true` indicates the account can only view content in its associated storage group.",
                          "type": "boolean"
                        },
                        "loginDirectory": {
                          "description": "Specifies the default directory for the account, if configured. The directory named here is the default point of access when connecting to the storage group. If not configured, `loginDirectory` is blank.",
                          "type": "string"
                        }
                      }
                    },
                    "asperaEnabled": {
                      "default": "false",
                      "description": "Whether Aspera Upload Acceleration was enabled as an access method during creation of the account. Aspera Upload Acceleration makes use of a third party client application from AsperaSoft that offers expedited uploads to a storage group.",
                      "type": "boolean"
                    },
                    "bruteForceAttackConfig": {
                      "additionalProperties": false,
                      "description": "Configures how to prevent brute force attacks over FTP. This protects the target storage group from excessive incorrect FTP login attempts.",
                      "type": "object",
                      "properties": {
                        "failedLoginThreshold": {
                          "description": "The number of failed login attempts to trigger the lockdown for an offending client IP address.",
                          "type": "number"
                        },
                        "lockDownDurationSeconds": {
                          "description": "The number of seconds an offending IP address is blocked from FTP access once the `failedLoginThreshold` total is reached.",
                          "type": "number"
                        }
                      }
                    },
                    "changeHistory": {
                      "description": "Lists each change made to the account.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "action": {
                            "description": "The action performed with the change. `ADDED` indicates the account was actually added. `DELETED` indicates the account was deleted. `ENABLED` or `DISABLED` indicates the change was made to affect the availability of the account. `ROTATED` indicates a password or key assigned to an access method was rotated to a new instance. `UPDATED` indicates an option or setting was changed in the account.",
                            "type": "string",
                            "enum": [
                              "ADDED",
                              "DELETED",
                              "ENABLED",
                              "DISABLED",
                              "ROTATED",
                              "UPDATED"
                            ]
                          },
                          "changeType": {
                            "description": "The option or functionality that was modified. `CPCODE` indicates the change applied to the application of a CP code for use in an upload directory. `FTP` indicates the change applied to FTP authentication access. `SSH_KEY` indicates the change applied to SSH authentication access. `RSYNC` indicates the change applied to Rsync (password) authentication. `ASPERA` indicates the change applied to Aspera Upload Accelerations settings. `SUBDIR_RESTRICTION` indicates the change applied to a Subdirectory Restriction. `CHROOT` indicates the change applied to a Directory Limit. `LOGINDIR` indicates the change applied to a Default Directory. `CMS` indicates the change applied to settings for the Content Management (CM) Shell. `FM` indicates the change applied to FileManager access. `HTTP_UPLOAD_OPTIONS` indicates the change applied to HTTP Upload Service. `FTP_DOWNLOAD_OPTIONS` indicates the change applied to FTP Download Services. `UPLOAD_ACCOUNT` indicates the change applied to general account settings. `ACCESS` indicates the change applied to some form of access for the account. `G2O` indicates the change applied to the G2O Key used for access to the NetStorage Usage API. `RULESET` indicates the change applied to and Access Control Group (ACL) Rule Set. `BFA` indicates the change applied to BFA. `IP` indicates the change applied to IP. `SERVICE_VARIABLE` indicates the change applied to a service variable. `MFA_CONFIG` indicates the change applied to the actual configuration settings Two-factor authentication. `MFA_SECRET` indicates the change applied to the `ftpSecrets` assigned to Two-factor authentication for the account.",
                            "type": "string",
                            "enum": [
                              "CPCODE",
                              "FTP",
                              "SSH_KEY",
                              "RSYNC",
                              "ASPERA",
                              "SUBDIR_RESTRICTION",
                              "CHROOT",
                              "LOGINDIR",
                              "CMS",
                              "FM",
                              "HTTP_UPLOAD_OPTIONS",
                              "FTP_DOWNLOAD_OPTIONS",
                              "UPLOAD_ACCOUNT",
                              "ACCESS",
                              "G2O",
                              "RULESET",
                              "BFA",
                              "IP",
                              "SERVICE_VARIABLE",
                              "MFA_CONFIG",
                              "MFA_SECRET"
                            ]
                          },
                          "lastModifiedBy": {
                            "description": "The user who made the change.",
                            "type": "string"
                          },
                          "lastModifiedDate": {
                            "description": "The ISO 8601 timestamp labeling when the change occurred.",
                            "type": "string"
                          },
                          "propagated": {
                            "default": "false",
                            "description": "Whether the change has completed propagation to the NetStorage network. Propagation can take upwards of 60 minutes.",
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "email": {
                      "description": "The primary contact email address set up for the account.",
                      "type": "string"
                    },
                    "ftpEnabled": {
                      "default": "false",
                      "description": "Whether FTP was enabled as an access method when the account was created. This allows the account to access the storage group using FTP and a unique password you've set up for use with FTP.",
                      "type": "boolean"
                    },
                    "globalUploadAccount": {
                      "description": "Indicates the upload account is globally mapped.",
                      "type": "boolean"
                    },
                    "hasFileManagerAccess": {
                      "default": "false",
                      "description": "Whether access to FileManager was enabled during creation of the account. FileManager is a NetStorage interface that allows you to perform basic file management operations from Control Center. If enabled, this account can be used to access the storage group via FileManager.",
                      "type": "boolean"
                    },
                    "hasHttpApiAccess": {
                      "default": "false",
                      "description": "Whether access to the [NetStorage Usage API](https://techdocs.akamai.com/netstorage-usage/reference/api) was enabled during creation of the account. This API is used to interact with your content, including operations such as upload, download, move and delete.  If enabled, this account can be used to access the storage group via this API.",
                      "type": "boolean"
                    },
                    "hasPendingPropagation": {
                      "default": "false",
                      "description": "Whether the account is currently being propagated. Any changes made to an account needs to propagate to the NetStorage network.  This can take upwards of 60 minutes.",
                      "type": "boolean"
                    },
                    "isEditable": {
                      "description": "Whether this account is enabled for editing. Editing accounts is currently only supported in Control Center.",
                      "type": "boolean"
                    },
                    "isVisible": {
                      "type": "boolean"
                    },
                    "keys": {
                      "additionalProperties": false,
                      "description": "The various keys and passwords configured for the access methods set in this account.",
                      "type": "object",
                      "properties": {
                        "aspera": {
                          "description": "Settings pertaining to Aspera Upload Acceleration.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "comments": {
                                "description": "Any optional notes made for the SSH key.",
                                "type": "string"
                              },
                              "id": {
                                "description": "A unique identifier for Aspera Upload Acceleration.",
                                "type": "string"
                              },
                              "isActive": {
                                "default": "false",
                                "description": "Whether Aspera Upload Acceleration has been enabled for this account.",
                                "type": "boolean"
                              },
                              "key": {
                                "description": "The SSH key applied to the account that has been assigned to Aspera.  SSH-2 RSA and SSH-2 DSA formats are supported.",
                                "type": "string"
                              },
                              "lastModifiedBy": {
                                "description": "The user who last modified the SSH key.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp labeling when the SSH key was last modified.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "ftp": {
                          "description": "Settings applied for the FTP access method.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "comments": {
                                "description": "Any optional notes made for the FTP password.",
                                "type": "string"
                              },
                              "id": {
                                "description": "A unique identifier generated for FTP authentication.",
                                "type": "string"
                              },
                              "isActive": {
                                "default": true,
                                "description": "Whether the FTP password is active for the account. When added to an account, an FTP password is active by default.",
                                "type": "boolean"
                              },
                              "lastModifiedBy": {
                                "description": "The user who last modified the FTP password.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp labeling when the FTP password was last modified.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "g2o": {
                          "description": "This information applies to the G2O key applied to the account for use with the NetStorage Usage API. You can have up to three G2O keys per upload account.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "A unique identifier for the G2O Key.",
                                "type": "string"
                              },
                              "isActive": {
                                "default": "false",
                                "description": "Whether the NetStorage Usage API has been enabled for use with this account.",
                                "type": "boolean"
                              },
                              "key": {
                                "description": "The G2O Key. Referred to as the capitalized `Key` when used in the NetStorage Usage API.",
                                "type": "string"
                              },
                              "lastModifiedBy": {
                                "description": "The user who last modified the G2O Key settings.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp labeling when the G2O Key settings were last modified.",
                                "type": "string"
                              },
                              "user": {
                                "description": "The name of the upload account. This is referred to as the \"Id\" in the Control Center interface.  It serves as the `Key-name` when used in the NetStorage Usage API.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "rsync": {
                          "description": "Settings applied for the non-secure rsync access method.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "comments": {
                                "description": "Any optional notes made for rsync password.",
                                "type": "string"
                              },
                              "id": {
                                "description": "A unique identifier generated for rsync password authentication.",
                                "type": "string"
                              },
                              "isActive": {
                                "description": "Whether the non-secure rsync password is active for the account. When added to an account, this password is active by default.",
                                "type": "boolean"
                              },
                              "lastModifiedBy": {
                                "description": "The user who last modified the rsync password.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp labeling when the rsync password was last modified.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "ssh": {
                          "description": "Settings applied for the SSH access method.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "comments": {
                                "description": "Any optional notes made for the SSH key.",
                                "type": "string"
                              },
                              "emailId": {
                                "description": "The NetStorage technical contact email address set up for this upload account.",
                                "type": "string"
                              },
                              "id": {
                                "description": "A unique identifier generated for SSH authentication.",
                                "type": "string"
                              },
                              "isActive": {
                                "default": true,
                                "description": "Whether the SSH key is active for the account. When added to an account, an SSH key is active by default.",
                                "type": "boolean"
                              },
                              "key": {
                                "description": "The SSH key applied to the account, if applicable.  SSH-2 RSA and SSH-2 DSA formats are supported.",
                                "type": "string"
                              },
                              "lastModifiedBy": {
                                "description": "The user who last modified the SSH key.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp labeling when the SSH key was last modified.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "lastModifiedBy": {
                      "description": "The user who last modified the account.",
                      "type": "string"
                    },
                    "lastModifiedDate": {
                      "description": "The ISO 8601 timestamp labeling when the account was last modified.",
                      "type": "string"
                    },
                    "multiFactorAuthConfig": {
                      "additionalProperties": false,
                      "description": "Two-factor authentication settings for the account.",
                      "type": "object",
                      "properties": {
                        "ftpMode": {
                          "description": "The current enabled or disabled status of Two-factor authentication for the account. `NONE` indicates it's disabled. `STRICT` Two-factor authentication is enabled. `OPTIONAL` indicates the account owner can access via FTP by providing only the FTP username and password, or providing the FTP username and password with the applicable time-based one time password (TOTP) appended to it.",
                          "type": "string",
                          "enum": [
                            "NONE",
                            "STRICT",
                            "OPTIONAL"
                          ]
                        },
                        "ftpSecrets": {
                          "description": "This is revealed if the shared secret for Two-factor authentication is to be generated manually.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "comment": {
                                "description": "Manually defined comment text included for the key. This content is used in the generation of the shared secret, but is optional. If left out, placeholder content is automatically generated.",
                                "type": "string"
                              },
                              "key": {
                                "description": "The manual entry set to serve as the shared secret. The key is exactly 16 characters in length and uses BASE-32 alphanumeric characters. This includes uppercase letters (A-Z), and numbers within the 2 - 7 range.",
                                "type": "string"
                              },
                              "secretGeneratedBy": {
                                "description": "How the shared secret was rotated. `CLIENT` indicates it was defined manually. For example, the `key` member was used and a shared secret was manually input. `SERVER` indicates it was automatically generated. For example, the `\"generateSecret\": \"true\"` pair was used.",
                                "type": "string",
                                "enum": [
                                  "CLIENT",
                                  "SERVER"
                                ]
                              },
                              "secretProvisionedBy": {
                                "description": "The user account that was used to generate the shared secret.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "generateSecret": {
                          "default": "false",
                          "description": "Whether Akamai automatically generates the shared secret to be used with Two-factor authentication for this account.",
                          "type": "boolean"
                        }
                      }
                    },
                    "quickDelete": {
                      "default": "false",
                      "description": "Whether quick-delete functionality is enabled in the storage group that this account has been configured to access.",
                      "type": "boolean"
                    },
                    "rsyncEnabled": {
                      "default": "false",
                      "description": "Whether non-secure rsync was enabled as an access method during creation of the account. This allows the account to access the storage group using the rsync protocol and a unique password you've set up for use with rsync.",
                      "type": "boolean"
                    },
                    "ruleSetId": {
                      "description": "The unique ID assigned to the Access Control List (ACL) Rule Set for the account, if applicable. These rule sets are comprised of a list of IP Addresses or Geographic Regions that are allowed or blocked from access. The appropriate ID integer is set as the `type` for the `ruleSetId` object for the account.",
                      "type": "integer"
                    },
                    "sshEnabled": {
                      "default": "false",
                      "description": "Whether Secure Shell (SSH) is enabled as an access method for the account, through application of an SSH key during creation of the account. This allows access to the storage group via this account using SFTP, SecureCopy, Secure Rsync, Aspera Upload Acceleration and the NetStorage CMShell.",
                      "type": "boolean"
                    },
                    "status": {
                      "description": "The activation status and availability of the account. `INACTIVE` indicates the account has been deactivated. `NEW` indicates the account is being propagated. `ACTIVATIONSENT` indicates the initial activation email has been sent to the contact on the account, and NetStorage is awaiting a confirmation it was received. `ACTIVE` indicates the account is fully propagated and available for use.",
                      "type": "string",
                      "enum": [
                        "INACTIVE",
                        "NEW",
                        "ACTIVATIONSENT",
                        "ACTIVE"
                      ]
                    },
                    "storageGroupId": {
                      "description": "The unique identifier for the storage group that this account has been configured to access.",
                      "type": "integer"
                    },
                    "storageGroupName": {
                      "description": "The upload account has been configured to access this specific storage group.",
                      "type": "string"
                    },
                    "storageGroupType": {
                      "description": "The format or migration status of the storage group that this account has been configured to access. `FILESTORE` indicates an NS3 format group. `OBJECTSTORE` indicates an NS4 format group. `MIGRATING` indicates the group is being migrated from NS3 to NS4.",
                      "type": "string",
                      "enum": [
                        "FILESTORE",
                        "OBJECTSTORE",
                        "MIGRATING"
                      ]
                    },
                    "technicalContactInfo": {
                      "additionalProperties": false,
                      "description": "Technical Contact information set up for the account.",
                      "type": "object",
                      "properties": {
                        "existingNetStorageTechnicalContact": {
                          "additionalProperties": false,
                          "description": "The NetStorage [technical contact](https://techdocs.akamai.com/netstorage/docs/create-a-netstorage-technical-contact) serves as the default contact for this upload account. Configure these contacts in the NetStorage section of the [Identity and Access Management](https://techdocs.akamai.com/iam/docs) tool in Control Center.",
                          "type": "object",
                          "properties": {
                            "primarySfPin": {
                              "description": "The Control Center user account selected as the primary point of contact for the upload account.",
                              "type": "string"
                            },
                            "secondarySfPin": {
                              "description": "The Control Center user account selected as the secondary point of contact for the upload account.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/ua-existing-technical-contact.yaml"
                          }
                        },
                        "existingTechnicalContact": {
                          "additionalProperties": false,
                          "description": "A pair of existing Control Center user accounts that have been selected as Technical Contacts for the account. Use Control Center to set up contact information for these accounts.",
                          "type": "object",
                          "properties": {
                            "primarySfPin": {
                              "description": "The Control Center user account selected as the primary point of contact for the account.",
                              "type": "string"
                            },
                            "secondarySfPin": {
                              "description": "The Control Center user account selected as the secondary point of contact for the account.",
                              "type": "string"
                            }
                          }
                        },
                        "newTechnicalContact": {
                          "additionalProperties": false,
                          "description": "All details for the contact have been manually applied.",
                          "type": "object",
                          "properties": {
                            "email": {
                              "description": "The email address for the contact.",
                              "type": "string"
                            },
                            "firstName": {
                              "description": "The first name of the contact.",
                              "type": "string"
                            },
                            "lastName": {
                              "description": "The last name (surname) of the contact.",
                              "type": "string"
                            },
                            "phone": {
                              "additionalProperties": false,
                              "description": "Phone number details for the contact.",
                              "type": "object",
                              "properties": {
                                "areaCode": {
                                  "description": "The applicable area code for the contact phone number.",
                                  "type": "string"
                                },
                                "countryCode": {
                                  "description": "The applicable country code for the contact phone number.",
                                  "type": "string"
                                },
                                "number": {
                                  "description": "The contact phone number.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "uploadAccountId": {
                      "description": "The name you've set for the account. This is referred to as the ID in Control Center.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/upload-account-get.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Badly formatted JSON. Compare with the schema.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "Unauthorized Request.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "Application permission error.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "429": {
            "description": "The maximum request count for a specific time duration for this resource has been reached.",
            "content": {
              "*/*": {}
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Limit.yaml"
                }
              },
              "X-RateLimit-Remaining": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Remaining.yaml"
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/429.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Update an upload account based on its `uploadAccountId`.",
        "operationId": "put-upload-account",
        "summary": "Edit an upload account",
        "tags": [
          "Accounts"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's NetStorage Configuration API",
          "url": "https://techdocs.akamai.com/netstorage/reference/put-upload-account"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "email": "email@example.com",
                "enableAspera": false,
                "enableFileManagerAccess": false,
                "enableHttpApiAccess": true,
                "isEditable": true,
                "isVisible": true,
                "ruleSetId": 12944,
                "accessConfig": {
                  "chrootDirectory": "/456789",
                  "hasReadOnlyAccess": false,
                  "cpcodes": [
                    {
                      "cpcodeId": 1234567,
                      "subDirectoryRestrictions": [
                        "/456789/abc"
                      ]
                    }
                  ]
                },
                "bruteForceAttackConfig": {
                  "failedLoginThreshold": 10,
                  "lockDownDurationSeconds": 30
                },
                "technicalContactInfo": {
                  "existingTechnicalContact": {
                    "primarySfPin": "value",
                    "secondarySfPin": "value"
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "type": "object",
                "properties": {
                  "accessConfig": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "chrootDirectory": {
                        "type": "string"
                      },
                      "cpcodes": {
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "type": "object",
                          "properties": {
                            "cpcodeId": {
                              "type": "integer"
                            },
                            "subDirectoryRestrictions": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "hasReadOnlyAccess": {
                        "type": "boolean"
                      },
                      "loginDirectory": {
                        "type": "string"
                      }
                    }
                  },
                  "bruteForceAttackConfig": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "failedLoginThreshold": {
                        "type": "integer"
                      },
                      "lockDownDurationSeconds": {
                        "type": "integer"
                      }
                    }
                  },
                  "email": {
                    "example": "{{email}}",
                    "type": "string"
                  },
                  "enableAspera": {
                    "example": "{{enableAspera}}",
                    "type": "boolean"
                  },
                  "enableFileManagerAccess": {
                    "example": "{{enableFileManagerAccess}}",
                    "type": "boolean"
                  },
                  "isEditable": {
                    "example": "{{isEditable}}",
                    "type": "boolean"
                  },
                  "isVisible": {
                    "example": "{{isVisible}}",
                    "type": "boolean"
                  },
                  "ruleSetId": {
                    "example": "{{ruleSetId}}",
                    "type": "integer"
                  },
                  "technicalContactInfo": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "existingNetStorageTechnicalContact": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "primarySfPin": {
                            "type": "string"
                          },
                          "secondarySfPin": {
                            "type": "string"
                          }
                        }
                      },
                      "existingTechnicalContact": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "primarySfPin": {
                            "type": "string"
                          },
                          "secondarySfPin": {
                            "type": "string"
                          }
                        }
                      },
                      "newTechnicalContact": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string"
                          },
                          "firstName": {
                            "type": "string"
                          },
                          "lastName": {
                            "type": "string"
                          },
                          "phone": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "areaCode": {
                                "type": "string"
                              },
                              "countryCode": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/upload-account-put.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request OK.",
            "content": {
              "application/json": {
                "example": {
                  "asperaEnabled": true,
                  "email": "email@example.com",
                  "ftpEnabled": true,
                  "hasFileManagerAccess": true,
                  "hasHttpApiAccess": true,
                  "hasPendingPropagation": true,
                  "isEditable": true,
                  "lastModifiedBy": "tyamada",
                  "lastModifiedDate": "2017-09-04T09:10:58Z",
                  "rsyncEnabled": true,
                  "ruleSetId": 555551,
                  "sshEnabled": true,
                  "status": "ACTIVE",
                  "storageGroupId": 1234568,
                  "uploadAccountId": "value",
                  "accessConfig": {
                    "chrootDirectory": "/456789/j",
                    "hasReadOnlyAccess": false,
                    "loginDirectory": "/456789/j",
                    "cpcodes": [
                      {
                        "cpcodeId": 1234567,
                        "lastModifiedBy": "jdupont",
                        "lastModifiedDate": "2017-09-04T09:10:58Z",
                        "subDirectoryRestrictions": [
                          "/456789/j/k/s"
                        ]
                      }
                    ]
                  },
                  "bruteForceAttackConfig": {
                    "failedLoginThreshold": 10,
                    "lockDownDurationSeconds": 30
                  },
                  "keys": {
                    "aspera": [
                      {
                        "identity": "value",
                        "isActive": true,
                        "key": "ssh-rsa HASH jdoe@hostname",
                        "lastModifiedBy": "jkowalski",
                        "lastModifiedDate": "2017-09-04T09:10:58Z"
                      }
                    ],
                    "ftp": [
                      {
                        "identity": "value",
                        "isActive": true,
                        "lastModifiedBy": "jsmith",
                        "lastModifiedDate": "2017-09-04T09:10:58Z"
                      }
                    ],
                    "g2o": [
                      {
                        "identity": "value",
                        "isActive": true,
                        "key": "value",
                        "lastModifiedBy": "jsmith",
                        "lastModifiedDate": "2017-09-04T09:10:58Z",
                        "user": "myuploadaccount2"
                      }
                    ],
                    "rsync": [
                      {
                        "identity": "value",
                        "isActive": true,
                        "key": "value",
                        "lastModifiedBy": "szhang",
                        "lastModifiedDate": "2017-09-04T09:10:58Z"
                      }
                    ],
                    "ssh": [
                      {
                        "identity": "value",
                        "isActive": true,
                        "key": "ssh-rsa HASH jdoe@hostname",
                        "lastModifiedBy": "szhang",
                        "lastModifiedDate": "2017-09-04T09:10:58Z"
                      }
                    ]
                  },
                  "technicalContactInfo": {
                    "newTechnicalContact": {
                      "email": "jadoe@email.com",
                      "firstName": "jane",
                      "lastName": "doe",
                      "phone": {
                        "areaCode": "7",
                        "countryCode": "+7",
                        "number": "767676767676"
                      }
                    }
                  },
                  "changeHistory": [
                    {
                      "action": "ADDED",
                      "changeType": "UPLOAD_ACCOUNT",
                      "lastModifiedBy": "adevi",
                      "lastModifiedDate": "2017-09-04T09:10:58Z",
                      "propagated": false
                    },
                    {
                      "action": "ADDED",
                      "changeType": "RULESET",
                      "lastModifiedBy": "hgildong",
                      "lastModifiedDate": "2017-09-04T09:10:58Z",
                      "propagated": false
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "An upload account is used to access a specific storage group. You can list, create and get details of an account.",
                  "type": "object",
                  "properties": {
                    "accessConfig": {
                      "additionalProperties": false,
                      "description": "Specifies the settings for the upload directory that has been selected for this account.",
                      "type": "object",
                      "properties": {
                        "chrootDirectory": {
                          "description": "The directory set up to serve as the Directory Limit, if applicable. This is a directory other than the storage group's actual CP code root, that has been set up as the root for the account. Access for the account is limited to this directory and any existing subdirectories.",
                          "type": "string"
                        },
                        "cpcodes": {
                          "description": "The upload directory assigned to this account. The CP code for the upload directory is set as the `cpcodeId` via the `cpcodes` array for the account.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "cpcodeId": {
                                "description": "The CP code serving as an upload directory.",
                                "type": "integer"
                              },
                              "lastModifiedBy": {
                                "description": "The user who last modified this upload directory.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp labeling when this upload directory was last modified.",
                                "type": "string"
                              },
                              "subDirectoryRestrictions": {
                                "description": "A Subdirectory Restriction limits management operations to the specified directory.  The account can only upload, download, move, or delete content within that directory, or its children.  Multiple Subdirectory Restrictions can be applied to a single account.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "hasDirectoryLimit": {
                          "default": "false",
                          "description": "Whether a Directory Limit has been established for the account.",
                          "type": "boolean"
                        },
                        "hasReadOnlyAccess": {
                          "default": true,
                          "description": "The Read-Write vs. Read-only setting for the account. A value of `true` indicates the account can only view content in its associated storage group.",
                          "type": "boolean"
                        },
                        "loginDirectory": {
                          "description": "Specifies the default directory for the account, if configured. The directory named here is the default point of access when connecting to the storage group. If not configured, `loginDirectory` is blank.",
                          "type": "string"
                        }
                      }
                    },
                    "asperaEnabled": {
                      "default": "false",
                      "description": "Whether Aspera Upload Acceleration was enabled as an access method during creation of the account. Aspera Upload Acceleration makes use of a third party client application from AsperaSoft that offers expedited uploads to a storage group.",
                      "type": "boolean"
                    },
                    "bruteForceAttackConfig": {
                      "additionalProperties": false,
                      "description": "Configures how to prevent brute force attacks over FTP. This protects the target storage group from excessive incorrect FTP login attempts.",
                      "type": "object",
                      "properties": {
                        "failedLoginThreshold": {
                          "description": "The number of failed login attempts to trigger the lockdown for an offending client IP address.",
                          "type": "number"
                        },
                        "lockDownDurationSeconds": {
                          "description": "The number of seconds an offending IP address is blocked from FTP access once the `failedLoginThreshold` total is reached.",
                          "type": "number"
                        }
                      }
                    },
                    "changeHistory": {
                      "description": "Lists each change made to the account.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "action": {
                            "description": "The action performed with the change. `ADDED` indicates the account was actually added. `DELETED` indicates the account was deleted. `ENABLED` or `DISABLED` indicates the change was made to affect the availability of the account. `ROTATED` indicates a password or key assigned to an access method was rotated to a new instance. `UPDATED` indicates an option or setting was changed in the account.",
                            "type": "string",
                            "enum": [
                              "ADDED",
                              "DELETED",
                              "ENABLED",
                              "DISABLED",
                              "ROTATED",
                              "UPDATED"
                            ]
                          },
                          "changeType": {
                            "description": "The option or functionality that was modified. `CPCODE` indicates the change applied to the application of a CP code for use in an upload directory. `FTP` indicates the change applied to FTP authentication access. `SSH_KEY` indicates the change applied to SSH authentication access. `RSYNC` indicates the change applied to Rsync (password) authentication. `ASPERA` indicates the change applied to Aspera Upload Accelerations settings. `SUBDIR_RESTRICTION` indicates the change applied to a Subdirectory Restriction. `CHROOT` indicates the change applied to a Directory Limit. `LOGINDIR` indicates the change applied to a Default Directory. `CMS` indicates the change applied to settings for the Content Management (CM) Shell. `FM` indicates the change applied to FileManager access. `HTTP_UPLOAD_OPTIONS` indicates the change applied to HTTP Upload Service. `FTP_DOWNLOAD_OPTIONS` indicates the change applied to FTP Download Services. `UPLOAD_ACCOUNT` indicates the change applied to general account settings. `ACCESS` indicates the change applied to some form of access for the account. `G2O` indicates the change applied to the G2O Key used for access to the NetStorage Usage API. `RULESET` indicates the change applied to and Access Control Group (ACL) Rule Set. `BFA` indicates the change applied to BFA. `IP` indicates the change applied to IP. `SERVICE_VARIABLE` indicates the change applied to a service variable. `MFA_CONFIG` indicates the change applied to the actual configuration settings Two-factor authentication. `MFA_SECRET` indicates the change applied to the `ftpSecrets` assigned to Two-factor authentication for the account.",
                            "type": "string",
                            "enum": [
                              "CPCODE",
                              "FTP",
                              "SSH_KEY",
                              "RSYNC",
                              "ASPERA",
                              "SUBDIR_RESTRICTION",
                              "CHROOT",
                              "LOGINDIR",
                              "CMS",
                              "FM",
                              "HTTP_UPLOAD_OPTIONS",
                              "FTP_DOWNLOAD_OPTIONS",
                              "UPLOAD_ACCOUNT",
                              "ACCESS",
                              "G2O",
                              "RULESET",
                              "BFA",
                              "IP",
                              "SERVICE_VARIABLE",
                              "MFA_CONFIG",
                              "MFA_SECRET"
                            ]
                          },
                          "lastModifiedBy": {
                            "description": "The user who made the change.",
                            "type": "string"
                          },
                          "lastModifiedDate": {
                            "description": "The ISO 8601 timestamp labeling when the change occurred.",
                            "type": "string"
                          },
                          "propagated": {
                            "default": "false",
                            "description": "Whether the change has completed propagation to the NetStorage network. Propagation can take upwards of 60 minutes.",
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "email": {
                      "description": "The primary contact email address set up for the account.",
                      "type": "string"
                    },
                    "ftpEnabled": {
                      "default": "false",
                      "description": "Whether FTP was enabled as an access method when the account was created. This allows the account to access the storage group using FTP and a unique password you've set up for use with FTP.",
                      "type": "boolean"
                    },
                    "globalUploadAccount": {
                      "description": "Indicates the upload account is globally mapped.",
                      "type": "boolean"
                    },
                    "hasFileManagerAccess": {
                      "default": "false",
                      "description": "Whether access to FileManager was enabled during creation of the account. FileManager is a NetStorage interface that allows you to perform basic file management operations from Control Center. If enabled, this account can be used to access the storage group via FileManager.",
                      "type": "boolean"
                    },
                    "hasHttpApiAccess": {
                      "default": "false",
                      "description": "Whether access to the [NetStorage Usage API](https://techdocs.akamai.com/netstorage-usage/reference/api) was enabled during creation of the account. This API is used to interact with your content, including operations such as upload, download, move and delete.  If enabled, this account can be used to access the storage group via this API.",
                      "type": "boolean"
                    },
                    "hasPendingPropagation": {
                      "default": "false",
                      "description": "Whether the account is currently being propagated. Any changes made to an account needs to propagate to the NetStorage network.  This can take upwards of 60 minutes.",
                      "type": "boolean"
                    },
                    "isEditable": {
                      "description": "Whether this account is enabled for editing. Editing accounts is currently only supported in Control Center.",
                      "type": "boolean"
                    },
                    "isVisible": {
                      "type": "boolean"
                    },
                    "keys": {
                      "additionalProperties": false,
                      "description": "The various keys and passwords configured for the access methods set in this account.",
                      "type": "object",
                      "properties": {
                        "aspera": {
                          "description": "Settings pertaining to Aspera Upload Acceleration.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "comments": {
                                "description": "Any optional notes made for the SSH key.",
                                "type": "string"
                              },
                              "id": {
                                "description": "A unique identifier for Aspera Upload Acceleration.",
                                "type": "string"
                              },
                              "isActive": {
                                "default": "false",
                                "description": "Whether Aspera Upload Acceleration has been enabled for this account.",
                                "type": "boolean"
                              },
                              "key": {
                                "description": "The SSH key applied to the account that has been assigned to Aspera.  SSH-2 RSA and SSH-2 DSA formats are supported.",
                                "type": "string"
                              },
                              "lastModifiedBy": {
                                "description": "The user who last modified the SSH key.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp labeling when the SSH key was last modified.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "ftp": {
                          "description": "Settings applied for the FTP access method.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "comments": {
                                "description": "Any optional notes made for the FTP password.",
                                "type": "string"
                              },
                              "id": {
                                "description": "A unique identifier generated for FTP authentication.",
                                "type": "string"
                              },
                              "isActive": {
                                "default": true,
                                "description": "Whether the FTP password is active for the account. When added to an account, an FTP password is active by default.",
                                "type": "boolean"
                              },
                              "lastModifiedBy": {
                                "description": "The user who last modified the FTP password.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp labeling when the FTP password was last modified.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "g2o": {
                          "description": "This information applies to the G2O key applied to the account for use with the NetStorage Usage API. You can have up to three G2O keys per upload account.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "A unique identifier for the G2O Key.",
                                "type": "string"
                              },
                              "isActive": {
                                "default": "false",
                                "description": "Whether the NetStorage Usage API has been enabled for use with this account.",
                                "type": "boolean"
                              },
                              "key": {
                                "description": "The G2O Key. Referred to as the capitalized `Key` when used in the NetStorage Usage API.",
                                "type": "string"
                              },
                              "lastModifiedBy": {
                                "description": "The user who last modified the G2O Key settings.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp labeling when the G2O Key settings were last modified.",
                                "type": "string"
                              },
                              "user": {
                                "description": "The name of the upload account. This is referred to as the \"Id\" in the Control Center interface.  It serves as the `Key-name` when used in the NetStorage Usage API.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "rsync": {
                          "description": "Settings applied for the non-secure rsync access method.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "comments": {
                                "description": "Any optional notes made for rsync password.",
                                "type": "string"
                              },
                              "id": {
                                "description": "A unique identifier generated for rsync password authentication.",
                                "type": "string"
                              },
                              "isActive": {
                                "description": "Whether the non-secure rsync password is active for the account. When added to an account, this password is active by default.",
                                "type": "boolean"
                              },
                              "lastModifiedBy": {
                                "description": "The user who last modified the rsync password.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp labeling when the rsync password was last modified.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "ssh": {
                          "description": "Settings applied for the SSH access method.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "comments": {
                                "description": "Any optional notes made for the SSH key.",
                                "type": "string"
                              },
                              "emailId": {
                                "description": "The NetStorage technical contact email address set up for this upload account.",
                                "type": "string"
                              },
                              "id": {
                                "description": "A unique identifier generated for SSH authentication.",
                                "type": "string"
                              },
                              "isActive": {
                                "default": true,
                                "description": "Whether the SSH key is active for the account. When added to an account, an SSH key is active by default.",
                                "type": "boolean"
                              },
                              "key": {
                                "description": "The SSH key applied to the account, if applicable.  SSH-2 RSA and SSH-2 DSA formats are supported.",
                                "type": "string"
                              },
                              "lastModifiedBy": {
                                "description": "The user who last modified the SSH key.",
                                "type": "string"
                              },
                              "lastModifiedDate": {
                                "description": "The ISO 8601 timestamp labeling when the SSH key was last modified.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "lastModifiedBy": {
                      "description": "The user who last modified the account.",
                      "type": "string"
                    },
                    "lastModifiedDate": {
                      "description": "The ISO 8601 timestamp labeling when the account was last modified.",
                      "type": "string"
                    },
                    "multiFactorAuthConfig": {
                      "additionalProperties": false,
                      "description": "Two-factor authentication settings for the account.",
                      "type": "object",
                      "properties": {
                        "ftpMode": {
                          "description": "The current enabled or disabled status of Two-factor authentication for the account. `NONE` indicates it's disabled. `STRICT` Two-factor authentication is enabled. `OPTIONAL` indicates the account owner can access via FTP by providing only the FTP username and password, or providing the FTP username and password with the applicable time-based one time password (TOTP) appended to it.",
                          "type": "string",
                          "enum": [
                            "NONE",
                            "STRICT",
                            "OPTIONAL"
                          ]
                        },
                        "ftpSecrets": {
                          "description": "This is revealed if the shared secret for Two-factor authentication is to be generated manually.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "comment": {
                                "description": "Manually defined comment text included for the key. This content is used in the generation of the shared secret, but is optional. If left out, placeholder content is automatically generated.",
                                "type": "string"
                              },
                              "key": {
                                "description": "The manual entry set to serve as the shared secret. The key is exactly 16 characters in length and uses BASE-32 alphanumeric characters. This includes uppercase letters (A-Z), and numbers within the 2 - 7 range.",
                                "type": "string"
                              },
                              "secretGeneratedBy": {
                                "description": "How the shared secret was rotated. `CLIENT` indicates it was defined manually. For example, the `key` member was used and a shared secret was manually input. `SERVER` indicates it was automatically generated. For example, the `\"generateSecret\": \"true\"` pair was used.",
                                "type": "string",
                                "enum": [
                                  "CLIENT",
                                  "SERVER"
                                ]
                              },
                              "secretProvisionedBy": {
                                "description": "The user account that was used to generate the shared secret.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "generateSecret": {
                          "default": "false",
                          "description": "Whether Akamai automatically generates the shared secret to be used with Two-factor authentication for this account.",
                          "type": "boolean"
                        }
                      }
                    },
                    "quickDelete": {
                      "default": "false",
                      "description": "Whether quick-delete functionality is enabled in the storage group that this account has been configured to access.",
                      "type": "boolean"
                    },
                    "rsyncEnabled": {
                      "default": "false",
                      "description": "Whether non-secure rsync was enabled as an access method during creation of the account. This allows the account to access the storage group using the rsync protocol and a unique password you've set up for use with rsync.",
                      "type": "boolean"
                    },
                    "ruleSetId": {
                      "description": "The unique ID assigned to the Access Control List (ACL) Rule Set for the account, if applicable. These rule sets are comprised of a list of IP Addresses or Geographic Regions that are allowed or blocked from access. The appropriate ID integer is set as the `type` for the `ruleSetId` object for the account.",
                      "type": "integer"
                    },
                    "sshEnabled": {
                      "default": "false",
                      "description": "Whether Secure Shell (SSH) is enabled as an access method for the account, through application of an SSH key during creation of the account. This allows access to the storage group via this account using SFTP, SecureCopy, Secure Rsync, Aspera Upload Acceleration and the NetStorage CMShell.",
                      "type": "boolean"
                    },
                    "status": {
                      "description": "The activation status and availability of the account. `INACTIVE` indicates the account has been deactivated. `NEW` indicates the account is being propagated. `ACTIVATIONSENT` indicates the initial activation email has been sent to the contact on the account, and NetStorage is awaiting a confirmation it was received. `ACTIVE` indicates the account is fully propagated and available for use.",
                      "type": "string",
                      "enum": [
                        "INACTIVE",
                        "NEW",
                        "ACTIVATIONSENT",
                        "ACTIVE"
                      ]
                    },
                    "storageGroupId": {
                      "description": "The unique identifier for the storage group that this account has been configured to access.",
                      "type": "integer"
                    },
                    "storageGroupName": {
                      "description": "The upload account has been configured to access this specific storage group.",
                      "type": "string"
                    },
                    "storageGroupType": {
                      "description": "The format or migration status of the storage group that this account has been configured to access. `FILESTORE` indicates an NS3 format group. `OBJECTSTORE` indicates an NS4 format group. `MIGRATING` indicates the group is being migrated from NS3 to NS4.",
                      "type": "string",
                      "enum": [
                        "FILESTORE",
                        "OBJECTSTORE",
                        "MIGRATING"
                      ]
                    },
                    "technicalContactInfo": {
                      "additionalProperties": false,
                      "description": "Technical Contact information set up for the account.",
                      "type": "object",
                      "properties": {
                        "existingNetStorageTechnicalContact": {
                          "additionalProperties": false,
                          "description": "The NetStorage [technical contact](https://techdocs.akamai.com/netstorage/docs/create-a-netstorage-technical-contact) serves as the default contact for this upload account. Configure these contacts in the NetStorage section of the [Identity and Access Management](https://techdocs.akamai.com/iam/docs) tool in Control Center.",
                          "type": "object",
                          "properties": {
                            "primarySfPin": {
                              "description": "The Control Center user account selected as the primary point of contact for the upload account.",
                              "type": "string"
                            },
                            "secondarySfPin": {
                              "description": "The Control Center user account selected as the secondary point of contact for the upload account.",
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/ua-existing-technical-contact.yaml"
                          }
                        },
                        "existingTechnicalContact": {
                          "additionalProperties": false,
                          "description": "A pair of existing Control Center user accounts that have been selected as Technical Contacts for the account. Use Control Center to set up contact information for these accounts.",
                          "type": "object",
                          "properties": {
                            "primarySfPin": {
                              "description": "The Control Center user account selected as the primary point of contact for the account.",
                              "type": "string"
                            },
                            "secondarySfPin": {
                              "description": "The Control Center user account selected as the secondary point of contact for the account.",
                              "type": "string"
                            }
                          }
                        },
                        "newTechnicalContact": {
                          "additionalProperties": false,
                          "description": "All details for the contact have been manually applied.",
                          "type": "object",
                          "properties": {
                            "email": {
                              "description": "The email address for the contact.",
                              "type": "string"
                            },
                            "firstName": {
                              "description": "The first name of the contact.",
                              "type": "string"
                            },
                            "lastName": {
                              "description": "The last name (surname) of the contact.",
                              "type": "string"
                            },
                            "phone": {
                              "additionalProperties": false,
                              "description": "Phone number details for the contact.",
                              "type": "object",
                              "properties": {
                                "areaCode": {
                                  "description": "The applicable area code for the contact phone number.",
                                  "type": "string"
                                },
                                "countryCode": {
                                  "description": "The applicable country code for the contact phone number.",
                                  "type": "string"
                                },
                                "number": {
                                  "description": "The contact phone number.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "uploadAccountId": {
                      "description": "The name you've set for the account. This is referred to as the ID in Control Center.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/upload-account-get.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Badly formatted JSON. Compare with the schema.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "Unauthorized Request.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "Application permission error.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "429": {
            "description": "The maximum request count for a specific time duration for this resource has been reached.",
            "content": {
              "*/*": {}
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Limit.yaml"
                }
              },
              "X-RateLimit-Remaining": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Remaining.yaml"
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/429.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "The unique ID assigned to the target upload account. This value can be obtained by performing a [GET](https://techdocs.akamai.com/netstorage/reference/get-upload-account) of all of your accounts and obtaining this value for the desired account.",
          "example": "{{uploadAccountId}}",
          "in": "path",
          "name": "uploadAccountId",
          "required": true,
          "schema": {
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/uploadAccountId-path.yaml"
          }
        }
      ]
    },
    "/zones": {
      "get": {
        "description": "Get a list of the geographic regions (*zones*) you can use to replicate your content.",
        "operationId": "get-zones",
        "summary": "List zones",
        "tags": [
          "Zones"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's NetStorage Configuration API",
          "url": "https://techdocs.akamai.com/netstorage/reference/get-zones"
        },
        "responses": {
          "200": {
            "description": "Request OK.",
            "content": {
              "application/json": {
                "example": {
                  "zones": [
                    {
                      "zoneName": "CA-nearby"
                    },
                    {
                      "zoneName": "JP"
                    },
                    {
                      "zoneName": "asia"
                    },
                    {
                      "zoneName": "australia"
                    },
                    {
                      "zoneName": "europe"
                    },
                    {
                      "zoneName": "global"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Encapsulates the geographic replication zones available for use with a storage group.",
                  "type": "object",
                  "properties": {
                    "zones": {
                      "description": "The individual geographic replication zones available for use. These are also referred to as replicas.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "The individual geographic replication zones available for use.  These are also referred to as replicas.",
                        "type": "object",
                        "properties": {
                          "zoneName": {
                            "description": "An individual zone available for use in replication.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/zone-get.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/zones.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Badly formatted JSON. Compare with the schema.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "401": {
            "description": "Unauthorized Request.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/401.yaml"
            }
          },
          "403": {
            "description": "Application permission error.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    },
                    "errors": {
                      "description": "A further-nested problem object.",
                      "type": "array",
                      "items": {
                        "description": "A further-nested problem object.",
                        "type": "object",
                        "x-akamai": {
                          "file-path": "schemas/http-problem-details-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "type": "string"
                    },
                    "status": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/http-problem-details.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "429": {
            "description": "The maximum request count for a specific time duration for this resource has been reached.",
            "content": {
              "*/*": {}
            },
            "headers": {
              "X-RateLimit-Limit": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Limit.yaml"
                }
              },
              "X-RateLimit-Remaining": {
                "schema": {
                  "type": "string"
                },
                "x-akamai": {
                  "file-path": "headers/X-RateLimit-Remaining.yaml"
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/429.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "x-readme": {
    "samples-languages": [
      "curl",
      "python",
      "node"
    ]
  },
  "servers": [
    {
      "url": "https://{hostname}/storage/v1"
    }
  ]
}