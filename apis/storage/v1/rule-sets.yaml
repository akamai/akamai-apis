openapi: 3.0.0
info:
  title: ACL rule sets
  version: '1'
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
- url: https://{hostname}/storage/v1
x-akamai:
  auth-type: EDGE_GRID
  file-path: rule-sets.yaml
paths:
  /rule-sets:
    post:
      operationId: post-rule-sets
      summary: Create a rule set
      tags:
      - Rule sets
      description: |
        Create a rule set.
      requestBody:
        required: true
        content:
          application/json:
            example:
              $ref: examples/PostRuleSetSample.json
            schema:
              $ref: schemas/rule-set-post.yaml
      responses:
        200:
          description: |
            Successful response.
          content:
            application/json:
              example:
                $ref: examples/GetRuleSetSample.json
              schema:
                $ref: schemas/rule-sets-get.yaml
        400:
          $ref: errors/400.yaml
        401:
          $ref: errors/401.yaml
        403:
          $ref: errors/403.yaml
        429:
          $ref: errors/429.yaml
    get:
      operationId: get-rule-sets
      summary: List all rule sets
      tags:
      - Rule sets
      description: |
        Get a list of rule sets.
      responses:
        200:
          description: |
            Successful response.
          content:
            application/json:
              example:
                $ref: examples/GetRuleSetSample.json
              schema:
                $ref: schemas/rule-sets-get.yaml
        400:
          $ref: errors/400.yaml
        401:
          $ref: errors/401.yaml
        403:
          $ref: errors/403.yaml
        429:
          $ref: errors/429.yaml
  /rule-sets/{ruleSetId}:
    parameters:
    - $ref: parameters/ruleSetId-path.yaml
    get:
      operationId: get-rule-set
      summary: Get a rule set
      tags:
      - Rule sets
      description: |
        Get details for a specific rule set.
      responses:
        200:
          description: |
            Successful response.
          content:
            application/json:
              example:
                $ref: examples/GetRuleSetSample.json
              schema:
                $ref: schemas/rule-sets-get.yaml
        400:
          $ref: errors/400.yaml
        401:
          $ref: errors/401.yaml
        403:
          $ref: errors/403.yaml
        429:
          $ref: errors/429.yaml
    put:
      operationId: put-rule-set
      summary: Update a rule set
      tags:
      - Rule sets
      description: |
        Update a specific rule set.
      requestBody:
        required: true
        content:
          application/json:
            example:
              $ref: examples/PostRuleSetSample.json
            schema:
              $ref: schemas/rule-set-post.yaml
      responses:
        200:
          description: |
            Successful response.
          content:
            application/json:
              example:
                $ref: examples/GetRuleSets.json
              schema:
                $ref: schemas/rule-set-get.yaml
        400:
          $ref: errors/400.yaml
        401:
          $ref: errors/401.yaml
        403:
          $ref: errors/403.yaml
        429:
          $ref: errors/429.yaml
    delete:
      operationId: delete-rule-set
      summary: Delete a rule set
      tags:
      - Rule sets
      description: |
        Delete a specified rule set.
      responses:
        200:
          description: |
            Successful response.
        400:
          $ref: errors/400.yaml
        401:
          $ref: errors/401.yaml
        403:
          $ref: errors/403.yaml
        429:
          $ref: errors/429.yaml
