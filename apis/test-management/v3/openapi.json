{
  "openapi": "3.0.0",
  "externalDocs": {
    "description": "See documentation for Akamai's Test Center API",
    "url": "https://techdocs.akamai.com/test-ctr/reference"
  },
  "info": {
    "title": "Akamai: Test Center API",
    "version": "v3",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "paths": {
    "/functional/functions/try-it": {
      "post": {
        "description": "Runs a created function on sample data to check whether it returns the expected value. A function is valid for use in a test case if the response's `results` value returns only one value. To learn more about functions and variables, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
        "operationId": "post-try-it",
        "summary": "Check how functions work",
        "tags": [
          "Functions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-try-it"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "example": {
                "functionExpression": "fn_getResponseHeaderValue(Server)",
                "responseData": {
                  "response": {
                    "httpVersion": "HTTP/1.1",
                    "status": 200,
                    "statusText": "OK",
                    "cookies": [],
                    "headers": [
                      {
                        "name": "Server",
                        "value": "Apache/2.2.15 (CentOS)"
                      },
                      {
                        "name": "Content-Type",
                        "value": "text/html; charset=utf-8"
                      },
                      {
                        "name": "Content-Encoding",
                        "value": "gzip"
                      },
                      {
                        "name": "Cache-Control",
                        "value": "no-cache, no-store"
                      },
                      {
                        "name": "Date",
                        "value": "Tue, 14 Mar 2023 16:30:14 GMT"
                      },
                      {
                        "name": "Content-Length",
                        "value": "37120"
                      },
                      {
                        "name": "Vary",
                        "value": "Accept-Encoding"
                      },
                      {
                        "name": "Set-Cookie",
                        "value": "id=abc; path=/; Secure;domain=example.com"
                      },
                      {
                        "name": "Set-Cookie",
                        "value": "theme=light"
                      },
                      {
                        "name": "Set-Cookie",
                        "value": "sessionToken=abc123; Expires=Wed, 09 Jun 2021 10:18:14 GMT"
                      }
                    ]
                  }
                },
                "variables": [
                  {
                    "variableName": "var1",
                    "variableValue": "name"
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Specifies the function expression to test.",
                "type": "object",
                "required": [
                  "functionExpression",
                  "responseData"
                ],
                "properties": {
                  "functionExpression": {
                    "description": "Function expression you want to test. To learn more about supported functions, see [Available functions](https://techdocs.akamai.com/test-ctr/reference/variables-overview#available-functions).",
                    "example": "{{functionExpression}}",
                    "type": "string"
                  },
                  "responseData": {
                    "additionalProperties": false,
                    "description": "Sample response for Test Center to run the function evaluation on.",
                    "type": "object",
                    "required": [
                      "response"
                    ],
                    "properties": {
                      "response": {
                        "additionalProperties": false,
                        "description": "Specifies sample response for function evaluation.",
                        "type": "object",
                        "required": [
                          "status",
                          "statusText",
                          "httpVersion",
                          "headers",
                          "cookies"
                        ],
                        "properties": {
                          "cookies": {
                            "description": "Cookies.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "headers": {
                            "description": "HTTP headers included in the response.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Header name.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "Header value.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "httpVersion": {
                            "description": "HTTP version.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP status code.",
                            "readOnly": true,
                            "type": "integer"
                          },
                          "statusText": {
                            "description": "HTTP status text.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/try-function-response.yaml"
                    }
                  },
                  "variables": {
                    "description": "Variable used in `functionExpression`.",
                    "minItems": 0,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case or in `function`. Variables appear with `{{variableName}}` syntax. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                      "title": "Single variables",
                      "type": "object",
                      "required": [
                        "variableName",
                        "variableValue"
                      ],
                      "properties": {
                        "variableName": {
                          "description": "Name of the variable.",
                          "maxLength": 100,
                          "minLength": 1,
                          "type": "string"
                        },
                        "variableValue": {
                          "description": "Value of the variable.",
                          "maxLength": 4000,
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/variable-create.yaml"
                      }
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/test-center-functions-try-it.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response is the matching result for the input function expression.",
            "content": {
              "application/json": {
                "example": {
                  "functionExpression": "fn_getResponseHeaderValue(Server)",
                  "result": "Apache/2.2.15 (CentOS)",
                  "responseData": {
                    "response": {
                      "httpVersion": "HTTP/1.1",
                      "status": 200,
                      "statusText": "OK",
                      "cookies": [],
                      "headers": [
                        {
                          "name": "Server",
                          "value": "Apache/2.2.15 (CentOS)"
                        },
                        {
                          "name": "Content-Type",
                          "value": "text/html; charset=utf-8"
                        },
                        {
                          "name": "Content-Encoding",
                          "value": "gzip"
                        },
                        {
                          "name": "Cache-Control",
                          "value": "no-cache, no-store"
                        },
                        {
                          "name": "Date",
                          "value": "Tue, 14 Mar 2023 16:30:14 GMT"
                        },
                        {
                          "name": "Content-Length",
                          "value": "37120"
                        },
                        {
                          "name": "Vary",
                          "value": "Accept-Encoding"
                        },
                        {
                          "name": "Set-Cookie",
                          "value": "id=abc; path=/; Secure;domain=example.com"
                        },
                        {
                          "name": "Set-Cookie",
                          "value": "theme=light"
                        },
                        {
                          "name": "Set-Cookie",
                          "value": "sessionToken=abc123; Expires=Wed, 09 Jun 2021 10:18:14 GMT"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the matching result for the tested function expression.",
                  "type": "object",
                  "required": [
                    "functionExpression",
                    "responseData",
                    "result"
                  ],
                  "properties": {
                    "functionExpression": {
                      "description": "Evaluated function expression.",
                      "type": "string"
                    },
                    "responseData": {
                      "additionalProperties": false,
                      "description": "Specifies the sample response used for function evaluation.",
                      "readOnly": true,
                      "type": "object",
                      "required": [
                        "response"
                      ],
                      "properties": {
                        "response": {
                          "additionalProperties": false,
                          "description": "Specifies sample response for function evaluation.",
                          "type": "object",
                          "required": [
                            "status",
                            "statusText",
                            "httpVersion",
                            "headers",
                            "cookies"
                          ],
                          "properties": {
                            "cookies": {
                              "description": "Cookies.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "headers": {
                              "description": "HTTP headers included in the response.",
                              "minItems": 1,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Header name.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Header value.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "httpVersion": {
                              "description": "HTTP version.",
                              "type": "string"
                            },
                            "status": {
                              "description": "HTTP status code.",
                              "readOnly": true,
                              "type": "integer"
                            },
                            "statusText": {
                              "description": "HTTP status text.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/try-function-response.yaml"
                      }
                    },
                    "result": {
                      "description": "Matched pattern obtained from the function expression evaluation.",
                      "readOnly": true,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/test-center-functions-try-it-response.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Validation errors](https://techdocs.akamai.com/test-ctr/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "e4bdb007-213d-4573-ab76-4f071b55de59",
                  "status": 400,
                  "title": "Validation error",
                  "type": "validation.error",
                  "errors": [
                    {
                      "requestField": "propertyName",
                      "title": "Required field missing",
                      "type": "required.field.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "404": {
            "description": "[Resource not found error](https://techdocs.akamai.com/test-ctr/reference/404).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "1dcdb168-8837-415e-92bc-31aa36326495",
                  "requestField": "propertyName",
                  "status": 404,
                  "title": "Resource not found",
                  "type": "resource.not.found",
                  "requestValues": [
                    "atc_user1_config"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/functional/test-catalog/conditions": {
      "get": {
        "description": "Return all set of conditions used for creating test cases.",
        "operationId": "get-test-conditions",
        "summary": "Get the test conditions",
        "tags": [
          "Test conditions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-conditions"
        },
        "responses": {
          "200": {
            "description": "The response returns the test catalog conditions.",
            "content": {
              "application/json": {
                "example": {
                  "conditions": [
                    {
                      "conditionExpression": "Response code is one of \"403\""
                    },
                    {
                      "conditionExpression": "Response code is one of \"302,301\""
                    },
                    {
                      "conditionExpression": "Response code is one of \"408\""
                    },
                    {
                      "conditionExpression": "Log request details - Referrer header is not logged"
                    },
                    {
                      "conditionExpression": "Response code is one of \"201,300\""
                    },
                    {
                      "conditionExpression": "Redirect response code is one of \"302\" and location is \"https://www.akamai.com\""
                    },
                    {
                      "conditionExpression": "Content provider code is \"3232424\""
                    },
                    {
                      "conditionExpression": "Log request details - User-Agent header is logged"
                    },
                    {
                      "conditionExpression": "Response code is one of \"200\""
                    },
                    {
                      "conditionExpression": "Variable \"AKA_PM_PROPERTY_NAME\" has a value that ends with \"USER8\" (ignore case)"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Lists conditions created in your organization.",
                  "type": "object",
                  "required": [
                    "conditions"
                  ],
                  "properties": {
                    "conditions": {
                      "description": "Lists supported conditions in your organization.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies a condition included in the test case.",
                        "type": "object",
                        "required": [
                          "conditionExpression"
                        ],
                        "properties": {
                          "conditionExpression": {
                            "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                            "minLength": 1,
                            "type": "string"
                          },
                          "conditionExpressionResolved": {
                            "description": "Condition statement with resolved variables, if applicable.",
                            "minLength": 1,
                            "readOnly": true,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/condition.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/test-conditions.yaml"
                  }
                }
              }
            }
          },
          "403": {
            "description": "[Authorization error](https://techdocs.akamai.com/test-ctr/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a86ef2f3-4ffa-4eef-a041-6558311dd3a2",
                  "status": 403,
                  "title": "Authorization error",
                  "type": "authorization.error",
                  "errors": [
                    {
                      "title": "Required permission missing",
                      "type": "required.permission.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/functional/test-catalog/template": {
      "get": {
        "description": "Returns the test catalog template used for creating conditions. To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
        "operationId": "get-test-catalog-template",
        "summary": "Get the test catalog template",
        "tags": [
          "Test catalog template"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template"
        },
        "responses": {
          "200": {
            "description": "The response returns the test catalog template.",
            "content": {
              "application/json": {
                "example": {
                  "conditionTypes": [
                    {
                      "conditionType": "RESPONSE_CODE",
                      "label": "Response code",
                      "conditionExpressions": [
                        {
                          "conditionExpression": "Response code is one of \"responseCodes\"",
                          "examples": [
                            "Response code is one of \"401, 403, 404, 500, 501, 502\"",
                            "Response code is one of \"200\""
                          ]
                        }
                      ],
                      "placeHolders": [
                        {
                          "isCustomValueSupported": true,
                          "placeHolder": "responseCodes",
                          "valueDataType": "INTEGER",
                          "valueInputType": "MULTIPLE_VALUE",
                          "valueSeparator": ",",
                          "availableValues": [
                            200,
                            300,
                            400,
                            500
                          ]
                        }
                      ]
                    },
                    {
                      "conditionType": "RESPONSE_HEADER",
                      "label": "Response header",
                      "conditionExpressions": [
                        {
                          "conditionExpression": "Response header \"headerName\" exists",
                          "examples": [
                            "Response header \"enter a value\" exists"
                          ]
                        },
                        {
                          "conditionExpression": "Response header \"headerName\" has a value",
                          "examples": [
                            "Response header \"enter a value\" has a value"
                          ]
                        },
                        {
                          "conditionExpression": "Response header \"headerName\" has no value",
                          "examples": [
                            "Response header \"enter a value\" has no value"
                          ]
                        },
                        {
                          "conditionExpression": "Response header \"headerName\" does not exist",
                          "examples": [
                            "Response header \"enter a value\" does not exist"
                          ]
                        },
                        {
                          "conditionExpression": "Response header \"headerName\" has a value that equals \"headerValue\"",
                          "examples": [
                            "Response header \"enter a value\" has a value that equals \"enter a value\""
                          ]
                        },
                        {
                          "conditionExpression": "Response header \"headerName\" has a value that contains \"headerValue\"",
                          "examples": [
                            "Response header \"enter a value\" has a value that contains \"enter a value\""
                          ]
                        },
                        {
                          "conditionExpression": "Response header \"headerName\" has a value that ends with \"headerValue\"",
                          "examples": [
                            "Response header \"enter a value\" has a value that ends with \"enter a value\""
                          ]
                        },
                        {
                          "conditionExpression": "Response header \"headerName\" has a value that begins with \"headerValue\"",
                          "examples": [
                            "Response header \"enter a value\" has a value that begins with \"enter a value\""
                          ]
                        },
                        {
                          "conditionExpression": "Response header \"headerName\" has a value that matches regex \"headerValue\"",
                          "examples": [
                            "Response header \"enter a value\" has a value that matches regex \"enter a value\""
                          ]
                        },
                        {
                          "conditionExpression": "Response header \"headerName\" has a value that does not equal \"headerValue\"",
                          "examples": [
                            "Response header \"enter a value\" has a value that does not equal \"enter a value\""
                          ]
                        },
                        {
                          "conditionExpression": "Response header \"headerName\" has a value that does not contain \"headerValue\"",
                          "examples": [
                            "Response header \"enter a value\" has a value that does not contain \"enter a value\""
                          ]
                        },
                        {
                          "conditionExpression": "Response header \"headerName\" has a value that does not end with \"headerValue\"",
                          "examples": [
                            "Response header \"enter a value\" has a value that does not end with \"enter a value\""
                          ]
                        },
                        {
                          "conditionExpression": "Response header \"headerName\" has a value that does not begin with \"headerValue\"",
                          "examples": [
                            "Response header \"enter a value\" has a value that does not begin with \"enter a value\""
                          ]
                        },
                        {
                          "conditionExpression": "Response header \"headerName\" has a value that does not match regex \"headerValue\"",
                          "examples": [
                            "Response header \"enter a value\" has a value that does not match regex \"enter a value\""
                          ]
                        },
                        {
                          "conditionExpression": "Response header \"headerName\" has a value that equals \"headerValue\" (ignore case)",
                          "examples": [
                            "Response header \"enter a value\" has a value that equals \"enter a value\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "Response header \"headerName\" has a value that contains \"headerValue\" (ignore case)",
                          "examples": [
                            "Response header \"enter a value\" has a value that contains \"enter a value\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "Response header \"headerName\" has a value that ends with \"headerValue\" (ignore case)",
                          "examples": [
                            "Response header \"enter a value\" has a value that ends with \"enter a value\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "Response header \"headerName\" has a value that begins with \"headerValue\" (ignore case)",
                          "examples": [
                            "Response header \"enter a value\" has a value that begins with \"enter a value\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "Response header \"headerName\" has a value that matches regex \"headerValue\" (ignore case)",
                          "examples": [
                            "Response header \"enter a value\" has a value that matches regex \"enter a value\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "Response header \"headerName\" has a value that does not equal \"headerValue\" (ignore case)",
                          "examples": [
                            "Response header \"enter a value\" has a value that does not equal \"enter a value\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "Response header \"headerName\" has a value that does not contain \"headerValue\" (ignore case)",
                          "examples": [
                            "Response header \"enter a value\" has a value that does not contain \"enter a value\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "Response header \"headerName\" has a value that does not end with \"headerValue\" (ignore case)",
                          "examples": [
                            "Response header \"enter a value\" has a value that does not end with \"enter a value\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "Response header \"headerName\" has a value that does not begin with \"headerValue\" (ignore case)",
                          "examples": [
                            "Response header \"enter a value\" has a value that does not begin with \"enter a value\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "Response header \"headerName\" has a value that does not match regex \"headerValue\" (ignore case)",
                          "examples": [
                            "Response header \"enter a value\" has a value that does not match regex \"enter a value\" (ignore case)"
                          ]
                        }
                      ],
                      "placeHolders": [
                        {
                          "isCustomValueSupported": true,
                          "placeHolder": "headerValue",
                          "valueDataType": "STRING",
                          "valueInputType": "SINGLE_VALUE",
                          "availableValues": []
                        },
                        {
                          "isCustomValueSupported": true,
                          "placeHolder": "headerName",
                          "valueDataType": "STRING",
                          "valueInputType": "SINGLE_VALUE",
                          "availableValues": []
                        }
                      ]
                    },
                    {
                      "conditionType": "CACHE_KEY_QUERY_PARAMETERS",
                      "label": "Cache key query parameters",
                      "conditionExpressions": [
                        {
                          "conditionExpression": "Cache key query parameters - query parameters not included",
                          "examples": [
                            "Cache key query parameters - query parameters not included"
                          ]
                        },
                        {
                          "conditionExpression": "Cache key query parameters - query parameters included and are \"queryParameterNames\"",
                          "examples": [
                            "Cache key query parameters - query parameters included and are \"a,b,c\""
                          ]
                        }
                      ],
                      "placeHolders": [
                        {
                          "isCustomValueSupported": true,
                          "placeHolder": "queryParameterNames",
                          "valueDataType": "STRING",
                          "valueInputType": "MULTIPLE_VALUE",
                          "valueSeparator": ",",
                          "availableValues": []
                        }
                      ]
                    },
                    {
                      "conditionType": "CACHING",
                      "label": "Caching",
                      "conditionExpressions": [
                        {
                          "conditionExpression": "Caching option is no-store",
                          "examples": [
                            "Caching option is no-store"
                          ]
                        },
                        {
                          "conditionExpression": "Caching option is bypass-cache",
                          "examples": [
                            "Caching option is bypass-cache"
                          ]
                        },
                        {
                          "conditionExpression": "Caching option is cache with max-age of \"maxAge\" days",
                          "examples": [
                            "Caching option is cache with max-age of \"10\" days"
                          ]
                        },
                        {
                          "conditionExpression": "Caching option is cache with max-age of \"maxAge\" hours",
                          "examples": [
                            "Caching option is cache with max-age of \"10\" hours"
                          ]
                        },
                        {
                          "conditionExpression": "Caching option is cache with max-age of \"maxAge\" seconds",
                          "examples": [
                            "Caching option is cache with max-age of \"10\" seconds"
                          ]
                        },
                        {
                          "conditionExpression": "Caching option is cache with max-age of \"maxAge\" minutes",
                          "examples": [
                            "Caching option is cache with max-age of \"10\" minutes"
                          ]
                        }
                      ],
                      "placeHolders": [
                        {
                          "isCustomValueSupported": true,
                          "placeHolder": "maxAge",
                          "valueDataType": "INTEGER",
                          "valueInputType": "SINGLE_VALUE",
                          "availableValues": []
                        }
                      ]
                    },
                    {
                      "conditionType": "CONTENT_PROVIDER_CODE",
                      "label": "Content provider code",
                      "conditionExpressions": [
                        {
                          "conditionExpression": "Content provider code is \"cpcode\"",
                          "examples": [
                            "Content provider code is \"12345\""
                          ]
                        }
                      ],
                      "placeHolders": [
                        {
                          "isCustomValueSupported": true,
                          "placeHolder": "cpcode",
                          "valueDataType": "INTEGER",
                          "valueInputType": "SINGLE_VALUE",
                          "availableValues": []
                        }
                      ]
                    },
                    {
                      "conditionType": "IGNORE_CASE_IN_CACHE_KEY",
                      "label": "Ignore case in cache key",
                      "placeHolders": [],
                      "conditionExpressions": [
                        {
                          "conditionExpression": "Ignore case in cache key - case is ignored in cache key",
                          "examples": [
                            "Ignore case in cache key - case is ignored in cache key"
                          ]
                        },
                        {
                          "conditionExpression": "Ignore case in cache key - case is not ignored in cache key",
                          "examples": [
                            "Ignore case in cache key - case is not ignored in cache key"
                          ]
                        }
                      ]
                    },
                    {
                      "conditionType": "LAST_MILE_ACCELERATION_(GZIP_COMPRESSION)",
                      "label": "Last mile acceleration (Gzip compression)",
                      "placeHolders": [],
                      "conditionExpressions": [
                        {
                          "conditionExpression": "Last mile acceleration (Gzip compression) - The response is gzipped",
                          "examples": [
                            "Last mile acceleration (Gzip compression) - The response is gzipped"
                          ]
                        },
                        {
                          "conditionExpression": "Last mile acceleration (Gzip compression) - The response is not gzipped",
                          "examples": [
                            "Last mile acceleration (Gzip compression) - The response is not gzipped"
                          ]
                        }
                      ]
                    },
                    {
                      "conditionType": "LOG_REQUEST_DETAILS",
                      "label": "Log request details",
                      "conditionExpressions": [
                        {
                          "conditionExpression": "Log request details - Cookies not logged",
                          "examples": [
                            "Log request details - Cookies not logged"
                          ]
                        },
                        {
                          "conditionExpression": "Log request details - Host header is logged",
                          "examples": [
                            "Log request details - Host header is logged"
                          ]
                        },
                        {
                          "conditionExpression": "Log request details - Custom data is logged",
                          "examples": [
                            "Log request details - Custom data is logged"
                          ]
                        },
                        {
                          "conditionExpression": "Log request details - Referrer header is logged",
                          "examples": [
                            "Log request details - Referrer header is logged"
                          ]
                        },
                        {
                          "conditionExpression": "Log request details - Custom data is not logged",
                          "examples": [
                            "Log request details - Custom data is not logged"
                          ]
                        },
                        {
                          "conditionExpression": "Log request details - Host header is not logged",
                          "examples": [
                            "Log request details - Host header is not logged"
                          ]
                        },
                        {
                          "conditionExpression": "Log request details - User-Agent header is logged",
                          "examples": [
                            "Log request details - User-Agent header is logged"
                          ]
                        },
                        {
                          "conditionExpression": "Log request details - Referrer header is not logged",
                          "examples": [
                            "Log request details - Referrer header is not logged"
                          ]
                        },
                        {
                          "conditionExpression": "Log request details - User-Agent header is not logged",
                          "examples": [
                            "Log request details - User-Agent header is not logged"
                          ]
                        },
                        {
                          "conditionExpression": "Log request details - Cookies logged are \"cookieNames\"",
                          "examples": [
                            "Log request details - Cookies logged are \"cookieNames\""
                          ]
                        },
                        {
                          "conditionExpression": "Log request details - Accept-Language header is logged",
                          "examples": [
                            "Log request details - Accept-Language header is logged"
                          ]
                        },
                        {
                          "conditionExpression": "Log request details - Accept-Language header is not logged",
                          "examples": [
                            "Log request details - Accept-Language header is not logged"
                          ]
                        },
                        {
                          "conditionExpression": "Log request details - Custom data is logged and value is \"customData\"",
                          "examples": [
                            "Log request details - Custom data is logged and value is \"customData\""
                          ]
                        }
                      ],
                      "placeHolders": [
                        {
                          "isCustomValueSupported": true,
                          "placeHolder": "customData",
                          "valueDataType": "STRING",
                          "valueInputType": "SINGLE_VALUE",
                          "availableValues": []
                        },
                        {
                          "isCustomValueSupported": true,
                          "placeHolder": "cookieNames",
                          "valueDataType": "STRING",
                          "valueInputType": "MULTIPLE_VALUE",
                          "valueSeparator": ",",
                          "availableValues": []
                        }
                      ]
                    },
                    {
                      "conditionType": "ORIGIN_SERVER",
                      "label": "Origin server",
                      "conditionExpressions": [
                        {
                          "conditionExpression": "Origin server - Cache key hostname is \"cacheKeyHostname\"",
                          "examples": [
                            "Origin server - Cache key hostname is \"www.example.com\""
                          ]
                        }
                      ],
                      "placeHolders": [
                        {
                          "isCustomValueSupported": true,
                          "placeHolder": "cacheKeyHostname",
                          "valueDataType": "STRING",
                          "valueInputType": "SINGLE_VALUE",
                          "availableValues": []
                        }
                      ]
                    },
                    {
                      "conditionType": "PREFETCH_OBJECTS",
                      "label": "Prefetch objects",
                      "placeHolders": [],
                      "conditionExpressions": [
                        {
                          "conditionExpression": "Prefetch objects - Object prefetching is triggered",
                          "examples": [
                            "Prefetch objects - Object prefetching is triggered"
                          ]
                        },
                        {
                          "conditionExpression": "Prefetch objects - Object prefetching is not triggered",
                          "examples": [
                            "Prefetch objects - Object prefetching is not triggered"
                          ]
                        }
                      ]
                    },
                    {
                      "conditionType": "REDIRECT",
                      "label": "Redirect",
                      "conditionExpressions": [
                        {
                          "conditionExpression": "Redirect response code is one of \"redirectCodes\"",
                          "examples": [
                            "Redirect response code is one of \"301\"",
                            "Redirect response code is one of \"301,302\""
                          ]
                        },
                        {
                          "conditionExpression": "Redirect response code is one of \"redirectCodes\" and location is \"redirectUrl\"",
                          "examples": [
                            "Redirect response code is one of \"301,302\" and location is \"https://www.redirect.example.com/\""
                          ]
                        }
                      ],
                      "placeHolders": [
                        {
                          "isCustomValueSupported": true,
                          "placeHolder": "redirectUrl",
                          "valueDataType": "STRING",
                          "valueInputType": "SINGLE_VALUE",
                          "availableValues": []
                        },
                        {
                          "isCustomValueSupported": true,
                          "placeHolder": "redirectCodes",
                          "valueDataType": "INTEGER",
                          "valueInputType": "MULTIPLE_VALUE",
                          "valueSeparator": ",",
                          "availableValues": [
                            301,
                            302
                          ]
                        }
                      ]
                    },
                    {
                      "conditionType": "SURE_ROUTE",
                      "label": "SureRoute",
                      "placeHolders": [],
                      "conditionExpressions": [
                        {
                          "conditionExpression": "SureRoute is enabled",
                          "examples": [
                            "SureRoute is enabled"
                          ]
                        },
                        {
                          "conditionExpression": "SureRoute is not enabled",
                          "examples": [
                            "SureRoute is not enabled"
                          ]
                        }
                      ]
                    },
                    {
                      "conditionType": "TIERED_DISTRIBUTION",
                      "label": "Tiered distribution",
                      "placeHolders": [],
                      "conditionExpressions": [
                        {
                          "conditionExpression": "Tiered distribution is enabled",
                          "examples": [
                            "Tiered distribution is enabled"
                          ]
                        },
                        {
                          "conditionExpression": "Tiered distribution is not enabled",
                          "examples": [
                            "Tiered distribution is not enabled"
                          ]
                        }
                      ]
                    },
                    {
                      "conditionType": "VARIABLE",
                      "label": "Variable",
                      "conditionExpressions": [
                        {
                          "conditionExpression": "Variable \"variableName\" exists",
                          "examples": [
                            "Variable \"enter a value\" exists"
                          ]
                        },
                        {
                          "conditionExpression": "Variable \"variableName\" has a value",
                          "examples": [
                            "Variable \"enter a value\" has a value"
                          ]
                        },
                        {
                          "conditionExpression": "Variable \"variableName\" has no value",
                          "examples": [
                            "Variable \"enter a value\" has no value"
                          ]
                        },
                        {
                          "conditionExpression": "Variable \"variableName\" does not exist",
                          "examples": [
                            "Variable \"enter a value\" does not exist"
                          ]
                        },
                        {
                          "conditionExpression": "Variable \"variableName\" has a value that equals \"variableValue\"",
                          "examples": [
                            "Variable \"enter a value\" has a value that equals \"enter a value\""
                          ]
                        },
                        {
                          "conditionExpression": "Variable \"variableName\" has a value that contains \"variableValue\"",
                          "examples": [
                            "Variable \"enter a value\" has a value that contains \"enter a value\""
                          ]
                        },
                        {
                          "conditionExpression": "Variable \"variableName\" has a value that ends with \"variableValue\"",
                          "examples": [
                            "Variable \"enter a value\" has a value that ends with \"enter a value\""
                          ]
                        },
                        {
                          "conditionExpression": "Variable \"variableName\" has a value that begins with \"variableValue\"",
                          "examples": [
                            "Variable \"enter a value\" has a value that begins with \"enter a value\""
                          ]
                        },
                        {
                          "conditionExpression": "Variable \"variableName\" has a value that matches regex \"variableValue\"",
                          "examples": [
                            "Variable \"enter a value\" has a value that matches regex \"enter a value\""
                          ]
                        },
                        {
                          "conditionExpression": "Variable \"variableName\" has a value that does not equal \"variableValue\"",
                          "examples": [
                            "Variable \"enter a value\" has a value that does not equal \"enter a value\""
                          ]
                        },
                        {
                          "conditionExpression": "Variable \"variableName\" has a value that does not contain \"variableValue\"",
                          "examples": [
                            "Variable \"enter a value\" has a value that does not contain \"enter a value\""
                          ]
                        },
                        {
                          "conditionExpression": "Variable \"variableName\" has a value that does not end with \"variableValue\"",
                          "examples": [
                            "Variable \"enter a value\" has a value that does not end with \"enter a value\""
                          ]
                        },
                        {
                          "conditionExpression": "Variable \"variableName\" has a value that does not begin with \"variableValue\"",
                          "examples": [
                            "Variable \"enter a value\" has a value that does not begin with \"enter a value\""
                          ]
                        },
                        {
                          "conditionExpression": "Variable \"variableName\" has a value that equals \"variableValue\" (ignore case)",
                          "examples": [
                            "Variable \"enter a value\" has a value that equals \"enter a value\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "Variable \"variableName\" has a value that does not match regex \"variableValue\"",
                          "examples": [
                            "Variable \"enter a value\" has a value that does not match regex \"enter a value\""
                          ]
                        },
                        {
                          "conditionExpression": "Variable \"variableName\" has a value that contains \"variableValue\" (ignore case)",
                          "examples": [
                            "Variable \"enter a value\" has a value that contains \"enter a value\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "Variable \"variableName\" has a value that ends with \"variableValue\" (ignore case)",
                          "examples": [
                            "Variable \"enter a value\" has a value that ends with \"enter a value\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "Variable \"variableName\" has a value that begins with \"variableValue\" (ignore case)",
                          "examples": [
                            "Variable \"enter a value\" has a value that begins with \"enter a value\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "Variable \"variableName\" has a value that matches regex \"variableValue\" (ignore case)",
                          "examples": [
                            "Variable \"enter a value\" has a value that matches regex \"enter a value\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "Variable \"variableName\" has a value that does not equal \"variableValue\" (ignore case)",
                          "examples": [
                            "Variable \"enter a value\" has a value that does not equal \"enter a value\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "Variable \"variableName\" has a value that does not contain \"variableValue\" (ignore case)",
                          "examples": [
                            "Variable \"enter a value\" has a value that does not contain \"enter a value\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "Variable \"variableName\" has a value that does not end with \"variableValue\" (ignore case)",
                          "examples": [
                            "Variable \"enter a value\" has a value that does not end with \"enter a value\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "Variable \"variableName\" has a value that does not begin with \"variableValue\" (ignore case)",
                          "examples": [
                            "Variable \"enter a value\" has a value that does not begin with \"enter a value\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "Variable \"variableName\" has a value that does not match regex \"variableValue\" (ignore case)",
                          "examples": [
                            "Variable \"enter a value\" has a value that does not match regex \"enter a value\" (ignore case)"
                          ]
                        }
                      ],
                      "placeHolders": [
                        {
                          "isCustomValueSupported": true,
                          "placeHolder": "variableName",
                          "valueDataType": "STRING",
                          "valueInputType": "SINGLE_VALUE",
                          "availableValues": []
                        },
                        {
                          "isCustomValueSupported": true,
                          "placeHolder": "variableValue",
                          "valueDataType": "STRING",
                          "valueInputType": "SINGLE_VALUE",
                          "availableValues": []
                        }
                      ]
                    },
                    {
                      "conditionType": "SITE_SHIELD",
                      "label": "SiteShield",
                      "conditionExpressions": [
                        {
                          "conditionExpression": "SiteShield is enabled",
                          "examples": [
                            "SiteShield is enabled"
                          ]
                        },
                        {
                          "conditionExpression": "SiteShield is not enabled",
                          "examples": [
                            "SiteShield is not enabled"
                          ]
                        },
                        {
                          "conditionExpression": "SiteShield is enabled and SiteShield map contains \"siteShieldMap\"",
                          "examples": [
                            "SiteShield is enabled and SiteShield map contains \"s3083.akamaiedge.net\""
                          ]
                        }
                      ],
                      "placeHolders": [
                        {
                          "isCustomValueSupported": true,
                          "placeHolder": "siteShieldMap",
                          "valueDataType": "STRING",
                          "valueInputType": "SINGLE_VALUE",
                          "availableValues": []
                        }
                      ]
                    },
                    {
                      "conditionType": "ALERTED_RULES",
                      "label": "Alerted Rules",
                      "conditionExpressions": [
                        {
                          "conditionExpression": "Alerted rules are \"alertedRules\"",
                          "examples": [
                            "Alerted rules are \"3900000, 3900003, 3900004\""
                          ]
                        },
                        {
                          "conditionExpression": "Alerted rules - at least one of \"alertedRules\" was triggered",
                          "examples": [
                            "Alerted rules - at least one of \"910343, 923747\" was triggered"
                          ]
                        }
                      ],
                      "placeHolders": [
                        {
                          "isCustomValueSupported": true,
                          "placeHolder": "alertedRules",
                          "valueDataType": "STRING",
                          "valueInputType": "MULTIPLE_VALUE",
                          "valueSeparator": ",",
                          "availableValues": []
                        }
                      ]
                    },
                    {
                      "conditionType": "DENIED_RULE",
                      "label": "Denied Rule",
                      "conditionExpressions": [
                        {
                          "conditionExpression": "Denied rule is one of \"deniedRules\"",
                          "examples": [
                            "Denied rule is one of \"3900000, 3900003, 3900004\""
                          ]
                        }
                      ],
                      "placeHolders": [
                        {
                          "isCustomValueSupported": true,
                          "placeHolder": "deniedRules",
                          "valueDataType": "STRING",
                          "valueInputType": "MULTIPLE_VALUE",
                          "valueSeparator": ",",
                          "availableValues": []
                        }
                      ]
                    },
                    {
                      "conditionType": "POLICY_NAME",
                      "label": "Policy Name",
                      "conditionExpressions": [
                        {
                          "conditionExpression": "Policy name is \"policyName\"",
                          "examples": [
                            "Policy name is \"My security policy\""
                          ]
                        }
                      ],
                      "placeHolders": [
                        {
                          "isCustomValueSupported": true,
                          "placeHolder": "policyName",
                          "valueDataType": "STRING",
                          "valueInputType": "SINGLE_VALUE",
                          "availableValues": []
                        }
                      ]
                    },
                    {
                      "conditionType": "API_ID",
                      "label": "API ID",
                      "conditionExpressions": [
                        {
                          "conditionExpression": "API ID is \"apiId\"",
                          "examples": [
                            "API ID is \"api_612107\""
                          ]
                        }
                      ],
                      "placeHolders": [
                        {
                          "isCustomValueSupported": true,
                          "placeHolder": "apiId",
                          "valueDataType": "STRING",
                          "valueInputType": "SINGLE_VALUE",
                          "availableValues": []
                        }
                      ]
                    },
                    {
                      "conditionType": "F_LINE",
                      "label": "f line",
                      "conditionExpressions": [
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value",
                          "examples": [
                            "f line field \"objectStatus\" has a value"
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has no value",
                          "examples": [
                            "f line field \"objectStatus\" has no value"
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that equals \"fFieldValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that equals \"pJxy\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that contains \"fFieldValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that contains \"pJxy\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that ends with \"fFieldValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that ends with \"pJxy\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that begins with \"fFieldValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that begins with \"pJxy\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that matches regex \"fFieldValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that matches regex \"pJxy\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that does not equal \"fFieldValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that does not equal \"pJxy\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that does not contain \"fFieldValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that does not contain \"pJxy\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that does not end with \"fFieldValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that does not end with \"pJxy\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that does not begin with \"fFieldValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that does not begin with \"pJxy\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that equals \"fFieldValue\" (ignore case)",
                          "examples": [
                            "f line field \"objectStatus\" has a value that equals \"pJxy\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that does not match regex \"fFieldValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that does not match regex \"pJxy\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that contains \"fFieldValue\" (ignore case)",
                          "examples": [
                            "f line field \"objectStatus\" has a value that contains \"pJxy\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that ends with \"fFieldValue\" (ignore case)",
                          "examples": [
                            "f line field \"objectStatus\" has a value that ends with \"pJxy\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that begins with \"fFieldValue\" (ignore case)",
                          "examples": [
                            "f line field \"objectStatus\" has a value that begins with \"pJxy\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that matches regex \"fFieldValue\" (ignore case)",
                          "examples": [
                            "f line field \"objectStatus\" has a value that matches regex \"pJxy\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that does not equal \"fFieldValue\" (ignore case)",
                          "examples": [
                            "f line field \"objectStatus\" has a value that does not equal \"pJxy\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that does not contain \"fFieldValue\" (ignore case)",
                          "examples": [
                            "f line field \"objectStatus\" has a value that does not contain \"pJxy\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that does not end with \"fFieldValue\" (ignore case)",
                          "examples": [
                            "f line field \"objectStatus\" has a value that does not end with \"pJxy\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that does not begin with \"fFieldValue\" (ignore case)",
                          "examples": [
                            "f line field \"objectStatus\" has a value that does not begin with \"pJxy\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that does not match regex \"fFieldValue\" (ignore case)",
                          "examples": [
                            "f line field \"objectStatus\" has a value that does not match regex \"pJxy\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value where f line field \"fFilterName\" equals \"fFilterValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value where f line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has no value where f line field \"fFilterName\" equals \"fFilterValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has no value where f line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that equals \"fFieldValue\" where f line field \"fFilterName\" equals \"fFilterValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that equals \"pJxy\" where f line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that contains \"fFieldValue\" where f line field \"fFilterName\" equals \"fFilterValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that contains \"pJxy\" where f line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that ends with \"fFieldValue\" where f line field \"fFilterName\" equals \"fFilterValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that ends with \"pJxy\" where f line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that begins with \"fFieldValue\" where f line field \"fFilterName\" equals \"fFilterValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that begins with \"pJxy\" where f line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that matches regex \"fFieldValue\" where f line field \"fFilterName\" equals \"fFilterValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that matches regex \"pJxy\" where f line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that does not equal \"fFieldValue\" where f line field \"fFilterName\" equals \"fFilterValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that does not equal \"pJxy\" where f line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that does not contain \"fFieldValue\" where f line field \"fFilterName\" equals \"fFilterValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that does not contain \"pJxy\" where f line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that does not end with \"fFieldValue\" where f line field \"fFilterName\" equals \"fFilterValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that does not end with \"pJxy\" where f line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that does not begin with \"fFieldValue\" where f line field \"fFilterName\" equals \"fFilterValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that does not begin with \"pJxy\" where f line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that does not match regex \"fFieldValue\" where f line field \"fFilterName\" equals \"fFilterValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that does not match regex \"pJxy\" where f line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that equals \"fFieldValue\" (ignore case) where f line field \"fFilterName\" equals \"fFilterValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that equals \"pJxy\" (ignore case) where f line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that contains \"fFieldValue\" (ignore case) where f line field \"fFilterName\" equals \"fFilterValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that contains \"pJxy\" (ignore case) where f line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that ends with \"fFieldValue\" (ignore case) where f line field \"fFilterName\" equals \"fFilterValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that ends with \"pJxy\" (ignore case) where f line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that begins with \"fFieldValue\" (ignore case) where f line field \"fFilterName\" equals \"fFilterValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that begins with \"pJxy\" (ignore case) where f line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that matches regex \"fFieldValue\" (ignore case) where f line field \"fFilterName\" equals \"fFilterValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that matches regex \"pJxy\" (ignore case) where f line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that does not equal \"fFieldValue\" (ignore case) where f line field \"fFilterName\" equals \"fFilterValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that does not equal \"pJxy\" (ignore case) where f line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that does not contain \"fFieldValue\" (ignore case) where f line field \"fFilterName\" equals \"fFilterValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that does not contain \"pJxy\" (ignore case) where f line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that does not end with \"fFieldValue\" (ignore case) where f line field \"fFilterName\" equals \"fFilterValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that does not end with \"pJxy\" (ignore case) where f line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that does not begin with \"fFieldValue\" (ignore case) where f line field \"fFilterName\" equals \"fFilterValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that does not begin with \"pJxy\" (ignore case) where f line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "f line field \"fFieldName\" has a value that does not match regex \"fFieldValue\" (ignore case) where f line field \"fFilterName\" equals \"fFilterValue\"",
                          "examples": [
                            "f line field \"objectStatus\" has a value that does not match regex \"pJxy\" (ignore case) where f line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        }
                      ],
                      "placeHolders": [
                        {
                          "isCustomValueSupported": true,
                          "placeHolder": "fFieldValue",
                          "valueDataType": "STRING",
                          "valueInputType": "SINGLE_VALUE",
                          "availableValues": []
                        },
                        {
                          "isCustomValueSupported": false,
                          "placeHolder": "fFilterName",
                          "valueDataType": "STRING",
                          "valueInputType": "SINGLE_VALUE",
                          "availableValues": [
                            "Log type",
                            "Client IP",
                            "Forward Hostname",
                            "Forward IP",
                            "HTTP method",
                            "ARL",
                            "HTTP status",
                            "Content type",
                            "Bytes received",
                            "Time taken",
                            "Error",
                            "SSL version",
                            "Host header",
                            "Object status",
                            "Object status 2",
                            "Edge IP",
                            "Turnaround time"
                          ]
                        },
                        {
                          "isCustomValueSupported": true,
                          "placeHolder": "fFilterValue",
                          "valueDataType": "STRING",
                          "valueInputType": "SINGLE_VALUE",
                          "availableValues": []
                        },
                        {
                          "isCustomValueSupported": false,
                          "placeHolder": "fFieldName",
                          "valueDataType": "STRING",
                          "valueInputType": "SINGLE_VALUE",
                          "availableValues": [
                            "Log type",
                            "Client IP",
                            "Forward Hostname",
                            "Forward IP",
                            "HTTP method",
                            "ARL",
                            "HTTP status",
                            "Content type",
                            "Bytes received",
                            "Time taken",
                            "Error",
                            "SSL version",
                            "Host header",
                            "Object status",
                            "Object status 2",
                            "Edge IP",
                            "Turnaround time"
                          ]
                        }
                      ]
                    },
                    {
                      "conditionType": "FORWARD_ERRORS",
                      "label": "Forward errors",
                      "placeHolders": [],
                      "conditionExpressions": [
                        {
                          "conditionExpression": "Forward errors do not occur for the request to origin",
                          "examples": [
                            "Forward errors do not occur for the request to origin"
                          ]
                        }
                      ]
                    },
                    {
                      "conditionType": "R_LINE",
                      "label": "r line",
                      "conditionExpressions": [
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value",
                          "examples": [
                            "r line field \"objectStatus\" has a value"
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has no value",
                          "examples": [
                            "r line field \"objectStatus\" has no value"
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that equals \"rFieldValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that equals \"pJxy\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that contains \"rFieldValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that contains \"pJxy\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that ends with \"rFieldValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that ends with \"pJxy\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that begins with \"rFieldValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that begins with \"pJxy\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that matches regex \"rFieldValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that matches regex \"pJxy\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that does not equal \"rFieldValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that does not equal \"pJxy\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that does not contain \"rFieldValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that does not contain \"pJxy\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that does not end with \"rFieldValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that does not end with \"pJxy\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that does not begin with \"rFieldValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that does not begin with \"pJxy\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that does not match regex \"rFieldValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that does not match regex \"pJxy\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that equals \"rFieldValue\" (ignore case)",
                          "examples": [
                            "r line field \"objectStatus\" has a value that equals \"pJxy\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that contains \"rFieldValue\" (ignore case)",
                          "examples": [
                            "r line field \"objectStatus\" has a value that contains \"pJxy\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that ends with \"rFieldValue\" (ignore case)",
                          "examples": [
                            "r line field \"objectStatus\" has a value that ends with \"pJxy\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that begins with \"rFieldValue\" (ignore case)",
                          "examples": [
                            "r line field \"objectStatus\" has a value that begins with \"pJxy\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that matches regex \"rFieldValue\" (ignore case)",
                          "examples": [
                            "r line field \"objectStatus\" has a value that matches regex \"pJxy\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that does not equal \"rFieldValue\" (ignore case)",
                          "examples": [
                            "r line field \"objectStatus\" has a value that does not equal \"pJxy\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that does not contain \"rFieldValue\" (ignore case)",
                          "examples": [
                            "r line field \"objectStatus\" has a value that does not contain \"pJxy\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that does not end with \"rFieldValue\" (ignore case)",
                          "examples": [
                            "r line field \"objectStatus\" has a value that does not end with \"pJxy\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that does not begin with \"rFieldValue\" (ignore case)",
                          "examples": [
                            "r line field \"objectStatus\" has a value that does not begin with \"pJxy\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that does not match regex \"rFieldValue\" (ignore case)",
                          "examples": [
                            "r line field \"objectStatus\" has a value that does not match regex \"pJxy\" (ignore case)"
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value where r line field \"rFilterName\" equals \"rFilterValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value where r line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has no value where r line field \"rFilterName\" equals \"rFilterValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has no value where r line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that equals \"rFieldValue\" where r line field \"rFilterName\" equals \"rFilterValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that equals \"pJxy\" where r line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that contains \"rFieldValue\" where r line field \"rFilterName\" equals \"rFilterValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that contains \"pJxy\" where r line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that ends with \"rFieldValue\" where r line field \"rFilterName\" equals \"rFilterValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that ends with \"pJxy\" where r line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that begins with \"rFieldValue\" where r line field \"rFilterName\" equals \"rFilterValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that begins with \"pJxy\" where r line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that matches regex \"rFieldValue\" where r line field \"rFilterName\" equals \"rFilterValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that matches regex \"pJxy\" where r line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that does not equal \"rFieldValue\" where r line field \"rFilterName\" equals \"rFilterValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that does not equal \"pJxy\" where r line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that does not contain \"rFieldValue\" where r line field \"rFilterName\" equals \"rFilterValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that does not contain \"pJxy\" where r line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that does not end with \"rFieldValue\" where r line field \"rFilterName\" equals \"rFilterValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that does not end with \"pJxy\" where r line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that does not begin with \"rFieldValue\" where r line field \"rFilterName\" equals \"rFilterValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that does not begin with \"pJxy\" where r line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that does not match regex \"rFieldValue\" where r line field \"rFilterName\" equals \"rFilterValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that does not match regex \"pJxy\" where r line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that equals \"rFieldValue\" (ignore case) where r line field \"rFilterName\" equals \"rFilterValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that equals \"pJxy\" (ignore case) where r line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that contains \"rFieldValue\" (ignore case) where r line field \"rFilterName\" equals \"rFilterValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that contains \"pJxy\" (ignore case) where r line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that ends with \"rFieldValue\" (ignore case) where r line field \"rFilterName\" equals \"rFilterValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that ends with \"pJxy\" (ignore case) where r line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that begins with \"rFieldValue\" (ignore case) where r line field \"rFilterName\" equals \"rFilterValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that begins with \"pJxy\" (ignore case) where r line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that matches regex \"rFieldValue\" (ignore case) where r line field \"rFilterName\" equals \"rFilterValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that matches regex \"pJxy\" (ignore case) where r line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that does not equal \"rFieldValue\" (ignore case) where r line field \"rFilterName\" equals \"rFilterValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that does not equal \"pJxy\" (ignore case) where r line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that does not contain \"rFieldValue\" (ignore case) where r line field \"rFilterName\" equals \"rFilterValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that does not contain \"pJxy\" (ignore case) where r line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that does not end with \"rFieldValue\" (ignore case) where r line field \"rFilterName\" equals \"rFilterValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that does not end with \"pJxy\" (ignore case) where r line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that does not begin with \"rFieldValue\" (ignore case) where r line field \"rFilterName\" equals \"rFilterValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that does not begin with \"pJxy\" (ignore case) where r line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        },
                        {
                          "conditionExpression": "r line field \"rFieldName\" has a value that does not match regex \"rFieldValue\" (ignore case) where r line field \"rFilterName\" equals \"rFilterValue\"",
                          "examples": [
                            "r line field \"objectStatus\" has a value that does not match regex \"pJxy\" (ignore case) where r line field \"ARL\" equals \"www.atcuser1.com/catalog/University_Header.png\""
                          ]
                        }
                      ],
                      "placeHolders": [
                        {
                          "isCustomValueSupported": true,
                          "placeHolder": "rFieldValue",
                          "valueDataType": "STRING",
                          "valueInputType": "SINGLE_VALUE",
                          "availableValues": []
                        },
                        {
                          "isCustomValueSupported": true,
                          "placeHolder": "rFilterValue",
                          "valueDataType": "STRING",
                          "valueInputType": "SINGLE_VALUE",
                          "availableValues": []
                        },
                        {
                          "isCustomValueSupported": false,
                          "placeHolder": "rFilterName",
                          "valueDataType": "STRING",
                          "valueInputType": "SINGLE_VALUE",
                          "availableValues": [
                            "Log type",
                            "Client IP",
                            "HTTP method",
                            "ARL",
                            "HTTP status",
                            "Content type",
                            "Bytes served",
                            "Object size",
                            "Time taken",
                            "Referer",
                            "User agent",
                            "Cookie",
                            "Error",
                            "SSL version",
                            "Host header",
                            "Object status",
                            "Object status 2",
                            "Object status 3",
                            "Edge IP",
                            "Turnaround time",
                            "Content bytes served"
                          ]
                        },
                        {
                          "isCustomValueSupported": false,
                          "placeHolder": "rFieldName",
                          "valueDataType": "STRING",
                          "valueInputType": "SINGLE_VALUE",
                          "availableValues": [
                            "Log type",
                            "Client IP",
                            "HTTP method",
                            "ARL",
                            "HTTP status",
                            "Content type",
                            "Bytes served",
                            "Object size",
                            "Time taken",
                            "Referer",
                            "User agent",
                            "Cookie",
                            "Error",
                            "SSL version",
                            "Host header",
                            "Object status",
                            "Object status 2",
                            "Object status 3",
                            "Edge IP",
                            "Turnaround time",
                            "Content bytes served"
                          ]
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains the test catalog template used to create a condition expression for a test case. Condition expressions have a sentence-like structure. The template provides the list of supported condition expressions along with additional information on input needed from you.",
                  "type": "object",
                  "required": [
                    "conditionTypes"
                  ],
                  "properties": {
                    "conditionTypes": {
                      "description": "Lists supported condition types and their details.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "conditionType",
                          "conditionExpressions",
                          "placeHolders"
                        ],
                        "properties": {
                          "conditionExpressions": {
                            "description": "Lists supported condition expressions and examples.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "conditionExpression",
                                "examples"
                              ],
                              "properties": {
                                "conditionExpression": {
                                  "description": "Condition expression template.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "examples": {
                                  "description": "Lists examples of condition expressions.",
                                  "minItems": 1,
                                  "type": "array",
                                  "items": {
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "conditionType": {
                            "description": "Unique name for the condition type. To learn more about it, see the list of [available conditions](https://techdocs.akamai.com/test-ctr/docs/functional-concepts#conditions).",
                            "minLength": 1,
                            "type": "string"
                          },
                          "label": {
                            "description": "Label for the condition type.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "placeHolders": {
                            "description": "Lists details on supported values for you to provide instead of placeholders in `conditionExpression`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "placeHolder",
                                "valueInputType",
                                "isCustomValueSupported",
                                "valueDataType",
                                "availableValues"
                              ],
                              "properties": {
                                "availableValues": {
                                  "description": "Lists predefined values you can use instead of the placeholder.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "oneOf": [
                                      {
                                        "title": "String",
                                        "type": "string"
                                      },
                                      {
                                        "title": "Integer",
                                        "type": "integer"
                                      }
                                    ]
                                  }
                                },
                                "isCustomValueSupported": {
                                  "description": "Whether you can provide your own values, or if you're limited to values listed in `availableValues`.",
                                  "type": "boolean"
                                },
                                "placeHolder": {
                                  "description": "Placeholder name, the same as in `conditionExpression`.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "valueDataType": {
                                  "description": "Specifies whether `availableValues` are `STRING` or `INTEGER`. This also specifies the type of data you need to provide instead of placeholders, if `isCustomValueSupported` is `true`.",
                                  "type": "string",
                                  "enum": [
                                    "STRING",
                                    "INTEGER"
                                  ]
                                },
                                "valueInputType": {
                                  "description": "Specifies whether `valueDataType` supports `SINGLE_VALUE` or `MULTIPLE_VALUE`.",
                                  "type": "string",
                                  "enum": [
                                    "SINGLE_VALUE",
                                    "MULTIPLE_VALUE"
                                  ]
                                },
                                "valueSeparator": {
                                  "description": "Specifies the separator when `valueInputType` is `MULTIPLE_VALUE`.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/test-catalog-template.yaml"
                  }
                }
              }
            }
          },
          "403": {
            "description": "[Authorization error](https://techdocs.akamai.com/test-ctr/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a86ef2f3-4ffa-4eef-a041-6558311dd3a2",
                  "status": 403,
                  "title": "Authorization error",
                  "type": "authorization.error",
                  "errors": [
                    {
                      "title": "Required permission missing",
                      "type": "required.permission.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/functional/test-requests": {
      "get": {
        "description": "Lists test requests created in your organization. The list can also include deleted test requests that you can restore. The response is an array of objects, each keyed by `testRequestId`.",
        "operationId": "get-test-requests",
        "summary": "Get the test requests",
        "tags": [
          "Test requests"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-requests"
        },
        "responses": {
          "200": {
            "description": "The response lists test requests.",
            "content": {
              "application/json": {
                "example": {
                  "testRequests": [
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "http://www.atcuser20.akamaiu.com/",
                      "tags": [
                        "atcuser20_bepersso"
                      ],
                      "requestHeaders": [
                        {
                          "headerAction": "MODIFY",
                          "headerName": "User-Agent",
                          "headerValue": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.70 Safari/537.36 pragmaallow"
                        }
                      ]
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "http://www.atcuser3.akamaiu.com/"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "http://kraovp.gsshappylearning.com/akamai/sureroute-test-object.html"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/tools/build-price/trims.aspx?ModelName=HR-V&modelYear=2017"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/mobile/future-cars"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/civic-sedan/price.aspx"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/2018/civic-type-r"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/2017/civic-coupe*"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/tools/build-price/trims.aspx?ModelName=Accord%20Coupe&modelYear=2017"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "http://www.atcuser13.akamaiu.com/"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/2018/civic-hatchback/"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/eShopping/offers.aspx?ft=1&ZipCode=123"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/pilot/photo-tour.aspx"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/mobile/pilot"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/future-cars/hr-v"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/civic-sedan/videos.aspx"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/civic-coupe/brochure-confirmation.aspx"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/mobile/accord-coupe"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/fit/features.aspx"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/fit-ev/asdadsad"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/eShopping/offers.aspx?ft=1&DealerNumber=123&ZipCode=123"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/accord-coupe/specifications.aspx"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/-/media/Honda-Automobiles/Vehicles/2019/Civic%20Si%20Sedan/AW/Carshot/carshot_CivicSiSedan_front_CIVICSI4DR_2019_AegeanBlueMetallic_FC1E5KJW_B-593M.png"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/-/media/Honda-Automobiles/Vehicles/2019/Civic%20Coupe/AW/Carshot/carshot_CivicCoupe_front_CIVIC15T2DTOURING_2019_PlatinumWhitePearl_FC3B9KKNW_NH-883P.png"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/2018/clarity-electric/"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/2017/civic-si-sedan*"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/mobile/information/preference-center/thisisatestpath?testquery=test"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/hr-v/price.aspx"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/2018/clarity-fuel-cell"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "http://www.atcuser17.akamaiu.com/products",
                      "tags": [
                        "Products"
                      ]
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "http://www.atcuser10.akamaiu.com/akamaiflowershop"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/",
                      "tags": [
                        "Basic-Test"
                      ],
                      "requestHeaders": [
                        {
                          "headerAction": "ADD",
                          "headerName": "Pragma",
                          "headerValue": "akamai-x-cache-on, akamai-x-cache-remote-on, akamai-x-check-cacheable, akamai-x-get-cache-key, akamai-x-get-true-cache-key, akamai-x-get-extracted-values, akamai-x-get-request-id, akamai-x-get-client-ip, akamai-x-feo-trace"
                        }
                      ]
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "http://www.atcuser17.akamaiu.com/fooo1",
                      "tags": [
                        "baseURL",
                        "test2"
                      ]
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "http://www.atcuser20.akamaiu.com/akamaiflowershop/product/category/index5a21.html?TESTCENTER=20"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://kraovp.gsshappylearning.com/"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "http://kraovp.gsshappylearning.com/images/6.jpg"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "http://kraovp.gsshappylearning.com/images/12.jpg"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "http://kraovp.gsshappylearning.com/js/jquery.min.js"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/gmentsso/images/gm_logo.gif"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/civic-coupe/performance.aspx"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://www.atcuser17.akamaiu.com/2017/civic-si-coupe*"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "http://atctester.aahoon.com/"
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "http://www.atcuser8.akamaiu.com/akamaiflowershop/image/cache/WoodAnemone-120x120.jpg",
                      "tags": [
                        "atcuser8_jpg"
                      ]
                    },
                    {
                      "requestMethod": "GET",
                      "testRequestUrl": "http://www.atcclone.akamaiu.com/13342",
                      "tags": [
                        "new",
                        "test"
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Lists test requests created in your organization.",
                  "type": "object",
                  "required": [
                    "testRequests"
                  ],
                  "properties": {
                    "testRequests": {
                      "description": "Lists supported test requests in your organization.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies a test request included in the test case.",
                        "type": "object",
                        "required": [
                          "testRequestUrl",
                          "requestMethod"
                        ],
                        "properties": {
                          "encodeRequestBody": {
                            "default": true,
                            "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                            "nullable": true,
                            "type": "boolean"
                          },
                          "requestBody": {
                            "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                            "maxLength": 4000,
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "requestBodyResolved": {
                            "description": "Value of test request body after resolving all variables.",
                            "minLength": 1,
                            "nullable": true,
                            "readOnly": true,
                            "type": "string"
                          },
                          "requestHeaders": {
                            "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "headerName",
                                "headerValue",
                                "headerAction"
                              ],
                              "properties": {
                                "headerAction": {
                                  "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                  "type": "string",
                                  "enum": [
                                    "ADD",
                                    "MODIFY",
                                    "FILTER"
                                  ]
                                },
                                "headerName": {
                                  "description": "Name of the request header.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "headerNameResolved": {
                                  "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                  "minLength": 1,
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "headerValue": {
                                  "description": "Value of the request header.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "headerValueResolved": {
                                  "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                  "minLength": 1,
                                  "readOnly": true,
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "requestMethod": {
                            "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                            "type": "string",
                            "enum": [
                              "HEAD",
                              "GET",
                              "POST"
                            ]
                          },
                          "tags": {
                            "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "testRequestUrl": {
                            "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                            "maxLength": 2048,
                            "minLength": 1,
                            "type": "string"
                          },
                          "testRequestUrlResolved": {
                            "description": "Value of test request URL after resolving all variables.",
                            "minLength": 1,
                            "nullable": true,
                            "readOnly": true,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/test-request.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/test-requests.yaml"
                  }
                }
              }
            }
          },
          "403": {
            "description": "[Authorization error](https://techdocs.akamai.com/test-ctr/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a86ef2f3-4ffa-4eef-a041-6558311dd3a2",
                  "status": 403,
                  "title": "Authorization error",
                  "type": "authorization.error",
                  "errors": [
                    {
                      "title": "Required permission missing",
                      "type": "required.permission.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/functional/test-suites": {
      "post": {
        "description": "Creates an empty test suite.",
        "operationId": "post-test-suites",
        "summary": "Create a test suite",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-suites"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "isLocked": false,
                "isStateful": false,
                "testSuiteDescription": "This test suite performs basic check of www.user8.example.com",
                "testSuiteName": "www.user8.example.com test suite",
                "configs": {
                  "propertyManager": {
                    "propertyName": "config_user8",
                    "propertyVersion": 4
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "Specifies a test suite.",
                "type": "object",
                "required": [
                  "testSuiteName",
                  "isLocked",
                  "isStateful"
                ],
                "properties": {
                  "configs": {
                    "additionalProperties": false,
                    "description": "Specifies a Property Manager property version to associate with a test suite.",
                    "type": "object",
                    "required": [
                      "propertyManager"
                    ],
                    "properties": {
                      "propertyManager": {
                        "additionalProperties": false,
                        "description": "Specifies a property version associated with a test suite.",
                        "type": "object",
                        "properties": {
                          "propertyId": {
                            "description": "Identifies the property. To get this value, run the [List properties](https://techdocs.akamai.com/property-mgr/reference/get-properties) operation in the Property Manager API.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "propertyName": {
                            "description": "Name of the property. To get this value, run the [List properties](https://techdocs.akamai.com/property-mgr/reference/get-properties) operation in the Property Manager API.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "propertyVersion": {
                            "description": "Version of the property. To get this value, run the [List properties](https://techdocs.akamai.com/property-mgr/reference/get-properties) operation in the Property Manager API.",
                            "minimum": 1,
                            "type": "integer"
                          }
                        },
                        "oneOf": [
                          {
                            "title": "Property ID and version",
                            "required": [
                              "propertyId",
                              "propertyVersion"
                            ]
                          },
                          {
                            "title": "Property name and version",
                            "required": [
                              "propertyName",
                              "propertyVersion"
                            ]
                          }
                        ]
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/configs-create.yaml"
                    }
                  },
                  "isLocked": {
                    "description": "Locks the test suite so that only designated owners or editors can modify it.",
                    "example": "{{isLocked}}",
                    "type": "boolean"
                  },
                  "isStateful": {
                    "description": "Sets the test suite to be run statefully, retaining cookies and session data for subsequent test cases within the test suite.",
                    "example": "{{isStateful}}",
                    "type": "boolean"
                  },
                  "testSuiteDescription": {
                    "default": null,
                    "description": "Description of the test suite. It's `null` for test suites without descriptions. ",
                    "example": "{{testSuiteDescription}}",
                    "maxLength": 4000,
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "testSuiteName": {
                    "description": "Unique name for each test suite.",
                    "example": "{{testSuiteName}}",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/test-suite-create.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The response provides the created test suite.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "hgildong",
                  "createdDate": "2021-07-06T10:28:13+0000",
                  "executableTestCaseCount": 1,
                  "isLocked": false,
                  "isStateful": false,
                  "modifiedBy": "adevi",
                  "modifiedDate": "2021-07-06T10:29:20+0000",
                  "testSuiteDescription": "This test suite performs basic check of www.user8.example.com",
                  "testSuiteId": 284,
                  "testSuiteName": "www.user8.example.com test suite",
                  "configs": {
                    "propertyManager": {
                      "propertyId": 1234,
                      "propertyName": "config_user8",
                      "propertyVersion": 4
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies a test suite.",
                  "type": "object",
                  "required": [
                    "testSuiteId",
                    "testSuiteName",
                    "isLocked",
                    "isStateful",
                    "executableTestCaseCount",
                    "createdBy",
                    "createdDate"
                  ],
                  "properties": {
                    "configs": {
                      "additionalProperties": false,
                      "default": null,
                      "description": "Specifies the Property Manager property version associated with the test suite. It's `null` for test suites with no properties associated. ",
                      "nullable": true,
                      "type": "object",
                      "required": [
                        "propertyManager"
                      ],
                      "properties": {
                        "propertyManager": {
                          "additionalProperties": false,
                          "description": "Specifies the property version associated with the test suite.",
                          "type": "object",
                          "required": [
                            "propertyId",
                            "propertyName",
                            "propertyVersion"
                          ],
                          "properties": {
                            "propertyId": {
                              "description": "Identifies a Property Manager property.",
                              "minimum": 1,
                              "type": "integer"
                            },
                            "propertyName": {
                              "description": "Name of the property.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "propertyVersion": {
                              "description": "Version of the property.",
                              "minimum": 1,
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/configs.yaml"
                      }
                    },
                    "createdBy": {
                      "description": "Username who created the item.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/createdBy.yaml"
                      }
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the item was created.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/createdDate.yaml"
                      }
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the item.",
                      "minLength": 1,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/deletedBy.yaml"
                      }
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the item was deleted.",
                      "format": "date-time",
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/deletedDate.yaml"
                      }
                    },
                    "executableTestCaseCount": {
                      "description": "Number of included test cases executable in a test run. To learn more, see [Variable groups](https://techdocs.akamai.com/test-ctr/reference/variables-overview#variable-groups).",
                      "minimum": 0,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "isLocked": {
                      "description": "Locks the test suite so that only designated owners or editors can modify it.",
                      "type": "boolean"
                    },
                    "isStateful": {
                      "description": "Sets the test suite to be run statefully, retaining cookies and session data for subsequent test cases within the test suite.",
                      "type": "boolean"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the item.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/modifiedBy.yaml"
                      }
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the item was last modified.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/modifiedDate.yaml"
                      }
                    },
                    "testSuiteDescription": {
                      "default": null,
                      "description": "Description of the test suite. It's `null` for test suites without descriptions. ",
                      "maxLength": 4000,
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "testSuiteId": {
                      "description": "Identifies a test suite.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "testSuiteName": {
                      "description": "Unique name for each test suite.",
                      "maxLength": 100,
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/test-suite.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Validation errors](https://techdocs.akamai.com/test-ctr/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "e4bdb007-213d-4573-ab76-4f071b55de59",
                  "status": 400,
                  "title": "Validation error",
                  "type": "validation.error",
                  "errors": [
                    {
                      "requestField": "propertyName",
                      "title": "Required field missing",
                      "type": "required.field.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "403": {
            "description": "[Authorization error](https://techdocs.akamai.com/test-ctr/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a86ef2f3-4ffa-4eef-a041-6558311dd3a2",
                  "status": 403,
                  "title": "Authorization error",
                  "type": "authorization.error",
                  "errors": [
                    {
                      "title": "Required permission missing",
                      "type": "required.permission.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "description": "[Resource not found error](https://techdocs.akamai.com/test-ctr/reference/404).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "1dcdb168-8837-415e-92bc-31aa36326495",
                  "requestField": "propertyName",
                  "status": 404,
                  "title": "Resource not found",
                  "type": "resource.not.found",
                  "requestValues": [
                    "atc_user1_config"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists test suites created in your organization. The list can also include deleted test suites you can restore. The response contains an array of objects, each keyed by `testSuiteId`. You can use these IDs to [Get a test suite with child objects](https://techdocs.akamai.com/test-ctr/reference/get-test-suites-with-child-objects).",
        "operationId": "get-test-suites",
        "summary": "List test suites",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-suites"
        },
        "responses": {
          "200": {
            "description": "The response lists test suites.",
            "content": {
              "application/json": {
                "example": {
                  "testSuites": [
                    {
                      "createdBy": "mrossi",
                      "createdDate": "2021-07-06T10:28:13+0000",
                      "executableTestCaseCount": 1,
                      "isLocked": false,
                      "isStateful": false,
                      "modifiedBy": "jsmith",
                      "modifiedDate": "2021-07-06T10:29:20+0000",
                      "testSuiteDescription": "This test suite performs basic check of www.user8.example.com",
                      "testSuiteId": 284,
                      "testSuiteName": "www.user8.example.com test suite",
                      "configs": {
                        "propertyManager": {
                          "propertyId": 1234,
                          "propertyName": "config_user8",
                          "propertyVersion": 4
                        }
                      }
                    },
                    {
                      "createdBy": "jsmith",
                      "createdDate": "2021-07-06T10:28:13+0000",
                      "executableTestCaseCount": 1,
                      "isLocked": false,
                      "isStateful": false,
                      "modifiedBy": "jsmith",
                      "modifiedDate": "2021-07-06T10:29:20+0000",
                      "testSuiteDescription": "This test suite validates caching of images used in www.user8.example.com",
                      "testSuiteId": 317,
                      "testSuiteName": "www.user8.example.com images test suite"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains test suites created in your organization.",
                  "type": "object",
                  "required": [
                    "testSuites"
                  ],
                  "properties": {
                    "testSuites": {
                      "description": "Lists test suites created in your organization and their details.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies a test suite.",
                        "type": "object",
                        "required": [
                          "testSuiteId",
                          "testSuiteName",
                          "isLocked",
                          "isStateful",
                          "executableTestCaseCount",
                          "createdBy",
                          "createdDate"
                        ],
                        "properties": {
                          "configs": {
                            "additionalProperties": false,
                            "default": null,
                            "description": "Specifies the Property Manager property version associated with the test suite. It's `null` for test suites with no properties associated. ",
                            "nullable": true,
                            "type": "object",
                            "required": [
                              "propertyManager"
                            ],
                            "properties": {
                              "propertyManager": {
                                "additionalProperties": false,
                                "description": "Specifies the property version associated with the test suite.",
                                "type": "object",
                                "required": [
                                  "propertyId",
                                  "propertyName",
                                  "propertyVersion"
                                ],
                                "properties": {
                                  "propertyId": {
                                    "description": "Identifies a Property Manager property.",
                                    "minimum": 1,
                                    "type": "integer"
                                  },
                                  "propertyName": {
                                    "description": "Name of the property.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "propertyVersion": {
                                    "description": "Version of the property.",
                                    "minimum": 1,
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/configs.yaml"
                            }
                          },
                          "createdBy": {
                            "description": "Username who created the item.",
                            "minLength": 1,
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/createdBy.yaml"
                            }
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the item was created.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/createdDate.yaml"
                            }
                          },
                          "deletedBy": {
                            "description": "Username who last deleted the item.",
                            "minLength": 1,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/deletedBy.yaml"
                            }
                          },
                          "deletedDate": {
                            "description": "ISO 8601 timestamp indicating when the item was deleted.",
                            "format": "date-time",
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/deletedDate.yaml"
                            }
                          },
                          "executableTestCaseCount": {
                            "description": "Number of included test cases executable in a test run. To learn more, see [Variable groups](https://techdocs.akamai.com/test-ctr/reference/variables-overview#variable-groups).",
                            "minimum": 0,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "isLocked": {
                            "description": "Locks the test suite so that only designated owners or editors can modify it.",
                            "type": "boolean"
                          },
                          "isStateful": {
                            "description": "Sets the test suite to be run statefully, retaining cookies and session data for subsequent test cases within the test suite.",
                            "type": "boolean"
                          },
                          "modifiedBy": {
                            "description": "Username who last modified the item.",
                            "minLength": 1,
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/modifiedBy.yaml"
                            }
                          },
                          "modifiedDate": {
                            "description": "ISO 8601 timestamp indicating when the item was last modified.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/modifiedDate.yaml"
                            }
                          },
                          "testSuiteDescription": {
                            "default": null,
                            "description": "Description of the test suite. It's `null` for test suites without descriptions. ",
                            "maxLength": 4000,
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "testSuiteId": {
                            "description": "Identifies a test suite.",
                            "minimum": 1,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "testSuiteName": {
                            "description": "Unique name for each test suite.",
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/test-suite.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/test-suites.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Validation errors](https://techdocs.akamai.com/test-ctr/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "e4bdb007-213d-4573-ab76-4f071b55de59",
                  "status": 400,
                  "title": "Validation error",
                  "type": "validation.error",
                  "errors": [
                    {
                      "requestField": "propertyName",
                      "title": "Required field missing",
                      "type": "required.field.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "403": {
            "description": "[Authorization error](https://techdocs.akamai.com/test-ctr/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a86ef2f3-4ffa-4eef-a041-6558311dd3a2",
                  "status": 403,
                  "title": "Authorization error",
                  "type": "authorization.error",
                  "errors": [
                    {
                      "title": "Required permission missing",
                      "type": "required.permission.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "Includes items deleted within the last 30 days, which you can restore, `false` by default.",
            "example": "{{includeRecentlyDeleted}}",
            "in": "query",
            "name": "includeRecentlyDeleted",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/includeRecentlyDeleted-query.yaml"
            }
          },
          {
            "description": "Unique identifier for property associated with the test suite to filter the list by. You can combine this parameter with `propertyVersion`. Use either this parameter or `propertyName` to specify the property.",
            "example": "{{propertyId}}",
            "in": "query",
            "name": "propertyId",
            "schema": {
              "example": 4,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/propertyId-query.yaml"
            }
          },
          {
            "description": "Property name associated with a test suite to filter the list by. You can combine this parameter with `propertyVersion`. Use either this parameter or `propertyId` to specify the property.",
            "example": "{{propertyName}}",
            "in": "query",
            "name": "propertyName",
            "schema": {
              "example": "config_user8",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/propertyName-query.yaml"
            }
          },
          {
            "description": "Version of the property associated with the test suite to filter the list by. Combine this parameter with `propertyId` or `propertyName`.",
            "example": "{{propertyVersion}}",
            "in": "query",
            "name": "propertyVersion",
            "schema": {
              "example": 4,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/propertyVersion-query.yaml"
            }
          },
          {
            "description": "Filters the list to items created, edited, or deleted by a username with a specific email address.",
            "example": "{{user}}",
            "in": "query",
            "name": "user",
            "schema": {
              "example": "jsmith@example.com",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/user-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/functional/test-suites/auto-generate": {
      "post": {
        "description": "Generates a default test suite with test cases and variables for a specific property version and a URL. Based on property settings and its behaviors and the URL, Test Center generates a default test suite object with test cases and variables. You can modify the generated test suite and add it to Test Center using the [Create a test suite with child objects](https://techdocs.akamai.com/test-ctr/reference/post-test-suites-with-child-objects) operation.",
        "operationId": "post-auto-generate-test-suite",
        "summary": "Generate a test suite with child objects",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-auto-generate-test-suite"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "testRequestUrls": [
                  "https://www.user8.example.com/image/cart.png"
                ],
                "configs": {
                  "propertyManager": {
                    "propertyName": "config_user8",
                    "propertyVersion": 79
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "Contains information for auto-generating a test suite with test cases and variables.",
                "type": "object",
                "required": [
                  "configs",
                  "testRequestUrls"
                ],
                "properties": {
                  "configs": {
                    "additionalProperties": false,
                    "description": "Contains information about associated properties.",
                    "type": "object",
                    "required": [
                      "propertyManager"
                    ],
                    "properties": {
                      "propertyManager": {
                        "additionalProperties": false,
                        "description": "Specifies Property Manager property for the test suite is generated.",
                        "type": "object",
                        "properties": {
                          "propertyId": {
                            "description": "Unique identifier of a Property Manager property.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "propertyName": {
                            "description": "Name of a Property Manager property.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "propertyVersion": {
                            "description": "Version of a Property Manager property version.",
                            "minimum": 1,
                            "type": "integer"
                          }
                        },
                        "oneOf": [
                          {
                            "title": "Property ID and version",
                            "required": [
                              "propertyId",
                              "propertyVersion"
                            ]
                          },
                          {
                            "title": "Property name and version",
                            "required": [
                              "propertyName",
                              "propertyVersion"
                            ]
                          }
                        ]
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/configs-create-auto-generate.yaml"
                    }
                  },
                  "testRequestUrls": {
                    "description": "Lists URLs you want to use to generate the test suite.",
                    "minItems": 1,
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/test-suite-auto-generate.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response provides the generated test suite with test cases and variables.",
            "content": {
              "application/json": {
                "example": {
                  "isLocked": true,
                  "isStateful": false,
                  "testSuiteName": "Default test suite for config_user8 v79",
                  "configs": {
                    "propertyManager": {
                      "propertyId": 2321,
                      "propertyName": "config_user8",
                      "propertyVersion": 79
                    }
                  },
                  "testCases": [
                    {
                      "clientProfile": {
                        "client": "CHROME",
                        "ipVersion": "IPV4"
                      },
                      "condition": {
                        "conditionExpression": "Log request details - Accept-Language header is logged"
                      },
                      "testRequest": {
                        "requestMethod": "GET",
                        "testRequestUrl": "{{protocol}}://{{host}}{{path}}"
                      }
                    },
                    {
                      "clientProfile": {
                        "client": "CHROME",
                        "ipVersion": "IPV4"
                      },
                      "condition": {
                        "conditionExpression": "Log request details - Host header is logged"
                      },
                      "testRequest": {
                        "requestMethod": "GET",
                        "testRequestUrl": "{{protocol}}://{{host}}{{path}}"
                      }
                    },
                    {
                      "clientProfile": {
                        "client": "CHROME",
                        "ipVersion": "IPV4"
                      },
                      "condition": {
                        "conditionExpression": "Caching option is cache with max-age of \"0\" seconds"
                      },
                      "testRequest": {
                        "requestMethod": "GET",
                        "testRequestUrl": "{{protocol}}://{{host}}{{path}}"
                      }
                    }
                  ],
                  "variables": [
                    {
                      "variableName": "host",
                      "variableValue": "www.user8.example.com"
                    },
                    {
                      "variableName": "path",
                      "variableValue": "/image/cart.png"
                    },
                    {
                      "variableName": "protocol",
                      "variableValue": "https"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about a test suite with test cases and variables.",
                  "type": "object",
                  "required": [
                    "testSuiteName",
                    "isLocked",
                    "isStateful",
                    "configs",
                    "testCases",
                    "variables"
                  ],
                  "properties": {
                    "configs": {
                      "additionalProperties": false,
                      "description": "Contains information about associated property versions.",
                      "type": "object",
                      "required": [
                        "propertyManager"
                      ],
                      "properties": {
                        "propertyManager": {
                          "additionalProperties": false,
                          "description": "Contains information about associated Property Manager property version.",
                          "type": "object",
                          "required": [
                            "propertyId",
                            "propertyName",
                            "propertyVersion"
                          ],
                          "properties": {
                            "propertyId": {
                              "description": "Unique identifier of a Property Manager property.",
                              "minimum": 1,
                              "type": "integer"
                            },
                            "propertyName": {
                              "description": "Name of a Property Manager property.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "propertyVersion": {
                              "description": "Version of a Property Manager property version.",
                              "minimum": 1,
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/configs-create-auto-generate-response.yaml"
                      }
                    },
                    "isLocked": {
                      "description": "Locks the test suite so that only designated owners or editors can modify it.",
                      "type": "boolean"
                    },
                    "isStateful": {
                      "description": "Whether the test suite is run statefully. If a test suite is run statefully, cookies and session information are retained for subsequent test cases within the test suite.",
                      "type": "boolean"
                    },
                    "testCases": {
                      "description": "Lists generated functional test cases and included objects: condition, test request, and client profile.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies a functional test case and included objects: condition, test request, and client profile.",
                        "type": "object",
                        "required": [
                          "testRequest",
                          "condition",
                          "clientProfile"
                        ],
                        "properties": {
                          "clientProfile": {
                            "additionalProperties": false,
                            "description": "Specifies a client profile included in the test case.",
                            "type": "object",
                            "required": [
                              "ipVersion",
                              "client"
                            ],
                            "properties": {
                              "client": {
                                "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                "type": "string",
                                "enum": [
                                  "CHROME",
                                  "CURL"
                                ]
                              },
                              "geoLocation": {
                                "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                "type": "string",
                                "enum": [
                                  "US"
                                ]
                              },
                              "ipVersion": {
                                "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                "type": "string",
                                "enum": [
                                  "IPV4",
                                  "IPV6"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/client-profile.yaml"
                            }
                          },
                          "condition": {
                            "additionalProperties": false,
                            "description": "Specifies a condition included in the test case.",
                            "type": "object",
                            "required": [
                              "conditionExpression"
                            ],
                            "properties": {
                              "conditionExpression": {
                                "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/condition-create.yaml"
                            }
                          },
                          "testRequest": {
                            "additionalProperties": false,
                            "description": "Specifies a test request executed during the test.",
                            "type": "object",
                            "required": [
                              "testRequestUrl",
                              "requestMethod"
                            ],
                            "properties": {
                              "requestMethod": {
                                "description": "Request method for the `testRequestUrl`. Possible values are: `HEAD`, `GET`, and `POST`.",
                                "type": "string",
                                "enum": [
                                  "HEAD",
                                  "GET",
                                  "POST"
                                ]
                              },
                              "testRequestUrl": {
                                "description": "Fully qualified URL of the page or object you want to test, including any any query string parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                "maxLength": 2048,
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/test-request-auto-generate.yaml"
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/functional-test-case-auto-generate.yaml"
                        }
                      }
                    },
                    "testSuiteName": {
                      "description": "Unique name of the test suite.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "variables": {
                      "description": "Lists generated variables referenced from a test case: `testRequestUrl`, `headerName`, `headerValue`, and `conditionExpression`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case or in `function`. Variables appear with `{{variableName}}` syntax. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                        "title": "Single variables",
                        "type": "object",
                        "required": [
                          "variableName",
                          "variableValue"
                        ],
                        "properties": {
                          "variableName": {
                            "description": "Name of the variable.",
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string"
                          },
                          "variableValue": {
                            "description": "Value of the variable.",
                            "maxLength": 4000,
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/variable-create.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/test-suite-with-child-objects-auto-generate.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Validation errors](https://techdocs.akamai.com/test-ctr/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "e4bdb007-213d-4573-ab76-4f071b55de59",
                  "status": 400,
                  "title": "Validation error",
                  "type": "validation.error",
                  "errors": [
                    {
                      "requestField": "propertyName",
                      "title": "Required field missing",
                      "type": "required.field.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "403": {
            "description": "[Authorization error](https://techdocs.akamai.com/test-ctr/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a86ef2f3-4ffa-4eef-a041-6558311dd3a2",
                  "status": 403,
                  "title": "Authorization error",
                  "type": "authorization.error",
                  "errors": [
                    {
                      "title": "Required permission missing",
                      "type": "required.permission.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "description": "[Resource not found error](https://techdocs.akamai.com/test-ctr/reference/404).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "1dcdb168-8837-415e-92bc-31aa36326495",
                  "requestField": "propertyName",
                  "status": 404,
                  "title": "Resource not found",
                  "type": "resource.not.found",
                  "requestValues": [
                    "atc_user1_config"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/functional/test-suites/with-child-objects": {
      "post": {
        "description": "Creates, or imports, a test suite with test cases and variables. The operation responds with a [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses).",
        "operationId": "post-test-suites-with-child-objects",
        "summary": "Create a test suite with child objects",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-suites-with-child-objects"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "isLocked": false,
                "isStateful": false,
                "testSuiteDescription": "This test suite validates caching of images used in www.user8.example.com",
                "testSuiteName": "www.user8.example.com images test suite",
                "configs": {
                  "propertyManager": {
                    "propertyId": 1234,
                    "propertyVersion": 4
                  }
                },
                "testCases": [
                  {
                    "clientProfile": {
                      "client": "CHROME",
                      "ipVersion": "IPV4"
                    },
                    "condition": {
                      "conditionExpression": "Response header \"Content-Type\" has a value that ends with \"{{contentTypeVale}}\""
                    },
                    "testRequest": {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://{{hostname}}/?abc=1234555",
                      "requestHeaders": [
                        {
                          "headerAction": "ADD",
                          "headerName": "Accept",
                          "headerValue": "v1"
                        }
                      ]
                    }
                  },
                  {
                    "clientProfile": {
                      "client": "CHROME",
                      "ipVersion": "IPV4"
                    },
                    "condition": {
                      "conditionExpression": "Response code is one of \"{{successCodes.responseCodes}}\""
                    },
                    "testRequest": {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://{{sampleVarGroup.urls}}/index"
                    }
                  },
                  {
                    "clientProfile": {
                      "client": "CHROME",
                      "ipVersion": "IPV4"
                    },
                    "condition": {
                      "conditionExpression": "Response code is one of \"{{successCodes.responseCodes}}\""
                    },
                    "testRequest": {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://{{mismatchLengthGroup.urls}}/index"
                    }
                  }
                ],
                "variables": [
                  {
                    "variableName": "hostname",
                    "variableValue": "www.user8.example.com"
                  },
                  {
                    "variableName": "contentTypeVale",
                    "variableValue": "json"
                  },
                  {
                    "variableName": "sampleVarGroup",
                    "variableGroupValue": [
                      {
                        "columnHeader": "urls",
                        "columnValues": [
                          "abc.com",
                          "def.org",
                          "abc.com"
                        ]
                      }
                    ]
                  },
                  {
                    "variableName": "successCode",
                    "variableGroupValue": [
                      {
                        "columnHeader": "statusCodes",
                        "columnValues": [
                          "200",
                          "200"
                        ]
                      }
                    ]
                  },
                  {
                    "variableName": "mismatchLengthGroup",
                    "variableGroupValue": [
                      {
                        "columnHeader": "urls",
                        "columnValues": [
                          "example.com"
                        ]
                      }
                    ]
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Configures a test suite with test cases and variables.",
                "type": "object",
                "required": [
                  "testSuiteName",
                  "isLocked",
                  "isStateful"
                ],
                "properties": {
                  "configs": {
                    "additionalProperties": false,
                    "description": "Specifies a Property Manager property version to associate with a test suite.",
                    "type": "object",
                    "required": [
                      "propertyManager"
                    ],
                    "properties": {
                      "propertyManager": {
                        "additionalProperties": false,
                        "description": "Specifies a property version associated with a test suite.",
                        "type": "object",
                        "properties": {
                          "propertyId": {
                            "description": "Identifies the property. To get this value, run the [List properties](https://techdocs.akamai.com/property-mgr/reference/get-properties) operation in the Property Manager API.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "propertyName": {
                            "description": "Name of the property. To get this value, run the [List properties](https://techdocs.akamai.com/property-mgr/reference/get-properties) operation in the Property Manager API.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "propertyVersion": {
                            "description": "Version of the property. To get this value, run the [List properties](https://techdocs.akamai.com/property-mgr/reference/get-properties) operation in the Property Manager API.",
                            "minimum": 1,
                            "type": "integer"
                          }
                        },
                        "oneOf": [
                          {
                            "title": "Property ID and version",
                            "required": [
                              "propertyId",
                              "propertyVersion"
                            ]
                          },
                          {
                            "title": "Property name and version",
                            "required": [
                              "propertyName",
                              "propertyVersion"
                            ]
                          }
                        ]
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/configs-create.yaml"
                    }
                  },
                  "isLocked": {
                    "description": "Locks the test suite so that only designated owners or editors can modify it.",
                    "example": "{{isLocked}}",
                    "type": "boolean"
                  },
                  "isStateful": {
                    "description": "Runs the test suite statefully, retaining cookies and session data for subsequent test cases within the test suite.",
                    "example": "{{isStateful}}",
                    "type": "boolean"
                  },
                  "testCases": {
                    "description": "Lists test cases and included objects: conditions, test requests, and client profiles.",
                    "minItems": 0,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Specifies the functional test case and included objects: condition, test request, and client profile.",
                      "type": "object",
                      "required": [
                        "testRequest",
                        "condition",
                        "clientProfile"
                      ],
                      "properties": {
                        "clientProfile": {
                          "additionalProperties": false,
                          "description": "Specifies a client profile included in the test case.",
                          "type": "object",
                          "required": [
                            "ipVersion",
                            "client"
                          ],
                          "properties": {
                            "client": {
                              "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                              "type": "string",
                              "enum": [
                                "CHROME",
                                "CURL"
                              ]
                            },
                            "geoLocation": {
                              "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                              "type": "string",
                              "enum": [
                                "US"
                              ]
                            },
                            "ipVersion": {
                              "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                              "type": "string",
                              "enum": [
                                "IPV4",
                                "IPV6"
                              ]
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/client-profile.yaml"
                          }
                        },
                        "condition": {
                          "additionalProperties": false,
                          "description": "Specifies a condition included in the test case.",
                          "type": "object",
                          "required": [
                            "conditionExpression"
                          ],
                          "properties": {
                            "conditionExpression": {
                              "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/condition-create.yaml"
                          }
                        },
                        "setVariables": {
                          "description": "Contains test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                            "type": "object",
                            "required": [
                              "variableName",
                              "variableValue"
                            ],
                            "properties": {
                              "variableName": {
                                "description": "Name of the created variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                              },
                              "variableValue": {
                                "description": "Value of the variable to resolve at runtime.",
                                "maxLength": 4000,
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/set-variable-create-with-child-objects.yaml"
                            }
                          }
                        },
                        "testRequest": {
                          "additionalProperties": false,
                          "description": "Specifies a test request included in the test case.",
                          "type": "object",
                          "required": [
                            "testRequestUrl",
                            "requestMethod"
                          ],
                          "properties": {
                            "encodeRequestBody": {
                              "default": true,
                              "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                              "nullable": true,
                              "type": "boolean"
                            },
                            "requestBody": {
                              "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                              "maxLength": 4000,
                              "minLength": 1,
                              "nullable": true,
                              "type": "string"
                            },
                            "requestHeaders": {
                              "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "headerName",
                                  "headerValue",
                                  "headerAction"
                                ],
                                "properties": {
                                  "headerAction": {
                                    "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                    "type": "string",
                                    "enum": [
                                      "ADD",
                                      "MODIFY",
                                      "FILTER"
                                    ]
                                  },
                                  "headerName": {
                                    "description": "Name of the request header.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "headerValue": {
                                    "description": "Value of the request header.",
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "requestMethod": {
                              "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                              "type": "string",
                              "enum": [
                                "HEAD",
                                "GET",
                                "POST"
                              ]
                            },
                            "tags": {
                              "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "testRequestUrl": {
                              "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                              "maxLength": 2048,
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/test-request-create.yaml"
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/functional-test-case-create.yaml"
                      }
                    }
                  },
                  "testSuiteDescription": {
                    "default": null,
                    "description": "Description of the test suite. It's `null` for test suites without descriptions. ",
                    "example": "{{testSuiteDescription}}",
                    "maxLength": 4000,
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "testSuiteName": {
                    "description": "Unique name for each test suite.",
                    "example": "{{testSuiteName}}",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                  },
                  "variables": {
                    "description": "Lists variables used in the test suite. You can use variables in a test request's URL or request headers and in condition expression, as a substitute of placeholders.",
                    "minItems": 0,
                    "type": "array",
                    "items": {
                      "description": "Lists generated variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "anyOf": [
                          {
                            "additionalProperties": false,
                            "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case or in `function`. Variables appear with `{{variableName}}` syntax. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                            "title": "Single variables",
                            "type": "object",
                            "required": [
                              "variableName",
                              "variableValue"
                            ],
                            "properties": {
                              "variableName": {
                                "description": "Name of the variable.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                              },
                              "variableValue": {
                                "description": "Value of the variable.",
                                "maxLength": 4000,
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/variable-create.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variable groups appear with `{{variableName.columnHeader}}` syntax. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                            "title": "Variable group",
                            "type": "object",
                            "required": [
                              "variableName",
                              "variableGroupValue"
                            ],
                            "properties": {
                              "variableGroupValue": {
                                "description": "Lists variable groups created in a specific test suite and their details.",
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "Specifies a variable group referenced in `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variable groups appear with `{{variableName.columnHeader}}` syntax. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                  "type": "object",
                                  "required": [
                                    "columnHeader"
                                  ],
                                  "properties": {
                                    "columnHeader": {
                                      "description": "Column header name.",
                                      "maxLength": 100,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "columnValues": {
                                      "description": "Column values for specific column header.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "maxLength": 4000,
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/variable-group.yaml"
                                  }
                                }
                              },
                              "variableName": {
                                "description": "Name of the variable.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/variable-group-create.yaml"
                            }
                          }
                        ]
                      },
                      "x-akamai": {
                        "file-path": "schemas/variables-create.yaml"
                      }
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/test-suite-with-child-objects-create.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "[Partial success response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "success": {
                    "createdBy": "jperez",
                    "createdDate": "2023-04-12T10:28:13+0000",
                    "executableTestCaseCount": 3,
                    "isLocked": false,
                    "isStateful": false,
                    "modifiedBy": "adevi",
                    "modifiedDate": "2023-04-12T10:28:13+0000",
                    "testSuiteDescription": "This test suite performs basic check of www.user8.example.com",
                    "testSuiteId": 284,
                    "testSuiteName": "www.user8.example.com test suite",
                    "configs": {
                      "propertyManager": {
                        "propertyId": 1234,
                        "propertyName": "config_user8",
                        "propertyVersion": 4
                      }
                    },
                    "testCases": [
                      {
                        "createdBy": "jsmith",
                        "createdDate": "2023-04-12T10:28:13+0000",
                        "modifiedBy": "szhang",
                        "modifiedDate": "2023-04-12T10:28:13+0000",
                        "order": 1,
                        "testCaseId": 301,
                        "clientProfile": {
                          "client": "CHROME",
                          "ipVersion": "IPV4"
                        },
                        "condition": {
                          "conditionExpression": "Response header \"Content-Type\" has a value that ends with \"{{contentTypeVale}}\"",
                          "conditionExpressionResolved": "Response header \"Content-Type\" has a value that ends with \"json\""
                        },
                        "testRequest": {
                          "requestMethod": "GET",
                          "testRequestUrl": "https://{{hostname}}/?abc=1234555",
                          "testRequestUrlResolved": "https://www.user8.example.com/?abc=1234555",
                          "requestHeaders": [
                            {
                              "headerAction": "ADD",
                              "headerName": "Accept",
                              "headerValue": "v1"
                            }
                          ]
                        }
                      },
                      {
                        "createdBy": "alfulani",
                        "createdDate": "2023-04-12T10:28:13+0000",
                        "modifiedBy": "jsmith",
                        "modifiedDate": "2023-04-12T10:28:13+0000",
                        "order": 2,
                        "testCaseId": 302,
                        "clientProfile": {
                          "client": "CHROME",
                          "ipVersion": "IPV4"
                        },
                        "condition": {
                          "conditionExpression": "Response code is one of \"{{successCode.statusCodes}}\""
                        },
                        "testRequest": {
                          "requestMethod": "GET",
                          "testRequestUrl": "https://{{sampleVarGroup.urls}}/index"
                        },
                        "derivedTestCases": [
                          {
                            "order": 1,
                            "clientProfile": {
                              "client": "CHROME",
                              "ipVersion": "IPV4"
                            },
                            "condition": {
                              "conditionExpression": "Response code is one of \"200\""
                            },
                            "testRequest": {
                              "requestMethod": "GET",
                              "testRequestUrl": "https://abc.com/index"
                            }
                          },
                          {
                            "order": 2,
                            "clientProfile": {
                              "client": "CHROME",
                              "ipVersion": "IPV4"
                            },
                            "condition": {
                              "conditionExpression": "Response code is one of \"200\""
                            },
                            "testRequest": {
                              "requestMethod": "GET",
                              "testRequestUrl": "https://def.org/index"
                            }
                          }
                        ],
                        "warnings": [
                          {
                            "title": "Duplicate derived testcases generated have been ignored.",
                            "type": "duplicate.derived.testcases.ignored",
                            "requestObjects": [
                              {
                                "order": 3,
                                "clientProfile": {
                                  "client": "CHROME",
                                  "ipVersion": "IPV4"
                                },
                                "condition": {
                                  "conditionExpression": "Response code is one of \"200\""
                                },
                                "testRequest": {
                                  "requestMethod": "GET",
                                  "testRequestUrl": "https://abc.com/index"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "createdBy": "adevi",
                        "createdDate": "2023-04-12T10:28:13+0000",
                        "modifiedBy": "hgildong",
                        "modifiedDate": "2023-04-12T10:28:13+0000",
                        "order": 3,
                        "testCaseId": 303,
                        "clientProfile": {
                          "client": "CHROME",
                          "ipVersion": "IPV4"
                        },
                        "condition": {
                          "conditionExpression": "Response code is one of \"{{successCode.statusCodes}}\""
                        },
                        "testRequest": {
                          "requestMethod": "GET",
                          "testRequestUrl": "https://{{mismatchLengthGroup.urls}}/index"
                        },
                        "warnings": [
                          {
                            "requestField": "variableGroupValue[].columnHeader",
                            "title": "Variable group column lengths of given variable group(s) are unequal.",
                            "type": "variable.group.column.length.mismatch",
                            "requestValues": [
                              "sampleVarGroup.urls"
                            ]
                          }
                        ]
                      }
                    ],
                    "variables": [
                      {
                        "createdBy": "mrossi",
                        "createdDate": "2023-04-12T10:28:13+0000",
                        "isDynamicallyUsed": false,
                        "modifiedBy": "adevi",
                        "modifiedDate": "2023-04-12T10:28:13+0000",
                        "variableId": 201,
                        "variableName": "hostname",
                        "variableValue": "www.user8.example.com"
                      },
                      {
                        "createdBy": "mrossi",
                        "createdDate": "2023-04-12T10:28:13+0000",
                        "isDynamicallyUsed": false,
                        "modifiedBy": "adevi",
                        "modifiedDate": "2023-04-12T10:28:13+0000",
                        "variableId": 202,
                        "variableName": "contentTypeVale",
                        "variableValue": "json"
                      },
                      {
                        "createdBy": "szhang",
                        "createdDate": "2023-04-12T10:28:13+0000",
                        "modifiedBy": "jkowalski",
                        "modifiedDate": "2023-04-12T10:28:13+0000",
                        "variableId": 203,
                        "variableName": "sampleVarGroup",
                        "variableGroupValue": [
                          {
                            "columnHeader": "urls",
                            "columnValues": [
                              "abc.com",
                              "def.org",
                              "abc.com"
                            ]
                          }
                        ]
                      },
                      {
                        "createdBy": "jsmith",
                        "createdDate": "2023-04-12T10:28:13+0000",
                        "modifiedBy": "mrossi",
                        "modifiedDate": "2023-04-12T10:28:13+0000",
                        "variableId": 204,
                        "variableName": "successCode",
                        "variableGroupValue": [
                          {
                            "columnHeader": "statusCodes",
                            "columnValues": [
                              "200",
                              "200",
                              "200"
                            ]
                          }
                        ]
                      },
                      {
                        "createdBy": "szhang",
                        "createdDate": "2023-04-12T10:28:13+0000",
                        "modifiedBy": "jkowalski",
                        "modifiedDate": "2023-04-12T10:28:13+0000",
                        "variableId": 205,
                        "variableName": "mismatchLengthGroup",
                        "variableGroupValue": [
                          {
                            "columnHeader": "urls",
                            "columnValues": [
                              "example.com"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "[Partial success response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
                  "type": "object",
                  "required": [
                    "success",
                    "failure"
                  ],
                  "properties": {
                    "failure": {
                      "additionalProperties": false,
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "type": "object",
                      "required": [
                        "testCases",
                        "variables"
                      ],
                      "properties": {
                        "testCases": {
                          "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure related to test cases.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "Specifies the error that occurred.",
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "existingEntities": {
                                "description": "Lists objects included within the functional test case.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "requestField": {
                                "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestObjects": {
                                "description": "Lists invalid request objects.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "requestValues": {
                                "description": "Lists values corresponding to the `requestField`.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "title": "String",
                                      "type": "string"
                                    },
                                    {
                                      "title": "Integer",
                                      "type": "integer"
                                    },
                                    {
                                      "title": "Object",
                                      "type": "object"
                                    }
                                  ]
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/sub-problem.yaml"
                            }
                          }
                        },
                        "variables": {
                          "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure related to variables.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "Specifies the error that occurred.",
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "existingEntities": {
                                "description": "Lists objects included within the functional test case.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "requestField": {
                                "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestObjects": {
                                "description": "Lists invalid request objects.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "requestValues": {
                                "description": "Lists values corresponding to the `requestField`.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "title": "String",
                                      "type": "string"
                                    },
                                    {
                                      "title": "Integer",
                                      "type": "integer"
                                    },
                                    {
                                      "title": "Object",
                                      "type": "object"
                                    }
                                  ]
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/sub-problem.yaml"
                            }
                          }
                        }
                      }
                    },
                    "success": {
                      "additionalProperties": false,
                      "description": "Specifies the created test suite and child objects.",
                      "type": "object",
                      "required": [
                        "testSuiteId",
                        "testSuiteName",
                        "isLocked",
                        "isStateful",
                        "executableTestCaseCount",
                        "createdBy",
                        "createdDate"
                      ],
                      "properties": {
                        "configs": {
                          "additionalProperties": false,
                          "default": null,
                          "description": "Specifies the Property Manager property version associated with the test suite. It's `null` for test suites with no properties associated. ",
                          "nullable": true,
                          "type": "object",
                          "required": [
                            "propertyManager"
                          ],
                          "properties": {
                            "propertyManager": {
                              "additionalProperties": false,
                              "description": "Specifies the property version associated with the test suite.",
                              "type": "object",
                              "required": [
                                "propertyId",
                                "propertyName",
                                "propertyVersion"
                              ],
                              "properties": {
                                "propertyId": {
                                  "description": "Identifies a Property Manager property.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "propertyName": {
                                  "description": "Name of the property.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "propertyVersion": {
                                  "description": "Version of the property.",
                                  "minimum": 1,
                                  "type": "integer"
                                }
                              }
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/configs.yaml"
                          }
                        },
                        "createdBy": {
                          "description": "Username who created the item.",
                          "minLength": 1,
                          "readOnly": true,
                          "type": "string",
                          "x-akamai": {
                            "file-path": "schemas/createdBy.yaml"
                          }
                        },
                        "createdDate": {
                          "description": "ISO 8601 timestamp indicating when the item was created.",
                          "format": "date-time",
                          "readOnly": true,
                          "type": "string",
                          "x-akamai": {
                            "file-path": "schemas/createdDate.yaml"
                          }
                        },
                        "executableTestCaseCount": {
                          "description": "Number of test cases in the test suite. This count also includes the derived test case count.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "isLocked": {
                          "description": "Locks the test suite so that only designated owners or editors can modify it.",
                          "type": "boolean"
                        },
                        "isStateful": {
                          "description": "Sets the test suite to be run statefully, retaining cookies and session data for subsequent test cases within the test suite.",
                          "type": "boolean"
                        },
                        "modifiedBy": {
                          "description": "Username who last modified the item.",
                          "minLength": 1,
                          "readOnly": true,
                          "type": "string",
                          "x-akamai": {
                            "file-path": "schemas/modifiedBy.yaml"
                          }
                        },
                        "modifiedDate": {
                          "description": "ISO 8601 timestamp indicating when the item was last modified.",
                          "format": "date-time",
                          "readOnly": true,
                          "type": "string",
                          "x-akamai": {
                            "file-path": "schemas/modifiedDate.yaml"
                          }
                        },
                        "testCases": {
                          "description": "Lists test cases included in the test suite.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "Specifies the functional test case and included objects: condition, test request, and client profile.",
                            "type": "object",
                            "required": [
                              "testCaseId",
                              "order",
                              "testRequest",
                              "condition",
                              "clientProfile"
                            ],
                            "properties": {
                              "clientProfile": {
                                "additionalProperties": false,
                                "description": "Specifies a client profile included in the test case.",
                                "type": "object",
                                "required": [
                                  "ipVersion",
                                  "client"
                                ],
                                "properties": {
                                  "client": {
                                    "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                    "type": "string",
                                    "enum": [
                                      "CHROME",
                                      "CURL"
                                    ]
                                  },
                                  "geoLocation": {
                                    "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                    "type": "string",
                                    "enum": [
                                      "US"
                                    ]
                                  },
                                  "ipVersion": {
                                    "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                    "type": "string",
                                    "enum": [
                                      "IPV4",
                                      "IPV6"
                                    ]
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/client-profile.yaml"
                                }
                              },
                              "condition": {
                                "additionalProperties": false,
                                "description": "Specifies a condition included in the test case.",
                                "type": "object",
                                "required": [
                                  "conditionExpression"
                                ],
                                "properties": {
                                  "conditionExpression": {
                                    "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "conditionExpressionResolved": {
                                    "description": "Condition statement with resolved variables, if applicable.",
                                    "minLength": 1,
                                    "readOnly": true,
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/condition.yaml"
                                }
                              },
                              "createdBy": {
                                "description": "Username who created the item.",
                                "minLength": 1,
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/createdBy.yaml"
                                }
                              },
                              "createdDate": {
                                "description": "ISO 8601 timestamp indicating when the item was created.",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/createdDate.yaml"
                                }
                              },
                              "deletedBy": {
                                "description": "Username who last deleted the item.",
                                "minLength": 1,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/deletedBy.yaml"
                                }
                              },
                              "deletedDate": {
                                "description": "ISO 8601 timestamp indicating when the item was deleted.",
                                "format": "date-time",
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/deletedDate.yaml"
                                }
                              },
                              "derivedTestCases": {
                                "description": "Derived test cases in the response when there is reference to variable group(s).",
                                "minItems": 0,
                                "readOnly": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "Specifies the functional derived test case when a variable group reference is present and included objects: condition, test request, and client profile.",
                                  "type": "object",
                                  "required": [
                                    "testRequest",
                                    "condition",
                                    "clientProfile",
                                    "order"
                                  ],
                                  "properties": {
                                    "clientProfile": {
                                      "additionalProperties": false,
                                      "description": "Specifies a client profile included in the test case.",
                                      "type": "object",
                                      "required": [
                                        "ipVersion",
                                        "client"
                                      ],
                                      "properties": {
                                        "client": {
                                          "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                          "type": "string",
                                          "enum": [
                                            "CHROME",
                                            "CURL"
                                          ]
                                        },
                                        "geoLocation": {
                                          "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                          "type": "string",
                                          "enum": [
                                            "US"
                                          ]
                                        },
                                        "ipVersion": {
                                          "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                          "type": "string",
                                          "enum": [
                                            "IPV4",
                                            "IPV6"
                                          ]
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/client-profile.yaml"
                                      }
                                    },
                                    "condition": {
                                      "additionalProperties": false,
                                      "description": "Specifies a condition included in the test case.",
                                      "type": "object",
                                      "required": [
                                        "conditionExpression"
                                      ],
                                      "properties": {
                                        "conditionExpression": {
                                          "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "conditionExpressionResolved": {
                                          "description": "Condition statement with resolved variables, if applicable.",
                                          "minLength": 1,
                                          "readOnly": true,
                                          "type": "string"
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/condition.yaml"
                                      }
                                    },
                                    "order": {
                                      "description": "Order of the derived test case. In stateful test suites, a test run's test cases execute in this order.  ",
                                      "minimum": 0,
                                      "readOnly": true,
                                      "type": "integer"
                                    },
                                    "setVariables": {
                                      "description": "Contains derived test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                        "type": "object",
                                        "required": [
                                          "variableId",
                                          "variableName",
                                          "variableValue"
                                        ],
                                        "properties": {
                                          "variableId": {
                                            "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                            "minimum": 1,
                                            "readOnly": true,
                                            "type": "integer"
                                          },
                                          "variableName": {
                                            "description": "Name of the variable.",
                                            "maxLength": 100,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "variableValue": {
                                            "description": "Value of the variable to resolve at runtime.",
                                            "maxLength": 4000,
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        },
                                        "x-akamai": {
                                          "file-path": "schemas/set-variable.yaml"
                                        }
                                      }
                                    },
                                    "testRequest": {
                                      "additionalProperties": false,
                                      "description": "Specifies a test request included in the test case.",
                                      "type": "object",
                                      "required": [
                                        "testRequestUrl",
                                        "requestMethod"
                                      ],
                                      "properties": {
                                        "encodeRequestBody": {
                                          "default": true,
                                          "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                          "nullable": true,
                                          "type": "boolean"
                                        },
                                        "requestBody": {
                                          "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                          "maxLength": 4000,
                                          "minLength": 1,
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "requestBodyResolved": {
                                          "description": "Value of test request body after resolving all variables.",
                                          "minLength": 1,
                                          "nullable": true,
                                          "readOnly": true,
                                          "type": "string"
                                        },
                                        "requestHeaders": {
                                          "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                          "minItems": 0,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "required": [
                                              "headerName",
                                              "headerValue",
                                              "headerAction"
                                            ],
                                            "properties": {
                                              "headerAction": {
                                                "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                                "type": "string",
                                                "enum": [
                                                  "ADD",
                                                  "MODIFY",
                                                  "FILTER"
                                                ]
                                              },
                                              "headerName": {
                                                "description": "Name of the request header.",
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "headerNameResolved": {
                                                "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                                "minLength": 1,
                                                "readOnly": true,
                                                "type": "string"
                                              },
                                              "headerValue": {
                                                "description": "Value of the request header.",
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "headerValueResolved": {
                                                "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                                "minLength": 1,
                                                "readOnly": true,
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "requestMethod": {
                                          "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                          "type": "string",
                                          "enum": [
                                            "HEAD",
                                            "GET",
                                            "POST"
                                          ]
                                        },
                                        "tags": {
                                          "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                          "minItems": 0,
                                          "type": "array",
                                          "items": {
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        },
                                        "testRequestUrl": {
                                          "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                          "maxLength": 2048,
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "testRequestUrlResolved": {
                                          "description": "Value of test request URL after resolving all variables.",
                                          "minLength": 1,
                                          "nullable": true,
                                          "readOnly": true,
                                          "type": "string"
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/test-request.yaml"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/functional-derived-test-case.yaml"
                                  }
                                }
                              },
                              "modifiedBy": {
                                "description": "Username who last modified the item.",
                                "minLength": 1,
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/modifiedBy.yaml"
                                }
                              },
                              "modifiedDate": {
                                "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/modifiedDate.yaml"
                                }
                              },
                              "order": {
                                "description": "Order of the test case. In stateful test suites, a test run's test cases execute in this order.",
                                "minimum": 1,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "setVariables": {
                                "description": "Contains test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                  "type": "object",
                                  "required": [
                                    "variableId",
                                    "variableName",
                                    "variableValue"
                                  ],
                                  "properties": {
                                    "variableId": {
                                      "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                      "minimum": 1,
                                      "readOnly": true,
                                      "type": "integer"
                                    },
                                    "variableName": {
                                      "description": "Name of the variable.",
                                      "maxLength": 100,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "variableValue": {
                                      "description": "Value of the variable to resolve at runtime.",
                                      "maxLength": 4000,
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/set-variable.yaml"
                                  }
                                }
                              },
                              "testCaseId": {
                                "description": "Identifies a functional test case. To get this value, run the [List test cases](https://techdocs.akamai.com/test-ctr/reference/get-test-cases) operation.",
                                "minimum": 1,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "testRequest": {
                                "additionalProperties": false,
                                "description": "Specifies a test request included in the test case.",
                                "type": "object",
                                "required": [
                                  "testRequestUrl",
                                  "requestMethod"
                                ],
                                "properties": {
                                  "encodeRequestBody": {
                                    "default": true,
                                    "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                    "nullable": true,
                                    "type": "boolean"
                                  },
                                  "requestBody": {
                                    "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                    "maxLength": 4000,
                                    "minLength": 1,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "requestBodyResolved": {
                                    "description": "Value of test request body after resolving all variables.",
                                    "minLength": 1,
                                    "nullable": true,
                                    "readOnly": true,
                                    "type": "string"
                                  },
                                  "requestHeaders": {
                                    "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "required": [
                                        "headerName",
                                        "headerValue",
                                        "headerAction"
                                      ],
                                      "properties": {
                                        "headerAction": {
                                          "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                          "type": "string",
                                          "enum": [
                                            "ADD",
                                            "MODIFY",
                                            "FILTER"
                                          ]
                                        },
                                        "headerName": {
                                          "description": "Name of the request header.",
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "headerNameResolved": {
                                          "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                          "minLength": 1,
                                          "readOnly": true,
                                          "type": "string"
                                        },
                                        "headerValue": {
                                          "description": "Value of the request header.",
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "headerValueResolved": {
                                          "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                          "minLength": 1,
                                          "readOnly": true,
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "requestMethod": {
                                    "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                    "type": "string",
                                    "enum": [
                                      "HEAD",
                                      "GET",
                                      "POST"
                                    ]
                                  },
                                  "tags": {
                                    "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  },
                                  "testRequestUrl": {
                                    "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                    "maxLength": 2048,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "testRequestUrlResolved": {
                                    "description": "Value of test request URL after resolving all variables.",
                                    "minLength": 1,
                                    "nullable": true,
                                    "readOnly": true,
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/test-request.yaml"
                                }
                              },
                              "warnings": {
                                "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807). Any warnings related to variable groups would be captured here.",
                                "minItems": 0,
                                "readOnly": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "Specifies the error that occurred.",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "title"
                                  ],
                                  "properties": {
                                    "existingEntities": {
                                      "description": "Lists objects included within the functional test case.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "type": "object"
                                      }
                                    },
                                    "requestField": {
                                      "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "requestObjects": {
                                      "description": "Lists invalid request objects.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "type": "object"
                                      }
                                    },
                                    "requestValues": {
                                      "description": "Lists values corresponding to the `requestField`.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "anyOf": [
                                          {
                                            "title": "String",
                                            "type": "string"
                                          },
                                          {
                                            "title": "Integer",
                                            "type": "integer"
                                          },
                                          {
                                            "title": "Object",
                                            "type": "object"
                                          }
                                        ]
                                      }
                                    },
                                    "title": {
                                      "description": "Title of the error.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "Type of error.",
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/sub-problem.yaml"
                                  }
                                }
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/functional-test-case.yaml"
                            }
                          }
                        },
                        "testSuiteDescription": {
                          "default": null,
                          "description": "Description of the test suite. It's `null` for test suites without descriptions. ",
                          "maxLength": 4000,
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "testSuiteId": {
                          "description": "Identifies a test suite. To get this value, run the [List test suites](https://techdocs.akamai.com/test-ctr/reference/get-test-suites) operation.",
                          "minimum": 1,
                          "readOnly": true,
                          "type": "integer"
                        },
                        "testSuiteName": {
                          "description": "Unique name for each test suite.",
                          "maxLength": 100,
                          "minLength": 1,
                          "type": "string"
                        },
                        "variables": {
                          "description": "Lists variables included in the test suite.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "Contains variables created in a specific test suite and their details.",
                            "type": "object",
                            "required": [
                              "variables"
                            ],
                            "properties": {
                              "variables": {
                                "description": "Lists variables created in a specific test suite and their details.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "additionalProperties": false,
                                      "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variables appear with `{{variableName}}` syntax.",
                                      "title": "Single variable",
                                      "type": "object",
                                      "required": [
                                        "variableId",
                                        "variableName",
                                        "variableValue",
                                        "isDynamicallyUsed"
                                      ],
                                      "properties": {
                                        "createdBy": {
                                          "description": "Username who created the item.",
                                          "minLength": 1,
                                          "readOnly": true,
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/createdBy.yaml"
                                          }
                                        },
                                        "createdDate": {
                                          "description": "ISO 8601 timestamp indicating when the item was created.",
                                          "format": "date-time",
                                          "readOnly": true,
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/createdDate.yaml"
                                          }
                                        },
                                        "isDynamicallyUsed": {
                                          "description": "Whether the variable in `setVariables` is assigned dynamically.",
                                          "type": "boolean"
                                        },
                                        "modifiedBy": {
                                          "description": "Username who last modified the item.",
                                          "minLength": 1,
                                          "readOnly": true,
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/modifiedBy.yaml"
                                          }
                                        },
                                        "modifiedDate": {
                                          "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                          "format": "date-time",
                                          "readOnly": true,
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/modifiedDate.yaml"
                                          }
                                        },
                                        "variableId": {
                                          "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                          "minimum": 1,
                                          "readOnly": true,
                                          "type": "integer"
                                        },
                                        "variableName": {
                                          "description": "Name of the variable.",
                                          "maxLength": 100,
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "variableValue": {
                                          "description": "Value of the variable.",
                                          "maxLength": 4000,
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/variable.yaml"
                                      }
                                    },
                                    {
                                      "additionalProperties": false,
                                      "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variable groups appear with `{{variableName.columnHeader}}` syntax.",
                                      "title": "Variable group",
                                      "type": "object",
                                      "required": [
                                        "variableId",
                                        "variableName",
                                        "variableGroupValue"
                                      ],
                                      "properties": {
                                        "createdBy": {
                                          "description": "Username who created the item.",
                                          "minLength": 1,
                                          "readOnly": true,
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/createdBy.yaml"
                                          }
                                        },
                                        "createdDate": {
                                          "description": "ISO 8601 timestamp indicating when the item was created.",
                                          "format": "date-time",
                                          "readOnly": true,
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/createdDate.yaml"
                                          }
                                        },
                                        "modifiedBy": {
                                          "description": "Username who last modified the item.",
                                          "minLength": 1,
                                          "readOnly": true,
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/modifiedBy.yaml"
                                          }
                                        },
                                        "modifiedDate": {
                                          "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                          "format": "date-time",
                                          "readOnly": true,
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/modifiedDate.yaml"
                                          }
                                        },
                                        "variableGroupValue": {
                                          "description": "Lists variable groups created in a specific test suite and their details.",
                                          "minItems": 1,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "description": "Specifies a variable group referenced in `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variable groups appear with `{{variableName.columnHeader}}` syntax. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                            "type": "object",
                                            "required": [
                                              "columnHeader"
                                            ],
                                            "properties": {
                                              "columnHeader": {
                                                "description": "Column header name.",
                                                "maxLength": 100,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "columnValues": {
                                                "description": "Column values for specific column header.",
                                                "minItems": 0,
                                                "type": "array",
                                                "items": {
                                                  "maxLength": 4000,
                                                  "minLength": 1,
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "x-akamai": {
                                              "file-path": "schemas/variable-group.yaml"
                                            }
                                          }
                                        },
                                        "variableId": {
                                          "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                          "minimum": 1,
                                          "readOnly": true,
                                          "type": "integer"
                                        },
                                        "variableName": {
                                          "description": "Name of the variable.",
                                          "maxLength": 100,
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/variable-with-var-group.yaml"
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/variables.yaml"
                            }
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/test-suite-with-child-objects.yaml"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/test-suite-with-child-objects-207.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Validation errors](https://techdocs.akamai.com/test-ctr/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "e4bdb007-213d-4573-ab76-4f071b55de59",
                  "status": 400,
                  "title": "Validation error",
                  "type": "validation.error",
                  "errors": [
                    {
                      "requestField": "propertyName",
                      "title": "Required field missing",
                      "type": "required.field.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "403": {
            "description": "[Authorization error](https://techdocs.akamai.com/test-ctr/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a86ef2f3-4ffa-4eef-a041-6558311dd3a2",
                  "status": 403,
                  "title": "Authorization error",
                  "type": "authorization.error",
                  "errors": [
                    {
                      "title": "Required permission missing",
                      "type": "required.permission.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "description": "[Resource not found error](https://techdocs.akamai.com/test-ctr/reference/404).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "1dcdb168-8837-415e-92bc-31aa36326495",
                  "requestField": "propertyName",
                  "status": 404,
                  "title": "Resource not found",
                  "type": "resource.not.found",
                  "requestValues": [
                    "atc_user1_config"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/functional/test-suites/{testSuiteId}": {
      "get": {
        "description": "Returns basic data about a test suite. To check test cases and variables included in the test suite, run the [Get a test suite with child objects](https://techdocs.akamai.com/test-ctr/reference/get-test-suites-with-child-objects) operation.",
        "operationId": "get-test-suite",
        "summary": "Get a test suite",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-suite"
        },
        "responses": {
          "200": {
            "description": "The response provides the test suite.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "jperez",
                  "createdDate": "2021-07-06T10:28:13+0000",
                  "executableTestCaseCount": 1,
                  "isLocked": false,
                  "isStateful": false,
                  "modifiedBy": "mrossi",
                  "modifiedDate": "2021-07-06T10:29:20+0000",
                  "testSuiteDescription": "This test suite performs basic check of www.user8.example.com",
                  "testSuiteId": 284,
                  "testSuiteName": "www.user8.example.com test suite",
                  "configs": {
                    "propertyManager": {
                      "propertyId": 1234,
                      "propertyName": "config_user8",
                      "propertyVersion": 4
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies a test suite.",
                  "type": "object",
                  "required": [
                    "testSuiteId",
                    "testSuiteName",
                    "isLocked",
                    "isStateful",
                    "executableTestCaseCount",
                    "createdBy",
                    "createdDate"
                  ],
                  "properties": {
                    "configs": {
                      "additionalProperties": false,
                      "default": null,
                      "description": "Specifies the Property Manager property version associated with the test suite. It's `null` for test suites with no properties associated. ",
                      "nullable": true,
                      "type": "object",
                      "required": [
                        "propertyManager"
                      ],
                      "properties": {
                        "propertyManager": {
                          "additionalProperties": false,
                          "description": "Specifies the property version associated with the test suite.",
                          "type": "object",
                          "required": [
                            "propertyId",
                            "propertyName",
                            "propertyVersion"
                          ],
                          "properties": {
                            "propertyId": {
                              "description": "Identifies a Property Manager property.",
                              "minimum": 1,
                              "type": "integer"
                            },
                            "propertyName": {
                              "description": "Name of the property.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "propertyVersion": {
                              "description": "Version of the property.",
                              "minimum": 1,
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/configs.yaml"
                      }
                    },
                    "createdBy": {
                      "description": "Username who created the item.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/createdBy.yaml"
                      }
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the item was created.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/createdDate.yaml"
                      }
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the item.",
                      "minLength": 1,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/deletedBy.yaml"
                      }
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the item was deleted.",
                      "format": "date-time",
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/deletedDate.yaml"
                      }
                    },
                    "executableTestCaseCount": {
                      "description": "Number of included test cases executable in a test run. To learn more, see [Variable groups](https://techdocs.akamai.com/test-ctr/reference/variables-overview#variable-groups).",
                      "minimum": 0,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "isLocked": {
                      "description": "Locks the test suite so that only designated owners or editors can modify it.",
                      "type": "boolean"
                    },
                    "isStateful": {
                      "description": "Sets the test suite to be run statefully, retaining cookies and session data for subsequent test cases within the test suite.",
                      "type": "boolean"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the item.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/modifiedBy.yaml"
                      }
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the item was last modified.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/modifiedDate.yaml"
                      }
                    },
                    "testSuiteDescription": {
                      "default": null,
                      "description": "Description of the test suite. It's `null` for test suites without descriptions. ",
                      "maxLength": 4000,
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "testSuiteId": {
                      "description": "Identifies a test suite.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "testSuiteName": {
                      "description": "Unique name for each test suite.",
                      "maxLength": 100,
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/test-suite.yaml"
                  }
                }
              }
            }
          },
          "403": {
            "description": "[Authorization error](https://techdocs.akamai.com/test-ctr/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a86ef2f3-4ffa-4eef-a041-6558311dd3a2",
                  "status": 403,
                  "title": "Authorization error",
                  "type": "authorization.error",
                  "errors": [
                    {
                      "title": "Required permission missing",
                      "type": "required.permission.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "description": "[Resource not found error](https://techdocs.akamai.com/test-ctr/reference/404).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "1dcdb168-8837-415e-92bc-31aa36326495",
                  "requestField": "propertyName",
                  "status": 404,
                  "title": "Resource not found",
                  "type": "resource.not.found",
                  "requestValues": [
                    "atc_user1_config"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates basic settings of a test suite. To edit test cases and variables, run the [Update a test suite with child objects](https://techdocs.akamai.com/test-ctr/reference/put-test-suites-with-child-objects) operation.",
        "operationId": "put-test-suite",
        "summary": "Update a test suite",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/put-test-suite"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "isLocked": true,
                "isStateful": false,
                "testSuiteDescription": "This test suite performs basic check of www.user8.example.com",
                "testSuiteName": "Updated sanity suite",
                "configs": {
                  "propertyManager": {
                    "propertyId": 1234,
                    "propertyVersion": 4
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "Specifies a test suite.",
                "type": "object",
                "required": [
                  "testSuiteName",
                  "isLocked",
                  "isStateful"
                ],
                "properties": {
                  "configs": {
                    "additionalProperties": false,
                    "description": "Specifies a Property Manager property version to associate with a test suite.",
                    "type": "object",
                    "required": [
                      "propertyManager"
                    ],
                    "properties": {
                      "propertyManager": {
                        "additionalProperties": false,
                        "description": "Specifies a property version associated with a test suite.",
                        "type": "object",
                        "properties": {
                          "propertyId": {
                            "description": "Identifies the property. To get this value, run the [List properties](https://techdocs.akamai.com/property-mgr/reference/get-properties) operation in the Property Manager API.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "propertyName": {
                            "description": "Name of the property. To get this value, run the [List properties](https://techdocs.akamai.com/property-mgr/reference/get-properties) operation in the Property Manager API.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "propertyVersion": {
                            "description": "Version of the property. To get this value, run the [List properties](https://techdocs.akamai.com/property-mgr/reference/get-properties) operation in the Property Manager API.",
                            "minimum": 1,
                            "type": "integer"
                          }
                        },
                        "oneOf": [
                          {
                            "title": "Property ID and version",
                            "required": [
                              "propertyId",
                              "propertyVersion"
                            ]
                          },
                          {
                            "title": "Property name and version",
                            "required": [
                              "propertyName",
                              "propertyVersion"
                            ]
                          }
                        ]
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/configs-create.yaml"
                    }
                  },
                  "isLocked": {
                    "description": "Locks the test suite so that only designated owners or editors can modify it.",
                    "example": "{{isLocked}}",
                    "type": "boolean"
                  },
                  "isStateful": {
                    "description": "Sets the test suite to be run statefully, retaining cookies and session data for subsequent test cases within the test suite.",
                    "example": "{{isStateful}}",
                    "type": "boolean"
                  },
                  "testSuiteDescription": {
                    "default": null,
                    "description": "Description of the test suite. It's `null` for test suites without descriptions. ",
                    "example": "{{testSuiteDescription}}",
                    "maxLength": 4000,
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "testSuiteName": {
                    "description": "Unique name for each test suite.",
                    "example": "{{testSuiteName}}",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/test-suite-create.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response provides the updated test suite.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "alfulani",
                  "createdDate": "2019-10-30T12:09:37+0000",
                  "executableTestCaseCount": 1,
                  "isLocked": true,
                  "isStateful": false,
                  "modifiedBy": "tyamada",
                  "modifiedDate": "2019-10-30T12:10:03+0000",
                  "testSuiteDescription": "This test suite performs basic check of www.user8.example.com",
                  "testSuiteId": 284,
                  "testSuiteName": "Updated sanity suite",
                  "configs": {
                    "propertyManager": {
                      "propertyId": 1234,
                      "propertyName": "config_user8",
                      "propertyVersion": 4
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies a test suite.",
                  "type": "object",
                  "required": [
                    "testSuiteId",
                    "testSuiteName",
                    "isLocked",
                    "isStateful",
                    "executableTestCaseCount",
                    "createdBy",
                    "createdDate"
                  ],
                  "properties": {
                    "configs": {
                      "additionalProperties": false,
                      "default": null,
                      "description": "Specifies the Property Manager property version associated with the test suite. It's `null` for test suites with no properties associated. ",
                      "nullable": true,
                      "type": "object",
                      "required": [
                        "propertyManager"
                      ],
                      "properties": {
                        "propertyManager": {
                          "additionalProperties": false,
                          "description": "Specifies the property version associated with the test suite.",
                          "type": "object",
                          "required": [
                            "propertyId",
                            "propertyName",
                            "propertyVersion"
                          ],
                          "properties": {
                            "propertyId": {
                              "description": "Identifies a Property Manager property.",
                              "minimum": 1,
                              "type": "integer"
                            },
                            "propertyName": {
                              "description": "Name of the property.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "propertyVersion": {
                              "description": "Version of the property.",
                              "minimum": 1,
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/configs.yaml"
                      }
                    },
                    "createdBy": {
                      "description": "Username who created the item.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/createdBy.yaml"
                      }
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the item was created.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/createdDate.yaml"
                      }
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the item.",
                      "minLength": 1,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/deletedBy.yaml"
                      }
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the item was deleted.",
                      "format": "date-time",
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/deletedDate.yaml"
                      }
                    },
                    "executableTestCaseCount": {
                      "description": "Number of included test cases executable in a test run. To learn more, see [Variable groups](https://techdocs.akamai.com/test-ctr/reference/variables-overview#variable-groups).",
                      "minimum": 0,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "isLocked": {
                      "description": "Locks the test suite so that only designated owners or editors can modify it.",
                      "type": "boolean"
                    },
                    "isStateful": {
                      "description": "Sets the test suite to be run statefully, retaining cookies and session data for subsequent test cases within the test suite.",
                      "type": "boolean"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the item.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/modifiedBy.yaml"
                      }
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the item was last modified.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/modifiedDate.yaml"
                      }
                    },
                    "testSuiteDescription": {
                      "default": null,
                      "description": "Description of the test suite. It's `null` for test suites without descriptions. ",
                      "maxLength": 4000,
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "testSuiteId": {
                      "description": "Identifies a test suite.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "testSuiteName": {
                      "description": "Unique name for each test suite.",
                      "maxLength": 100,
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/test-suite.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Validation errors](https://techdocs.akamai.com/test-ctr/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "e4bdb007-213d-4573-ab76-4f071b55de59",
                  "status": 400,
                  "title": "Validation error",
                  "type": "validation.error",
                  "errors": [
                    {
                      "requestField": "propertyName",
                      "title": "Required field missing",
                      "type": "required.field.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "403": {
            "description": "[Authorization error](https://techdocs.akamai.com/test-ctr/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a86ef2f3-4ffa-4eef-a041-6558311dd3a2",
                  "status": 403,
                  "title": "Authorization error",
                  "type": "authorization.error",
                  "errors": [
                    {
                      "title": "Required permission missing",
                      "type": "required.permission.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "description": "[Resource not found error](https://techdocs.akamai.com/test-ctr/reference/404).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "1dcdb168-8837-415e-92bc-31aa36326495",
                  "requestField": "propertyName",
                  "status": 404,
                  "title": "Resource not found",
                  "type": "resource.not.found",
                  "requestValues": [
                    "atc_user1_config"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Deletes a test suite and included child objects: test cases and variables. You can [restore](https://techdocs.akamai.com/test-ctr/reference/post-test-suite-restore) test suites with child objects within 30 days of deleting them.",
        "operationId": "delete-test-suite",
        "summary": "Delete a test suite",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/delete-test-suite"
        },
        "responses": {
          "204": {
            "description": "Test suite removed.",
            "content": {
              "*/*": {}
            }
          },
          "400": {
            "description": "[Validation errors](https://techdocs.akamai.com/test-ctr/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "e4bdb007-213d-4573-ab76-4f071b55de59",
                  "status": 400,
                  "title": "Validation error",
                  "type": "validation.error",
                  "errors": [
                    {
                      "requestField": "propertyName",
                      "title": "Required field missing",
                      "type": "required.field.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "403": {
            "description": "[Authorization error](https://techdocs.akamai.com/test-ctr/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a86ef2f3-4ffa-4eef-a041-6558311dd3a2",
                  "status": 403,
                  "title": "Authorization error",
                  "type": "authorization.error",
                  "errors": [
                    {
                      "title": "Required permission missing",
                      "type": "required.permission.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "description": "[Resource not found error](https://techdocs.akamai.com/test-ctr/reference/404).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "1dcdb168-8837-415e-92bc-31aa36326495",
                  "requestField": "propertyName",
                  "status": 404,
                  "title": "Resource not found",
                  "type": "resource.not.found",
                  "requestValues": [
                    "atc_user1_config"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Identifies a test suite. To get this value, run the [List test suites](https://techdocs.akamai.com/test-ctr/reference/get-test-suites) operation.",
          "example": "{{testSuiteId}}",
          "in": "path",
          "name": "testSuiteId",
          "required": true,
          "schema": {
            "example": 284,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testSuiteId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-suites/{testSuiteId}/restore": {
      "post": {
        "description": "Restores a deleted test suite and included child objects. You can run this operation within 30 days of deleting the test suite.",
        "operationId": "post-test-suite-restore",
        "summary": "Restore a test suite",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-suite-restore"
        },
        "responses": {
          "200": {
            "description": "The response provides the restored test suite.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "jsmith",
                  "createdDate": "2023-04-12T10:28:13+0000",
                  "executableTestCaseCount": 1,
                  "isLocked": false,
                  "isStateful": false,
                  "modifiedBy": "jkowalski",
                  "modifiedDate": "2023-04-12T10:29:20+0000",
                  "testSuiteDescription": "This test suite performs basic check of www.user8.example.com",
                  "testSuiteId": 284,
                  "testSuiteName": "www.user8.example.com test suite",
                  "configs": {
                    "propertyManager": {
                      "propertyId": 1234,
                      "propertyName": "config_user8",
                      "propertyVersion": 4
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies a test suite.",
                  "type": "object",
                  "required": [
                    "testSuiteId",
                    "testSuiteName",
                    "isLocked",
                    "isStateful",
                    "executableTestCaseCount",
                    "createdBy",
                    "createdDate"
                  ],
                  "properties": {
                    "configs": {
                      "additionalProperties": false,
                      "default": null,
                      "description": "Specifies the Property Manager property version associated with the test suite. It's `null` for test suites with no properties associated. ",
                      "nullable": true,
                      "type": "object",
                      "required": [
                        "propertyManager"
                      ],
                      "properties": {
                        "propertyManager": {
                          "additionalProperties": false,
                          "description": "Specifies the property version associated with the test suite.",
                          "type": "object",
                          "required": [
                            "propertyId",
                            "propertyName",
                            "propertyVersion"
                          ],
                          "properties": {
                            "propertyId": {
                              "description": "Identifies a Property Manager property.",
                              "minimum": 1,
                              "type": "integer"
                            },
                            "propertyName": {
                              "description": "Name of the property.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "propertyVersion": {
                              "description": "Version of the property.",
                              "minimum": 1,
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/configs.yaml"
                      }
                    },
                    "createdBy": {
                      "description": "Username who created the item.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/createdBy.yaml"
                      }
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the item was created.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/createdDate.yaml"
                      }
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the item.",
                      "minLength": 1,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/deletedBy.yaml"
                      }
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the item was deleted.",
                      "format": "date-time",
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/deletedDate.yaml"
                      }
                    },
                    "executableTestCaseCount": {
                      "description": "Number of included test cases executable in a test run. To learn more, see [Variable groups](https://techdocs.akamai.com/test-ctr/reference/variables-overview#variable-groups).",
                      "minimum": 0,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "isLocked": {
                      "description": "Locks the test suite so that only designated owners or editors can modify it.",
                      "type": "boolean"
                    },
                    "isStateful": {
                      "description": "Sets the test suite to be run statefully, retaining cookies and session data for subsequent test cases within the test suite.",
                      "type": "boolean"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the item.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/modifiedBy.yaml"
                      }
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the item was last modified.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/modifiedDate.yaml"
                      }
                    },
                    "testSuiteDescription": {
                      "default": null,
                      "description": "Description of the test suite. It's `null` for test suites without descriptions. ",
                      "maxLength": 4000,
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "testSuiteId": {
                      "description": "Identifies a test suite.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "testSuiteName": {
                      "description": "Unique name for each test suite.",
                      "maxLength": 100,
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/test-suite.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Validation errors](https://techdocs.akamai.com/test-ctr/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "e4bdb007-213d-4573-ab76-4f071b55de59",
                  "status": 400,
                  "title": "Validation error",
                  "type": "validation.error",
                  "errors": [
                    {
                      "requestField": "propertyName",
                      "title": "Required field missing",
                      "type": "required.field.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "403": {
            "description": "[Authorization error](https://techdocs.akamai.com/test-ctr/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a86ef2f3-4ffa-4eef-a041-6558311dd3a2",
                  "status": 403,
                  "title": "Authorization error",
                  "type": "authorization.error",
                  "errors": [
                    {
                      "title": "Required permission missing",
                      "type": "required.permission.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "description": "[Resource not found error](https://techdocs.akamai.com/test-ctr/reference/404).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "1dcdb168-8837-415e-92bc-31aa36326495",
                  "requestField": "propertyName",
                  "status": 404,
                  "title": "Resource not found",
                  "type": "resource.not.found",
                  "requestValues": [
                    "atc_user1_config"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Identifies a test suite. To get this value, run the [List test suites](https://techdocs.akamai.com/test-ctr/reference/get-test-suites) operation.",
          "example": "{{testSuiteId}}",
          "in": "path",
          "name": "testSuiteId",
          "required": true,
          "schema": {
            "example": 284,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testSuiteId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-suites/{testSuiteId}/test-cases": {
      "post": {
        "description": "Creates a list of new functional test cases for a test suite. Each test case consists of a test request, client profile, and condition. If you want to use variables within a condition or test request's URL or request header, [create the needed variables](https://techdocs.akamai.com/test-ctr/reference/post-variables) first. The operation responds with a [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses).",
        "operationId": "post-test-cases",
        "summary": "Create test cases",
        "tags": [
          "Test cases"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-cases"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Lists functional test cases and identifiers of included objects: conditions, test requests, and client profiles.",
                "minItems": 1,
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "additionalProperties": false,
                  "description": "Specifies the functional test case and included objects: condition, test request, and client profile.",
                  "type": "object",
                  "required": [
                    "testRequest",
                    "condition",
                    "clientProfile"
                  ],
                  "properties": {
                    "clientProfile": {
                      "additionalProperties": false,
                      "description": "Specifies a client profile included in the test case.",
                      "type": "object",
                      "required": [
                        "ipVersion",
                        "client"
                      ],
                      "properties": {
                        "client": {
                          "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                          "type": "string",
                          "enum": [
                            "CHROME",
                            "CURL"
                          ]
                        },
                        "geoLocation": {
                          "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                          "type": "string",
                          "enum": [
                            "US"
                          ]
                        },
                        "ipVersion": {
                          "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                          "type": "string",
                          "enum": [
                            "IPV4",
                            "IPV6"
                          ]
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/client-profile.yaml"
                      }
                    },
                    "condition": {
                      "additionalProperties": false,
                      "description": "Specifies a condition included in the test case.",
                      "type": "object",
                      "required": [
                        "conditionExpression"
                      ],
                      "properties": {
                        "conditionExpression": {
                          "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/condition-create.yaml"
                      }
                    },
                    "setVariables": {
                      "description": "Contains test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                        "type": "object",
                        "required": [
                          "variableName",
                          "variableValue"
                        ],
                        "properties": {
                          "variableName": {
                            "description": "Name of the created variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string"
                          },
                          "variableValue": {
                            "description": "Value of the variable to resolve at runtime.",
                            "maxLength": 4000,
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/set-variable-create-with-child-objects.yaml"
                        }
                      }
                    },
                    "testRequest": {
                      "additionalProperties": false,
                      "description": "Specifies a test request included in the test case.",
                      "type": "object",
                      "required": [
                        "testRequestUrl",
                        "requestMethod"
                      ],
                      "properties": {
                        "encodeRequestBody": {
                          "default": true,
                          "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                          "nullable": true,
                          "type": "boolean"
                        },
                        "requestBody": {
                          "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                          "maxLength": 4000,
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "requestHeaders": {
                          "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                              "headerName",
                              "headerValue",
                              "headerAction"
                            ],
                            "properties": {
                              "headerAction": {
                                "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                "type": "string",
                                "enum": [
                                  "ADD",
                                  "MODIFY",
                                  "FILTER"
                                ]
                              },
                              "headerName": {
                                "description": "Name of the request header.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "headerValue": {
                                "description": "Value of the request header.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "requestMethod": {
                          "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                          "type": "string",
                          "enum": [
                            "HEAD",
                            "GET",
                            "POST"
                          ]
                        },
                        "tags": {
                          "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "testRequestUrl": {
                          "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                          "maxLength": 2048,
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/test-request-create.yaml"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/functional-test-case-create.yaml"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/functional-test-cases-create.yaml"
                }
              },
              "example": [
                {
                  "clientProfile": {
                    "client": "CURL",
                    "ipVersion": "IPV4"
                  },
                  "condition": {
                    "conditionExpression": "Response header \"Content-Type\" has a value that ends with \"{{contentTypeVale}}\""
                  },
                  "testRequest": {
                    "encodeRequestBody": false,
                    "requestBody": "",
                    "requestMethod": "POST",
                    "testRequestUrl": "https://{{hostname}}/",
                    "requestHeaders": [
                      {
                        "headerAction": "ADD",
                        "headerName": "Accept",
                        "headerValue": "v1"
                      }
                    ]
                  }
                },
                {
                  "clientProfile": {
                    "client": "CHROME",
                    "ipVersion": "IPV4"
                  },
                  "condition": {
                    "conditionExpression": "Response code is one of \"{{successCode.statusCodes}}\""
                  },
                  "testRequest": {
                    "requestMethod": "GET",
                    "testRequestUrl": "https://{{sampleVarGroup.urls}}/index"
                  }
                }
              ]
            }
          }
        },
        "responses": {
          "207": {
            "description": "[Partial success response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "failures": [],
                  "successes": [
                    {
                      "createdBy": "jkowalski",
                      "createdDate": "2021-07-06T10:28:13+0000",
                      "modifiedBy": "tyamada",
                      "modifiedDate": "2021-07-06T10:28:13+0000",
                      "order": 1,
                      "testCaseId": 301,
                      "clientProfile": {
                        "client": "CURL",
                        "ipVersion": "IPV4"
                      },
                      "condition": {
                        "conditionExpression": "Response header \"Content-Type\" has a value that ends with \"{{contentTypeVale}}\"",
                        "conditionExpressionResolved": "Response header \"Content-Type\" has a value that ends with \"json\""
                      },
                      "testRequest": {
                        "encodeRequestBody": false,
                        "requestBody": "",
                        "requestMethod": "POST",
                        "testRequestUrl": "https://{{hostname}}/",
                        "testRequestUrlResolved": "https://www.user8.example.com/",
                        "requestHeaders": [
                          {
                            "headerAction": "ADD",
                            "headerName": "Accept",
                            "headerValue": "v1"
                          }
                        ]
                      }
                    },
                    {
                      "createdBy": "mrossi",
                      "createdDate": "2021-07-06T10:28:13+0000",
                      "modifiedBy": "tyamada",
                      "modifiedDate": "2021-07-06T10:28:13+0000",
                      "order": 2,
                      "testCaseId": 302,
                      "clientProfile": {
                        "client": "CHROME",
                        "ipVersion": "IPV4"
                      },
                      "condition": {
                        "conditionExpression": "Response code is one of \"{{successCode.statusCodes}}\""
                      },
                      "testRequest": {
                        "requestMethod": "GET",
                        "testRequestUrl": "https://{{sampleVarGroup.urls}}/index"
                      },
                      "derivedTestCases": [
                        {
                          "order": 1,
                          "clientProfile": {
                            "client": "CHROME",
                            "ipVersion": "IPV4"
                          },
                          "condition": {
                            "conditionExpression": "Response code is one of \"200\""
                          },
                          "testRequest": {
                            "requestMethod": "GET",
                            "testRequestUrl": "https://abc.com/index"
                          }
                        },
                        {
                          "order": 2,
                          "clientProfile": {
                            "client": "CHROME",
                            "ipVersion": "IPV4"
                          },
                          "condition": {
                            "conditionExpression": "Response code is one of \"200\""
                          },
                          "testRequest": {
                            "requestMethod": "GET",
                            "testRequestUrl": "https://def.org/index"
                          }
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains the details on the creating functional test cases operation.",
                  "type": "object",
                  "required": [
                    "successes",
                    "failures"
                  ],
                  "properties": {
                    "failures": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "successes": {
                      "description": "Lists details on test cases for which the operation succeeded.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the functional test case and included objects: condition, test request, and client profile.",
                        "type": "object",
                        "required": [
                          "testCaseId",
                          "order",
                          "testRequest",
                          "condition",
                          "clientProfile"
                        ],
                        "properties": {
                          "clientProfile": {
                            "additionalProperties": false,
                            "description": "Specifies a client profile included in the test case.",
                            "type": "object",
                            "required": [
                              "ipVersion",
                              "client"
                            ],
                            "properties": {
                              "client": {
                                "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                "type": "string",
                                "enum": [
                                  "CHROME",
                                  "CURL"
                                ]
                              },
                              "geoLocation": {
                                "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                "type": "string",
                                "enum": [
                                  "US"
                                ]
                              },
                              "ipVersion": {
                                "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                "type": "string",
                                "enum": [
                                  "IPV4",
                                  "IPV6"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/client-profile.yaml"
                            }
                          },
                          "condition": {
                            "additionalProperties": false,
                            "description": "Specifies a condition included in the test case.",
                            "type": "object",
                            "required": [
                              "conditionExpression"
                            ],
                            "properties": {
                              "conditionExpression": {
                                "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                "minLength": 1,
                                "type": "string"
                              },
                              "conditionExpressionResolved": {
                                "description": "Condition statement with resolved variables, if applicable.",
                                "minLength": 1,
                                "readOnly": true,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/condition.yaml"
                            }
                          },
                          "createdBy": {
                            "description": "Username who created the item.",
                            "minLength": 1,
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/createdBy.yaml"
                            }
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the item was created.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/createdDate.yaml"
                            }
                          },
                          "deletedBy": {
                            "description": "Username who last deleted the item.",
                            "minLength": 1,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/deletedBy.yaml"
                            }
                          },
                          "deletedDate": {
                            "description": "ISO 8601 timestamp indicating when the item was deleted.",
                            "format": "date-time",
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/deletedDate.yaml"
                            }
                          },
                          "derivedTestCases": {
                            "description": "Derived test cases in the response when there is reference to variable group(s).",
                            "minItems": 0,
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Specifies the functional derived test case when a variable group reference is present and included objects: condition, test request, and client profile.",
                              "type": "object",
                              "required": [
                                "testRequest",
                                "condition",
                                "clientProfile",
                                "order"
                              ],
                              "properties": {
                                "clientProfile": {
                                  "additionalProperties": false,
                                  "description": "Specifies a client profile included in the test case.",
                                  "type": "object",
                                  "required": [
                                    "ipVersion",
                                    "client"
                                  ],
                                  "properties": {
                                    "client": {
                                      "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                      "type": "string",
                                      "enum": [
                                        "CHROME",
                                        "CURL"
                                      ]
                                    },
                                    "geoLocation": {
                                      "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                      "type": "string",
                                      "enum": [
                                        "US"
                                      ]
                                    },
                                    "ipVersion": {
                                      "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                      "type": "string",
                                      "enum": [
                                        "IPV4",
                                        "IPV6"
                                      ]
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/client-profile.yaml"
                                  }
                                },
                                "condition": {
                                  "additionalProperties": false,
                                  "description": "Specifies a condition included in the test case.",
                                  "type": "object",
                                  "required": [
                                    "conditionExpression"
                                  ],
                                  "properties": {
                                    "conditionExpression": {
                                      "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "conditionExpressionResolved": {
                                      "description": "Condition statement with resolved variables, if applicable.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/condition.yaml"
                                  }
                                },
                                "order": {
                                  "description": "Order of the derived test case. In stateful test suites, a test run's test cases execute in this order.  ",
                                  "minimum": 0,
                                  "readOnly": true,
                                  "type": "integer"
                                },
                                "setVariables": {
                                  "description": "Contains derived test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                    "type": "object",
                                    "required": [
                                      "variableId",
                                      "variableName",
                                      "variableValue"
                                    ],
                                    "properties": {
                                      "variableId": {
                                        "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                        "minimum": 1,
                                        "readOnly": true,
                                        "type": "integer"
                                      },
                                      "variableName": {
                                        "description": "Name of the variable.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "variableValue": {
                                        "description": "Value of the variable to resolve at runtime.",
                                        "maxLength": 4000,
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "x-akamai": {
                                      "file-path": "schemas/set-variable.yaml"
                                    }
                                  }
                                },
                                "testRequest": {
                                  "additionalProperties": false,
                                  "description": "Specifies a test request included in the test case.",
                                  "type": "object",
                                  "required": [
                                    "testRequestUrl",
                                    "requestMethod"
                                  ],
                                  "properties": {
                                    "encodeRequestBody": {
                                      "default": true,
                                      "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                      "nullable": true,
                                      "type": "boolean"
                                    },
                                    "requestBody": {
                                      "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                      "maxLength": 4000,
                                      "minLength": 1,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "requestBodyResolved": {
                                      "description": "Value of test request body after resolving all variables.",
                                      "minLength": 1,
                                      "nullable": true,
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "requestHeaders": {
                                      "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "type": "object",
                                        "required": [
                                          "headerName",
                                          "headerValue",
                                          "headerAction"
                                        ],
                                        "properties": {
                                          "headerAction": {
                                            "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                            "type": "string",
                                            "enum": [
                                              "ADD",
                                              "MODIFY",
                                              "FILTER"
                                            ]
                                          },
                                          "headerName": {
                                            "description": "Name of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "headerNameResolved": {
                                            "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                            "minLength": 1,
                                            "readOnly": true,
                                            "type": "string"
                                          },
                                          "headerValue": {
                                            "description": "Value of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "headerValueResolved": {
                                            "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                            "minLength": 1,
                                            "readOnly": true,
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "requestMethod": {
                                      "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                      "type": "string",
                                      "enum": [
                                        "HEAD",
                                        "GET",
                                        "POST"
                                      ]
                                    },
                                    "tags": {
                                      "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "testRequestUrl": {
                                      "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                      "maxLength": 2048,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "testRequestUrlResolved": {
                                      "description": "Value of test request URL after resolving all variables.",
                                      "minLength": 1,
                                      "nullable": true,
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/test-request.yaml"
                                  }
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/functional-derived-test-case.yaml"
                              }
                            }
                          },
                          "modifiedBy": {
                            "description": "Username who last modified the item.",
                            "minLength": 1,
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/modifiedBy.yaml"
                            }
                          },
                          "modifiedDate": {
                            "description": "ISO 8601 timestamp indicating when the item was last modified.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/modifiedDate.yaml"
                            }
                          },
                          "order": {
                            "description": "Order of the test case. In stateful test suites, a test run's test cases execute in this order.",
                            "minimum": 1,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "setVariables": {
                            "description": "Contains test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                              "type": "object",
                              "required": [
                                "variableId",
                                "variableName",
                                "variableValue"
                              ],
                              "properties": {
                                "variableId": {
                                  "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                  "minimum": 1,
                                  "readOnly": true,
                                  "type": "integer"
                                },
                                "variableName": {
                                  "description": "Name of the variable.",
                                  "maxLength": 100,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "variableValue": {
                                  "description": "Value of the variable to resolve at runtime.",
                                  "maxLength": 4000,
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/set-variable.yaml"
                              }
                            }
                          },
                          "testCaseId": {
                            "description": "Identifies a functional test case. To get this value, run the [List test cases](https://techdocs.akamai.com/test-ctr/reference/get-test-cases) operation.",
                            "minimum": 1,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "testRequest": {
                            "additionalProperties": false,
                            "description": "Specifies a test request included in the test case.",
                            "type": "object",
                            "required": [
                              "testRequestUrl",
                              "requestMethod"
                            ],
                            "properties": {
                              "encodeRequestBody": {
                                "default": true,
                                "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                "nullable": true,
                                "type": "boolean"
                              },
                              "requestBody": {
                                "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                "maxLength": 4000,
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "requestBodyResolved": {
                                "description": "Value of test request body after resolving all variables.",
                                "minLength": 1,
                                "nullable": true,
                                "readOnly": true,
                                "type": "string"
                              },
                              "requestHeaders": {
                                "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "required": [
                                    "headerName",
                                    "headerValue",
                                    "headerAction"
                                  ],
                                  "properties": {
                                    "headerAction": {
                                      "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                      "type": "string",
                                      "enum": [
                                        "ADD",
                                        "MODIFY",
                                        "FILTER"
                                      ]
                                    },
                                    "headerName": {
                                      "description": "Name of the request header.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "headerNameResolved": {
                                      "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "headerValue": {
                                      "description": "Value of the request header.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "headerValueResolved": {
                                      "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "requestMethod": {
                                "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                "type": "string",
                                "enum": [
                                  "HEAD",
                                  "GET",
                                  "POST"
                                ]
                              },
                              "tags": {
                                "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "testRequestUrl": {
                                "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                "maxLength": 2048,
                                "minLength": 1,
                                "type": "string"
                              },
                              "testRequestUrlResolved": {
                                "description": "Value of test request URL after resolving all variables.",
                                "minLength": 1,
                                "nullable": true,
                                "readOnly": true,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/test-request.yaml"
                            }
                          },
                          "warnings": {
                            "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807). Any warnings related to variable groups would be captured here.",
                            "minItems": 0,
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Specifies the error that occurred.",
                              "type": "object",
                              "required": [
                                "type",
                                "title"
                              ],
                              "properties": {
                                "existingEntities": {
                                  "description": "Lists objects included within the functional test case.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "requestField": {
                                  "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "requestObjects": {
                                  "description": "Lists invalid request objects.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "requestValues": {
                                  "description": "Lists values corresponding to the `requestField`.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "title": "String",
                                        "type": "string"
                                      },
                                      {
                                        "title": "Integer",
                                        "type": "integer"
                                      },
                                      {
                                        "title": "Object",
                                        "type": "object"
                                      }
                                    ]
                                  }
                                },
                                "title": {
                                  "description": "Title of the error.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type of error.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/sub-problem.yaml"
                              }
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/functional-test-case.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/functional-test-cases-207.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Validation errors](https://techdocs.akamai.com/test-ctr/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "e4bdb007-213d-4573-ab76-4f071b55de59",
                  "status": 400,
                  "title": "Validation error",
                  "type": "validation.error",
                  "errors": [
                    {
                      "requestField": "propertyName",
                      "title": "Required field missing",
                      "type": "required.field.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "403": {
            "description": "[Authorization error](https://techdocs.akamai.com/test-ctr/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a86ef2f3-4ffa-4eef-a041-6558311dd3a2",
                  "status": 403,
                  "title": "Authorization error",
                  "type": "authorization.error",
                  "errors": [
                    {
                      "title": "Required permission missing",
                      "type": "required.permission.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "description": "[Resource not found error](https://techdocs.akamai.com/test-ctr/reference/404).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "1dcdb168-8837-415e-92bc-31aa36326495",
                  "requestField": "propertyName",
                  "status": 404,
                  "title": "Resource not found",
                  "type": "resource.not.found",
                  "requestValues": [
                    "atc_user1_config"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists functional test cases included in a test suite. The list can also include deleted test cases that you can restore. The response is an array of objects, each keyed by `testCaseId`.",
        "operationId": "get-test-cases",
        "summary": "List test cases",
        "tags": [
          "Test cases"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-cases"
        },
        "responses": {
          "200": {
            "description": "The response provides test cases for a test suite.",
            "content": {
              "application/json": {
                "example": {
                  "areAllTestCasesIncluded": true,
                  "testCases": [
                    {
                      "createdBy": "mrossi",
                      "createdDate": "2023-04-12T10:28:13+0000",
                      "modifiedBy": "tyamada",
                      "modifiedDate": "2023-04-12T10:28:14+0000",
                      "order": 1,
                      "testCaseId": 301,
                      "clientProfile": {
                        "client": "CHROME",
                        "ipVersion": "IPV4"
                      },
                      "condition": {
                        "conditionExpression": "Response header \"Content-Type\" has a value that ends with \"{{contentTypeVale}}\"",
                        "conditionExpressionResolved": "Response header \"Content-Type\" has a value that ends with \"json\""
                      },
                      "testRequest": {
                        "requestMethod": "GET",
                        "testRequestUrl": "https://{{hostname}}/",
                        "testRequestUrlResolved": "https://www.user8.example.com/",
                        "requestHeaders": [
                          {
                            "headerAction": "ADD",
                            "headerName": "Accept",
                            "headerValue": "v1"
                          }
                        ]
                      }
                    },
                    {
                      "createdBy": "jperez",
                      "createdDate": "2023-04-12T10:28:13+0000",
                      "modifiedBy": "adevi",
                      "modifiedDate": "2023-04-12T10:28:13+0000",
                      "order": 2,
                      "testCaseId": 302,
                      "clientProfile": {
                        "client": "CHROME",
                        "ipVersion": "IPV4"
                      },
                      "condition": {
                        "conditionExpression": "Response code is one of \"{{successCode.statusCodes}}\""
                      },
                      "testRequest": {
                        "requestMethod": "GET",
                        "testRequestUrl": "https://{{sampleVarGroup.urls}}/index"
                      },
                      "derivedTestCases": [
                        {
                          "order": 1,
                          "clientProfile": {
                            "client": "CHROME",
                            "ipVersion": "IPV4"
                          },
                          "condition": {
                            "conditionExpression": "Response code is one of \"200\""
                          },
                          "testRequest": {
                            "requestMethod": "GET",
                            "testRequestUrl": "https://abc.com/index"
                          }
                        },
                        {
                          "order": 2,
                          "clientProfile": {
                            "client": "CHROME",
                            "ipVersion": "IPV4"
                          },
                          "condition": {
                            "conditionExpression": "Response code is one of \"200\""
                          },
                          "testRequest": {
                            "requestMethod": "GET",
                            "testRequestUrl": "https://def.org/index"
                          }
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains test cases included in the test suite and details about the response.",
                  "type": "object",
                  "required": [
                    "areAllTestCasesIncluded",
                    "testCases"
                  ],
                  "properties": {
                    "areAllTestCasesIncluded": {
                      "description": "Whether the response includes all test cases. If you don't have access to any of the hostnames used in the test cases, you don't see these test cases in the response.",
                      "type": "boolean"
                    },
                    "testCases": {
                      "description": "Lists test cases included in the test suite.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the functional test case and included objects: condition, test request, and client profile.",
                        "type": "object",
                        "required": [
                          "testCaseId",
                          "order",
                          "testRequest",
                          "condition",
                          "clientProfile"
                        ],
                        "properties": {
                          "clientProfile": {
                            "additionalProperties": false,
                            "description": "Specifies a client profile included in the test case.",
                            "type": "object",
                            "required": [
                              "ipVersion",
                              "client"
                            ],
                            "properties": {
                              "client": {
                                "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                "type": "string",
                                "enum": [
                                  "CHROME",
                                  "CURL"
                                ]
                              },
                              "geoLocation": {
                                "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                "type": "string",
                                "enum": [
                                  "US"
                                ]
                              },
                              "ipVersion": {
                                "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                "type": "string",
                                "enum": [
                                  "IPV4",
                                  "IPV6"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/client-profile.yaml"
                            }
                          },
                          "condition": {
                            "additionalProperties": false,
                            "description": "Specifies a condition included in the test case.",
                            "type": "object",
                            "required": [
                              "conditionExpression"
                            ],
                            "properties": {
                              "conditionExpression": {
                                "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                "minLength": 1,
                                "type": "string"
                              },
                              "conditionExpressionResolved": {
                                "description": "Condition statement with resolved variables, if applicable.",
                                "minLength": 1,
                                "readOnly": true,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/condition.yaml"
                            }
                          },
                          "createdBy": {
                            "description": "Username who created the item.",
                            "minLength": 1,
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/createdBy.yaml"
                            }
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the item was created.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/createdDate.yaml"
                            }
                          },
                          "deletedBy": {
                            "description": "Username who last deleted the item.",
                            "minLength": 1,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/deletedBy.yaml"
                            }
                          },
                          "deletedDate": {
                            "description": "ISO 8601 timestamp indicating when the item was deleted.",
                            "format": "date-time",
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/deletedDate.yaml"
                            }
                          },
                          "derivedTestCases": {
                            "description": "Derived test cases in the response when there is reference to variable group(s).",
                            "minItems": 0,
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Specifies the functional derived test case when a variable group reference is present and included objects: condition, test request, and client profile.",
                              "type": "object",
                              "required": [
                                "testRequest",
                                "condition",
                                "clientProfile",
                                "order"
                              ],
                              "properties": {
                                "clientProfile": {
                                  "additionalProperties": false,
                                  "description": "Specifies a client profile included in the test case.",
                                  "type": "object",
                                  "required": [
                                    "ipVersion",
                                    "client"
                                  ],
                                  "properties": {
                                    "client": {
                                      "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                      "type": "string",
                                      "enum": [
                                        "CHROME",
                                        "CURL"
                                      ]
                                    },
                                    "geoLocation": {
                                      "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                      "type": "string",
                                      "enum": [
                                        "US"
                                      ]
                                    },
                                    "ipVersion": {
                                      "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                      "type": "string",
                                      "enum": [
                                        "IPV4",
                                        "IPV6"
                                      ]
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/client-profile.yaml"
                                  }
                                },
                                "condition": {
                                  "additionalProperties": false,
                                  "description": "Specifies a condition included in the test case.",
                                  "type": "object",
                                  "required": [
                                    "conditionExpression"
                                  ],
                                  "properties": {
                                    "conditionExpression": {
                                      "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "conditionExpressionResolved": {
                                      "description": "Condition statement with resolved variables, if applicable.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/condition.yaml"
                                  }
                                },
                                "order": {
                                  "description": "Order of the derived test case. In stateful test suites, a test run's test cases execute in this order.  ",
                                  "minimum": 0,
                                  "readOnly": true,
                                  "type": "integer"
                                },
                                "setVariables": {
                                  "description": "Contains derived test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                    "type": "object",
                                    "required": [
                                      "variableId",
                                      "variableName",
                                      "variableValue"
                                    ],
                                    "properties": {
                                      "variableId": {
                                        "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                        "minimum": 1,
                                        "readOnly": true,
                                        "type": "integer"
                                      },
                                      "variableName": {
                                        "description": "Name of the variable.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "variableValue": {
                                        "description": "Value of the variable to resolve at runtime.",
                                        "maxLength": 4000,
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "x-akamai": {
                                      "file-path": "schemas/set-variable.yaml"
                                    }
                                  }
                                },
                                "testRequest": {
                                  "additionalProperties": false,
                                  "description": "Specifies a test request included in the test case.",
                                  "type": "object",
                                  "required": [
                                    "testRequestUrl",
                                    "requestMethod"
                                  ],
                                  "properties": {
                                    "encodeRequestBody": {
                                      "default": true,
                                      "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                      "nullable": true,
                                      "type": "boolean"
                                    },
                                    "requestBody": {
                                      "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                      "maxLength": 4000,
                                      "minLength": 1,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "requestBodyResolved": {
                                      "description": "Value of test request body after resolving all variables.",
                                      "minLength": 1,
                                      "nullable": true,
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "requestHeaders": {
                                      "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "type": "object",
                                        "required": [
                                          "headerName",
                                          "headerValue",
                                          "headerAction"
                                        ],
                                        "properties": {
                                          "headerAction": {
                                            "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                            "type": "string",
                                            "enum": [
                                              "ADD",
                                              "MODIFY",
                                              "FILTER"
                                            ]
                                          },
                                          "headerName": {
                                            "description": "Name of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "headerNameResolved": {
                                            "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                            "minLength": 1,
                                            "readOnly": true,
                                            "type": "string"
                                          },
                                          "headerValue": {
                                            "description": "Value of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "headerValueResolved": {
                                            "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                            "minLength": 1,
                                            "readOnly": true,
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "requestMethod": {
                                      "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                      "type": "string",
                                      "enum": [
                                        "HEAD",
                                        "GET",
                                        "POST"
                                      ]
                                    },
                                    "tags": {
                                      "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "testRequestUrl": {
                                      "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                      "maxLength": 2048,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "testRequestUrlResolved": {
                                      "description": "Value of test request URL after resolving all variables.",
                                      "minLength": 1,
                                      "nullable": true,
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/test-request.yaml"
                                  }
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/functional-derived-test-case.yaml"
                              }
                            }
                          },
                          "modifiedBy": {
                            "description": "Username who last modified the item.",
                            "minLength": 1,
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/modifiedBy.yaml"
                            }
                          },
                          "modifiedDate": {
                            "description": "ISO 8601 timestamp indicating when the item was last modified.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/modifiedDate.yaml"
                            }
                          },
                          "order": {
                            "description": "Order of the test case. In stateful test suites, a test run's test cases execute in this order.",
                            "minimum": 1,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "setVariables": {
                            "description": "Contains test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                              "type": "object",
                              "required": [
                                "variableId",
                                "variableName",
                                "variableValue"
                              ],
                              "properties": {
                                "variableId": {
                                  "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                  "minimum": 1,
                                  "readOnly": true,
                                  "type": "integer"
                                },
                                "variableName": {
                                  "description": "Name of the variable.",
                                  "maxLength": 100,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "variableValue": {
                                  "description": "Value of the variable to resolve at runtime.",
                                  "maxLength": 4000,
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/set-variable.yaml"
                              }
                            }
                          },
                          "testCaseId": {
                            "description": "Identifies a functional test case. To get this value, run the [List test cases](https://techdocs.akamai.com/test-ctr/reference/get-test-cases) operation.",
                            "minimum": 1,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "testRequest": {
                            "additionalProperties": false,
                            "description": "Specifies a test request included in the test case.",
                            "type": "object",
                            "required": [
                              "testRequestUrl",
                              "requestMethod"
                            ],
                            "properties": {
                              "encodeRequestBody": {
                                "default": true,
                                "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                "nullable": true,
                                "type": "boolean"
                              },
                              "requestBody": {
                                "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                "maxLength": 4000,
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "requestBodyResolved": {
                                "description": "Value of test request body after resolving all variables.",
                                "minLength": 1,
                                "nullable": true,
                                "readOnly": true,
                                "type": "string"
                              },
                              "requestHeaders": {
                                "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "required": [
                                    "headerName",
                                    "headerValue",
                                    "headerAction"
                                  ],
                                  "properties": {
                                    "headerAction": {
                                      "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                      "type": "string",
                                      "enum": [
                                        "ADD",
                                        "MODIFY",
                                        "FILTER"
                                      ]
                                    },
                                    "headerName": {
                                      "description": "Name of the request header.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "headerNameResolved": {
                                      "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "headerValue": {
                                      "description": "Value of the request header.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "headerValueResolved": {
                                      "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "requestMethod": {
                                "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                "type": "string",
                                "enum": [
                                  "HEAD",
                                  "GET",
                                  "POST"
                                ]
                              },
                              "tags": {
                                "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "testRequestUrl": {
                                "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                "maxLength": 2048,
                                "minLength": 1,
                                "type": "string"
                              },
                              "testRequestUrlResolved": {
                                "description": "Value of test request URL after resolving all variables.",
                                "minLength": 1,
                                "nullable": true,
                                "readOnly": true,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/test-request.yaml"
                            }
                          },
                          "warnings": {
                            "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807). Any warnings related to variable groups would be captured here.",
                            "minItems": 0,
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Specifies the error that occurred.",
                              "type": "object",
                              "required": [
                                "type",
                                "title"
                              ],
                              "properties": {
                                "existingEntities": {
                                  "description": "Lists objects included within the functional test case.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "requestField": {
                                  "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "requestObjects": {
                                  "description": "Lists invalid request objects.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "requestValues": {
                                  "description": "Lists values corresponding to the `requestField`.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "title": "String",
                                        "type": "string"
                                      },
                                      {
                                        "title": "Integer",
                                        "type": "integer"
                                      },
                                      {
                                        "title": "Object",
                                        "type": "object"
                                      }
                                    ]
                                  }
                                },
                                "title": {
                                  "description": "Title of the error.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type of error.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/sub-problem.yaml"
                              }
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/functional-test-case.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/functional-test-cases.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Validation errors](https://techdocs.akamai.com/test-ctr/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "e4bdb007-213d-4573-ab76-4f071b55de59",
                  "status": 400,
                  "title": "Validation error",
                  "type": "validation.error",
                  "errors": [
                    {
                      "requestField": "propertyName",
                      "title": "Required field missing",
                      "type": "required.field.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "403": {
            "description": "[Authorization error](https://techdocs.akamai.com/test-ctr/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a86ef2f3-4ffa-4eef-a041-6558311dd3a2",
                  "status": 403,
                  "title": "Authorization error",
                  "type": "authorization.error",
                  "errors": [
                    {
                      "title": "Required permission missing",
                      "type": "required.permission.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "description": "[Resource not found error](https://techdocs.akamai.com/test-ctr/reference/404).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "1dcdb168-8837-415e-92bc-31aa36326495",
                  "requestField": "propertyName",
                  "status": 404,
                  "title": "Resource not found",
                  "type": "resource.not.found",
                  "requestValues": [
                    "atc_user1_config"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "Includes items deleted within the last 30 days, which you can restore, `false` by default.",
            "example": "{{includeRecentlyDeleted}}",
            "in": "query",
            "name": "includeRecentlyDeleted",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/includeRecentlyDeleted-query.yaml"
            }
          },
          {
            "description": "Returns test cases with resolved variables assigned statically, `false` by default.",
            "example": "{{resolveVariables}}",
            "in": "query",
            "name": "resolveVariables",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/resolveVariables-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates functional test cases in a test suite. The operation responds with a [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses).",
        "operationId": "put-test-cases",
        "summary": "Update a test case",
        "tags": [
          "Test cases"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/put-test-cases"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Lists functional test cases and identifiers of included objects: conditions, test requests, and client profiles.",
                "minItems": 1,
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "additionalProperties": false,
                  "description": "Specifies the functional test case and included objects: condition, test request, and client profile.",
                  "type": "object",
                  "required": [
                    "testCaseId",
                    "testRequest",
                    "condition",
                    "clientProfile"
                  ],
                  "properties": {
                    "clientProfile": {
                      "additionalProperties": false,
                      "description": "Specifies a client profile included in the test case.",
                      "type": "object",
                      "required": [
                        "ipVersion",
                        "client"
                      ],
                      "properties": {
                        "client": {
                          "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                          "type": "string",
                          "enum": [
                            "CHROME",
                            "CURL"
                          ]
                        },
                        "geoLocation": {
                          "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                          "type": "string",
                          "enum": [
                            "US"
                          ]
                        },
                        "ipVersion": {
                          "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                          "type": "string",
                          "enum": [
                            "IPV4",
                            "IPV6"
                          ]
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/client-profile.yaml"
                      }
                    },
                    "condition": {
                      "additionalProperties": false,
                      "description": "Specifies a condition included in the test case.",
                      "type": "object",
                      "required": [
                        "conditionExpression"
                      ],
                      "properties": {
                        "conditionExpression": {
                          "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/condition-create.yaml"
                      }
                    },
                    "setVariables": {
                      "description": "Contains test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                        "type": "object",
                        "required": [
                          "variableName",
                          "variableId",
                          "variableValue"
                        ],
                        "properties": {
                          "variableId": {
                            "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                            "minimum": 1,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "variableName": {
                            "description": "Name of the created variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string"
                          },
                          "variableValue": {
                            "description": "Value of the variable to resolve at runtime.",
                            "maxLength": 4000,
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/set-variable-create.yaml"
                        },
                        "oneOf": [
                          {
                            "title": "Variable by name",
                            "required": [
                              "variableName",
                              "variableValue"
                            ]
                          },
                          {
                            "title": "Variable by ID",
                            "required": [
                              "variableId",
                              "variableValue"
                            ]
                          }
                        ]
                      }
                    },
                    "testCaseId": {
                      "description": "Identifies a functional test case. To get this value, run the [List test cases](https://techdocs.akamai.com/test-ctr/reference/get-test-cases) operation.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "testRequest": {
                      "additionalProperties": false,
                      "description": "Specifies a test request included in the test case.",
                      "type": "object",
                      "required": [
                        "testRequestUrl",
                        "requestMethod"
                      ],
                      "properties": {
                        "encodeRequestBody": {
                          "default": true,
                          "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                          "nullable": true,
                          "type": "boolean"
                        },
                        "requestBody": {
                          "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                          "maxLength": 4000,
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "requestHeaders": {
                          "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                              "headerName",
                              "headerValue",
                              "headerAction"
                            ],
                            "properties": {
                              "headerAction": {
                                "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                "type": "string",
                                "enum": [
                                  "ADD",
                                  "MODIFY",
                                  "FILTER"
                                ]
                              },
                              "headerName": {
                                "description": "Name of the request header.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "headerValue": {
                                "description": "Value of the request header.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "requestMethod": {
                          "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                          "type": "string",
                          "enum": [
                            "HEAD",
                            "GET",
                            "POST"
                          ]
                        },
                        "tags": {
                          "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "testRequestUrl": {
                          "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                          "maxLength": 2048,
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/test-request-create.yaml"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/functional-test-case-update.yaml"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/functional-test-cases-update.yaml"
                }
              },
              "example": [
                {
                  "testCaseId": 301,
                  "clientProfile": {
                    "client": "CURL",
                    "ipVersion": "IPV6"
                  },
                  "condition": {
                    "conditionExpression": "Response header \"Content-Type\" has a value that ends with \"{{contentTypeVale}}\""
                  },
                  "testRequest": {
                    "requestMethod": "POST",
                    "testRequestUrl": "https://{{hostname}}/",
                    "requestHeaders": [
                      {
                        "headerAction": "ADD",
                        "headerName": "Accept",
                        "headerValue": "v1"
                      }
                    ]
                  }
                },
                {
                  "testCaseId": 302,
                  "clientProfile": {
                    "client": "CHROME",
                    "ipVersion": "IPV6"
                  },
                  "condition": {
                    "conditionExpression": "Response code is one of \"{{successCode.statusCodes}}\""
                  },
                  "testRequest": {
                    "requestMethod": "GET",
                    "testRequestUrl": "https://{{sampleVarGroup.urls}}/index"
                  }
                }
              ]
            }
          }
        },
        "responses": {
          "207": {
            "description": "[Partial success response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "failures": [],
                  "successes": [
                    {
                      "createdBy": "jsmith",
                      "createdDate": "2021-07-06T10:28:13+0000",
                      "modifiedBy": "mrossi",
                      "modifiedDate": "2021-07-06T10:28:14+0000",
                      "order": 1,
                      "testCaseId": 301,
                      "clientProfile": {
                        "client": "CURL",
                        "ipVersion": "IPV6"
                      },
                      "condition": {
                        "conditionExpression": "Response header \"Content-Type\" has a value that ends with \"{{contentTypeVale}}\"",
                        "conditionExpressionResolved": "Response header \"Content-Type\" has a value that ends with \"json\""
                      },
                      "testRequest": {
                        "requestMethod": "POST",
                        "testRequestUrl": "https://{{hostname}}/",
                        "testRequestUrlResolved": "https://www.user8.example.com/",
                        "requestHeaders": [
                          {
                            "headerAction": "ADD",
                            "headerName": "Accept",
                            "headerValue": "v1"
                          }
                        ]
                      }
                    },
                    {
                      "createdBy": "alfulani",
                      "createdDate": "2021-07-06T10:28:13+0000",
                      "modifiedBy": "szhang",
                      "modifiedDate": "2021-07-06T10:28:13+0000",
                      "order": 2,
                      "testCaseId": 302,
                      "clientProfile": {
                        "client": "CHROME",
                        "ipVersion": "IPV4"
                      },
                      "condition": {
                        "conditionExpression": "Response code is one of \"{{successCode.statusCodes}}\""
                      },
                      "testRequest": {
                        "requestMethod": "GET",
                        "testRequestUrl": "https://{{sampleVarGroup.urls}}/index"
                      },
                      "derivedTestCases": [
                        {
                          "order": 1,
                          "clientProfile": {
                            "client": "CHROME",
                            "ipVersion": "IPV4"
                          },
                          "condition": {
                            "conditionExpression": "Response code is one of \"200\""
                          },
                          "testRequest": {
                            "requestMethod": "GET",
                            "testRequestUrl": "https://abc.com/index"
                          }
                        },
                        {
                          "order": 2,
                          "clientProfile": {
                            "client": "CHROME",
                            "ipVersion": "IPV4"
                          },
                          "condition": {
                            "conditionExpression": "Response code is one of \"200\""
                          },
                          "testRequest": {
                            "requestMethod": "GET",
                            "testRequestUrl": "https://def.org/index"
                          }
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains the details on the creating functional test cases operation.",
                  "type": "object",
                  "required": [
                    "successes",
                    "failures"
                  ],
                  "properties": {
                    "failures": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "successes": {
                      "description": "Lists details on test cases for which the operation succeeded.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the functional test case and included objects: condition, test request, and client profile.",
                        "type": "object",
                        "required": [
                          "testCaseId",
                          "order",
                          "testRequest",
                          "condition",
                          "clientProfile"
                        ],
                        "properties": {
                          "clientProfile": {
                            "additionalProperties": false,
                            "description": "Specifies a client profile included in the test case.",
                            "type": "object",
                            "required": [
                              "ipVersion",
                              "client"
                            ],
                            "properties": {
                              "client": {
                                "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                "type": "string",
                                "enum": [
                                  "CHROME",
                                  "CURL"
                                ]
                              },
                              "geoLocation": {
                                "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                "type": "string",
                                "enum": [
                                  "US"
                                ]
                              },
                              "ipVersion": {
                                "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                "type": "string",
                                "enum": [
                                  "IPV4",
                                  "IPV6"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/client-profile.yaml"
                            }
                          },
                          "condition": {
                            "additionalProperties": false,
                            "description": "Specifies a condition included in the test case.",
                            "type": "object",
                            "required": [
                              "conditionExpression"
                            ],
                            "properties": {
                              "conditionExpression": {
                                "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                "minLength": 1,
                                "type": "string"
                              },
                              "conditionExpressionResolved": {
                                "description": "Condition statement with resolved variables, if applicable.",
                                "minLength": 1,
                                "readOnly": true,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/condition.yaml"
                            }
                          },
                          "createdBy": {
                            "description": "Username who created the item.",
                            "minLength": 1,
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/createdBy.yaml"
                            }
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the item was created.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/createdDate.yaml"
                            }
                          },
                          "deletedBy": {
                            "description": "Username who last deleted the item.",
                            "minLength": 1,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/deletedBy.yaml"
                            }
                          },
                          "deletedDate": {
                            "description": "ISO 8601 timestamp indicating when the item was deleted.",
                            "format": "date-time",
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/deletedDate.yaml"
                            }
                          },
                          "derivedTestCases": {
                            "description": "Derived test cases in the response when there is reference to variable group(s).",
                            "minItems": 0,
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Specifies the functional derived test case when a variable group reference is present and included objects: condition, test request, and client profile.",
                              "type": "object",
                              "required": [
                                "testRequest",
                                "condition",
                                "clientProfile",
                                "order"
                              ],
                              "properties": {
                                "clientProfile": {
                                  "additionalProperties": false,
                                  "description": "Specifies a client profile included in the test case.",
                                  "type": "object",
                                  "required": [
                                    "ipVersion",
                                    "client"
                                  ],
                                  "properties": {
                                    "client": {
                                      "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                      "type": "string",
                                      "enum": [
                                        "CHROME",
                                        "CURL"
                                      ]
                                    },
                                    "geoLocation": {
                                      "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                      "type": "string",
                                      "enum": [
                                        "US"
                                      ]
                                    },
                                    "ipVersion": {
                                      "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                      "type": "string",
                                      "enum": [
                                        "IPV4",
                                        "IPV6"
                                      ]
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/client-profile.yaml"
                                  }
                                },
                                "condition": {
                                  "additionalProperties": false,
                                  "description": "Specifies a condition included in the test case.",
                                  "type": "object",
                                  "required": [
                                    "conditionExpression"
                                  ],
                                  "properties": {
                                    "conditionExpression": {
                                      "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "conditionExpressionResolved": {
                                      "description": "Condition statement with resolved variables, if applicable.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/condition.yaml"
                                  }
                                },
                                "order": {
                                  "description": "Order of the derived test case. In stateful test suites, a test run's test cases execute in this order.  ",
                                  "minimum": 0,
                                  "readOnly": true,
                                  "type": "integer"
                                },
                                "setVariables": {
                                  "description": "Contains derived test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                    "type": "object",
                                    "required": [
                                      "variableId",
                                      "variableName",
                                      "variableValue"
                                    ],
                                    "properties": {
                                      "variableId": {
                                        "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                        "minimum": 1,
                                        "readOnly": true,
                                        "type": "integer"
                                      },
                                      "variableName": {
                                        "description": "Name of the variable.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "variableValue": {
                                        "description": "Value of the variable to resolve at runtime.",
                                        "maxLength": 4000,
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "x-akamai": {
                                      "file-path": "schemas/set-variable.yaml"
                                    }
                                  }
                                },
                                "testRequest": {
                                  "additionalProperties": false,
                                  "description": "Specifies a test request included in the test case.",
                                  "type": "object",
                                  "required": [
                                    "testRequestUrl",
                                    "requestMethod"
                                  ],
                                  "properties": {
                                    "encodeRequestBody": {
                                      "default": true,
                                      "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                      "nullable": true,
                                      "type": "boolean"
                                    },
                                    "requestBody": {
                                      "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                      "maxLength": 4000,
                                      "minLength": 1,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "requestBodyResolved": {
                                      "description": "Value of test request body after resolving all variables.",
                                      "minLength": 1,
                                      "nullable": true,
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "requestHeaders": {
                                      "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "type": "object",
                                        "required": [
                                          "headerName",
                                          "headerValue",
                                          "headerAction"
                                        ],
                                        "properties": {
                                          "headerAction": {
                                            "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                            "type": "string",
                                            "enum": [
                                              "ADD",
                                              "MODIFY",
                                              "FILTER"
                                            ]
                                          },
                                          "headerName": {
                                            "description": "Name of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "headerNameResolved": {
                                            "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                            "minLength": 1,
                                            "readOnly": true,
                                            "type": "string"
                                          },
                                          "headerValue": {
                                            "description": "Value of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "headerValueResolved": {
                                            "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                            "minLength": 1,
                                            "readOnly": true,
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "requestMethod": {
                                      "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                      "type": "string",
                                      "enum": [
                                        "HEAD",
                                        "GET",
                                        "POST"
                                      ]
                                    },
                                    "tags": {
                                      "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "testRequestUrl": {
                                      "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                      "maxLength": 2048,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "testRequestUrlResolved": {
                                      "description": "Value of test request URL after resolving all variables.",
                                      "minLength": 1,
                                      "nullable": true,
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/test-request.yaml"
                                  }
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/functional-derived-test-case.yaml"
                              }
                            }
                          },
                          "modifiedBy": {
                            "description": "Username who last modified the item.",
                            "minLength": 1,
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/modifiedBy.yaml"
                            }
                          },
                          "modifiedDate": {
                            "description": "ISO 8601 timestamp indicating when the item was last modified.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/modifiedDate.yaml"
                            }
                          },
                          "order": {
                            "description": "Order of the test case. In stateful test suites, a test run's test cases execute in this order.",
                            "minimum": 1,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "setVariables": {
                            "description": "Contains test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                              "type": "object",
                              "required": [
                                "variableId",
                                "variableName",
                                "variableValue"
                              ],
                              "properties": {
                                "variableId": {
                                  "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                  "minimum": 1,
                                  "readOnly": true,
                                  "type": "integer"
                                },
                                "variableName": {
                                  "description": "Name of the variable.",
                                  "maxLength": 100,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "variableValue": {
                                  "description": "Value of the variable to resolve at runtime.",
                                  "maxLength": 4000,
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/set-variable.yaml"
                              }
                            }
                          },
                          "testCaseId": {
                            "description": "Identifies a functional test case. To get this value, run the [List test cases](https://techdocs.akamai.com/test-ctr/reference/get-test-cases) operation.",
                            "minimum": 1,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "testRequest": {
                            "additionalProperties": false,
                            "description": "Specifies a test request included in the test case.",
                            "type": "object",
                            "required": [
                              "testRequestUrl",
                              "requestMethod"
                            ],
                            "properties": {
                              "encodeRequestBody": {
                                "default": true,
                                "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                "nullable": true,
                                "type": "boolean"
                              },
                              "requestBody": {
                                "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                "maxLength": 4000,
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "requestBodyResolved": {
                                "description": "Value of test request body after resolving all variables.",
                                "minLength": 1,
                                "nullable": true,
                                "readOnly": true,
                                "type": "string"
                              },
                              "requestHeaders": {
                                "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "required": [
                                    "headerName",
                                    "headerValue",
                                    "headerAction"
                                  ],
                                  "properties": {
                                    "headerAction": {
                                      "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                      "type": "string",
                                      "enum": [
                                        "ADD",
                                        "MODIFY",
                                        "FILTER"
                                      ]
                                    },
                                    "headerName": {
                                      "description": "Name of the request header.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "headerNameResolved": {
                                      "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "headerValue": {
                                      "description": "Value of the request header.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "headerValueResolved": {
                                      "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "requestMethod": {
                                "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                "type": "string",
                                "enum": [
                                  "HEAD",
                                  "GET",
                                  "POST"
                                ]
                              },
                              "tags": {
                                "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "testRequestUrl": {
                                "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                "maxLength": 2048,
                                "minLength": 1,
                                "type": "string"
                              },
                              "testRequestUrlResolved": {
                                "description": "Value of test request URL after resolving all variables.",
                                "minLength": 1,
                                "nullable": true,
                                "readOnly": true,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/test-request.yaml"
                            }
                          },
                          "warnings": {
                            "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807). Any warnings related to variable groups would be captured here.",
                            "minItems": 0,
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Specifies the error that occurred.",
                              "type": "object",
                              "required": [
                                "type",
                                "title"
                              ],
                              "properties": {
                                "existingEntities": {
                                  "description": "Lists objects included within the functional test case.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "requestField": {
                                  "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "requestObjects": {
                                  "description": "Lists invalid request objects.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "requestValues": {
                                  "description": "Lists values corresponding to the `requestField`.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "title": "String",
                                        "type": "string"
                                      },
                                      {
                                        "title": "Integer",
                                        "type": "integer"
                                      },
                                      {
                                        "title": "Object",
                                        "type": "object"
                                      }
                                    ]
                                  }
                                },
                                "title": {
                                  "description": "Title of the error.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type of error.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/sub-problem.yaml"
                              }
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/functional-test-case.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/functional-test-cases-207.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Validation errors](https://techdocs.akamai.com/test-ctr/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "e4bdb007-213d-4573-ab76-4f071b55de59",
                  "status": 400,
                  "title": "Validation error",
                  "type": "validation.error",
                  "errors": [
                    {
                      "requestField": "propertyName",
                      "title": "Required field missing",
                      "type": "required.field.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "403": {
            "description": "[Authorization error](https://techdocs.akamai.com/test-ctr/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a86ef2f3-4ffa-4eef-a041-6558311dd3a2",
                  "status": 403,
                  "title": "Authorization error",
                  "type": "authorization.error",
                  "errors": [
                    {
                      "title": "Required permission missing",
                      "type": "required.permission.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "description": "[Resource not found error](https://techdocs.akamai.com/test-ctr/reference/404).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "1dcdb168-8837-415e-92bc-31aa36326495",
                  "requestField": "propertyName",
                  "status": 404,
                  "title": "Resource not found",
                  "type": "resource.not.found",
                  "requestValues": [
                    "atc_user1_config"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Identifies a test suite. To get this value, run the [List test suites](https://techdocs.akamai.com/test-ctr/reference/get-test-suites) operation.",
          "example": "{{testSuiteId}}",
          "in": "path",
          "name": "testSuiteId",
          "required": true,
          "schema": {
            "example": 284,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testSuiteId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-suites/{testSuiteId}/test-cases/order": {
      "put": {
        "description": "Reorders functional test cases in a test suite. The order of test cases applies when running a test for stateful test suites. You need to provide target order for all test cases included in a test suite. To check the current order of test cases, run the [Get a test suite with child objects](https://techdocs.akamai.com/test-ctr/reference/get-test-suites-with-child-objects) operation.",
        "operationId": "put-order-test-case",
        "summary": "Reorder test cases in a test suite",
        "tags": [
          "Test cases"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/put-order-test-case"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Functional test cases and their orders. The request needs to include all of a test suite's functional test cases. If you don't include all of them, you get a 400 error response.",
                "minItems": 0,
                "type": "array",
                "items": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "testCaseId",
                    "order"
                  ],
                  "properties": {
                    "order": {
                      "description": "Order of the test case in the test suite.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "testCaseId": {
                      "description": "Identifies a functional test case.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/functional-test-cases-order.yaml"
                }
              },
              "example": [
                {
                  "order": 1,
                  "testCaseId": 302
                },
                {
                  "order": 2,
                  "testCaseId": 301
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response provides reordered test cases.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Functional test cases and their orders. The request needs to include all of a test suite's functional test cases. If you don't include all of them, you get a 400 error response.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "testCaseId",
                      "order"
                    ],
                    "properties": {
                      "order": {
                        "description": "Order of the test case in the test suite.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "testCaseId": {
                        "description": "Identifies a functional test case.",
                        "minimum": 1,
                        "readOnly": true,
                        "type": "integer"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/functional-test-cases-order.yaml"
                  }
                },
                "example": [
                  {
                    "order": 1,
                    "testCaseId": 302
                  },
                  {
                    "order": 2,
                    "testCaseId": 301
                  }
                ]
              }
            }
          },
          "400": {
            "description": "[Validation errors](https://techdocs.akamai.com/test-ctr/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "e4bdb007-213d-4573-ab76-4f071b55de59",
                  "status": 400,
                  "title": "Validation error",
                  "type": "validation.error",
                  "errors": [
                    {
                      "requestField": "propertyName",
                      "title": "Required field missing",
                      "type": "required.field.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "403": {
            "description": "[Authorization error](https://techdocs.akamai.com/test-ctr/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a86ef2f3-4ffa-4eef-a041-6558311dd3a2",
                  "status": 403,
                  "title": "Authorization error",
                  "type": "authorization.error",
                  "errors": [
                    {
                      "title": "Required permission missing",
                      "type": "required.permission.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "description": "[Resource not found error](https://techdocs.akamai.com/test-ctr/reference/404).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "1dcdb168-8837-415e-92bc-31aa36326495",
                  "requestField": "propertyName",
                  "status": 404,
                  "title": "Resource not found",
                  "type": "resource.not.found",
                  "requestValues": [
                    "atc_user1_config"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Identifies a test suite. To get this value, run the [List test suites](https://techdocs.akamai.com/test-ctr/reference/get-test-suites) operation.",
          "example": "{{testSuiteId}}",
          "in": "path",
          "name": "testSuiteId",
          "required": true,
          "schema": {
            "example": 284,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testSuiteId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-suites/{testSuiteId}/test-cases/remove": {
      "post": {
        "description": "Deletes functional test cases with specific identifiers from a test suite. To get the identifiers, run the [List test cases](https://techdocs.akamai.com/test-ctr/reference/get-test-cases) operation. The operation responds with a [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses).",
        "operationId": "post-remove-test-case",
        "summary": "Delete test cases",
        "tags": [
          "Test cases"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-remove-test-case"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": [
                301,
                302
              ],
              "schema": {
                "description": "Contains identifiers of test cases you want to remove from a test suite. To get these values, run the [List test cases](https://techdocs.akamai.com/test-ctr/reference/get-test-cases) operation.",
                "minItems": 1,
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "minimum": 1,
                  "type": "integer"
                },
                "x-akamai": {
                  "file-path": "schemas/functional-test-cases-remove.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "[Partial success response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "failures": [],
                  "successes": [
                    301,
                    302
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Response for remove functional test cases.",
                  "type": "object",
                  "required": [
                    "successes",
                    "failures"
                  ],
                  "properties": {
                    "failures": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "successes": {
                      "description": "Lists details on removed test cases.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minimum": 0,
                        "type": "integer"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/functional-test-cases-remove-207.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Validation errors](https://techdocs.akamai.com/test-ctr/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "e4bdb007-213d-4573-ab76-4f071b55de59",
                  "status": 400,
                  "title": "Validation error",
                  "type": "validation.error",
                  "errors": [
                    {
                      "requestField": "propertyName",
                      "title": "Required field missing",
                      "type": "required.field.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "403": {
            "description": "[Authorization error](https://techdocs.akamai.com/test-ctr/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a86ef2f3-4ffa-4eef-a041-6558311dd3a2",
                  "status": 403,
                  "title": "Authorization error",
                  "type": "authorization.error",
                  "errors": [
                    {
                      "title": "Required permission missing",
                      "type": "required.permission.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "description": "[Resource not found error](https://techdocs.akamai.com/test-ctr/reference/404).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "1dcdb168-8837-415e-92bc-31aa36326495",
                  "requestField": "propertyName",
                  "status": 404,
                  "title": "Resource not found",
                  "type": "resource.not.found",
                  "requestValues": [
                    "atc_user1_config"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Identifies a test suite. To get this value, run the [List test suites](https://techdocs.akamai.com/test-ctr/reference/get-test-suites) operation.",
          "example": "{{testSuiteId}}",
          "in": "path",
          "name": "testSuiteId",
          "required": true,
          "schema": {
            "example": 284,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testSuiteId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-suites/{testSuiteId}/test-cases/restore": {
      "post": {
        "description": "Restores functional test cases into a test suite. The operation responds with a [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses).",
        "operationId": "post-test-cases-restore",
        "summary": "Restore test cases",
        "tags": [
          "Test cases"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-cases-restore"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": [
                301,
                302
              ],
              "schema": {
                "description": "Contains identifiers of test cases you want to restore in a test suite. To get these values, run the [List test cases](https://techdocs.akamai.com/test-ctr/reference/get-test-cases) operation with the `includeRecentlyDeleted` parameter set to `true`.",
                "minItems": 1,
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "minimum": 1,
                  "type": "integer"
                },
                "x-akamai": {
                  "file-path": "schemas/functional-test-cases-restore.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "[Partial success response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "failures": [],
                  "successes": [
                    {
                      "createdBy": "tyamada",
                      "createdDate": "2023-04-12T10:28:13+0000",
                      "modifiedBy": "jsmith",
                      "modifiedDate": "2023-04-12T10:28:16+0000",
                      "order": 1,
                      "testCaseId": 301,
                      "clientProfile": {
                        "client": "CHROME",
                        "ipVersion": "IPV4"
                      },
                      "condition": {
                        "conditionExpression": "Response header \"Content-Type\" has a value that ends with \"{{contentTypeVale}}\"",
                        "conditionExpressionResolved": "Response header \"Content-Type\" has a value that ends with \"json\""
                      },
                      "testRequest": {
                        "requestMethod": "GET",
                        "testRequestUrl": "https://{{hostname}}/",
                        "testRequestUrlResolved": "https://www.user8.example.com/",
                        "requestHeaders": [
                          {
                            "headerAction": "ADD",
                            "headerName": "Accept",
                            "headerValue": "v1"
                          }
                        ]
                      }
                    },
                    {
                      "createdBy": "alfulani",
                      "createdDate": "2023-04-12T10:28:13+0000",
                      "modifiedBy": "jperez",
                      "modifiedDate": "2023-04-12T10:28:13+0000",
                      "order": 2,
                      "testCaseId": 302,
                      "clientProfile": {
                        "client": "CHROME",
                        "ipVersion": "IPV4"
                      },
                      "condition": {
                        "conditionExpression": "Response code is one of \"{{successCode.statusCodes}}\""
                      },
                      "testRequest": {
                        "requestMethod": "GET",
                        "testRequestUrl": "https://{{sampleVarGroup.urls}}/index"
                      },
                      "derivedTestCases": [
                        {
                          "order": 1,
                          "clientProfile": {
                            "client": "CHROME",
                            "ipVersion": "IPV4"
                          },
                          "condition": {
                            "conditionExpression": "Response code is one of \"200\""
                          },
                          "testRequest": {
                            "requestMethod": "GET",
                            "testRequestUrl": "https://abc.com/index"
                          }
                        },
                        {
                          "order": 2,
                          "clientProfile": {
                            "client": "CHROME",
                            "ipVersion": "IPV4"
                          },
                          "condition": {
                            "conditionExpression": "Response code is one of \"200\""
                          },
                          "testRequest": {
                            "requestMethod": "GET",
                            "testRequestUrl": "https://def.org/index"
                          }
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains the details on the creating functional test cases operation.",
                  "type": "object",
                  "required": [
                    "successes",
                    "failures"
                  ],
                  "properties": {
                    "failures": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "successes": {
                      "description": "Lists details on test cases for which the operation succeeded.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the functional test case and included objects: condition, test request, and client profile.",
                        "type": "object",
                        "required": [
                          "testCaseId",
                          "order",
                          "testRequest",
                          "condition",
                          "clientProfile"
                        ],
                        "properties": {
                          "clientProfile": {
                            "additionalProperties": false,
                            "description": "Specifies a client profile included in the test case.",
                            "type": "object",
                            "required": [
                              "ipVersion",
                              "client"
                            ],
                            "properties": {
                              "client": {
                                "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                "type": "string",
                                "enum": [
                                  "CHROME",
                                  "CURL"
                                ]
                              },
                              "geoLocation": {
                                "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                "type": "string",
                                "enum": [
                                  "US"
                                ]
                              },
                              "ipVersion": {
                                "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                "type": "string",
                                "enum": [
                                  "IPV4",
                                  "IPV6"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/client-profile.yaml"
                            }
                          },
                          "condition": {
                            "additionalProperties": false,
                            "description": "Specifies a condition included in the test case.",
                            "type": "object",
                            "required": [
                              "conditionExpression"
                            ],
                            "properties": {
                              "conditionExpression": {
                                "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                "minLength": 1,
                                "type": "string"
                              },
                              "conditionExpressionResolved": {
                                "description": "Condition statement with resolved variables, if applicable.",
                                "minLength": 1,
                                "readOnly": true,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/condition.yaml"
                            }
                          },
                          "createdBy": {
                            "description": "Username who created the item.",
                            "minLength": 1,
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/createdBy.yaml"
                            }
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the item was created.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/createdDate.yaml"
                            }
                          },
                          "deletedBy": {
                            "description": "Username who last deleted the item.",
                            "minLength": 1,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/deletedBy.yaml"
                            }
                          },
                          "deletedDate": {
                            "description": "ISO 8601 timestamp indicating when the item was deleted.",
                            "format": "date-time",
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/deletedDate.yaml"
                            }
                          },
                          "derivedTestCases": {
                            "description": "Derived test cases in the response when there is reference to variable group(s).",
                            "minItems": 0,
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Specifies the functional derived test case when a variable group reference is present and included objects: condition, test request, and client profile.",
                              "type": "object",
                              "required": [
                                "testRequest",
                                "condition",
                                "clientProfile",
                                "order"
                              ],
                              "properties": {
                                "clientProfile": {
                                  "additionalProperties": false,
                                  "description": "Specifies a client profile included in the test case.",
                                  "type": "object",
                                  "required": [
                                    "ipVersion",
                                    "client"
                                  ],
                                  "properties": {
                                    "client": {
                                      "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                      "type": "string",
                                      "enum": [
                                        "CHROME",
                                        "CURL"
                                      ]
                                    },
                                    "geoLocation": {
                                      "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                      "type": "string",
                                      "enum": [
                                        "US"
                                      ]
                                    },
                                    "ipVersion": {
                                      "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                      "type": "string",
                                      "enum": [
                                        "IPV4",
                                        "IPV6"
                                      ]
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/client-profile.yaml"
                                  }
                                },
                                "condition": {
                                  "additionalProperties": false,
                                  "description": "Specifies a condition included in the test case.",
                                  "type": "object",
                                  "required": [
                                    "conditionExpression"
                                  ],
                                  "properties": {
                                    "conditionExpression": {
                                      "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "conditionExpressionResolved": {
                                      "description": "Condition statement with resolved variables, if applicable.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/condition.yaml"
                                  }
                                },
                                "order": {
                                  "description": "Order of the derived test case. In stateful test suites, a test run's test cases execute in this order.  ",
                                  "minimum": 0,
                                  "readOnly": true,
                                  "type": "integer"
                                },
                                "setVariables": {
                                  "description": "Contains derived test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                    "type": "object",
                                    "required": [
                                      "variableId",
                                      "variableName",
                                      "variableValue"
                                    ],
                                    "properties": {
                                      "variableId": {
                                        "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                        "minimum": 1,
                                        "readOnly": true,
                                        "type": "integer"
                                      },
                                      "variableName": {
                                        "description": "Name of the variable.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "variableValue": {
                                        "description": "Value of the variable to resolve at runtime.",
                                        "maxLength": 4000,
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "x-akamai": {
                                      "file-path": "schemas/set-variable.yaml"
                                    }
                                  }
                                },
                                "testRequest": {
                                  "additionalProperties": false,
                                  "description": "Specifies a test request included in the test case.",
                                  "type": "object",
                                  "required": [
                                    "testRequestUrl",
                                    "requestMethod"
                                  ],
                                  "properties": {
                                    "encodeRequestBody": {
                                      "default": true,
                                      "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                      "nullable": true,
                                      "type": "boolean"
                                    },
                                    "requestBody": {
                                      "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                      "maxLength": 4000,
                                      "minLength": 1,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "requestBodyResolved": {
                                      "description": "Value of test request body after resolving all variables.",
                                      "minLength": 1,
                                      "nullable": true,
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "requestHeaders": {
                                      "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "type": "object",
                                        "required": [
                                          "headerName",
                                          "headerValue",
                                          "headerAction"
                                        ],
                                        "properties": {
                                          "headerAction": {
                                            "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                            "type": "string",
                                            "enum": [
                                              "ADD",
                                              "MODIFY",
                                              "FILTER"
                                            ]
                                          },
                                          "headerName": {
                                            "description": "Name of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "headerNameResolved": {
                                            "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                            "minLength": 1,
                                            "readOnly": true,
                                            "type": "string"
                                          },
                                          "headerValue": {
                                            "description": "Value of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "headerValueResolved": {
                                            "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                            "minLength": 1,
                                            "readOnly": true,
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "requestMethod": {
                                      "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                      "type": "string",
                                      "enum": [
                                        "HEAD",
                                        "GET",
                                        "POST"
                                      ]
                                    },
                                    "tags": {
                                      "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "testRequestUrl": {
                                      "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                      "maxLength": 2048,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "testRequestUrlResolved": {
                                      "description": "Value of test request URL after resolving all variables.",
                                      "minLength": 1,
                                      "nullable": true,
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/test-request.yaml"
                                  }
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/functional-derived-test-case.yaml"
                              }
                            }
                          },
                          "modifiedBy": {
                            "description": "Username who last modified the item.",
                            "minLength": 1,
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/modifiedBy.yaml"
                            }
                          },
                          "modifiedDate": {
                            "description": "ISO 8601 timestamp indicating when the item was last modified.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/modifiedDate.yaml"
                            }
                          },
                          "order": {
                            "description": "Order of the test case. In stateful test suites, a test run's test cases execute in this order.",
                            "minimum": 1,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "setVariables": {
                            "description": "Contains test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                              "type": "object",
                              "required": [
                                "variableId",
                                "variableName",
                                "variableValue"
                              ],
                              "properties": {
                                "variableId": {
                                  "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                  "minimum": 1,
                                  "readOnly": true,
                                  "type": "integer"
                                },
                                "variableName": {
                                  "description": "Name of the variable.",
                                  "maxLength": 100,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "variableValue": {
                                  "description": "Value of the variable to resolve at runtime.",
                                  "maxLength": 4000,
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/set-variable.yaml"
                              }
                            }
                          },
                          "testCaseId": {
                            "description": "Identifies a functional test case. To get this value, run the [List test cases](https://techdocs.akamai.com/test-ctr/reference/get-test-cases) operation.",
                            "minimum": 1,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "testRequest": {
                            "additionalProperties": false,
                            "description": "Specifies a test request included in the test case.",
                            "type": "object",
                            "required": [
                              "testRequestUrl",
                              "requestMethod"
                            ],
                            "properties": {
                              "encodeRequestBody": {
                                "default": true,
                                "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                "nullable": true,
                                "type": "boolean"
                              },
                              "requestBody": {
                                "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                "maxLength": 4000,
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "requestBodyResolved": {
                                "description": "Value of test request body after resolving all variables.",
                                "minLength": 1,
                                "nullable": true,
                                "readOnly": true,
                                "type": "string"
                              },
                              "requestHeaders": {
                                "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "required": [
                                    "headerName",
                                    "headerValue",
                                    "headerAction"
                                  ],
                                  "properties": {
                                    "headerAction": {
                                      "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                      "type": "string",
                                      "enum": [
                                        "ADD",
                                        "MODIFY",
                                        "FILTER"
                                      ]
                                    },
                                    "headerName": {
                                      "description": "Name of the request header.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "headerNameResolved": {
                                      "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "headerValue": {
                                      "description": "Value of the request header.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "headerValueResolved": {
                                      "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "requestMethod": {
                                "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                "type": "string",
                                "enum": [
                                  "HEAD",
                                  "GET",
                                  "POST"
                                ]
                              },
                              "tags": {
                                "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "testRequestUrl": {
                                "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                "maxLength": 2048,
                                "minLength": 1,
                                "type": "string"
                              },
                              "testRequestUrlResolved": {
                                "description": "Value of test request URL after resolving all variables.",
                                "minLength": 1,
                                "nullable": true,
                                "readOnly": true,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/test-request.yaml"
                            }
                          },
                          "warnings": {
                            "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807). Any warnings related to variable groups would be captured here.",
                            "minItems": 0,
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Specifies the error that occurred.",
                              "type": "object",
                              "required": [
                                "type",
                                "title"
                              ],
                              "properties": {
                                "existingEntities": {
                                  "description": "Lists objects included within the functional test case.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "requestField": {
                                  "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "requestObjects": {
                                  "description": "Lists invalid request objects.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "requestValues": {
                                  "description": "Lists values corresponding to the `requestField`.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "title": "String",
                                        "type": "string"
                                      },
                                      {
                                        "title": "Integer",
                                        "type": "integer"
                                      },
                                      {
                                        "title": "Object",
                                        "type": "object"
                                      }
                                    ]
                                  }
                                },
                                "title": {
                                  "description": "Title of the error.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type of error.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/sub-problem.yaml"
                              }
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/functional-test-case.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/functional-test-cases-207.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Validation errors](https://techdocs.akamai.com/test-ctr/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "e4bdb007-213d-4573-ab76-4f071b55de59",
                  "status": 400,
                  "title": "Validation error",
                  "type": "validation.error",
                  "errors": [
                    {
                      "requestField": "propertyName",
                      "title": "Required field missing",
                      "type": "required.field.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "403": {
            "description": "[Authorization error](https://techdocs.akamai.com/test-ctr/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a86ef2f3-4ffa-4eef-a041-6558311dd3a2",
                  "status": 403,
                  "title": "Authorization error",
                  "type": "authorization.error",
                  "errors": [
                    {
                      "title": "Required permission missing",
                      "type": "required.permission.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "description": "[Resource not found error](https://techdocs.akamai.com/test-ctr/reference/404).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "1dcdb168-8837-415e-92bc-31aa36326495",
                  "requestField": "propertyName",
                  "status": 404,
                  "title": "Resource not found",
                  "type": "resource.not.found",
                  "requestValues": [
                    "atc_user1_config"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Identifies a test suite. To get this value, run the [List test suites](https://techdocs.akamai.com/test-ctr/reference/get-test-suites) operation.",
          "example": "{{testSuiteId}}",
          "in": "path",
          "name": "testSuiteId",
          "required": true,
          "schema": {
            "example": 284,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testSuiteId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-suites/{testSuiteId}/test-cases/{testCaseId}": {
      "get": {
        "description": "Returns details of a functional test case.",
        "operationId": "get-test-case",
        "summary": "Get a test case",
        "tags": [
          "Test cases"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-case"
        },
        "responses": {
          "200": {
            "description": "The response provides the test case.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "hgildong",
                  "createdDate": "2023-04-12T10:28:13+0000",
                  "modifiedBy": "alfulani",
                  "modifiedDate": "2023-04-12T10:28:14+0000",
                  "order": 1,
                  "testCaseId": 301,
                  "clientProfile": {
                    "client": "CHROME",
                    "ipVersion": "IPV4"
                  },
                  "condition": {
                    "conditionExpression": "Response header \"Content-Type\" has a value that ends with \"{{contentTypeVale}}\"",
                    "conditionExpressionResolved": "Response header \"Content-Type\" has a value that ends with \"json\""
                  },
                  "testRequest": {
                    "requestMethod": "GET",
                    "testRequestUrl": "https://{{hostname}}/",
                    "testRequestUrlResolved": "https://www.user8.example.com/",
                    "requestHeaders": [
                      {
                        "headerAction": "ADD",
                        "headerName": "Accept",
                        "headerValue": "v1"
                      }
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the functional test case and included objects: condition, test request, and client profile.",
                  "type": "object",
                  "required": [
                    "testCaseId",
                    "order",
                    "testRequest",
                    "condition",
                    "clientProfile"
                  ],
                  "properties": {
                    "clientProfile": {
                      "additionalProperties": false,
                      "description": "Specifies a client profile included in the test case.",
                      "type": "object",
                      "required": [
                        "ipVersion",
                        "client"
                      ],
                      "properties": {
                        "client": {
                          "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                          "type": "string",
                          "enum": [
                            "CHROME",
                            "CURL"
                          ]
                        },
                        "geoLocation": {
                          "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                          "type": "string",
                          "enum": [
                            "US"
                          ]
                        },
                        "ipVersion": {
                          "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                          "type": "string",
                          "enum": [
                            "IPV4",
                            "IPV6"
                          ]
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/client-profile.yaml"
                      }
                    },
                    "condition": {
                      "additionalProperties": false,
                      "description": "Specifies a condition included in the test case.",
                      "type": "object",
                      "required": [
                        "conditionExpression"
                      ],
                      "properties": {
                        "conditionExpression": {
                          "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                          "minLength": 1,
                          "type": "string"
                        },
                        "conditionExpressionResolved": {
                          "description": "Condition statement with resolved variables, if applicable.",
                          "minLength": 1,
                          "readOnly": true,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/condition.yaml"
                      }
                    },
                    "createdBy": {
                      "description": "Username who created the item.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/createdBy.yaml"
                      }
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the item was created.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/createdDate.yaml"
                      }
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the item.",
                      "minLength": 1,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/deletedBy.yaml"
                      }
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the item was deleted.",
                      "format": "date-time",
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/deletedDate.yaml"
                      }
                    },
                    "derivedTestCases": {
                      "description": "Derived test cases in the response when there is reference to variable group(s).",
                      "minItems": 0,
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the functional derived test case when a variable group reference is present and included objects: condition, test request, and client profile.",
                        "type": "object",
                        "required": [
                          "testRequest",
                          "condition",
                          "clientProfile",
                          "order"
                        ],
                        "properties": {
                          "clientProfile": {
                            "additionalProperties": false,
                            "description": "Specifies a client profile included in the test case.",
                            "type": "object",
                            "required": [
                              "ipVersion",
                              "client"
                            ],
                            "properties": {
                              "client": {
                                "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                "type": "string",
                                "enum": [
                                  "CHROME",
                                  "CURL"
                                ]
                              },
                              "geoLocation": {
                                "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                "type": "string",
                                "enum": [
                                  "US"
                                ]
                              },
                              "ipVersion": {
                                "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                "type": "string",
                                "enum": [
                                  "IPV4",
                                  "IPV6"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/client-profile.yaml"
                            }
                          },
                          "condition": {
                            "additionalProperties": false,
                            "description": "Specifies a condition included in the test case.",
                            "type": "object",
                            "required": [
                              "conditionExpression"
                            ],
                            "properties": {
                              "conditionExpression": {
                                "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                "minLength": 1,
                                "type": "string"
                              },
                              "conditionExpressionResolved": {
                                "description": "Condition statement with resolved variables, if applicable.",
                                "minLength": 1,
                                "readOnly": true,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/condition.yaml"
                            }
                          },
                          "order": {
                            "description": "Order of the derived test case. In stateful test suites, a test run's test cases execute in this order.  ",
                            "minimum": 0,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "setVariables": {
                            "description": "Contains derived test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                              "type": "object",
                              "required": [
                                "variableId",
                                "variableName",
                                "variableValue"
                              ],
                              "properties": {
                                "variableId": {
                                  "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                  "minimum": 1,
                                  "readOnly": true,
                                  "type": "integer"
                                },
                                "variableName": {
                                  "description": "Name of the variable.",
                                  "maxLength": 100,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "variableValue": {
                                  "description": "Value of the variable to resolve at runtime.",
                                  "maxLength": 4000,
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/set-variable.yaml"
                              }
                            }
                          },
                          "testRequest": {
                            "additionalProperties": false,
                            "description": "Specifies a test request included in the test case.",
                            "type": "object",
                            "required": [
                              "testRequestUrl",
                              "requestMethod"
                            ],
                            "properties": {
                              "encodeRequestBody": {
                                "default": true,
                                "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                "nullable": true,
                                "type": "boolean"
                              },
                              "requestBody": {
                                "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                "maxLength": 4000,
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "requestBodyResolved": {
                                "description": "Value of test request body after resolving all variables.",
                                "minLength": 1,
                                "nullable": true,
                                "readOnly": true,
                                "type": "string"
                              },
                              "requestHeaders": {
                                "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "required": [
                                    "headerName",
                                    "headerValue",
                                    "headerAction"
                                  ],
                                  "properties": {
                                    "headerAction": {
                                      "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                      "type": "string",
                                      "enum": [
                                        "ADD",
                                        "MODIFY",
                                        "FILTER"
                                      ]
                                    },
                                    "headerName": {
                                      "description": "Name of the request header.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "headerNameResolved": {
                                      "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "headerValue": {
                                      "description": "Value of the request header.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "headerValueResolved": {
                                      "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "requestMethod": {
                                "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                "type": "string",
                                "enum": [
                                  "HEAD",
                                  "GET",
                                  "POST"
                                ]
                              },
                              "tags": {
                                "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "testRequestUrl": {
                                "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                "maxLength": 2048,
                                "minLength": 1,
                                "type": "string"
                              },
                              "testRequestUrlResolved": {
                                "description": "Value of test request URL after resolving all variables.",
                                "minLength": 1,
                                "nullable": true,
                                "readOnly": true,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/test-request.yaml"
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/functional-derived-test-case.yaml"
                        }
                      }
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the item.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/modifiedBy.yaml"
                      }
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the item was last modified.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/modifiedDate.yaml"
                      }
                    },
                    "order": {
                      "description": "Order of the test case. In stateful test suites, a test run's test cases execute in this order.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "setVariables": {
                      "description": "Contains test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                        "type": "object",
                        "required": [
                          "variableId",
                          "variableName",
                          "variableValue"
                        ],
                        "properties": {
                          "variableId": {
                            "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                            "minimum": 1,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "variableName": {
                            "description": "Name of the variable.",
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string"
                          },
                          "variableValue": {
                            "description": "Value of the variable to resolve at runtime.",
                            "maxLength": 4000,
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/set-variable.yaml"
                        }
                      }
                    },
                    "testCaseId": {
                      "description": "Identifies a functional test case. To get this value, run the [List test cases](https://techdocs.akamai.com/test-ctr/reference/get-test-cases) operation.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "testRequest": {
                      "additionalProperties": false,
                      "description": "Specifies a test request included in the test case.",
                      "type": "object",
                      "required": [
                        "testRequestUrl",
                        "requestMethod"
                      ],
                      "properties": {
                        "encodeRequestBody": {
                          "default": true,
                          "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                          "nullable": true,
                          "type": "boolean"
                        },
                        "requestBody": {
                          "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                          "maxLength": 4000,
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "requestBodyResolved": {
                          "description": "Value of test request body after resolving all variables.",
                          "minLength": 1,
                          "nullable": true,
                          "readOnly": true,
                          "type": "string"
                        },
                        "requestHeaders": {
                          "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                              "headerName",
                              "headerValue",
                              "headerAction"
                            ],
                            "properties": {
                              "headerAction": {
                                "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                "type": "string",
                                "enum": [
                                  "ADD",
                                  "MODIFY",
                                  "FILTER"
                                ]
                              },
                              "headerName": {
                                "description": "Name of the request header.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "headerNameResolved": {
                                "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                "minLength": 1,
                                "readOnly": true,
                                "type": "string"
                              },
                              "headerValue": {
                                "description": "Value of the request header.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "headerValueResolved": {
                                "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                "minLength": 1,
                                "readOnly": true,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "requestMethod": {
                          "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                          "type": "string",
                          "enum": [
                            "HEAD",
                            "GET",
                            "POST"
                          ]
                        },
                        "tags": {
                          "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "testRequestUrl": {
                          "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                          "maxLength": 2048,
                          "minLength": 1,
                          "type": "string"
                        },
                        "testRequestUrlResolved": {
                          "description": "Value of test request URL after resolving all variables.",
                          "minLength": 1,
                          "nullable": true,
                          "readOnly": true,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/test-request.yaml"
                      }
                    },
                    "warnings": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807). Any warnings related to variable groups would be captured here.",
                      "minItems": 0,
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/functional-test-case.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Validation errors](https://techdocs.akamai.com/test-ctr/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "e4bdb007-213d-4573-ab76-4f071b55de59",
                  "status": 400,
                  "title": "Validation error",
                  "type": "validation.error",
                  "errors": [
                    {
                      "requestField": "propertyName",
                      "title": "Required field missing",
                      "type": "required.field.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "403": {
            "description": "[Authorization error](https://techdocs.akamai.com/test-ctr/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a86ef2f3-4ffa-4eef-a041-6558311dd3a2",
                  "status": 403,
                  "title": "Authorization error",
                  "type": "authorization.error",
                  "errors": [
                    {
                      "title": "Required permission missing",
                      "type": "required.permission.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "description": "[Resource not found error](https://techdocs.akamai.com/test-ctr/reference/404).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "1dcdb168-8837-415e-92bc-31aa36326495",
                  "requestField": "propertyName",
                  "status": 404,
                  "title": "Resource not found",
                  "type": "resource.not.found",
                  "requestValues": [
                    "atc_user1_config"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "Returns test cases with resolved variables assigned statically, `false` by default.",
            "example": "{{resolveVariables}}",
            "in": "query",
            "name": "resolveVariables",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/resolveVariables-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Identifies a test suite. To get this value, run the [List test suites](https://techdocs.akamai.com/test-ctr/reference/get-test-suites) operation.",
          "example": "{{testSuiteId}}",
          "in": "path",
          "name": "testSuiteId",
          "required": true,
          "schema": {
            "example": 284,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testSuiteId-path.yaml"
          }
        },
        {
          "description": "Identifies a functional test case. To get this value, run the [List test cases](https://techdocs.akamai.com/test-ctr/reference/get-test-cases) operation.",
          "example": "{{testCaseId}}",
          "in": "path",
          "name": "testCaseId",
          "required": true,
          "schema": {
            "example": 301,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testCaseId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-suites/{testSuiteId}/variables": {
      "post": {
        "description": "Creates variables for a test suite. You can use variables in a test request's URL or request headers and in condition expression, as a substitute of placeholders. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview). The operation responds with a [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses).",
        "operationId": "post-variables",
        "summary": "Create variables",
        "tags": [
          "Variables"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-variables"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Lists generated variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                "minItems": 1,
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "anyOf": [
                    {
                      "additionalProperties": false,
                      "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case or in `function`. Variables appear with `{{variableName}}` syntax. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                      "title": "Single variables",
                      "type": "object",
                      "required": [
                        "variableName",
                        "variableValue"
                      ],
                      "properties": {
                        "variableName": {
                          "description": "Name of the variable.",
                          "maxLength": 100,
                          "minLength": 1,
                          "type": "string"
                        },
                        "variableValue": {
                          "description": "Value of the variable.",
                          "maxLength": 4000,
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/variable-create.yaml"
                      }
                    },
                    {
                      "additionalProperties": false,
                      "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variable groups appear with `{{variableName.columnHeader}}` syntax. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                      "title": "Variable group",
                      "type": "object",
                      "required": [
                        "variableName",
                        "variableGroupValue"
                      ],
                      "properties": {
                        "variableGroupValue": {
                          "description": "Lists variable groups created in a specific test suite and their details.",
                          "minItems": 1,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "Specifies a variable group referenced in `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variable groups appear with `{{variableName.columnHeader}}` syntax. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                            "type": "object",
                            "required": [
                              "columnHeader"
                            ],
                            "properties": {
                              "columnHeader": {
                                "description": "Column header name.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                              },
                              "columnValues": {
                                "description": "Column values for specific column header.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "maxLength": 4000,
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/variable-group.yaml"
                            }
                          }
                        },
                        "variableName": {
                          "description": "Name of the variable.",
                          "maxLength": 100,
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/variable-group-create.yaml"
                      }
                    }
                  ]
                },
                "x-akamai": {
                  "file-path": "schemas/variables-create.yaml"
                }
              },
              "example": [
                {
                  "variableName": "hostname",
                  "variableValue": "www.user8.example.com"
                },
                {
                  "variableName": "contentTypeVale",
                  "variableValue": "json"
                },
                {
                  "variableName": "sampleVarGroup",
                  "variableGroupValue": [
                    {
                      "columnHeader": "urls",
                      "columnValues": [
                        "abc.com",
                        "def.org"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "responses": {
          "207": {
            "description": "[Partial success response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "failures": [],
                  "successes": [
                    {
                      "createdBy": "adevi",
                      "createdDate": "2021-07-06T10:28:13+0000",
                      "isDynamicallyUsed": false,
                      "modifiedBy": "jsmith",
                      "modifiedDate": "2021-07-06T10:28:13+0000",
                      "variableId": 201,
                      "variableName": "hostname",
                      "variableValue": "www.user8.example.com"
                    },
                    {
                      "createdBy": "hgildong",
                      "createdDate": "2021-07-06T10:28:13+0000",
                      "isDynamicallyUsed": false,
                      "modifiedBy": "adevi",
                      "modifiedDate": "2021-07-06T10:28:13+0000",
                      "variableId": 202,
                      "variableName": "contentTypeVale",
                      "variableValue": "json"
                    },
                    {
                      "createdBy": "jkowalski",
                      "createdDate": "2021-07-06T10:28:13+0000",
                      "modifiedBy": "alfulani",
                      "modifiedDate": "2021-07-06T10:28:13+0000",
                      "variableId": 203,
                      "variableName": "sampleVarGroup",
                      "variableGroupValue": [
                        {
                          "columnHeader": "urls",
                          "columnValues": [
                            "abc.com",
                            "def.org"
                          ]
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Response for creating variables.",
                  "type": "object",
                  "required": [
                    "successes",
                    "failures"
                  ],
                  "properties": {
                    "failures": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "successes": {
                      "description": "Lists variables for which the operation succeeded.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "additionalProperties": false,
                            "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variables appear with `{{variableName}}` syntax.",
                            "title": "Single variable",
                            "type": "object",
                            "required": [
                              "variableId",
                              "variableName",
                              "variableValue",
                              "isDynamicallyUsed"
                            ],
                            "properties": {
                              "createdBy": {
                                "description": "Username who created the item.",
                                "minLength": 1,
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/createdBy.yaml"
                                }
                              },
                              "createdDate": {
                                "description": "ISO 8601 timestamp indicating when the item was created.",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/createdDate.yaml"
                                }
                              },
                              "isDynamicallyUsed": {
                                "description": "Whether the variable in `setVariables` is assigned dynamically.",
                                "type": "boolean"
                              },
                              "modifiedBy": {
                                "description": "Username who last modified the item.",
                                "minLength": 1,
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/modifiedBy.yaml"
                                }
                              },
                              "modifiedDate": {
                                "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/modifiedDate.yaml"
                                }
                              },
                              "variableId": {
                                "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                "minimum": 1,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "variableName": {
                                "description": "Name of the variable.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                              },
                              "variableValue": {
                                "description": "Value of the variable.",
                                "maxLength": 4000,
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/variable.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variable groups appear with `{{variableName.columnHeader}}` syntax.",
                            "title": "Variable group",
                            "type": "object",
                            "required": [
                              "variableId",
                              "variableName",
                              "variableGroupValue"
                            ],
                            "properties": {
                              "createdBy": {
                                "description": "Username who created the item.",
                                "minLength": 1,
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/createdBy.yaml"
                                }
                              },
                              "createdDate": {
                                "description": "ISO 8601 timestamp indicating when the item was created.",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/createdDate.yaml"
                                }
                              },
                              "modifiedBy": {
                                "description": "Username who last modified the item.",
                                "minLength": 1,
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/modifiedBy.yaml"
                                }
                              },
                              "modifiedDate": {
                                "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/modifiedDate.yaml"
                                }
                              },
                              "variableGroupValue": {
                                "description": "Lists variable groups created in a specific test suite and their details.",
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "Specifies a variable group referenced in `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variable groups appear with `{{variableName.columnHeader}}` syntax. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                  "type": "object",
                                  "required": [
                                    "columnHeader"
                                  ],
                                  "properties": {
                                    "columnHeader": {
                                      "description": "Column header name.",
                                      "maxLength": 100,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "columnValues": {
                                      "description": "Column values for specific column header.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "maxLength": 4000,
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/variable-group.yaml"
                                  }
                                }
                              },
                              "variableId": {
                                "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                "minimum": 1,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "variableName": {
                                "description": "Name of the variable.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/variable-with-var-group.yaml"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/variables-207.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Validation errors](https://techdocs.akamai.com/test-ctr/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "e4bdb007-213d-4573-ab76-4f071b55de59",
                  "status": 400,
                  "title": "Validation error",
                  "type": "validation.error",
                  "errors": [
                    {
                      "requestField": "propertyName",
                      "title": "Required field missing",
                      "type": "required.field.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "403": {
            "description": "[Authorization error](https://techdocs.akamai.com/test-ctr/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a86ef2f3-4ffa-4eef-a041-6558311dd3a2",
                  "status": 403,
                  "title": "Authorization error",
                  "type": "authorization.error",
                  "errors": [
                    {
                      "title": "Required permission missing",
                      "type": "required.permission.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "description": "[Resource not found error](https://techdocs.akamai.com/test-ctr/reference/404).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "1dcdb168-8837-415e-92bc-31aa36326495",
                  "requestField": "propertyName",
                  "status": 404,
                  "title": "Resource not found",
                  "type": "resource.not.found",
                  "requestValues": [
                    "atc_user1_config"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists variables created in a test suite.",
        "operationId": "get-variables",
        "summary": "List variables",
        "tags": [
          "Variables"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-variables"
        },
        "responses": {
          "200": {
            "description": "The response lists variables.",
            "content": {
              "application/json": {
                "example": {
                  "variables": [
                    {
                      "createdBy": "jperez",
                      "createdDate": "2021-07-06T10:28:13+0000",
                      "isDynamicallyUsed": false,
                      "modifiedBy": "jsmith",
                      "modifiedDate": "2021-07-06T10:28:13+0000",
                      "variableId": 201,
                      "variableName": "hostname",
                      "variableValue": "www.user8.example.com"
                    },
                    {
                      "createdBy": "jsmith",
                      "createdDate": "2021-07-06T10:28:13+0000",
                      "isDynamicallyUsed": false,
                      "modifiedBy": "alfulani",
                      "modifiedDate": "2021-07-06T10:28:13+0000",
                      "variableId": 202,
                      "variableName": "contentTypeVale",
                      "variableValue": "json"
                    },
                    {
                      "createdBy": "tyamada",
                      "createdDate": "2021-07-06T10:28:13+0000",
                      "modifiedBy": "jkowalski",
                      "modifiedDate": "2021-07-06T10:28:13+0000",
                      "variableId": 203,
                      "variableName": "sampleVarGroup",
                      "variableGroupValue": [
                        {
                          "columnHeader": "urls",
                          "columnValues": [
                            "abc.com",
                            "def.org"
                          ]
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains variables created in a specific test suite and their details.",
                  "type": "object",
                  "required": [
                    "variables"
                  ],
                  "properties": {
                    "variables": {
                      "description": "Lists variables created in a specific test suite and their details.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "additionalProperties": false,
                            "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variables appear with `{{variableName}}` syntax.",
                            "title": "Single variable",
                            "type": "object",
                            "required": [
                              "variableId",
                              "variableName",
                              "variableValue",
                              "isDynamicallyUsed"
                            ],
                            "properties": {
                              "createdBy": {
                                "description": "Username who created the item.",
                                "minLength": 1,
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/createdBy.yaml"
                                }
                              },
                              "createdDate": {
                                "description": "ISO 8601 timestamp indicating when the item was created.",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/createdDate.yaml"
                                }
                              },
                              "isDynamicallyUsed": {
                                "description": "Whether the variable in `setVariables` is assigned dynamically.",
                                "type": "boolean"
                              },
                              "modifiedBy": {
                                "description": "Username who last modified the item.",
                                "minLength": 1,
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/modifiedBy.yaml"
                                }
                              },
                              "modifiedDate": {
                                "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/modifiedDate.yaml"
                                }
                              },
                              "variableId": {
                                "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                "minimum": 1,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "variableName": {
                                "description": "Name of the variable.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                              },
                              "variableValue": {
                                "description": "Value of the variable.",
                                "maxLength": 4000,
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/variable.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variable groups appear with `{{variableName.columnHeader}}` syntax.",
                            "title": "Variable group",
                            "type": "object",
                            "required": [
                              "variableId",
                              "variableName",
                              "variableGroupValue"
                            ],
                            "properties": {
                              "createdBy": {
                                "description": "Username who created the item.",
                                "minLength": 1,
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/createdBy.yaml"
                                }
                              },
                              "createdDate": {
                                "description": "ISO 8601 timestamp indicating when the item was created.",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/createdDate.yaml"
                                }
                              },
                              "modifiedBy": {
                                "description": "Username who last modified the item.",
                                "minLength": 1,
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/modifiedBy.yaml"
                                }
                              },
                              "modifiedDate": {
                                "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/modifiedDate.yaml"
                                }
                              },
                              "variableGroupValue": {
                                "description": "Lists variable groups created in a specific test suite and their details.",
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "Specifies a variable group referenced in `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variable groups appear with `{{variableName.columnHeader}}` syntax. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                  "type": "object",
                                  "required": [
                                    "columnHeader"
                                  ],
                                  "properties": {
                                    "columnHeader": {
                                      "description": "Column header name.",
                                      "maxLength": 100,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "columnValues": {
                                      "description": "Column values for specific column header.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "maxLength": 4000,
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/variable-group.yaml"
                                  }
                                }
                              },
                              "variableId": {
                                "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                "minimum": 1,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "variableName": {
                                "description": "Name of the variable.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/variable-with-var-group.yaml"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/variables.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Validation errors](https://techdocs.akamai.com/test-ctr/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "e4bdb007-213d-4573-ab76-4f071b55de59",
                  "status": 400,
                  "title": "Validation error",
                  "type": "validation.error",
                  "errors": [
                    {
                      "requestField": "propertyName",
                      "title": "Required field missing",
                      "type": "required.field.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "403": {
            "description": "[Authorization error](https://techdocs.akamai.com/test-ctr/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a86ef2f3-4ffa-4eef-a041-6558311dd3a2",
                  "status": 403,
                  "title": "Authorization error",
                  "type": "authorization.error",
                  "errors": [
                    {
                      "title": "Required permission missing",
                      "type": "required.permission.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "description": "[Resource not found error](https://techdocs.akamai.com/test-ctr/reference/404).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "1dcdb168-8837-415e-92bc-31aa36326495",
                  "requestField": "propertyName",
                  "status": 404,
                  "title": "Resource not found",
                  "type": "resource.not.found",
                  "requestValues": [
                    "atc_user1_config"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates variables in a test suite. The operation responds with a [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses).",
        "operationId": "put-variables",
        "summary": "Update variables",
        "tags": [
          "Variables"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/put-variables"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Lists variables.",
                "minItems": 1,
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "anyOf": [
                    {
                      "additionalProperties": false,
                      "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variables appear with `{{variableName}}` syntax.",
                      "title": "Single variable",
                      "type": "object",
                      "required": [
                        "variableId",
                        "variableName",
                        "variableValue",
                        "isDynamicallyUsed"
                      ],
                      "properties": {
                        "createdBy": {
                          "description": "Username who created the item.",
                          "minLength": 1,
                          "readOnly": true,
                          "type": "string",
                          "x-akamai": {
                            "file-path": "schemas/createdBy.yaml"
                          }
                        },
                        "createdDate": {
                          "description": "ISO 8601 timestamp indicating when the item was created.",
                          "format": "date-time",
                          "readOnly": true,
                          "type": "string",
                          "x-akamai": {
                            "file-path": "schemas/createdDate.yaml"
                          }
                        },
                        "isDynamicallyUsed": {
                          "description": "Whether the variable in `setVariables` is assigned dynamically.",
                          "type": "boolean"
                        },
                        "modifiedBy": {
                          "description": "Username who last modified the item.",
                          "minLength": 1,
                          "readOnly": true,
                          "type": "string",
                          "x-akamai": {
                            "file-path": "schemas/modifiedBy.yaml"
                          }
                        },
                        "modifiedDate": {
                          "description": "ISO 8601 timestamp indicating when the item was last modified.",
                          "format": "date-time",
                          "readOnly": true,
                          "type": "string",
                          "x-akamai": {
                            "file-path": "schemas/modifiedDate.yaml"
                          }
                        },
                        "variableId": {
                          "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                          "minimum": 1,
                          "readOnly": true,
                          "type": "integer"
                        },
                        "variableName": {
                          "description": "Name of the variable.",
                          "maxLength": 100,
                          "minLength": 1,
                          "type": "string"
                        },
                        "variableValue": {
                          "description": "Value of the variable.",
                          "maxLength": 4000,
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/variable.yaml"
                      }
                    },
                    {
                      "additionalProperties": false,
                      "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variable groups appear with `{{variableName.columnHeader}}` syntax.",
                      "title": "Variable group",
                      "type": "object",
                      "required": [
                        "variableId",
                        "variableName",
                        "variableGroupValue"
                      ],
                      "properties": {
                        "createdBy": {
                          "description": "Username who created the item.",
                          "minLength": 1,
                          "readOnly": true,
                          "type": "string",
                          "x-akamai": {
                            "file-path": "schemas/createdBy.yaml"
                          }
                        },
                        "createdDate": {
                          "description": "ISO 8601 timestamp indicating when the item was created.",
                          "format": "date-time",
                          "readOnly": true,
                          "type": "string",
                          "x-akamai": {
                            "file-path": "schemas/createdDate.yaml"
                          }
                        },
                        "modifiedBy": {
                          "description": "Username who last modified the item.",
                          "minLength": 1,
                          "readOnly": true,
                          "type": "string",
                          "x-akamai": {
                            "file-path": "schemas/modifiedBy.yaml"
                          }
                        },
                        "modifiedDate": {
                          "description": "ISO 8601 timestamp indicating when the item was last modified.",
                          "format": "date-time",
                          "readOnly": true,
                          "type": "string",
                          "x-akamai": {
                            "file-path": "schemas/modifiedDate.yaml"
                          }
                        },
                        "variableGroupValue": {
                          "description": "Lists variable groups created in a specific test suite and their details.",
                          "minItems": 1,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "Specifies a variable group referenced in `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variable groups appear with `{{variableName.columnHeader}}` syntax. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                            "type": "object",
                            "required": [
                              "columnHeader"
                            ],
                            "properties": {
                              "columnHeader": {
                                "description": "Column header name.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                              },
                              "columnValues": {
                                "description": "Column values for specific column header.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "maxLength": 4000,
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/variable-group.yaml"
                            }
                          }
                        },
                        "variableId": {
                          "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                          "minimum": 1,
                          "readOnly": true,
                          "type": "integer"
                        },
                        "variableName": {
                          "description": "Name of the variable.",
                          "maxLength": 100,
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/variable-with-var-group.yaml"
                      }
                    }
                  ]
                },
                "x-akamai": {
                  "file-path": "schemas/variables-update.yaml"
                }
              },
              "example": [
                {
                  "variableId": 201,
                  "variableName": "hostname",
                  "variableValue": "www.sub.atcuser8.akamaiu.com"
                },
                {
                  "variableId": 202,
                  "variableName": "contentTypeVale",
                  "variableValue": "text"
                },
                {
                  "variableId": 203,
                  "variableName": "sampleVarGroup",
                  "variableGroupValue": [
                    {
                      "columnHeader": "urls",
                      "columnValues": [
                        "pqrs.com",
                        "xyz.org"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "responses": {
          "207": {
            "description": "[Partial success response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "failures": [],
                  "successes": [
                    {
                      "createdBy": "hgildong",
                      "createdDate": "2021-07-06T10:28:13+0000",
                      "isDynamicallyUsed": false,
                      "modifiedBy": "jsmith",
                      "modifiedDate": "2021-07-06T10:28:16+0000",
                      "variableId": 201,
                      "variableName": "hostname",
                      "variableValue": "www.sub.atcuser8.akamaiu.com"
                    },
                    {
                      "createdBy": "jsmith",
                      "createdDate": "2021-07-06T10:28:13+0000",
                      "isDynamicallyUsed": false,
                      "modifiedBy": "szhang",
                      "modifiedDate": "2021-07-06T10:28:16+0000",
                      "variableId": 202,
                      "variableName": "contentTypeVale",
                      "variableValue": "text"
                    },
                    {
                      "createdBy": "alfulani",
                      "createdDate": "2021-07-06T10:28:13+0000",
                      "modifiedBy": "jkowalski",
                      "modifiedDate": "2021-07-06T10:28:13+0000",
                      "variableId": 203,
                      "variableName": "sampleVarGroup",
                      "variableGroupValue": [
                        {
                          "columnHeader": "urls",
                          "columnValues": [
                            "pqrs.com",
                            "xyz.org"
                          ]
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Response for creating variables.",
                  "type": "object",
                  "required": [
                    "successes",
                    "failures"
                  ],
                  "properties": {
                    "failures": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "successes": {
                      "description": "Lists variables for which the operation succeeded.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "additionalProperties": false,
                            "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variables appear with `{{variableName}}` syntax.",
                            "title": "Single variable",
                            "type": "object",
                            "required": [
                              "variableId",
                              "variableName",
                              "variableValue",
                              "isDynamicallyUsed"
                            ],
                            "properties": {
                              "createdBy": {
                                "description": "Username who created the item.",
                                "minLength": 1,
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/createdBy.yaml"
                                }
                              },
                              "createdDate": {
                                "description": "ISO 8601 timestamp indicating when the item was created.",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/createdDate.yaml"
                                }
                              },
                              "isDynamicallyUsed": {
                                "description": "Whether the variable in `setVariables` is assigned dynamically.",
                                "type": "boolean"
                              },
                              "modifiedBy": {
                                "description": "Username who last modified the item.",
                                "minLength": 1,
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/modifiedBy.yaml"
                                }
                              },
                              "modifiedDate": {
                                "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/modifiedDate.yaml"
                                }
                              },
                              "variableId": {
                                "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                "minimum": 1,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "variableName": {
                                "description": "Name of the variable.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                              },
                              "variableValue": {
                                "description": "Value of the variable.",
                                "maxLength": 4000,
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/variable.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variable groups appear with `{{variableName.columnHeader}}` syntax.",
                            "title": "Variable group",
                            "type": "object",
                            "required": [
                              "variableId",
                              "variableName",
                              "variableGroupValue"
                            ],
                            "properties": {
                              "createdBy": {
                                "description": "Username who created the item.",
                                "minLength": 1,
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/createdBy.yaml"
                                }
                              },
                              "createdDate": {
                                "description": "ISO 8601 timestamp indicating when the item was created.",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/createdDate.yaml"
                                }
                              },
                              "modifiedBy": {
                                "description": "Username who last modified the item.",
                                "minLength": 1,
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/modifiedBy.yaml"
                                }
                              },
                              "modifiedDate": {
                                "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/modifiedDate.yaml"
                                }
                              },
                              "variableGroupValue": {
                                "description": "Lists variable groups created in a specific test suite and their details.",
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "Specifies a variable group referenced in `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variable groups appear with `{{variableName.columnHeader}}` syntax. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                  "type": "object",
                                  "required": [
                                    "columnHeader"
                                  ],
                                  "properties": {
                                    "columnHeader": {
                                      "description": "Column header name.",
                                      "maxLength": 100,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "columnValues": {
                                      "description": "Column values for specific column header.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "maxLength": 4000,
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/variable-group.yaml"
                                  }
                                }
                              },
                              "variableId": {
                                "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                "minimum": 1,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "variableName": {
                                "description": "Name of the variable.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/variable-with-var-group.yaml"
                            }
                          }
                        ]
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/variables-207.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Validation errors](https://techdocs.akamai.com/test-ctr/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "e4bdb007-213d-4573-ab76-4f071b55de59",
                  "status": 400,
                  "title": "Validation error",
                  "type": "validation.error",
                  "errors": [
                    {
                      "requestField": "propertyName",
                      "title": "Required field missing",
                      "type": "required.field.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "403": {
            "description": "[Authorization error](https://techdocs.akamai.com/test-ctr/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a86ef2f3-4ffa-4eef-a041-6558311dd3a2",
                  "status": 403,
                  "title": "Authorization error",
                  "type": "authorization.error",
                  "errors": [
                    {
                      "title": "Required permission missing",
                      "type": "required.permission.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "description": "[Resource not found error](https://techdocs.akamai.com/test-ctr/reference/404).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "1dcdb168-8837-415e-92bc-31aa36326495",
                  "requestField": "propertyName",
                  "status": 404,
                  "title": "Resource not found",
                  "type": "resource.not.found",
                  "requestValues": [
                    "atc_user1_config"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Identifies a test suite. To get this value, run the [List test suites](https://techdocs.akamai.com/test-ctr/reference/get-test-suites) operation.",
          "example": "{{testSuiteId}}",
          "in": "path",
          "name": "testSuiteId",
          "required": true,
          "schema": {
            "example": 284,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testSuiteId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-suites/{testSuiteId}/variables/remove": {
      "post": {
        "description": "Deletes unused variables from a test suite. The operation responds with a [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses).",
        "operationId": "post-remove-variables",
        "summary": "Delete variables",
        "tags": [
          "Variables"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-remove-variables"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": [
                201,
                202
              ],
              "schema": {
                "description": "Contains identifiers a variable you want to remove from a test suite. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                "minItems": 1,
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "minimum": 0,
                  "type": "integer"
                },
                "x-akamai": {
                  "file-path": "schemas/variables-remove.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "[Partial success response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "failures": [],
                  "successes": [
                    201,
                    202
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Response for remove variables.",
                  "type": "object",
                  "required": [
                    "successes",
                    "failures"
                  ],
                  "properties": {
                    "failures": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "successes": {
                      "description": "Lists identifiers of removed variables.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minimum": 0,
                        "type": "integer"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/variables-remove-207.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Validation errors](https://techdocs.akamai.com/test-ctr/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "e4bdb007-213d-4573-ab76-4f071b55de59",
                  "status": 400,
                  "title": "Validation error",
                  "type": "validation.error",
                  "errors": [
                    {
                      "requestField": "propertyName",
                      "title": "Required field missing",
                      "type": "required.field.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "403": {
            "description": "[Authorization error](https://techdocs.akamai.com/test-ctr/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a86ef2f3-4ffa-4eef-a041-6558311dd3a2",
                  "status": 403,
                  "title": "Authorization error",
                  "type": "authorization.error",
                  "errors": [
                    {
                      "title": "Required permission missing",
                      "type": "required.permission.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "description": "[Resource not found error](https://techdocs.akamai.com/test-ctr/reference/404).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "1dcdb168-8837-415e-92bc-31aa36326495",
                  "requestField": "propertyName",
                  "status": 404,
                  "title": "Resource not found",
                  "type": "resource.not.found",
                  "requestValues": [
                    "atc_user1_config"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Identifies a test suite. To get this value, run the [List test suites](https://techdocs.akamai.com/test-ctr/reference/get-test-suites) operation.",
          "example": "{{testSuiteId}}",
          "in": "path",
          "name": "testSuiteId",
          "required": true,
          "schema": {
            "example": 284,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testSuiteId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-suites/{testSuiteId}/variables/{variableId}": {
      "get": {
        "description": "Returns details of a variable used in a test suite.",
        "operationId": "get-variable",
        "summary": "Get a variable",
        "tags": [
          "Variables"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-variable"
        },
        "responses": {
          "200": {
            "description": "The response provides the variable.",
            "content": {
              "application/json": {
                "examples": {
                  "variable": {
                    "summary": "Single variables",
                    "value": [
                      {
                        "createdBy": "hgildong",
                        "createdDate": "2021-07-06T10:28:13+0000",
                        "isDynamicallyUsed": false,
                        "modifiedBy": "mrossi",
                        "modifiedDate": "2021-07-06T10:28:13+0000",
                        "variableId": 201,
                        "variableName": "hostname",
                        "variableValue": "www.user8.example.com"
                      }
                    ]
                  },
                  "variable-group": {
                    "summary": "Group variables",
                    "value": [
                      {
                        "createdBy": "jkowalski",
                        "createdDate": "2021-07-06T10:28:13+0000",
                        "modifiedBy": "jkowalski",
                        "modifiedDate": "2021-07-06T10:28:13+0000",
                        "variableId": 203,
                        "variableName": "sampleVarGroup",
                        "variableGroupValue": [
                          {
                            "columnHeader": "urls",
                            "columnValues": [
                              "abc.com",
                              "def.org"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                "schema": {
                  "oneOf": [
                    {
                      "additionalProperties": false,
                      "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variables appear with `{{variableName}}` syntax.",
                      "title": "Single variable",
                      "type": "object",
                      "required": [
                        "variableId",
                        "variableName",
                        "variableValue",
                        "isDynamicallyUsed"
                      ],
                      "properties": {
                        "createdBy": {
                          "description": "Username who created the item.",
                          "minLength": 1,
                          "readOnly": true,
                          "type": "string",
                          "x-akamai": {
                            "file-path": "schemas/createdBy.yaml"
                          }
                        },
                        "createdDate": {
                          "description": "ISO 8601 timestamp indicating when the item was created.",
                          "format": "date-time",
                          "readOnly": true,
                          "type": "string",
                          "x-akamai": {
                            "file-path": "schemas/createdDate.yaml"
                          }
                        },
                        "isDynamicallyUsed": {
                          "description": "Whether the variable in `setVariables` is assigned dynamically.",
                          "type": "boolean"
                        },
                        "modifiedBy": {
                          "description": "Username who last modified the item.",
                          "minLength": 1,
                          "readOnly": true,
                          "type": "string",
                          "x-akamai": {
                            "file-path": "schemas/modifiedBy.yaml"
                          }
                        },
                        "modifiedDate": {
                          "description": "ISO 8601 timestamp indicating when the item was last modified.",
                          "format": "date-time",
                          "readOnly": true,
                          "type": "string",
                          "x-akamai": {
                            "file-path": "schemas/modifiedDate.yaml"
                          }
                        },
                        "variableId": {
                          "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                          "minimum": 1,
                          "readOnly": true,
                          "type": "integer"
                        },
                        "variableName": {
                          "description": "Name of the variable.",
                          "maxLength": 100,
                          "minLength": 1,
                          "type": "string"
                        },
                        "variableValue": {
                          "description": "Value of the variable.",
                          "maxLength": 4000,
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/variable.yaml"
                      }
                    },
                    {
                      "additionalProperties": false,
                      "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variable groups appear with `{{variableName.columnHeader}}` syntax.",
                      "title": "Variable group",
                      "type": "object",
                      "required": [
                        "variableId",
                        "variableName",
                        "variableGroupValue"
                      ],
                      "properties": {
                        "createdBy": {
                          "description": "Username who created the item.",
                          "minLength": 1,
                          "readOnly": true,
                          "type": "string",
                          "x-akamai": {
                            "file-path": "schemas/createdBy.yaml"
                          }
                        },
                        "createdDate": {
                          "description": "ISO 8601 timestamp indicating when the item was created.",
                          "format": "date-time",
                          "readOnly": true,
                          "type": "string",
                          "x-akamai": {
                            "file-path": "schemas/createdDate.yaml"
                          }
                        },
                        "modifiedBy": {
                          "description": "Username who last modified the item.",
                          "minLength": 1,
                          "readOnly": true,
                          "type": "string",
                          "x-akamai": {
                            "file-path": "schemas/modifiedBy.yaml"
                          }
                        },
                        "modifiedDate": {
                          "description": "ISO 8601 timestamp indicating when the item was last modified.",
                          "format": "date-time",
                          "readOnly": true,
                          "type": "string",
                          "x-akamai": {
                            "file-path": "schemas/modifiedDate.yaml"
                          }
                        },
                        "variableGroupValue": {
                          "description": "Lists variable groups created in a specific test suite and their details.",
                          "minItems": 1,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "Specifies a variable group referenced in `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variable groups appear with `{{variableName.columnHeader}}` syntax. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                            "type": "object",
                            "required": [
                              "columnHeader"
                            ],
                            "properties": {
                              "columnHeader": {
                                "description": "Column header name.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                              },
                              "columnValues": {
                                "description": "Column values for specific column header.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "maxLength": 4000,
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/variable-group.yaml"
                            }
                          }
                        },
                        "variableId": {
                          "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                          "minimum": 1,
                          "readOnly": true,
                          "type": "integer"
                        },
                        "variableName": {
                          "description": "Name of the variable.",
                          "maxLength": 100,
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/variable-with-var-group.yaml"
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "[Validation errors](https://techdocs.akamai.com/test-ctr/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "e4bdb007-213d-4573-ab76-4f071b55de59",
                  "status": 400,
                  "title": "Validation error",
                  "type": "validation.error",
                  "errors": [
                    {
                      "requestField": "propertyName",
                      "title": "Required field missing",
                      "type": "required.field.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "403": {
            "description": "[Authorization error](https://techdocs.akamai.com/test-ctr/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a86ef2f3-4ffa-4eef-a041-6558311dd3a2",
                  "status": 403,
                  "title": "Authorization error",
                  "type": "authorization.error",
                  "errors": [
                    {
                      "title": "Required permission missing",
                      "type": "required.permission.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "description": "[Resource not found error](https://techdocs.akamai.com/test-ctr/reference/404).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "1dcdb168-8837-415e-92bc-31aa36326495",
                  "requestField": "propertyName",
                  "status": 404,
                  "title": "Resource not found",
                  "type": "resource.not.found",
                  "requestValues": [
                    "atc_user1_config"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Identifies a test suite. To get this value, run the [List test suites](https://techdocs.akamai.com/test-ctr/reference/get-test-suites) operation.",
          "example": "{{testSuiteId}}",
          "in": "path",
          "name": "testSuiteId",
          "required": true,
          "schema": {
            "example": 284,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testSuiteId-path.yaml"
          }
        },
        {
          "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
          "example": "{{variableId}}",
          "in": "path",
          "name": "variableId",
          "required": true,
          "schema": {
            "example": 201,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/variableId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-suites/{testSuiteId}/with-child-objects": {
      "get": {
        "description": "Exports a test suite with test cases and variables.",
        "operationId": "get-test-suites-with-child-objects",
        "summary": "Get a test suite with child objects",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-suites-with-child-objects"
        },
        "responses": {
          "200": {
            "description": "The response provides the test suite with child objects.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "alfulani",
                  "createdDate": "2023-04-12T10:28:13+0000",
                  "executableTestCaseCount": 3,
                  "isLocked": false,
                  "isStateful": false,
                  "modifiedBy": "jkowalski",
                  "modifiedDate": "2023-04-12T10:28:13+0000",
                  "testSuiteDescription": "This test suite performs basic check of www.user8.example.com",
                  "testSuiteId": 284,
                  "testSuiteName": "www.user8.example.com test suite",
                  "configs": {
                    "propertyManager": {
                      "propertyId": 1234,
                      "propertyName": "config_user8",
                      "propertyVersion": 4
                    }
                  },
                  "testCases": [
                    {
                      "createdBy": "alfulani",
                      "createdDate": "2023-04-12T10:28:13+0000",
                      "modifiedBy": "alfulani",
                      "modifiedDate": "2023-04-12T10:28:13+0000",
                      "order": 1,
                      "testCaseId": 301,
                      "clientProfile": {
                        "client": "CHROME",
                        "ipVersion": "IPV4"
                      },
                      "condition": {
                        "conditionExpression": "Response header \"Content-Type\" has a value that ends with \"{{contentTypeVale}}\"",
                        "conditionExpressionResolved": "Response header \"Content-Type\" has a value that ends with \"json\""
                      },
                      "testRequest": {
                        "requestMethod": "GET",
                        "testRequestUrl": "https://{{hostname}}/?abc=1234555",
                        "testRequestUrlResolved": "https://www.user8.example.com/?abc=1234555",
                        "requestHeaders": [
                          {
                            "headerAction": "ADD",
                            "headerName": "Accept",
                            "headerValue": "v1"
                          }
                        ]
                      }
                    },
                    {
                      "createdBy": "jperez",
                      "createdDate": "2023-04-12T10:28:13+0000",
                      "modifiedBy": "hgildong",
                      "modifiedDate": "2023-04-12T10:28:13+0000",
                      "order": 2,
                      "testCaseId": 302,
                      "clientProfile": {
                        "client": "CHROME",
                        "ipVersion": "IPV4"
                      },
                      "condition": {
                        "conditionExpression": "Response code is one of \"{{successCode.statusCodes}}\""
                      },
                      "testRequest": {
                        "requestMethod": "GET",
                        "testRequestUrl": "https://{{sampleVarGroup.urls}}/index"
                      },
                      "derivedTestCases": [
                        {
                          "order": 1,
                          "clientProfile": {
                            "client": "CHROME",
                            "ipVersion": "IPV4"
                          },
                          "condition": {
                            "conditionExpression": "Response code is one of \"200\""
                          },
                          "testRequest": {
                            "requestMethod": "GET",
                            "testRequestUrl": "https://abc.com/index"
                          }
                        },
                        {
                          "order": 2,
                          "clientProfile": {
                            "client": "CHROME",
                            "ipVersion": "IPV4"
                          },
                          "condition": {
                            "conditionExpression": "Response code is one of \"200\""
                          },
                          "testRequest": {
                            "requestMethod": "GET",
                            "testRequestUrl": "https://def.org/index"
                          }
                        }
                      ]
                    }
                  ],
                  "variables": [
                    {
                      "createdBy": "jkowalski",
                      "createdDate": "2023-04-12T10:28:13+0000",
                      "isDynamicallyUsed": false,
                      "modifiedBy": "jsmith",
                      "modifiedDate": "2023-04-12T10:28:13+0000",
                      "variableId": 201,
                      "variableName": "hostname",
                      "variableValue": "www.user8.example.com"
                    },
                    {
                      "createdBy": "adevi",
                      "createdDate": "2023-04-12T10:28:13+0000",
                      "isDynamicallyUsed": false,
                      "modifiedBy": "jperez",
                      "modifiedDate": "2023-04-12T10:28:13+0000",
                      "variableId": 202,
                      "variableName": "contentTypeVale",
                      "variableValue": "json"
                    },
                    {
                      "createdBy": "jperez",
                      "createdDate": "2023-04-12T10:28:13+0000",
                      "modifiedBy": "alfulani",
                      "modifiedDate": "2023-04-12T10:28:13+0000",
                      "variableId": 203,
                      "variableName": "sampleVarGroup",
                      "variableGroupValue": [
                        {
                          "columnHeader": "urls",
                          "columnValues": [
                            "abc.com",
                            "def.org"
                          ]
                        }
                      ]
                    },
                    {
                      "createdBy": "jsmith",
                      "createdDate": "2023-04-12T10:28:13+0000",
                      "modifiedBy": "mrossi",
                      "modifiedDate": "2023-04-12T10:28:13+0000",
                      "variableId": 204,
                      "variableName": "successCode",
                      "variableGroupValue": [
                        {
                          "columnHeader": "statusCodes",
                          "columnValues": [
                            "200",
                            "200"
                          ]
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the created test suite and child objects.",
                  "type": "object",
                  "required": [
                    "testSuiteId",
                    "testSuiteName",
                    "isLocked",
                    "isStateful",
                    "executableTestCaseCount",
                    "createdBy",
                    "createdDate"
                  ],
                  "properties": {
                    "configs": {
                      "additionalProperties": false,
                      "default": null,
                      "description": "Specifies the Property Manager property version associated with the test suite. It's `null` for test suites with no properties associated. ",
                      "nullable": true,
                      "type": "object",
                      "required": [
                        "propertyManager"
                      ],
                      "properties": {
                        "propertyManager": {
                          "additionalProperties": false,
                          "description": "Specifies the property version associated with the test suite.",
                          "type": "object",
                          "required": [
                            "propertyId",
                            "propertyName",
                            "propertyVersion"
                          ],
                          "properties": {
                            "propertyId": {
                              "description": "Identifies a Property Manager property.",
                              "minimum": 1,
                              "type": "integer"
                            },
                            "propertyName": {
                              "description": "Name of the property.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "propertyVersion": {
                              "description": "Version of the property.",
                              "minimum": 1,
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/configs.yaml"
                      }
                    },
                    "createdBy": {
                      "description": "Username who created the item.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/createdBy.yaml"
                      }
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the item was created.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/createdDate.yaml"
                      }
                    },
                    "executableTestCaseCount": {
                      "description": "Number of test cases in the test suite. This count also includes the derived test case count.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "isLocked": {
                      "description": "Locks the test suite so that only designated owners or editors can modify it.",
                      "type": "boolean"
                    },
                    "isStateful": {
                      "description": "Sets the test suite to be run statefully, retaining cookies and session data for subsequent test cases within the test suite.",
                      "type": "boolean"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the item.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/modifiedBy.yaml"
                      }
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the item was last modified.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/modifiedDate.yaml"
                      }
                    },
                    "testCases": {
                      "description": "Lists test cases included in the test suite.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the functional test case and included objects: condition, test request, and client profile.",
                        "type": "object",
                        "required": [
                          "testCaseId",
                          "order",
                          "testRequest",
                          "condition",
                          "clientProfile"
                        ],
                        "properties": {
                          "clientProfile": {
                            "additionalProperties": false,
                            "description": "Specifies a client profile included in the test case.",
                            "type": "object",
                            "required": [
                              "ipVersion",
                              "client"
                            ],
                            "properties": {
                              "client": {
                                "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                "type": "string",
                                "enum": [
                                  "CHROME",
                                  "CURL"
                                ]
                              },
                              "geoLocation": {
                                "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                "type": "string",
                                "enum": [
                                  "US"
                                ]
                              },
                              "ipVersion": {
                                "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                "type": "string",
                                "enum": [
                                  "IPV4",
                                  "IPV6"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/client-profile.yaml"
                            }
                          },
                          "condition": {
                            "additionalProperties": false,
                            "description": "Specifies a condition included in the test case.",
                            "type": "object",
                            "required": [
                              "conditionExpression"
                            ],
                            "properties": {
                              "conditionExpression": {
                                "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                "minLength": 1,
                                "type": "string"
                              },
                              "conditionExpressionResolved": {
                                "description": "Condition statement with resolved variables, if applicable.",
                                "minLength": 1,
                                "readOnly": true,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/condition.yaml"
                            }
                          },
                          "createdBy": {
                            "description": "Username who created the item.",
                            "minLength": 1,
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/createdBy.yaml"
                            }
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the item was created.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/createdDate.yaml"
                            }
                          },
                          "deletedBy": {
                            "description": "Username who last deleted the item.",
                            "minLength": 1,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/deletedBy.yaml"
                            }
                          },
                          "deletedDate": {
                            "description": "ISO 8601 timestamp indicating when the item was deleted.",
                            "format": "date-time",
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/deletedDate.yaml"
                            }
                          },
                          "derivedTestCases": {
                            "description": "Derived test cases in the response when there is reference to variable group(s).",
                            "minItems": 0,
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Specifies the functional derived test case when a variable group reference is present and included objects: condition, test request, and client profile.",
                              "type": "object",
                              "required": [
                                "testRequest",
                                "condition",
                                "clientProfile",
                                "order"
                              ],
                              "properties": {
                                "clientProfile": {
                                  "additionalProperties": false,
                                  "description": "Specifies a client profile included in the test case.",
                                  "type": "object",
                                  "required": [
                                    "ipVersion",
                                    "client"
                                  ],
                                  "properties": {
                                    "client": {
                                      "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                      "type": "string",
                                      "enum": [
                                        "CHROME",
                                        "CURL"
                                      ]
                                    },
                                    "geoLocation": {
                                      "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                      "type": "string",
                                      "enum": [
                                        "US"
                                      ]
                                    },
                                    "ipVersion": {
                                      "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                      "type": "string",
                                      "enum": [
                                        "IPV4",
                                        "IPV6"
                                      ]
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/client-profile.yaml"
                                  }
                                },
                                "condition": {
                                  "additionalProperties": false,
                                  "description": "Specifies a condition included in the test case.",
                                  "type": "object",
                                  "required": [
                                    "conditionExpression"
                                  ],
                                  "properties": {
                                    "conditionExpression": {
                                      "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "conditionExpressionResolved": {
                                      "description": "Condition statement with resolved variables, if applicable.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/condition.yaml"
                                  }
                                },
                                "order": {
                                  "description": "Order of the derived test case. In stateful test suites, a test run's test cases execute in this order.  ",
                                  "minimum": 0,
                                  "readOnly": true,
                                  "type": "integer"
                                },
                                "setVariables": {
                                  "description": "Contains derived test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                    "type": "object",
                                    "required": [
                                      "variableId",
                                      "variableName",
                                      "variableValue"
                                    ],
                                    "properties": {
                                      "variableId": {
                                        "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                        "minimum": 1,
                                        "readOnly": true,
                                        "type": "integer"
                                      },
                                      "variableName": {
                                        "description": "Name of the variable.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "variableValue": {
                                        "description": "Value of the variable to resolve at runtime.",
                                        "maxLength": 4000,
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "x-akamai": {
                                      "file-path": "schemas/set-variable.yaml"
                                    }
                                  }
                                },
                                "testRequest": {
                                  "additionalProperties": false,
                                  "description": "Specifies a test request included in the test case.",
                                  "type": "object",
                                  "required": [
                                    "testRequestUrl",
                                    "requestMethod"
                                  ],
                                  "properties": {
                                    "encodeRequestBody": {
                                      "default": true,
                                      "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                      "nullable": true,
                                      "type": "boolean"
                                    },
                                    "requestBody": {
                                      "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                      "maxLength": 4000,
                                      "minLength": 1,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "requestBodyResolved": {
                                      "description": "Value of test request body after resolving all variables.",
                                      "minLength": 1,
                                      "nullable": true,
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "requestHeaders": {
                                      "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "type": "object",
                                        "required": [
                                          "headerName",
                                          "headerValue",
                                          "headerAction"
                                        ],
                                        "properties": {
                                          "headerAction": {
                                            "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                            "type": "string",
                                            "enum": [
                                              "ADD",
                                              "MODIFY",
                                              "FILTER"
                                            ]
                                          },
                                          "headerName": {
                                            "description": "Name of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "headerNameResolved": {
                                            "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                            "minLength": 1,
                                            "readOnly": true,
                                            "type": "string"
                                          },
                                          "headerValue": {
                                            "description": "Value of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "headerValueResolved": {
                                            "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                            "minLength": 1,
                                            "readOnly": true,
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "requestMethod": {
                                      "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                      "type": "string",
                                      "enum": [
                                        "HEAD",
                                        "GET",
                                        "POST"
                                      ]
                                    },
                                    "tags": {
                                      "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "testRequestUrl": {
                                      "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                      "maxLength": 2048,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "testRequestUrlResolved": {
                                      "description": "Value of test request URL after resolving all variables.",
                                      "minLength": 1,
                                      "nullable": true,
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/test-request.yaml"
                                  }
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/functional-derived-test-case.yaml"
                              }
                            }
                          },
                          "modifiedBy": {
                            "description": "Username who last modified the item.",
                            "minLength": 1,
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/modifiedBy.yaml"
                            }
                          },
                          "modifiedDate": {
                            "description": "ISO 8601 timestamp indicating when the item was last modified.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/modifiedDate.yaml"
                            }
                          },
                          "order": {
                            "description": "Order of the test case. In stateful test suites, a test run's test cases execute in this order.",
                            "minimum": 1,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "setVariables": {
                            "description": "Contains test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                              "type": "object",
                              "required": [
                                "variableId",
                                "variableName",
                                "variableValue"
                              ],
                              "properties": {
                                "variableId": {
                                  "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                  "minimum": 1,
                                  "readOnly": true,
                                  "type": "integer"
                                },
                                "variableName": {
                                  "description": "Name of the variable.",
                                  "maxLength": 100,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "variableValue": {
                                  "description": "Value of the variable to resolve at runtime.",
                                  "maxLength": 4000,
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/set-variable.yaml"
                              }
                            }
                          },
                          "testCaseId": {
                            "description": "Identifies a functional test case. To get this value, run the [List test cases](https://techdocs.akamai.com/test-ctr/reference/get-test-cases) operation.",
                            "minimum": 1,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "testRequest": {
                            "additionalProperties": false,
                            "description": "Specifies a test request included in the test case.",
                            "type": "object",
                            "required": [
                              "testRequestUrl",
                              "requestMethod"
                            ],
                            "properties": {
                              "encodeRequestBody": {
                                "default": true,
                                "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                "nullable": true,
                                "type": "boolean"
                              },
                              "requestBody": {
                                "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                "maxLength": 4000,
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "requestBodyResolved": {
                                "description": "Value of test request body after resolving all variables.",
                                "minLength": 1,
                                "nullable": true,
                                "readOnly": true,
                                "type": "string"
                              },
                              "requestHeaders": {
                                "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "required": [
                                    "headerName",
                                    "headerValue",
                                    "headerAction"
                                  ],
                                  "properties": {
                                    "headerAction": {
                                      "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                      "type": "string",
                                      "enum": [
                                        "ADD",
                                        "MODIFY",
                                        "FILTER"
                                      ]
                                    },
                                    "headerName": {
                                      "description": "Name of the request header.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "headerNameResolved": {
                                      "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "headerValue": {
                                      "description": "Value of the request header.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "headerValueResolved": {
                                      "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "requestMethod": {
                                "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                "type": "string",
                                "enum": [
                                  "HEAD",
                                  "GET",
                                  "POST"
                                ]
                              },
                              "tags": {
                                "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "testRequestUrl": {
                                "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                "maxLength": 2048,
                                "minLength": 1,
                                "type": "string"
                              },
                              "testRequestUrlResolved": {
                                "description": "Value of test request URL after resolving all variables.",
                                "minLength": 1,
                                "nullable": true,
                                "readOnly": true,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/test-request.yaml"
                            }
                          },
                          "warnings": {
                            "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807). Any warnings related to variable groups would be captured here.",
                            "minItems": 0,
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Specifies the error that occurred.",
                              "type": "object",
                              "required": [
                                "type",
                                "title"
                              ],
                              "properties": {
                                "existingEntities": {
                                  "description": "Lists objects included within the functional test case.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "requestField": {
                                  "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "requestObjects": {
                                  "description": "Lists invalid request objects.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "requestValues": {
                                  "description": "Lists values corresponding to the `requestField`.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "title": "String",
                                        "type": "string"
                                      },
                                      {
                                        "title": "Integer",
                                        "type": "integer"
                                      },
                                      {
                                        "title": "Object",
                                        "type": "object"
                                      }
                                    ]
                                  }
                                },
                                "title": {
                                  "description": "Title of the error.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type of error.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/sub-problem.yaml"
                              }
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/functional-test-case.yaml"
                        }
                      }
                    },
                    "testSuiteDescription": {
                      "default": null,
                      "description": "Description of the test suite. It's `null` for test suites without descriptions. ",
                      "maxLength": 4000,
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "testSuiteId": {
                      "description": "Identifies a test suite. To get this value, run the [List test suites](https://techdocs.akamai.com/test-ctr/reference/get-test-suites) operation.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "testSuiteName": {
                      "description": "Unique name for each test suite.",
                      "maxLength": 100,
                      "minLength": 1,
                      "type": "string"
                    },
                    "variables": {
                      "description": "Lists variables included in the test suite.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains variables created in a specific test suite and their details.",
                        "type": "object",
                        "required": [
                          "variables"
                        ],
                        "properties": {
                          "variables": {
                            "description": "Lists variables created in a specific test suite and their details.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variables appear with `{{variableName}}` syntax.",
                                  "title": "Single variable",
                                  "type": "object",
                                  "required": [
                                    "variableId",
                                    "variableName",
                                    "variableValue",
                                    "isDynamicallyUsed"
                                  ],
                                  "properties": {
                                    "createdBy": {
                                      "description": "Username who created the item.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string",
                                      "x-akamai": {
                                        "file-path": "schemas/createdBy.yaml"
                                      }
                                    },
                                    "createdDate": {
                                      "description": "ISO 8601 timestamp indicating when the item was created.",
                                      "format": "date-time",
                                      "readOnly": true,
                                      "type": "string",
                                      "x-akamai": {
                                        "file-path": "schemas/createdDate.yaml"
                                      }
                                    },
                                    "isDynamicallyUsed": {
                                      "description": "Whether the variable in `setVariables` is assigned dynamically.",
                                      "type": "boolean"
                                    },
                                    "modifiedBy": {
                                      "description": "Username who last modified the item.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string",
                                      "x-akamai": {
                                        "file-path": "schemas/modifiedBy.yaml"
                                      }
                                    },
                                    "modifiedDate": {
                                      "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                      "format": "date-time",
                                      "readOnly": true,
                                      "type": "string",
                                      "x-akamai": {
                                        "file-path": "schemas/modifiedDate.yaml"
                                      }
                                    },
                                    "variableId": {
                                      "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                      "minimum": 1,
                                      "readOnly": true,
                                      "type": "integer"
                                    },
                                    "variableName": {
                                      "description": "Name of the variable.",
                                      "maxLength": 100,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "variableValue": {
                                      "description": "Value of the variable.",
                                      "maxLength": 4000,
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/variable.yaml"
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variable groups appear with `{{variableName.columnHeader}}` syntax.",
                                  "title": "Variable group",
                                  "type": "object",
                                  "required": [
                                    "variableId",
                                    "variableName",
                                    "variableGroupValue"
                                  ],
                                  "properties": {
                                    "createdBy": {
                                      "description": "Username who created the item.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string",
                                      "x-akamai": {
                                        "file-path": "schemas/createdBy.yaml"
                                      }
                                    },
                                    "createdDate": {
                                      "description": "ISO 8601 timestamp indicating when the item was created.",
                                      "format": "date-time",
                                      "readOnly": true,
                                      "type": "string",
                                      "x-akamai": {
                                        "file-path": "schemas/createdDate.yaml"
                                      }
                                    },
                                    "modifiedBy": {
                                      "description": "Username who last modified the item.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string",
                                      "x-akamai": {
                                        "file-path": "schemas/modifiedBy.yaml"
                                      }
                                    },
                                    "modifiedDate": {
                                      "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                      "format": "date-time",
                                      "readOnly": true,
                                      "type": "string",
                                      "x-akamai": {
                                        "file-path": "schemas/modifiedDate.yaml"
                                      }
                                    },
                                    "variableGroupValue": {
                                      "description": "Lists variable groups created in a specific test suite and their details.",
                                      "minItems": 1,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "description": "Specifies a variable group referenced in `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variable groups appear with `{{variableName.columnHeader}}` syntax. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                        "type": "object",
                                        "required": [
                                          "columnHeader"
                                        ],
                                        "properties": {
                                          "columnHeader": {
                                            "description": "Column header name.",
                                            "maxLength": 100,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "columnValues": {
                                            "description": "Column values for specific column header.",
                                            "minItems": 0,
                                            "type": "array",
                                            "items": {
                                              "maxLength": 4000,
                                              "minLength": 1,
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-akamai": {
                                          "file-path": "schemas/variable-group.yaml"
                                        }
                                      }
                                    },
                                    "variableId": {
                                      "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                      "minimum": 1,
                                      "readOnly": true,
                                      "type": "integer"
                                    },
                                    "variableName": {
                                      "description": "Name of the variable.",
                                      "maxLength": 100,
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/variable-with-var-group.yaml"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/variables.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/test-suite-with-child-objects.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Validation errors](https://techdocs.akamai.com/test-ctr/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "e4bdb007-213d-4573-ab76-4f071b55de59",
                  "status": 400,
                  "title": "Validation error",
                  "type": "validation.error",
                  "errors": [
                    {
                      "requestField": "propertyName",
                      "title": "Required field missing",
                      "type": "required.field.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "403": {
            "description": "[Authorization error](https://techdocs.akamai.com/test-ctr/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a86ef2f3-4ffa-4eef-a041-6558311dd3a2",
                  "status": 403,
                  "title": "Authorization error",
                  "type": "authorization.error",
                  "errors": [
                    {
                      "title": "Required permission missing",
                      "type": "required.permission.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "description": "[Resource not found error](https://techdocs.akamai.com/test-ctr/reference/404).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "1dcdb168-8837-415e-92bc-31aa36326495",
                  "requestField": "propertyName",
                  "status": 404,
                  "title": "Resource not found",
                  "type": "resource.not.found",
                  "requestValues": [
                    "atc_user1_config"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "Returns test cases with resolved variables assigned statically, `false` by default.",
            "example": "{{resolveVariables}}",
            "in": "query",
            "name": "resolveVariables",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/resolveVariables-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates a test suite and included test cases and variables.",
        "operationId": "put-test-suites-with-child-objects",
        "summary": "Update a test suite with child objects",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/put-test-suites-with-child-objects"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "isLocked": true,
                "isStateful": true,
                "testSuiteDescription": "This test suite performs basic check of www.user8.example.com",
                "testSuiteName": "www.user8.example.com test suite",
                "configs": {
                  "propertyManager": {
                    "propertyId": 1234,
                    "propertyVersion": 4
                  }
                },
                "testCases": [
                  {
                    "testCaseId": 301,
                    "clientProfile": {
                      "client": "CURL",
                      "ipVersion": "IPV4"
                    },
                    "condition": {
                      "conditionExpression": "Response header \"Content-Type\" has a value that ends with \"{{contentTypeVale}}\""
                    },
                    "testRequest": {
                      "requestMethod": "POST",
                      "testRequestUrl": "https://{{hostname}}/",
                      "requestHeaders": [
                        {
                          "headerAction": "ADD",
                          "headerName": "Accept",
                          "headerValue": "v1"
                        }
                      ]
                    },
                    "setVariables": [
                      {
                        "variableName": "hostname",
                        "variableValue": "fn_getResponseHeaderValue(\"headerName\", \".*\")"
                      }
                    ]
                  },
                  {
                    "clientProfile": {
                      "client": "CHROME",
                      "ipVersion": "IPV4"
                    },
                    "condition": {
                      "conditionExpression": "Response code is one of \"{{successCode.statusCodes}}\""
                    },
                    "testRequest": {
                      "requestMethod": "GET",
                      "testRequestUrl": "https://{{sampleVarGroup.urls}}/index"
                    }
                  }
                ],
                "variables": [
                  {
                    "variableId": 201,
                    "variableName": "hostname",
                    "variableValue": "www.user8.example.com"
                  },
                  {
                    "variableId": 202,
                    "variableName": "contentTypeVale",
                    "variableValue": "json"
                  },
                  {
                    "variableName": "sampleVarGroup",
                    "variableGroupValue": [
                      {
                        "columnHeader": "urls",
                        "columnValues": [
                          "abc.com",
                          "def.org"
                        ]
                      }
                    ]
                  },
                  {
                    "variableName": "successCode",
                    "variableGroupValue": [
                      {
                        "columnHeader": "statusCodes",
                        "columnValues": [
                          "200",
                          "200"
                        ]
                      }
                    ]
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Configures a test suite with test cases and variables.",
                "type": "object",
                "required": [
                  "testSuiteName",
                  "isLocked",
                  "isStateful"
                ],
                "properties": {
                  "configs": {
                    "additionalProperties": false,
                    "description": "Specifies a Property Manager property version to associate with a test suite.",
                    "type": "object",
                    "required": [
                      "propertyManager"
                    ],
                    "properties": {
                      "propertyManager": {
                        "additionalProperties": false,
                        "description": "Specifies a property version associated with a test suite.",
                        "type": "object",
                        "properties": {
                          "propertyId": {
                            "description": "Identifies the property. To get this value, run the [List properties](https://techdocs.akamai.com/property-mgr/reference/get-properties) operation in the Property Manager API.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "propertyName": {
                            "description": "Name of the property. To get this value, run the [List properties](https://techdocs.akamai.com/property-mgr/reference/get-properties) operation in the Property Manager API.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "propertyVersion": {
                            "description": "Version of the property. To get this value, run the [List properties](https://techdocs.akamai.com/property-mgr/reference/get-properties) operation in the Property Manager API.",
                            "minimum": 1,
                            "type": "integer"
                          }
                        },
                        "oneOf": [
                          {
                            "title": "Property ID and version",
                            "required": [
                              "propertyId",
                              "propertyVersion"
                            ]
                          },
                          {
                            "title": "Property name and version",
                            "required": [
                              "propertyName",
                              "propertyVersion"
                            ]
                          }
                        ]
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/configs-create.yaml"
                    }
                  },
                  "isLocked": {
                    "description": "Locks the test suite so that only designated owners or editors can modify it.",
                    "example": "{{isLocked}}",
                    "type": "boolean"
                  },
                  "isStateful": {
                    "description": "Runs the test suite statefully, retaining cookies and session data for subsequent test cases within the test suite.",
                    "example": "{{isStateful}}",
                    "type": "boolean"
                  },
                  "testCases": {
                    "description": "Lists test cases and included objects: conditions, test requests, and client profiles.",
                    "minItems": 0,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Specifies the functional test case and included objects: condition, test request, and client profile.",
                      "type": "object",
                      "required": [
                        "testRequest",
                        "condition",
                        "clientProfile"
                      ],
                      "properties": {
                        "clientProfile": {
                          "additionalProperties": false,
                          "description": "Specifies a client profile included in the test case.",
                          "type": "object",
                          "required": [
                            "ipVersion",
                            "client"
                          ],
                          "properties": {
                            "client": {
                              "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                              "type": "string",
                              "enum": [
                                "CHROME",
                                "CURL"
                              ]
                            },
                            "geoLocation": {
                              "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                              "type": "string",
                              "enum": [
                                "US"
                              ]
                            },
                            "ipVersion": {
                              "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                              "type": "string",
                              "enum": [
                                "IPV4",
                                "IPV6"
                              ]
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/client-profile.yaml"
                          }
                        },
                        "condition": {
                          "additionalProperties": false,
                          "description": "Specifies a condition included in the test case.",
                          "type": "object",
                          "required": [
                            "conditionExpression"
                          ],
                          "properties": {
                            "conditionExpression": {
                              "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/condition-create.yaml"
                          }
                        },
                        "setVariables": {
                          "description": "Contains test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                          "minItems": 1,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                            "type": "object",
                            "required": [
                              "variableName",
                              "variableId",
                              "variableValue"
                            ],
                            "properties": {
                              "variableId": {
                                "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                "minimum": 1,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "variableName": {
                                "description": "Name of the created variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                              },
                              "variableValue": {
                                "description": "Value of the variable to resolve at runtime.",
                                "maxLength": 4000,
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/set-variable-create.yaml"
                            },
                            "oneOf": [
                              {
                                "title": "Variable by name",
                                "required": [
                                  "variableName",
                                  "variableValue"
                                ]
                              },
                              {
                                "title": "Variable by ID",
                                "required": [
                                  "variableId",
                                  "variableValue"
                                ]
                              }
                            ]
                          }
                        },
                        "testCaseId": {
                          "description": "Identifies a functional test case. To get this value, run the [List test cases](https://techdocs.akamai.com/test-ctr/reference/get-test-cases) operation.",
                          "minimum": 1,
                          "readOnly": true,
                          "type": "integer"
                        },
                        "testRequest": {
                          "additionalProperties": false,
                          "description": "Specifies a test request included in the test case.",
                          "type": "object",
                          "required": [
                            "testRequestUrl",
                            "requestMethod"
                          ],
                          "properties": {
                            "encodeRequestBody": {
                              "default": true,
                              "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                              "nullable": true,
                              "type": "boolean"
                            },
                            "requestBody": {
                              "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                              "maxLength": 4000,
                              "minLength": 1,
                              "nullable": true,
                              "type": "string"
                            },
                            "requestHeaders": {
                              "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "headerName",
                                  "headerValue",
                                  "headerAction"
                                ],
                                "properties": {
                                  "headerAction": {
                                    "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                    "type": "string",
                                    "enum": [
                                      "ADD",
                                      "MODIFY",
                                      "FILTER"
                                    ]
                                  },
                                  "headerName": {
                                    "description": "Name of the request header.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "headerValue": {
                                    "description": "Value of the request header.",
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "requestMethod": {
                              "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                              "type": "string",
                              "enum": [
                                "HEAD",
                                "GET",
                                "POST"
                              ]
                            },
                            "tags": {
                              "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "testRequestUrl": {
                              "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                              "maxLength": 2048,
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/test-request-create.yaml"
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/functional-test-case-create_update.yaml"
                      }
                    }
                  },
                  "testSuiteDescription": {
                    "default": null,
                    "description": "Description of the test suite. It's `null` for test suites without descriptions. ",
                    "example": "{{testSuiteDescription}}",
                    "maxLength": 4000,
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "testSuiteName": {
                    "description": "Unique name for each test suite.",
                    "example": "{{testSuiteName}}",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                  },
                  "variables": {
                    "description": "Lists variables used in the test suite. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                    "minItems": 0,
                    "type": "array",
                    "items": {
                      "description": "Lists variables.",
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "anyOf": [
                          {
                            "additionalProperties": false,
                            "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variables appear with `{{variableName}}` syntax.",
                            "title": "Single variable",
                            "type": "object",
                            "required": [
                              "variableId",
                              "variableName",
                              "variableValue",
                              "isDynamicallyUsed"
                            ],
                            "properties": {
                              "createdBy": {
                                "description": "Username who created the item.",
                                "minLength": 1,
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/createdBy.yaml"
                                }
                              },
                              "createdDate": {
                                "description": "ISO 8601 timestamp indicating when the item was created.",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/createdDate.yaml"
                                }
                              },
                              "isDynamicallyUsed": {
                                "description": "Whether the variable in `setVariables` is assigned dynamically.",
                                "type": "boolean"
                              },
                              "modifiedBy": {
                                "description": "Username who last modified the item.",
                                "minLength": 1,
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/modifiedBy.yaml"
                                }
                              },
                              "modifiedDate": {
                                "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/modifiedDate.yaml"
                                }
                              },
                              "variableId": {
                                "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                "minimum": 1,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "variableName": {
                                "description": "Name of the variable.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                              },
                              "variableValue": {
                                "description": "Value of the variable.",
                                "maxLength": 4000,
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/variable.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variable groups appear with `{{variableName.columnHeader}}` syntax.",
                            "title": "Variable group",
                            "type": "object",
                            "required": [
                              "variableId",
                              "variableName",
                              "variableGroupValue"
                            ],
                            "properties": {
                              "createdBy": {
                                "description": "Username who created the item.",
                                "minLength": 1,
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/createdBy.yaml"
                                }
                              },
                              "createdDate": {
                                "description": "ISO 8601 timestamp indicating when the item was created.",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/createdDate.yaml"
                                }
                              },
                              "modifiedBy": {
                                "description": "Username who last modified the item.",
                                "minLength": 1,
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/modifiedBy.yaml"
                                }
                              },
                              "modifiedDate": {
                                "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                "format": "date-time",
                                "readOnly": true,
                                "type": "string",
                                "x-akamai": {
                                  "file-path": "schemas/modifiedDate.yaml"
                                }
                              },
                              "variableGroupValue": {
                                "description": "Lists variable groups created in a specific test suite and their details.",
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "Specifies a variable group referenced in `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variable groups appear with `{{variableName.columnHeader}}` syntax. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                  "type": "object",
                                  "required": [
                                    "columnHeader"
                                  ],
                                  "properties": {
                                    "columnHeader": {
                                      "description": "Column header name.",
                                      "maxLength": 100,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "columnValues": {
                                      "description": "Column values for specific column header.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "maxLength": 4000,
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/variable-group.yaml"
                                  }
                                }
                              },
                              "variableId": {
                                "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                "minimum": 1,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "variableName": {
                                "description": "Name of the variable.",
                                "maxLength": 100,
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/variable-with-var-group.yaml"
                            }
                          }
                        ]
                      },
                      "x-akamai": {
                        "file-path": "schemas/variables-update.yaml"
                      }
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/test-suite-with-child-objects-update.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response provides the updated test suite with child objects.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "tyamada",
                  "createdDate": "2023-04-12T10:28:13+0000",
                  "executableTestCaseCount": 3,
                  "isLocked": true,
                  "isStateful": true,
                  "modifiedBy": "alfulani",
                  "modifiedDate": "2023-04-12T10:28:14+0000",
                  "testSuiteDescription": "This test suite performs basic check of www.user8.example.com",
                  "testSuiteId": 284,
                  "testSuiteName": "www.user8.example.com test suite",
                  "configs": {
                    "propertyManager": {
                      "propertyId": 1234,
                      "propertyName": "config_user8",
                      "propertyVersion": 4
                    }
                  },
                  "testCases": [
                    {
                      "createdBy": "jperez",
                      "createdDate": "2023-04-12T10:28:13+0000",
                      "modifiedBy": "jsmith",
                      "modifiedDate": "2023-04-12T10:28:14+0000",
                      "order": 1,
                      "testCaseId": 301,
                      "clientProfile": {
                        "client": "CURL",
                        "ipVersion": "IPV4"
                      },
                      "condition": {
                        "conditionExpression": "Response header \"Content-Type\" has a value that ends with \"{{contentTypeVale}}\"",
                        "conditionExpressionResolved": "Response header \"Content-Type\" has a value that ends with \"json\""
                      },
                      "testRequest": {
                        "requestMethod": "POST",
                        "testRequestUrl": "https://{{hostname}}/",
                        "requestHeaders": [
                          {
                            "headerAction": "ADD",
                            "headerName": "Accept",
                            "headerValue": "v1"
                          }
                        ]
                      },
                      "setVariables": [
                        {
                          "variableId": 201,
                          "variableName": "hostname",
                          "variableValue": "fn_getResponseHeaderValue(\"headerName\", \".*\")"
                        }
                      ]
                    },
                    {
                      "createdBy": "hgildong",
                      "createdDate": "2023-04-12T10:28:13+0000",
                      "modifiedBy": "szhang",
                      "modifiedDate": "2023-04-12T10:28:13+0000",
                      "order": 3,
                      "testCaseId": 303,
                      "clientProfile": {
                        "client": "CHROME",
                        "ipVersion": "IPV4"
                      },
                      "condition": {
                        "conditionExpression": "Response code is one of \"{{successCode.statusCodes}}\""
                      },
                      "testRequest": {
                        "requestMethod": "GET",
                        "testRequestUrl": "https://{{sampleVarGroup.urls}}/index"
                      },
                      "derivedTestCases": [
                        {
                          "order": 1,
                          "clientProfile": {
                            "client": "CHROME",
                            "ipVersion": "IPV4"
                          },
                          "condition": {
                            "conditionExpression": "Response code is one of \"200\""
                          },
                          "testRequest": {
                            "requestMethod": "GET",
                            "testRequestUrl": "https://abc.com/index"
                          }
                        },
                        {
                          "order": 2,
                          "clientProfile": {
                            "client": "CHROME",
                            "ipVersion": "IPV4"
                          },
                          "condition": {
                            "conditionExpression": "Response code is one of \"200\""
                          },
                          "testRequest": {
                            "requestMethod": "GET",
                            "testRequestUrl": "https://def.org/index"
                          }
                        }
                      ]
                    }
                  ],
                  "variables": [
                    {
                      "createdBy": "mrossi",
                      "createdDate": "2023-04-12T10:28:13+0000",
                      "isDynamicallyUsed": false,
                      "modifiedBy": "jsmith",
                      "modifiedDate": "2023-04-12T10:28:13+0000",
                      "variableId": 201,
                      "variableName": "hostname",
                      "variableValue": "www.user8.example.com"
                    },
                    {
                      "createdBy": "adevi",
                      "createdDate": "2023-04-12T10:28:13+0000",
                      "isDynamicallyUsed": false,
                      "modifiedBy": "mrossi",
                      "modifiedDate": "2023-04-12T10:28:13+0000",
                      "variableId": 202,
                      "variableName": "contentTypeVale",
                      "variableValue": "json"
                    },
                    {
                      "createdBy": "alfulani",
                      "createdDate": "2023-04-12T10:28:13+0000",
                      "modifiedBy": "hgildong",
                      "modifiedDate": "2023-04-12T10:28:13+0000",
                      "variableId": 203,
                      "variableName": "sampleVarGroup",
                      "variableGroupValue": [
                        {
                          "columnHeader": "urls",
                          "columnValues": [
                            "abc.com",
                            "def.org"
                          ]
                        }
                      ]
                    },
                    {
                      "createdBy": "tyamada",
                      "createdDate": "2023-04-12T10:28:13+0000",
                      "modifiedBy": "mrossi",
                      "modifiedDate": "2023-04-12T10:28:13+0000",
                      "variableId": 204,
                      "variableName": "successCode",
                      "variableGroupValue": [
                        {
                          "columnHeader": "statusCodes",
                          "columnValues": [
                            "200",
                            "200"
                          ]
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the created test suite and child objects.",
                  "type": "object",
                  "required": [
                    "testSuiteId",
                    "testSuiteName",
                    "isLocked",
                    "isStateful",
                    "executableTestCaseCount",
                    "createdBy",
                    "createdDate"
                  ],
                  "properties": {
                    "configs": {
                      "additionalProperties": false,
                      "default": null,
                      "description": "Specifies the Property Manager property version associated with the test suite. It's `null` for test suites with no properties associated. ",
                      "nullable": true,
                      "type": "object",
                      "required": [
                        "propertyManager"
                      ],
                      "properties": {
                        "propertyManager": {
                          "additionalProperties": false,
                          "description": "Specifies the property version associated with the test suite.",
                          "type": "object",
                          "required": [
                            "propertyId",
                            "propertyName",
                            "propertyVersion"
                          ],
                          "properties": {
                            "propertyId": {
                              "description": "Identifies a Property Manager property.",
                              "minimum": 1,
                              "type": "integer"
                            },
                            "propertyName": {
                              "description": "Name of the property.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "propertyVersion": {
                              "description": "Version of the property.",
                              "minimum": 1,
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/configs.yaml"
                      }
                    },
                    "createdBy": {
                      "description": "Username who created the item.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/createdBy.yaml"
                      }
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the item was created.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/createdDate.yaml"
                      }
                    },
                    "executableTestCaseCount": {
                      "description": "Number of test cases in the test suite. This count also includes the derived test case count.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "isLocked": {
                      "description": "Locks the test suite so that only designated owners or editors can modify it.",
                      "type": "boolean"
                    },
                    "isStateful": {
                      "description": "Sets the test suite to be run statefully, retaining cookies and session data for subsequent test cases within the test suite.",
                      "type": "boolean"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the item.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/modifiedBy.yaml"
                      }
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the item was last modified.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string",
                      "x-akamai": {
                        "file-path": "schemas/modifiedDate.yaml"
                      }
                    },
                    "testCases": {
                      "description": "Lists test cases included in the test suite.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the functional test case and included objects: condition, test request, and client profile.",
                        "type": "object",
                        "required": [
                          "testCaseId",
                          "order",
                          "testRequest",
                          "condition",
                          "clientProfile"
                        ],
                        "properties": {
                          "clientProfile": {
                            "additionalProperties": false,
                            "description": "Specifies a client profile included in the test case.",
                            "type": "object",
                            "required": [
                              "ipVersion",
                              "client"
                            ],
                            "properties": {
                              "client": {
                                "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                "type": "string",
                                "enum": [
                                  "CHROME",
                                  "CURL"
                                ]
                              },
                              "geoLocation": {
                                "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                "type": "string",
                                "enum": [
                                  "US"
                                ]
                              },
                              "ipVersion": {
                                "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                "type": "string",
                                "enum": [
                                  "IPV4",
                                  "IPV6"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/client-profile.yaml"
                            }
                          },
                          "condition": {
                            "additionalProperties": false,
                            "description": "Specifies a condition included in the test case.",
                            "type": "object",
                            "required": [
                              "conditionExpression"
                            ],
                            "properties": {
                              "conditionExpression": {
                                "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                "minLength": 1,
                                "type": "string"
                              },
                              "conditionExpressionResolved": {
                                "description": "Condition statement with resolved variables, if applicable.",
                                "minLength": 1,
                                "readOnly": true,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/condition.yaml"
                            }
                          },
                          "createdBy": {
                            "description": "Username who created the item.",
                            "minLength": 1,
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/createdBy.yaml"
                            }
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the item was created.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/createdDate.yaml"
                            }
                          },
                          "deletedBy": {
                            "description": "Username who last deleted the item.",
                            "minLength": 1,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/deletedBy.yaml"
                            }
                          },
                          "deletedDate": {
                            "description": "ISO 8601 timestamp indicating when the item was deleted.",
                            "format": "date-time",
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/deletedDate.yaml"
                            }
                          },
                          "derivedTestCases": {
                            "description": "Derived test cases in the response when there is reference to variable group(s).",
                            "minItems": 0,
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Specifies the functional derived test case when a variable group reference is present and included objects: condition, test request, and client profile.",
                              "type": "object",
                              "required": [
                                "testRequest",
                                "condition",
                                "clientProfile",
                                "order"
                              ],
                              "properties": {
                                "clientProfile": {
                                  "additionalProperties": false,
                                  "description": "Specifies a client profile included in the test case.",
                                  "type": "object",
                                  "required": [
                                    "ipVersion",
                                    "client"
                                  ],
                                  "properties": {
                                    "client": {
                                      "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                      "type": "string",
                                      "enum": [
                                        "CHROME",
                                        "CURL"
                                      ]
                                    },
                                    "geoLocation": {
                                      "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                      "type": "string",
                                      "enum": [
                                        "US"
                                      ]
                                    },
                                    "ipVersion": {
                                      "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                      "type": "string",
                                      "enum": [
                                        "IPV4",
                                        "IPV6"
                                      ]
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/client-profile.yaml"
                                  }
                                },
                                "condition": {
                                  "additionalProperties": false,
                                  "description": "Specifies a condition included in the test case.",
                                  "type": "object",
                                  "required": [
                                    "conditionExpression"
                                  ],
                                  "properties": {
                                    "conditionExpression": {
                                      "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "conditionExpressionResolved": {
                                      "description": "Condition statement with resolved variables, if applicable.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/condition.yaml"
                                  }
                                },
                                "order": {
                                  "description": "Order of the derived test case. In stateful test suites, a test run's test cases execute in this order.  ",
                                  "minimum": 0,
                                  "readOnly": true,
                                  "type": "integer"
                                },
                                "setVariables": {
                                  "description": "Contains derived test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                    "type": "object",
                                    "required": [
                                      "variableId",
                                      "variableName",
                                      "variableValue"
                                    ],
                                    "properties": {
                                      "variableId": {
                                        "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                        "minimum": 1,
                                        "readOnly": true,
                                        "type": "integer"
                                      },
                                      "variableName": {
                                        "description": "Name of the variable.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "variableValue": {
                                        "description": "Value of the variable to resolve at runtime.",
                                        "maxLength": 4000,
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "x-akamai": {
                                      "file-path": "schemas/set-variable.yaml"
                                    }
                                  }
                                },
                                "testRequest": {
                                  "additionalProperties": false,
                                  "description": "Specifies a test request included in the test case.",
                                  "type": "object",
                                  "required": [
                                    "testRequestUrl",
                                    "requestMethod"
                                  ],
                                  "properties": {
                                    "encodeRequestBody": {
                                      "default": true,
                                      "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                      "nullable": true,
                                      "type": "boolean"
                                    },
                                    "requestBody": {
                                      "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                      "maxLength": 4000,
                                      "minLength": 1,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "requestBodyResolved": {
                                      "description": "Value of test request body after resolving all variables.",
                                      "minLength": 1,
                                      "nullable": true,
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "requestHeaders": {
                                      "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "type": "object",
                                        "required": [
                                          "headerName",
                                          "headerValue",
                                          "headerAction"
                                        ],
                                        "properties": {
                                          "headerAction": {
                                            "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                            "type": "string",
                                            "enum": [
                                              "ADD",
                                              "MODIFY",
                                              "FILTER"
                                            ]
                                          },
                                          "headerName": {
                                            "description": "Name of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "headerNameResolved": {
                                            "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                            "minLength": 1,
                                            "readOnly": true,
                                            "type": "string"
                                          },
                                          "headerValue": {
                                            "description": "Value of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "headerValueResolved": {
                                            "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                            "minLength": 1,
                                            "readOnly": true,
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "requestMethod": {
                                      "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                      "type": "string",
                                      "enum": [
                                        "HEAD",
                                        "GET",
                                        "POST"
                                      ]
                                    },
                                    "tags": {
                                      "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "testRequestUrl": {
                                      "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                      "maxLength": 2048,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "testRequestUrlResolved": {
                                      "description": "Value of test request URL after resolving all variables.",
                                      "minLength": 1,
                                      "nullable": true,
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/test-request.yaml"
                                  }
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/functional-derived-test-case.yaml"
                              }
                            }
                          },
                          "modifiedBy": {
                            "description": "Username who last modified the item.",
                            "minLength": 1,
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/modifiedBy.yaml"
                            }
                          },
                          "modifiedDate": {
                            "description": "ISO 8601 timestamp indicating when the item was last modified.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string",
                            "x-akamai": {
                              "file-path": "schemas/modifiedDate.yaml"
                            }
                          },
                          "order": {
                            "description": "Order of the test case. In stateful test suites, a test run's test cases execute in this order.",
                            "minimum": 1,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "setVariables": {
                            "description": "Contains test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                              "type": "object",
                              "required": [
                                "variableId",
                                "variableName",
                                "variableValue"
                              ],
                              "properties": {
                                "variableId": {
                                  "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                  "minimum": 1,
                                  "readOnly": true,
                                  "type": "integer"
                                },
                                "variableName": {
                                  "description": "Name of the variable.",
                                  "maxLength": 100,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "variableValue": {
                                  "description": "Value of the variable to resolve at runtime.",
                                  "maxLength": 4000,
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/set-variable.yaml"
                              }
                            }
                          },
                          "testCaseId": {
                            "description": "Identifies a functional test case. To get this value, run the [List test cases](https://techdocs.akamai.com/test-ctr/reference/get-test-cases) operation.",
                            "minimum": 1,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "testRequest": {
                            "additionalProperties": false,
                            "description": "Specifies a test request included in the test case.",
                            "type": "object",
                            "required": [
                              "testRequestUrl",
                              "requestMethod"
                            ],
                            "properties": {
                              "encodeRequestBody": {
                                "default": true,
                                "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                "nullable": true,
                                "type": "boolean"
                              },
                              "requestBody": {
                                "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                "maxLength": 4000,
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "requestBodyResolved": {
                                "description": "Value of test request body after resolving all variables.",
                                "minLength": 1,
                                "nullable": true,
                                "readOnly": true,
                                "type": "string"
                              },
                              "requestHeaders": {
                                "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "required": [
                                    "headerName",
                                    "headerValue",
                                    "headerAction"
                                  ],
                                  "properties": {
                                    "headerAction": {
                                      "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                      "type": "string",
                                      "enum": [
                                        "ADD",
                                        "MODIFY",
                                        "FILTER"
                                      ]
                                    },
                                    "headerName": {
                                      "description": "Name of the request header.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "headerNameResolved": {
                                      "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string"
                                    },
                                    "headerValue": {
                                      "description": "Value of the request header.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "headerValueResolved": {
                                      "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "requestMethod": {
                                "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                "type": "string",
                                "enum": [
                                  "HEAD",
                                  "GET",
                                  "POST"
                                ]
                              },
                              "tags": {
                                "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "testRequestUrl": {
                                "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                "maxLength": 2048,
                                "minLength": 1,
                                "type": "string"
                              },
                              "testRequestUrlResolved": {
                                "description": "Value of test request URL after resolving all variables.",
                                "minLength": 1,
                                "nullable": true,
                                "readOnly": true,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/test-request.yaml"
                            }
                          },
                          "warnings": {
                            "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807). Any warnings related to variable groups would be captured here.",
                            "minItems": 0,
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Specifies the error that occurred.",
                              "type": "object",
                              "required": [
                                "type",
                                "title"
                              ],
                              "properties": {
                                "existingEntities": {
                                  "description": "Lists objects included within the functional test case.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "requestField": {
                                  "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "requestObjects": {
                                  "description": "Lists invalid request objects.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "requestValues": {
                                  "description": "Lists values corresponding to the `requestField`.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "title": "String",
                                        "type": "string"
                                      },
                                      {
                                        "title": "Integer",
                                        "type": "integer"
                                      },
                                      {
                                        "title": "Object",
                                        "type": "object"
                                      }
                                    ]
                                  }
                                },
                                "title": {
                                  "description": "Title of the error.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type of error.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/sub-problem.yaml"
                              }
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/functional-test-case.yaml"
                        }
                      }
                    },
                    "testSuiteDescription": {
                      "default": null,
                      "description": "Description of the test suite. It's `null` for test suites without descriptions. ",
                      "maxLength": 4000,
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "testSuiteId": {
                      "description": "Identifies a test suite. To get this value, run the [List test suites](https://techdocs.akamai.com/test-ctr/reference/get-test-suites) operation.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "testSuiteName": {
                      "description": "Unique name for each test suite.",
                      "maxLength": 100,
                      "minLength": 1,
                      "type": "string"
                    },
                    "variables": {
                      "description": "Lists variables included in the test suite.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains variables created in a specific test suite and their details.",
                        "type": "object",
                        "required": [
                          "variables"
                        ],
                        "properties": {
                          "variables": {
                            "description": "Lists variables created in a specific test suite and their details.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variables appear with `{{variableName}}` syntax.",
                                  "title": "Single variable",
                                  "type": "object",
                                  "required": [
                                    "variableId",
                                    "variableName",
                                    "variableValue",
                                    "isDynamicallyUsed"
                                  ],
                                  "properties": {
                                    "createdBy": {
                                      "description": "Username who created the item.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string",
                                      "x-akamai": {
                                        "file-path": "schemas/createdBy.yaml"
                                      }
                                    },
                                    "createdDate": {
                                      "description": "ISO 8601 timestamp indicating when the item was created.",
                                      "format": "date-time",
                                      "readOnly": true,
                                      "type": "string",
                                      "x-akamai": {
                                        "file-path": "schemas/createdDate.yaml"
                                      }
                                    },
                                    "isDynamicallyUsed": {
                                      "description": "Whether the variable in `setVariables` is assigned dynamically.",
                                      "type": "boolean"
                                    },
                                    "modifiedBy": {
                                      "description": "Username who last modified the item.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string",
                                      "x-akamai": {
                                        "file-path": "schemas/modifiedBy.yaml"
                                      }
                                    },
                                    "modifiedDate": {
                                      "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                      "format": "date-time",
                                      "readOnly": true,
                                      "type": "string",
                                      "x-akamai": {
                                        "file-path": "schemas/modifiedDate.yaml"
                                      }
                                    },
                                    "variableId": {
                                      "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                      "minimum": 1,
                                      "readOnly": true,
                                      "type": "integer"
                                    },
                                    "variableName": {
                                      "description": "Name of the variable.",
                                      "maxLength": 100,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "variableValue": {
                                      "description": "Value of the variable.",
                                      "maxLength": 4000,
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/variable.yaml"
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variable groups appear with `{{variableName.columnHeader}}` syntax.",
                                  "title": "Variable group",
                                  "type": "object",
                                  "required": [
                                    "variableId",
                                    "variableName",
                                    "variableGroupValue"
                                  ],
                                  "properties": {
                                    "createdBy": {
                                      "description": "Username who created the item.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string",
                                      "x-akamai": {
                                        "file-path": "schemas/createdBy.yaml"
                                      }
                                    },
                                    "createdDate": {
                                      "description": "ISO 8601 timestamp indicating when the item was created.",
                                      "format": "date-time",
                                      "readOnly": true,
                                      "type": "string",
                                      "x-akamai": {
                                        "file-path": "schemas/createdDate.yaml"
                                      }
                                    },
                                    "modifiedBy": {
                                      "description": "Username who last modified the item.",
                                      "minLength": 1,
                                      "readOnly": true,
                                      "type": "string",
                                      "x-akamai": {
                                        "file-path": "schemas/modifiedBy.yaml"
                                      }
                                    },
                                    "modifiedDate": {
                                      "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                      "format": "date-time",
                                      "readOnly": true,
                                      "type": "string",
                                      "x-akamai": {
                                        "file-path": "schemas/modifiedDate.yaml"
                                      }
                                    },
                                    "variableGroupValue": {
                                      "description": "Lists variable groups created in a specific test suite and their details.",
                                      "minItems": 1,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "description": "Specifies a variable group referenced in `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variable groups appear with `{{variableName.columnHeader}}` syntax. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                        "type": "object",
                                        "required": [
                                          "columnHeader"
                                        ],
                                        "properties": {
                                          "columnHeader": {
                                            "description": "Column header name.",
                                            "maxLength": 100,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "columnValues": {
                                            "description": "Column values for specific column header.",
                                            "minItems": 0,
                                            "type": "array",
                                            "items": {
                                              "maxLength": 4000,
                                              "minLength": 1,
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-akamai": {
                                          "file-path": "schemas/variable-group.yaml"
                                        }
                                      }
                                    },
                                    "variableId": {
                                      "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                      "minimum": 1,
                                      "readOnly": true,
                                      "type": "integer"
                                    },
                                    "variableName": {
                                      "description": "Name of the variable.",
                                      "maxLength": 100,
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/variable-with-var-group.yaml"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/variables.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/test-suite-with-child-objects.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Validation errors](https://techdocs.akamai.com/test-ctr/reference/400).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "e4bdb007-213d-4573-ab76-4f071b55de59",
                  "status": 400,
                  "title": "Validation error",
                  "type": "validation.error",
                  "errors": [
                    {
                      "requestField": "propertyName",
                      "title": "Required field missing",
                      "type": "required.field.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/400.yaml"
            }
          },
          "403": {
            "description": "[Authorization error](https://techdocs.akamai.com/test-ctr/reference/403).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a86ef2f3-4ffa-4eef-a041-6558311dd3a2",
                  "status": 403,
                  "title": "Authorization error",
                  "type": "authorization.error",
                  "errors": [
                    {
                      "title": "Required permission missing",
                      "type": "required.permission.missing"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/403.yaml"
            }
          },
          "404": {
            "description": "[Resource not found error](https://techdocs.akamai.com/test-ctr/reference/404).",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "1dcdb168-8837-415e-92bc-31aa36326495",
                  "requestField": "propertyName",
                  "status": 404,
                  "title": "Resource not found",
                  "type": "resource.not.found",
                  "requestValues": [
                    "atc_user1_config"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Specifies the errors.",
                  "type": "object",
                  "required": [
                    "type",
                    "title",
                    "instance",
                    "status"
                  ],
                  "properties": {
                    "errors": {
                      "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating causes of failure.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the error that occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Lists objects included within the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestField": {
                            "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Lists invalid request objects.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          },
                          "requestValues": {
                            "description": "Lists values corresponding to the `requestField`.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Integer",
                                  "type": "integer"
                                },
                                {
                                  "title": "Object",
                                  "type": "object"
                                }
                              ]
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/sub-problem.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "Identifies an error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestField": {
                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "requestValues": {
                      "description": "Lists values corresponding to the `requestField`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "title": "String",
                            "type": "string"
                          },
                          {
                            "title": "Integer",
                            "type": "integer"
                          },
                          {
                            "title": "Object",
                            "type": "object"
                          }
                        ]
                      }
                    },
                    "status": {
                      "description": "HTTP response code.",
                      "maximum": 599,
                      "minimum": 100,
                      "type": "integer"
                    },
                    "title": {
                      "description": "Title of the error.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "type": {
                      "description": "Type of error.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/problem.yaml"
                  }
                }
              }
            },
            "x-akamai": {
              "file-path": "errors/404.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Identifies a test suite. To get this value, run the [List test suites](https://techdocs.akamai.com/test-ctr/reference/get-test-suites) operation.",
          "example": "{{testSuiteId}}",
          "in": "path",
          "name": "testSuiteId",
          "required": true,
          "schema": {
            "example": 284,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testSuiteId-path.yaml"
          }
        }
      ]
    },
    "/test-runs": {
      "post": {
        "description": "Submits a test run for functional testing. With one request you can run the test for a property version, test suite, and functional test case.",
        "operationId": "post-test-runs",
        "summary": "Submit a test run",
        "tags": [
          "Test runs"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-runs"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "note": "Test a change on staging that is implemented in config_user11 Version 15.",
                "purgeOnStaging": false,
                "sendEmailOnCompletion": true,
                "targetEnvironment": "STAGING",
                "functional": {
                  "propertyManagerExecution": {
                    "propertyId": 123,
                    "propertyVersion": 2,
                    "testSuiteExecutions": [
                      {
                        "testSuiteId": 3,
                        "testCaseExecutions": [
                          {
                            "testCaseId": 4
                          }
                        ]
                      },
                      {
                        "testSuiteId": 4
                      }
                    ]
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "Specifies objects you want a test run to execute against an environment. You can test each of these objects separately in a request: a requirement, a property version, a test suite, a functional test case, and a test definition. You can also combine objects in a request based on the these constraints: property versions with test definitions, a requirement with test definitions, or a requirement with property versions and test definitions. See [Run a functional test](https://techdocs.akamai.com/test-ctr/reference/run-a-functional-test) and [Run a comparative test](https://techdocs.akamai.com/test-ctr/reference/run-a-comparative-test).",
                "type": "object",
                "required": [
                  "targetEnvironment",
                  "functional"
                ],
                "properties": {
                  "functional": {
                    "additionalProperties": false,
                    "description": "Specifies functional testing objects you want the test run to execute. Depending on what you want to run the functional test for, it may include: `propertyManagerExecution`, `testCaseExecutions`, or `testSuiteExecutions`. ",
                    "type": "object",
                    "properties": {
                      "propertyManagerExecution": {
                        "additionalProperties": false,
                        "description": "Specifies a property version associated with a test suite you want to execute.",
                        "type": "object",
                        "properties": {
                          "propertyId": {
                            "description": "Identifies a Property Manager property.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "propertyName": {
                            "description": "Name of the property. ",
                            "minLength": 1,
                            "type": "string"
                          },
                          "propertyVersion": {
                            "description": "Version of the property.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "testSuiteExecutions": {
                            "description": "Specifies test suites you want to execute during the test run. If none are given, all the test suites associated with the property-version will be considered for test run",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "testSuiteId"
                              ],
                              "properties": {
                                "testCaseExecutions": {
                                  "description": "Lists identifiers for test cases included in the test suite you want to execute. If omitted, all of the test suite's test cases execute.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                      "testCaseId"
                                    ],
                                    "properties": {
                                      "testCaseId": {
                                        "description": "Identifier of a test case included in the test suite you want to execute.",
                                        "minimum": 1,
                                        "type": "integer"
                                      }
                                    }
                                  }
                                },
                                "testSuiteId": {
                                  "description": "Identifies the test suite. To get this value, run the [List test suites](https://techdocs.akamai.com/test-ctr/reference/get-test-suites) operation.",
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        },
                        "oneOf": [
                          {
                            "title": "Property ID and version",
                            "required": [
                              "propertyId",
                              "propertyVersion"
                            ]
                          },
                          {
                            "title": "Property name and version",
                            "required": [
                              "propertyName",
                              "propertyVersion"
                            ]
                          }
                        ]
                      },
                      "testCaseExecution": {
                        "additionalProperties": false,
                        "description": "Specifies the functional test case and included objects: condition, test request, and client profile.",
                        "type": "object",
                        "required": [
                          "testRequest",
                          "clientProfile",
                          "condition"
                        ],
                        "properties": {
                          "clientProfile": {
                            "additionalProperties": false,
                            "description": "Specifies a client profile included in the test case.",
                            "type": "object",
                            "required": [
                              "ipVersion",
                              "client"
                            ],
                            "properties": {
                              "client": {
                                "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                "type": "string",
                                "enum": [
                                  "CHROME",
                                  "CURL"
                                ]
                              },
                              "geoLocation": {
                                "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                "type": "string",
                                "enum": [
                                  "US"
                                ]
                              },
                              "ipVersion": {
                                "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                "type": "string",
                                "enum": [
                                  "IPV4",
                                  "IPV6"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/client-profile.yaml"
                            }
                          },
                          "condition": {
                            "additionalProperties": false,
                            "description": "Specifies a condition included in the test case.",
                            "type": "object",
                            "required": [
                              "conditionExpression"
                            ],
                            "properties": {
                              "conditionExpression": {
                                "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/condition-create.yaml"
                            }
                          },
                          "testRequest": {
                            "additionalProperties": false,
                            "description": "Specifies a test request included in the test case.",
                            "type": "object",
                            "required": [
                              "testRequestUrl",
                              "requestMethod"
                            ],
                            "properties": {
                              "encodeRequestBody": {
                                "default": true,
                                "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                "nullable": true,
                                "type": "boolean"
                              },
                              "requestBody": {
                                "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                "maxLength": 4000,
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "requestHeaders": {
                                "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "required": [
                                    "headerName",
                                    "headerValue",
                                    "headerAction"
                                  ],
                                  "properties": {
                                    "headerAction": {
                                      "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                      "type": "string",
                                      "enum": [
                                        "ADD",
                                        "MODIFY",
                                        "FILTER"
                                      ]
                                    },
                                    "headerName": {
                                      "description": "Name of the request header.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "headerValue": {
                                      "description": "Value of the request header.",
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "requestMethod": {
                                "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                "type": "string",
                                "enum": [
                                  "HEAD",
                                  "GET",
                                  "POST"
                                ]
                              },
                              "tags": {
                                "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "testRequestUrl": {
                                "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                "maxLength": 2048,
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/test-request-create.yaml"
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/functional-test-case-execution-simple-create.yaml"
                        }
                      },
                      "testSuiteExecutions": {
                        "description": "Specifies test suites you want to execute during the test run. If none are given, all the test suites associated with the property-version will be considered for test run.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "required": [
                            "testSuiteId"
                          ],
                          "properties": {
                            "testCaseExecutions": {
                              "description": "Lists identifiers for test cases included in the test suite you want to execute. If omitted, all of the test suite's test cases execute.",
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "Specifies test cases you want to execute in the test suite. If omitted, all the test cases associated with the test suite will be considered for test run",
                                "type": "object",
                                "required": [
                                  "testCaseId"
                                ],
                                "properties": {
                                  "testCaseId": {
                                    "description": "Identifier of a test case included in the test suite you want to execute.",
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "testSuiteId": {
                              "description": "Identifies the test suite. To get this value, run the [List test suites](https://techdocs.akamai.com/test-ctr/reference/get-test-suites) operation.",
                              "type": "integer"
                            }
                          }
                        }
                      }
                    },
                    "oneOf": [
                      {
                        "title": "Property and version",
                        "required": [
                          "propertyManagerExecution"
                        ]
                      },
                      {
                        "title": "Test suites",
                        "required": [
                          "testSuiteExecutions"
                        ]
                      },
                      {
                        "title": "New test case",
                        "required": [
                          "testCaseExecution"
                        ]
                      }
                    ]
                  },
                  "note": {
                    "description": "Notes about the test run.",
                    "example": "{{note}}",
                    "maxLength": 200,
                    "minLength": 1,
                    "type": "string"
                  },
                  "purgeOnStaging": {
                    "default": false,
                    "description": "Purges the configuration for the test run. It applies only for `targetEnvironment` set to `STAGING`.",
                    "example": "{{purgeOnStaging}}",
                    "type": "boolean"
                  },
                  "sendEmailOnCompletion": {
                    "default": true,
                    "description": "Sends a notification email after the test run completes.",
                    "example": "{{sendEmailOnCompletion}}",
                    "type": "boolean"
                  },
                  "targetEnvironment": {
                    "description": "Environment against which the test run executes the request, either `PRODUCTION` or `STAGING`.",
                    "example": "{{targetEnvironment}}",
                    "type": "string",
                    "enum": [
                      "PRODUCTION",
                      "STAGING"
                    ]
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/test-run-create.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Process successfully launched.",
            "content": {
              "application/json": {
                "example": {
                  "note": "Test a change on staging that is implemented in atc_config_user11 Version 15.",
                  "sendEmailOnCompletion": true,
                  "status": "IN_PROGRESS",
                  "submittedBy": "atc@akamai.com",
                  "submittedDate": "2022-01-27T04:34:15+0000",
                  "targetEnvironment": "STAGING",
                  "testRunId": 2,
                  "functional": {
                    "status": "IN_PROGRESS",
                    "propertyManagerExecution": {
                      "propertyId": 123,
                      "propertyName": "lexample.com",
                      "propertyVersion": 2,
                      "testSuiteExecutions": [
                        {
                          "status": "IN_PROGRESS",
                          "testSuiteExecutionId": 1,
                          "testSuiteId": 3,
                          "testSuiteContext": {
                            "executableTestCaseCount": 2,
                            "isLocked": true,
                            "isStateful": false,
                            "testSuiteDescription": "test the change in test case that includes example.com Version 2 property",
                            "testSuiteId": 3,
                            "testSuiteName": "testsuite1",
                            "variables": [
                              {
                                "createdBy": "szhang",
                                "createdDate": "2022-01-27T04:34:15+0000",
                                "modifiedBy": "mrossi",
                                "modifiedDate": "2022-01-27T04:34:16+0000",
                                "variableId": 1,
                                "variableName": "var1",
                                "variableValue": "123"
                              },
                              {
                                "createdBy": "tyamada",
                                "createdDate": "2022-01-27T04:34:17+0000",
                                "modifiedBy": "adevi",
                                "modifiedDate": "2022-01-27T04:34:18+0000",
                                "variableId": 2,
                                "variableName": "var2",
                                "variableValue": "abc"
                              }
                            ]
                          },
                          "testCaseExecutions": [
                            {
                              "status": "IN_PROGRESS",
                              "testCaseExecutionId": 3,
                              "testCaseId": 4,
                              "testCaseContext": {
                                "order": 3,
                                "testCaseId": 4,
                                "clientProfile": {
                                  "client": "CHROME",
                                  "geoLocation": "US",
                                  "ipVersion": "IPV4"
                                },
                                "condition": {
                                  "conditionExpression": "Response code is one of {{resp_codes}}",
                                  "conditionExpressionResolved": "Response code is one of \"200\""
                                },
                                "testRequest": {
                                  "requestMethod": "GET",
                                  "testRequestUrl": "http://juiceshop.ksd.akaorigin.com/"
                                },
                                "setVariables": [
                                  {
                                    "variableId": 2344,
                                    "variableName": "var1",
                                    "variableValue": "value-1"
                                  },
                                  {
                                    "variableId": 2344,
                                    "variableName": "var1",
                                    "variableValue": "value-1"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        {
                          "status": "IN_PROGRESS",
                          "testSuiteExecutionId": 2,
                          "testSuiteId": 4,
                          "testSuiteContext": {
                            "executableTestCaseCount": 2,
                            "isLocked": false,
                            "isStateful": true,
                            "testSuiteDescription": "test the change in test case that includes example.com Version 2 property",
                            "testSuiteId": 4,
                            "testSuiteName": "testsuite2",
                            "variables": [
                              {
                                "createdBy": "jperez",
                                "createdDate": "2021-07-06T10:28:13+0000",
                                "modifiedBy": "jperez",
                                "modifiedDate": "2021-07-06T10:28:13+0000",
                                "variableId": 204,
                                "variableName": "sampleVarGroup",
                                "variableGroupValue": [
                                  {
                                    "columnHeader": "urls",
                                    "columnValues": [
                                      "pqrs.com",
                                      "xyz.org"
                                    ]
                                  }
                                ]
                              },
                              {
                                "createdBy": "alfulani",
                                "createdDate": "2021-07-06T10:28:13+0000",
                                "modifiedBy": "jperez",
                                "modifiedDate": "2021-07-06T10:28:13+0000",
                                "variableId": 205,
                                "variableName": "successCode",
                                "variableGroupValue": [
                                  {
                                    "columnHeader": "statusCodes",
                                    "columnValues": [
                                      "200",
                                      "200"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "testCaseExecutions": [
                            {
                              "status": "IN_PROGRESS",
                              "testCaseExecutionId": 4,
                              "testCaseId": 4,
                              "testCaseContext": {
                                "createdBy": "jsmith",
                                "createdDate": "2021-07-06T10:28:13+0000",
                                "modifiedBy": "mrossi",
                                "modifiedDate": "2021-07-06T10:28:13+0000",
                                "order": 1,
                                "testCaseId": 4,
                                "clientProfile": {
                                  "client": "CHROME",
                                  "ipVersion": "IPV4"
                                },
                                "condition": {
                                  "conditionExpression": "Response code is one of \"{{successCode.statusCodes}}\""
                                },
                                "testRequest": {
                                  "requestMethod": "GET",
                                  "testRequestUrl": "https://{{sampleVarGroup.urls}}/index"
                                }
                              },
                              "derivedTestCaseExecutions": [
                                {
                                  "status": "IN_PROGRESS",
                                  "testCaseExecutionId": 5,
                                  "testCaseId": 4,
                                  "testCaseContext": {
                                    "order": 1,
                                    "clientProfile": {
                                      "client": "CHROME",
                                      "ipVersion": "IPV4"
                                    },
                                    "condition": {
                                      "conditionExpression": "Response code is one of \"200\""
                                    },
                                    "testRequest": {
                                      "requestMethod": "GET",
                                      "testRequestUrl": "https://pqrs.com/index"
                                    }
                                  }
                                },
                                {
                                  "status": "IN_PROGRESS",
                                  "testCaseExecutionId": 6,
                                  "testCaseId": 4,
                                  "testCaseContext": {
                                    "order": 2,
                                    "clientProfile": {
                                      "client": "CHROME",
                                      "ipVersion": "IPV4"
                                    },
                                    "condition": {
                                      "conditionExpression": "Response code is one of \"200\""
                                    },
                                    "testRequest": {
                                      "requestMethod": "GET",
                                      "testRequestUrl": "https://xyz.org/index"
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "purgeInfo": {
                    "status": "COMPLETED"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Represents the progress of a test run and its results. Data lists all objects that execute during the test run. Data may show more details based on your request's query parameters.",
                  "type": "object",
                  "required": [
                    "testRunId",
                    "targetEnvironment",
                    "functional",
                    "status",
                    "submittedBy",
                    "submittedDate",
                    "sendEmailOnCompletion"
                  ],
                  "properties": {
                    "completedDate": {
                      "description": "ISO 8601 timestamp indicating when the test run was complete.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "functional": {
                      "additionalProperties": false,
                      "description": "Represents functional testing executed during the test run. Depending on what was the test run for, it may include `PropertyMangerExecution`, `testCaseExecution`, or `testSuiteExecutions`.",
                      "type": "object",
                      "required": [
                        "status"
                      ],
                      "properties": {
                        "allExecutionObjectsIncluded": {
                          "default": true,
                          "description": "Whether the response includes all execution objects. If you don't have access to any of the hostnames used in the executions, you don't see these objects in the response.",
                          "type": "boolean"
                        },
                        "isReevaluationInProgress": {
                          "description": "Whether any test cases included in the test run are being reevaluated.",
                          "readOnly": true,
                          "type": "boolean"
                        },
                        "maxReevaluationCompletionTime": {
                          "description": "ISO 8601 timestamp indicating the maximum time all test cases will take to finish reevaluating.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "nextReevaluationCompletionTime": {
                          "description": "ISO 8601 timestamp indicating approximately when all test cases will finish reevaluating.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "propertyManagerExecution": {
                          "additionalProperties": false,
                          "description": "Contains information about the property for which this test was initiated.",
                          "type": "object",
                          "required": [
                            "propertyVersion",
                            "propertyId",
                            "propertyName",
                            "testSuiteExecutions"
                          ],
                          "properties": {
                            "propertyId": {
                              "description": "Identifies a property version.",
                              "minimum": 1,
                              "type": "integer"
                            },
                            "propertyName": {
                              "description": "Name of a property version.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "propertyVersion": {
                              "description": "Property version.",
                              "minimum": 1,
                              "type": "integer"
                            },
                            "testSuiteExecutions": {
                              "description": "Contains test Suite Executions created in your organization.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "Specifies the test suite executed during the test run.",
                                "type": "object",
                                "required": [
                                  "status",
                                  "testSuiteId",
                                  "testCaseExecutions",
                                  "testSuiteExecutionId"
                                ],
                                "properties": {
                                  "completedDate": {
                                    "description": "ISO 8601 timestamp indicating when the test run completed.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "status": {
                                    "description": "Test suite's execution status. Possible values are: `IN_PROGRESS`, `COMPLETED`, `SKIPPED`, or `FAILED`.",
                                    "type": "string",
                                    "enum": [
                                      "IN_PROGRESS",
                                      "COMPLETED",
                                      "FAILED",
                                      "SKIPPED"
                                    ]
                                  },
                                  "testCaseExecutions": {
                                    "description": "Lists functional test cases executed during a test run.",
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "required": [
                                        "status",
                                        "testCaseId",
                                        "testCaseExecutionId"
                                      ],
                                      "properties": {
                                        "completedDate": {
                                          "description": "ISO 8601 timestamp indicating when the test run completed.",
                                          "format": "date-time",
                                          "type": "string"
                                        },
                                        "conditionEvaluationResult": {
                                          "additionalProperties": false,
                                          "description": "Specifies evaluation of conditions. It appears only for executions of functional test cases with the `COMPLETED` status.",
                                          "type": "object",
                                          "required": [
                                            "result",
                                            "actualConditionData"
                                          ],
                                          "properties": {
                                            "actualConditionData": {
                                              "description": "Lists condition data collected when the functional test case URL executed.",
                                              "minItems": 1,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                  "name",
                                                  "value"
                                                ],
                                                "properties": {
                                                  "name": {
                                                    "description": "Name of the condition data.",
                                                    "minLength": 1,
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "description": "Value of the condition data.",
                                                    "minLength": 1,
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "result": {
                                              "description": "Result after evaluating the conditions. Possible values are `PASSED` for conditions detected during the test run, `FAILED` for those undetected, `ERROR_OCCURRED` if the API couldn't execute the test run due to a system error, or `INCONCLUSIVE` for the conditions not able to evaluate.",
                                              "type": "string",
                                              "enum": [
                                                "PASSED",
                                                "FAILED",
                                                "ERROR_OCCURRED",
                                                "INCONCLUSIVE"
                                              ]
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/condition-evaluation-result.yaml"
                                          }
                                        },
                                        "derivedTestCaseExecutions": {
                                          "description": "Lists functional derived test cases executed during a test run.",
                                          "minItems": 0,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "required": [
                                              "status",
                                              "testCaseId"
                                            ],
                                            "properties": {
                                              "completedDate": {
                                                "description": "ISO 8601 timestamp indicating when the test run completed.",
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "conditionEvaluationResult": {
                                                "additionalProperties": false,
                                                "description": "Specifies evaluation of conditions. It appears only for executions of functional test cases with the `COMPLETED` status.",
                                                "type": "object",
                                                "required": [
                                                  "result",
                                                  "actualConditionData"
                                                ],
                                                "properties": {
                                                  "actualConditionData": {
                                                    "description": "Lists condition data collected when the functional test case URL executed.",
                                                    "minItems": 1,
                                                    "type": "array",
                                                    "items": {
                                                      "additionalProperties": false,
                                                      "type": "object",
                                                      "required": [
                                                        "name",
                                                        "value"
                                                      ],
                                                      "properties": {
                                                        "name": {
                                                          "description": "Name of the condition data.",
                                                          "minLength": 1,
                                                          "type": "string"
                                                        },
                                                        "value": {
                                                          "description": "Value of the condition data.",
                                                          "minLength": 1,
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "result": {
                                                    "description": "Result after evaluating the conditions. Possible values are `PASSED` for conditions detected during the test run, `FAILED` for those undetected, `ERROR_OCCURRED` if the API couldn't execute the test run due to a system error, or `INCONCLUSIVE` for the conditions not able to evaluate.",
                                                    "type": "string",
                                                    "enum": [
                                                      "PASSED",
                                                      "FAILED",
                                                      "ERROR_OCCURRED",
                                                      "INCONCLUSIVE"
                                                    ]
                                                  }
                                                },
                                                "x-akamai": {
                                                  "file-path": "schemas/condition-evaluation-result.yaml"
                                                }
                                              },
                                              "errors": {
                                                "description": "Lists details about an error.",
                                                "minItems": 0,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "required": [
                                                    "type",
                                                    "title"
                                                  ],
                                                  "properties": {
                                                    "requestField": {
                                                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                    },
                                                    "requestValues": {
                                                      "description": "Lists values corresponding to the `requestField`.",
                                                      "minItems": 0,
                                                      "type": "array",
                                                      "items": {
                                                        "anyOf": [
                                                          {
                                                            "title": "String",
                                                            "type": "string"
                                                          },
                                                          {
                                                            "title": "Integer",
                                                            "type": "integer"
                                                          },
                                                          {
                                                            "title": "Object",
                                                            "type": "object"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    "title": {
                                                      "description": "Summary of the error.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "description": "Dot-notation explanation of the type of occurred error.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "x-akamai": {
                                                  "file-path": "schemas/error.yaml"
                                                }
                                              },
                                              "resolvedSetVariables": {
                                                "description": "Contains information about variables that resolved as part of test case execution. It appears only for executions of functional test cases with the `COMPLETED` status.",
                                                "type": "object"
                                              },
                                              "status": {
                                                "description": "Test case objects' execution status. Possible values are: `IN_PROGRESS`, `COMPLETED`, `SKIPPED`, or `FAILED`.",
                                                "type": "string",
                                                "enum": [
                                                  "IN_PROGRESS",
                                                  "COMPLETED",
                                                  "FAILED",
                                                  "SKIPPED"
                                                ]
                                              },
                                              "testCaseContext": {
                                                "additionalProperties": false,
                                                "description": "Specifies the functional test case and included objects: condition, test request, and client profile.",
                                                "type": "object",
                                                "required": [
                                                  "testCaseId",
                                                  "order",
                                                  "testRequest",
                                                  "condition",
                                                  "clientProfile"
                                                ],
                                                "properties": {
                                                  "clientProfile": {
                                                    "additionalProperties": false,
                                                    "description": "Specifies a client profile included in the test case.",
                                                    "type": "object",
                                                    "required": [
                                                      "ipVersion",
                                                      "client"
                                                    ],
                                                    "properties": {
                                                      "client": {
                                                        "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                                        "type": "string",
                                                        "enum": [
                                                          "CHROME",
                                                          "CURL"
                                                        ]
                                                      },
                                                      "geoLocation": {
                                                        "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                                        "type": "string",
                                                        "enum": [
                                                          "US"
                                                        ]
                                                      },
                                                      "ipVersion": {
                                                        "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                                        "type": "string",
                                                        "enum": [
                                                          "IPV4",
                                                          "IPV6"
                                                        ]
                                                      }
                                                    },
                                                    "x-akamai": {
                                                      "file-path": "schemas/client-profile.yaml"
                                                    }
                                                  },
                                                  "condition": {
                                                    "additionalProperties": false,
                                                    "description": "Specifies a condition included in the test case.",
                                                    "type": "object",
                                                    "required": [
                                                      "conditionExpression"
                                                    ],
                                                    "properties": {
                                                      "conditionExpression": {
                                                        "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                                        "minLength": 1,
                                                        "type": "string"
                                                      },
                                                      "conditionExpressionResolved": {
                                                        "description": "Condition statement with resolved variables, if applicable.",
                                                        "minLength": 1,
                                                        "readOnly": true,
                                                        "type": "string"
                                                      }
                                                    },
                                                    "x-akamai": {
                                                      "file-path": "schemas/condition.yaml"
                                                    }
                                                  },
                                                  "createdBy": {
                                                    "description": "Username who created the item.",
                                                    "minLength": 1,
                                                    "readOnly": true,
                                                    "type": "string",
                                                    "x-akamai": {
                                                      "file-path": "schemas/createdBy.yaml"
                                                    }
                                                  },
                                                  "createdDate": {
                                                    "description": "ISO 8601 timestamp indicating when the item was created.",
                                                    "format": "date-time",
                                                    "readOnly": true,
                                                    "type": "string",
                                                    "x-akamai": {
                                                      "file-path": "schemas/createdDate.yaml"
                                                    }
                                                  },
                                                  "deletedBy": {
                                                    "description": "Username who last deleted the item.",
                                                    "minLength": 1,
                                                    "type": "string",
                                                    "x-akamai": {
                                                      "file-path": "schemas/deletedBy.yaml"
                                                    }
                                                  },
                                                  "deletedDate": {
                                                    "description": "ISO 8601 timestamp indicating when the item was deleted.",
                                                    "format": "date-time",
                                                    "type": "string",
                                                    "x-akamai": {
                                                      "file-path": "schemas/deletedDate.yaml"
                                                    }
                                                  },
                                                  "derivedTestCases": {
                                                    "description": "Derived test cases in the response when there is reference to variable group(s).",
                                                    "minItems": 0,
                                                    "readOnly": true,
                                                    "type": "array",
                                                    "items": {
                                                      "additionalProperties": false,
                                                      "description": "Specifies the functional derived test case when a variable group reference is present and included objects: condition, test request, and client profile.",
                                                      "type": "object",
                                                      "required": [
                                                        "testRequest",
                                                        "condition",
                                                        "clientProfile",
                                                        "order"
                                                      ],
                                                      "properties": {
                                                        "clientProfile": {
                                                          "additionalProperties": false,
                                                          "description": "Specifies a client profile included in the test case.",
                                                          "type": "object",
                                                          "required": [
                                                            "ipVersion",
                                                            "client"
                                                          ],
                                                          "properties": {
                                                            "client": {
                                                              "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                                              "type": "string",
                                                              "enum": [
                                                                "CHROME",
                                                                "CURL"
                                                              ]
                                                            },
                                                            "geoLocation": {
                                                              "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                                              "type": "string",
                                                              "enum": [
                                                                "US"
                                                              ]
                                                            },
                                                            "ipVersion": {
                                                              "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                                              "type": "string",
                                                              "enum": [
                                                                "IPV4",
                                                                "IPV6"
                                                              ]
                                                            }
                                                          },
                                                          "x-akamai": {
                                                            "file-path": "schemas/client-profile.yaml"
                                                          }
                                                        },
                                                        "condition": {
                                                          "additionalProperties": false,
                                                          "description": "Specifies a condition included in the test case.",
                                                          "type": "object",
                                                          "required": [
                                                            "conditionExpression"
                                                          ],
                                                          "properties": {
                                                            "conditionExpression": {
                                                              "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                                              "minLength": 1,
                                                              "type": "string"
                                                            },
                                                            "conditionExpressionResolved": {
                                                              "description": "Condition statement with resolved variables, if applicable.",
                                                              "minLength": 1,
                                                              "readOnly": true,
                                                              "type": "string"
                                                            }
                                                          },
                                                          "x-akamai": {
                                                            "file-path": "schemas/condition.yaml"
                                                          }
                                                        },
                                                        "order": {
                                                          "description": "Order of the derived test case. In stateful test suites, a test run's test cases execute in this order.  ",
                                                          "minimum": 0,
                                                          "readOnly": true,
                                                          "type": "integer"
                                                        },
                                                        "setVariables": {
                                                          "description": "Contains derived test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                                          "minItems": 0,
                                                          "type": "array",
                                                          "items": {
                                                            "additionalProperties": false,
                                                            "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                                            "type": "object",
                                                            "required": [
                                                              "variableId",
                                                              "variableName",
                                                              "variableValue"
                                                            ],
                                                            "properties": {
                                                              "variableId": {
                                                                "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                                                "minimum": 1,
                                                                "readOnly": true,
                                                                "type": "integer"
                                                              },
                                                              "variableName": {
                                                                "description": "Name of the variable.",
                                                                "maxLength": 100,
                                                                "minLength": 1,
                                                                "type": "string"
                                                              },
                                                              "variableValue": {
                                                                "description": "Value of the variable to resolve at runtime.",
                                                                "maxLength": 4000,
                                                                "minLength": 1,
                                                                "type": "string"
                                                              }
                                                            },
                                                            "x-akamai": {
                                                              "file-path": "schemas/set-variable.yaml"
                                                            }
                                                          }
                                                        },
                                                        "testRequest": {
                                                          "additionalProperties": false,
                                                          "description": "Specifies a test request included in the test case.",
                                                          "type": "object",
                                                          "required": [
                                                            "testRequestUrl",
                                                            "requestMethod"
                                                          ],
                                                          "properties": {
                                                            "encodeRequestBody": {
                                                              "default": true,
                                                              "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                                              "nullable": true,
                                                              "type": "boolean"
                                                            },
                                                            "requestBody": {
                                                              "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                                              "maxLength": 4000,
                                                              "minLength": 1,
                                                              "nullable": true,
                                                              "type": "string"
                                                            },
                                                            "requestBodyResolved": {
                                                              "description": "Value of test request body after resolving all variables.",
                                                              "minLength": 1,
                                                              "nullable": true,
                                                              "readOnly": true,
                                                              "type": "string"
                                                            },
                                                            "requestHeaders": {
                                                              "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                                              "minItems": 0,
                                                              "type": "array",
                                                              "items": {
                                                                "additionalProperties": false,
                                                                "type": "object",
                                                                "required": [
                                                                  "headerName",
                                                                  "headerValue",
                                                                  "headerAction"
                                                                ],
                                                                "properties": {
                                                                  "headerAction": {
                                                                    "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                                                    "type": "string",
                                                                    "enum": [
                                                                      "ADD",
                                                                      "MODIFY",
                                                                      "FILTER"
                                                                    ]
                                                                  },
                                                                  "headerName": {
                                                                    "description": "Name of the request header.",
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                  },
                                                                  "headerNameResolved": {
                                                                    "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                                                    "minLength": 1,
                                                                    "readOnly": true,
                                                                    "type": "string"
                                                                  },
                                                                  "headerValue": {
                                                                    "description": "Value of the request header.",
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                  },
                                                                  "headerValueResolved": {
                                                                    "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                                                    "minLength": 1,
                                                                    "readOnly": true,
                                                                    "type": "string"
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            "requestMethod": {
                                                              "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                                              "type": "string",
                                                              "enum": [
                                                                "HEAD",
                                                                "GET",
                                                                "POST"
                                                              ]
                                                            },
                                                            "tags": {
                                                              "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                                              "minItems": 0,
                                                              "type": "array",
                                                              "items": {
                                                                "minLength": 1,
                                                                "type": "string"
                                                              }
                                                            },
                                                            "testRequestUrl": {
                                                              "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                                              "maxLength": 2048,
                                                              "minLength": 1,
                                                              "type": "string"
                                                            },
                                                            "testRequestUrlResolved": {
                                                              "description": "Value of test request URL after resolving all variables.",
                                                              "minLength": 1,
                                                              "nullable": true,
                                                              "readOnly": true,
                                                              "type": "string"
                                                            }
                                                          },
                                                          "x-akamai": {
                                                            "file-path": "schemas/test-request.yaml"
                                                          }
                                                        }
                                                      },
                                                      "x-akamai": {
                                                        "file-path": "schemas/functional-derived-test-case.yaml"
                                                      }
                                                    }
                                                  },
                                                  "modifiedBy": {
                                                    "description": "Username who last modified the item.",
                                                    "minLength": 1,
                                                    "readOnly": true,
                                                    "type": "string",
                                                    "x-akamai": {
                                                      "file-path": "schemas/modifiedBy.yaml"
                                                    }
                                                  },
                                                  "modifiedDate": {
                                                    "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                                    "format": "date-time",
                                                    "readOnly": true,
                                                    "type": "string",
                                                    "x-akamai": {
                                                      "file-path": "schemas/modifiedDate.yaml"
                                                    }
                                                  },
                                                  "order": {
                                                    "description": "Order of the test case. In stateful test suites, a test run's test cases execute in this order.",
                                                    "minimum": 1,
                                                    "readOnly": true,
                                                    "type": "integer"
                                                  },
                                                  "setVariables": {
                                                    "description": "Contains test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                                    "minItems": 0,
                                                    "type": "array",
                                                    "items": {
                                                      "additionalProperties": false,
                                                      "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                                      "type": "object",
                                                      "required": [
                                                        "variableId",
                                                        "variableName",
                                                        "variableValue"
                                                      ],
                                                      "properties": {
                                                        "variableId": {
                                                          "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                                          "minimum": 1,
                                                          "readOnly": true,
                                                          "type": "integer"
                                                        },
                                                        "variableName": {
                                                          "description": "Name of the variable.",
                                                          "maxLength": 100,
                                                          "minLength": 1,
                                                          "type": "string"
                                                        },
                                                        "variableValue": {
                                                          "description": "Value of the variable to resolve at runtime.",
                                                          "maxLength": 4000,
                                                          "minLength": 1,
                                                          "type": "string"
                                                        }
                                                      },
                                                      "x-akamai": {
                                                        "file-path": "schemas/set-variable.yaml"
                                                      }
                                                    }
                                                  },
                                                  "testCaseId": {
                                                    "description": "Identifies a functional test case. To get this value, run the [List test cases](https://techdocs.akamai.com/test-ctr/reference/get-test-cases) operation.",
                                                    "minimum": 1,
                                                    "readOnly": true,
                                                    "type": "integer"
                                                  },
                                                  "testRequest": {
                                                    "additionalProperties": false,
                                                    "description": "Specifies a test request included in the test case.",
                                                    "type": "object",
                                                    "required": [
                                                      "testRequestUrl",
                                                      "requestMethod"
                                                    ],
                                                    "properties": {
                                                      "encodeRequestBody": {
                                                        "default": true,
                                                        "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                                        "nullable": true,
                                                        "type": "boolean"
                                                      },
                                                      "requestBody": {
                                                        "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                                        "maxLength": 4000,
                                                        "minLength": 1,
                                                        "nullable": true,
                                                        "type": "string"
                                                      },
                                                      "requestBodyResolved": {
                                                        "description": "Value of test request body after resolving all variables.",
                                                        "minLength": 1,
                                                        "nullable": true,
                                                        "readOnly": true,
                                                        "type": "string"
                                                      },
                                                      "requestHeaders": {
                                                        "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                                        "minItems": 0,
                                                        "type": "array",
                                                        "items": {
                                                          "additionalProperties": false,
                                                          "type": "object",
                                                          "required": [
                                                            "headerName",
                                                            "headerValue",
                                                            "headerAction"
                                                          ],
                                                          "properties": {
                                                            "headerAction": {
                                                              "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                                              "type": "string",
                                                              "enum": [
                                                                "ADD",
                                                                "MODIFY",
                                                                "FILTER"
                                                              ]
                                                            },
                                                            "headerName": {
                                                              "description": "Name of the request header.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                            },
                                                            "headerNameResolved": {
                                                              "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                                              "minLength": 1,
                                                              "readOnly": true,
                                                              "type": "string"
                                                            },
                                                            "headerValue": {
                                                              "description": "Value of the request header.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                            },
                                                            "headerValueResolved": {
                                                              "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                                              "minLength": 1,
                                                              "readOnly": true,
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "requestMethod": {
                                                        "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                                        "type": "string",
                                                        "enum": [
                                                          "HEAD",
                                                          "GET",
                                                          "POST"
                                                        ]
                                                      },
                                                      "tags": {
                                                        "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                                        "minItems": 0,
                                                        "type": "array",
                                                        "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                        }
                                                      },
                                                      "testRequestUrl": {
                                                        "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                                        "maxLength": 2048,
                                                        "minLength": 1,
                                                        "type": "string"
                                                      },
                                                      "testRequestUrlResolved": {
                                                        "description": "Value of test request URL after resolving all variables.",
                                                        "minLength": 1,
                                                        "nullable": true,
                                                        "readOnly": true,
                                                        "type": "string"
                                                      }
                                                    },
                                                    "x-akamai": {
                                                      "file-path": "schemas/test-request.yaml"
                                                    }
                                                  },
                                                  "warnings": {
                                                    "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807). Any warnings related to variable groups would be captured here.",
                                                    "minItems": 0,
                                                    "readOnly": true,
                                                    "type": "array",
                                                    "items": {
                                                      "additionalProperties": false,
                                                      "description": "Specifies the error that occurred.",
                                                      "type": "object",
                                                      "required": [
                                                        "type",
                                                        "title"
                                                      ],
                                                      "properties": {
                                                        "existingEntities": {
                                                          "description": "Lists objects included within the functional test case.",
                                                          "minItems": 0,
                                                          "type": "array",
                                                          "items": {
                                                            "type": "object"
                                                          }
                                                        },
                                                        "requestField": {
                                                          "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                                                          "minLength": 1,
                                                          "type": "string"
                                                        },
                                                        "requestObjects": {
                                                          "description": "Lists invalid request objects.",
                                                          "minItems": 0,
                                                          "type": "array",
                                                          "items": {
                                                            "type": "object"
                                                          }
                                                        },
                                                        "requestValues": {
                                                          "description": "Lists values corresponding to the `requestField`.",
                                                          "minItems": 0,
                                                          "type": "array",
                                                          "items": {
                                                            "anyOf": [
                                                              {
                                                                "title": "String",
                                                                "type": "string"
                                                              },
                                                              {
                                                                "title": "Integer",
                                                                "type": "integer"
                                                              },
                                                              {
                                                                "title": "Object",
                                                                "type": "object"
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        "title": {
                                                          "description": "Title of the error.",
                                                          "minLength": 1,
                                                          "type": "string"
                                                        },
                                                        "type": {
                                                          "description": "Type of error.",
                                                          "minLength": 1,
                                                          "type": "string"
                                                        }
                                                      },
                                                      "x-akamai": {
                                                        "file-path": "schemas/sub-problem.yaml"
                                                      }
                                                    }
                                                  }
                                                },
                                                "x-akamai": {
                                                  "file-path": "schemas/functional-test-case.yaml"
                                                }
                                              },
                                              "testCaseExecutionId": {
                                                "description": "Identifies the functional test case execution.",
                                                "minimum": 1,
                                                "type": "integer"
                                              },
                                              "testCaseId": {
                                                "description": "Identifies the functional test case.",
                                                "minimum": 1,
                                                "type": "integer"
                                              }
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/functional-derived-test-case-executions.yaml"
                                          }
                                        },
                                        "errors": {
                                          "description": "Lists details about an error.",
                                          "minItems": 0,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "title"
                                            ],
                                            "properties": {
                                              "requestField": {
                                                "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "requestValues": {
                                                "description": "Lists values corresponding to the `requestField`.",
                                                "minItems": 0,
                                                "type": "array",
                                                "items": {
                                                  "anyOf": [
                                                    {
                                                      "title": "String",
                                                      "type": "string"
                                                    },
                                                    {
                                                      "title": "Integer",
                                                      "type": "integer"
                                                    },
                                                    {
                                                      "title": "Object",
                                                      "type": "object"
                                                    }
                                                  ]
                                                }
                                              },
                                              "title": {
                                                "description": "Summary of the error.",
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "type": {
                                                "description": "Dot-notation explanation of the type of occurred error.",
                                                "minLength": 1,
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/error.yaml"
                                          }
                                        },
                                        "isReevaluationInProgress": {
                                          "description": "Whether the test case execution is being reevaluated.",
                                          "readOnly": true,
                                          "type": "boolean"
                                        },
                                        "resolvedSetVariables": {
                                          "description": "Contains information about variables that resolved as part of test case execution. It appears only for executions of functional test cases with the `COMPLETED` status.",
                                          "type": "object"
                                        },
                                        "status": {
                                          "description": "Test case objects' execution status. Possible values are: `IN_PROGRESS`, `COMPLETED`, `SKIPPED`, or `FAILED`.",
                                          "type": "string",
                                          "enum": [
                                            "IN_PROGRESS",
                                            "COMPLETED",
                                            "FAILED",
                                            "SKIPPED"
                                          ]
                                        },
                                        "testCaseContext": {
                                          "additionalProperties": false,
                                          "description": "Specifies the functional test case and included objects: condition, test request, and client profile.",
                                          "type": "object",
                                          "required": [
                                            "testCaseId",
                                            "order",
                                            "testRequest",
                                            "condition",
                                            "clientProfile"
                                          ],
                                          "properties": {
                                            "clientProfile": {
                                              "additionalProperties": false,
                                              "description": "Specifies a client profile included in the test case.",
                                              "type": "object",
                                              "required": [
                                                "ipVersion",
                                                "client"
                                              ],
                                              "properties": {
                                                "client": {
                                                  "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                                  "type": "string",
                                                  "enum": [
                                                    "CHROME",
                                                    "CURL"
                                                  ]
                                                },
                                                "geoLocation": {
                                                  "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                                  "type": "string",
                                                  "enum": [
                                                    "US"
                                                  ]
                                                },
                                                "ipVersion": {
                                                  "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                                  "type": "string",
                                                  "enum": [
                                                    "IPV4",
                                                    "IPV6"
                                                  ]
                                                }
                                              },
                                              "x-akamai": {
                                                "file-path": "schemas/client-profile.yaml"
                                              }
                                            },
                                            "condition": {
                                              "additionalProperties": false,
                                              "description": "Specifies a condition included in the test case.",
                                              "type": "object",
                                              "required": [
                                                "conditionExpression"
                                              ],
                                              "properties": {
                                                "conditionExpression": {
                                                  "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                                  "minLength": 1,
                                                  "type": "string"
                                                },
                                                "conditionExpressionResolved": {
                                                  "description": "Condition statement with resolved variables, if applicable.",
                                                  "minLength": 1,
                                                  "readOnly": true,
                                                  "type": "string"
                                                }
                                              },
                                              "x-akamai": {
                                                "file-path": "schemas/condition.yaml"
                                              }
                                            },
                                            "createdBy": {
                                              "description": "Username who created the item.",
                                              "minLength": 1,
                                              "readOnly": true,
                                              "type": "string",
                                              "x-akamai": {
                                                "file-path": "schemas/createdBy.yaml"
                                              }
                                            },
                                            "createdDate": {
                                              "description": "ISO 8601 timestamp indicating when the item was created.",
                                              "format": "date-time",
                                              "readOnly": true,
                                              "type": "string",
                                              "x-akamai": {
                                                "file-path": "schemas/createdDate.yaml"
                                              }
                                            },
                                            "deletedBy": {
                                              "description": "Username who last deleted the item.",
                                              "minLength": 1,
                                              "type": "string",
                                              "x-akamai": {
                                                "file-path": "schemas/deletedBy.yaml"
                                              }
                                            },
                                            "deletedDate": {
                                              "description": "ISO 8601 timestamp indicating when the item was deleted.",
                                              "format": "date-time",
                                              "type": "string",
                                              "x-akamai": {
                                                "file-path": "schemas/deletedDate.yaml"
                                              }
                                            },
                                            "derivedTestCases": {
                                              "description": "Derived test cases in the response when there is reference to variable group(s).",
                                              "minItems": 0,
                                              "readOnly": true,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "description": "Specifies the functional derived test case when a variable group reference is present and included objects: condition, test request, and client profile.",
                                                "type": "object",
                                                "required": [
                                                  "testRequest",
                                                  "condition",
                                                  "clientProfile",
                                                  "order"
                                                ],
                                                "properties": {
                                                  "clientProfile": {
                                                    "additionalProperties": false,
                                                    "description": "Specifies a client profile included in the test case.",
                                                    "type": "object",
                                                    "required": [
                                                      "ipVersion",
                                                      "client"
                                                    ],
                                                    "properties": {
                                                      "client": {
                                                        "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                                        "type": "string",
                                                        "enum": [
                                                          "CHROME",
                                                          "CURL"
                                                        ]
                                                      },
                                                      "geoLocation": {
                                                        "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                                        "type": "string",
                                                        "enum": [
                                                          "US"
                                                        ]
                                                      },
                                                      "ipVersion": {
                                                        "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                                        "type": "string",
                                                        "enum": [
                                                          "IPV4",
                                                          "IPV6"
                                                        ]
                                                      }
                                                    },
                                                    "x-akamai": {
                                                      "file-path": "schemas/client-profile.yaml"
                                                    }
                                                  },
                                                  "condition": {
                                                    "additionalProperties": false,
                                                    "description": "Specifies a condition included in the test case.",
                                                    "type": "object",
                                                    "required": [
                                                      "conditionExpression"
                                                    ],
                                                    "properties": {
                                                      "conditionExpression": {
                                                        "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                                        "minLength": 1,
                                                        "type": "string"
                                                      },
                                                      "conditionExpressionResolved": {
                                                        "description": "Condition statement with resolved variables, if applicable.",
                                                        "minLength": 1,
                                                        "readOnly": true,
                                                        "type": "string"
                                                      }
                                                    },
                                                    "x-akamai": {
                                                      "file-path": "schemas/condition.yaml"
                                                    }
                                                  },
                                                  "order": {
                                                    "description": "Order of the derived test case. In stateful test suites, a test run's test cases execute in this order.  ",
                                                    "minimum": 0,
                                                    "readOnly": true,
                                                    "type": "integer"
                                                  },
                                                  "setVariables": {
                                                    "description": "Contains derived test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                                    "minItems": 0,
                                                    "type": "array",
                                                    "items": {
                                                      "additionalProperties": false,
                                                      "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                                      "type": "object",
                                                      "required": [
                                                        "variableId",
                                                        "variableName",
                                                        "variableValue"
                                                      ],
                                                      "properties": {
                                                        "variableId": {
                                                          "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                                          "minimum": 1,
                                                          "readOnly": true,
                                                          "type": "integer"
                                                        },
                                                        "variableName": {
                                                          "description": "Name of the variable.",
                                                          "maxLength": 100,
                                                          "minLength": 1,
                                                          "type": "string"
                                                        },
                                                        "variableValue": {
                                                          "description": "Value of the variable to resolve at runtime.",
                                                          "maxLength": 4000,
                                                          "minLength": 1,
                                                          "type": "string"
                                                        }
                                                      },
                                                      "x-akamai": {
                                                        "file-path": "schemas/set-variable.yaml"
                                                      }
                                                    }
                                                  },
                                                  "testRequest": {
                                                    "additionalProperties": false,
                                                    "description": "Specifies a test request included in the test case.",
                                                    "type": "object",
                                                    "required": [
                                                      "testRequestUrl",
                                                      "requestMethod"
                                                    ],
                                                    "properties": {
                                                      "encodeRequestBody": {
                                                        "default": true,
                                                        "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                                        "nullable": true,
                                                        "type": "boolean"
                                                      },
                                                      "requestBody": {
                                                        "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                                        "maxLength": 4000,
                                                        "minLength": 1,
                                                        "nullable": true,
                                                        "type": "string"
                                                      },
                                                      "requestBodyResolved": {
                                                        "description": "Value of test request body after resolving all variables.",
                                                        "minLength": 1,
                                                        "nullable": true,
                                                        "readOnly": true,
                                                        "type": "string"
                                                      },
                                                      "requestHeaders": {
                                                        "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                                        "minItems": 0,
                                                        "type": "array",
                                                        "items": {
                                                          "additionalProperties": false,
                                                          "type": "object",
                                                          "required": [
                                                            "headerName",
                                                            "headerValue",
                                                            "headerAction"
                                                          ],
                                                          "properties": {
                                                            "headerAction": {
                                                              "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                                              "type": "string",
                                                              "enum": [
                                                                "ADD",
                                                                "MODIFY",
                                                                "FILTER"
                                                              ]
                                                            },
                                                            "headerName": {
                                                              "description": "Name of the request header.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                            },
                                                            "headerNameResolved": {
                                                              "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                                              "minLength": 1,
                                                              "readOnly": true,
                                                              "type": "string"
                                                            },
                                                            "headerValue": {
                                                              "description": "Value of the request header.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                            },
                                                            "headerValueResolved": {
                                                              "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                                              "minLength": 1,
                                                              "readOnly": true,
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "requestMethod": {
                                                        "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                                        "type": "string",
                                                        "enum": [
                                                          "HEAD",
                                                          "GET",
                                                          "POST"
                                                        ]
                                                      },
                                                      "tags": {
                                                        "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                                        "minItems": 0,
                                                        "type": "array",
                                                        "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                        }
                                                      },
                                                      "testRequestUrl": {
                                                        "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                                        "maxLength": 2048,
                                                        "minLength": 1,
                                                        "type": "string"
                                                      },
                                                      "testRequestUrlResolved": {
                                                        "description": "Value of test request URL after resolving all variables.",
                                                        "minLength": 1,
                                                        "nullable": true,
                                                        "readOnly": true,
                                                        "type": "string"
                                                      }
                                                    },
                                                    "x-akamai": {
                                                      "file-path": "schemas/test-request.yaml"
                                                    }
                                                  }
                                                },
                                                "x-akamai": {
                                                  "file-path": "schemas/functional-derived-test-case.yaml"
                                                }
                                              }
                                            },
                                            "modifiedBy": {
                                              "description": "Username who last modified the item.",
                                              "minLength": 1,
                                              "readOnly": true,
                                              "type": "string",
                                              "x-akamai": {
                                                "file-path": "schemas/modifiedBy.yaml"
                                              }
                                            },
                                            "modifiedDate": {
                                              "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                              "format": "date-time",
                                              "readOnly": true,
                                              "type": "string",
                                              "x-akamai": {
                                                "file-path": "schemas/modifiedDate.yaml"
                                              }
                                            },
                                            "order": {
                                              "description": "Order of the test case. In stateful test suites, a test run's test cases execute in this order.",
                                              "minimum": 1,
                                              "readOnly": true,
                                              "type": "integer"
                                            },
                                            "setVariables": {
                                              "description": "Contains test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                              "minItems": 0,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                                "type": "object",
                                                "required": [
                                                  "variableId",
                                                  "variableName",
                                                  "variableValue"
                                                ],
                                                "properties": {
                                                  "variableId": {
                                                    "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                                    "minimum": 1,
                                                    "readOnly": true,
                                                    "type": "integer"
                                                  },
                                                  "variableName": {
                                                    "description": "Name of the variable.",
                                                    "maxLength": 100,
                                                    "minLength": 1,
                                                    "type": "string"
                                                  },
                                                  "variableValue": {
                                                    "description": "Value of the variable to resolve at runtime.",
                                                    "maxLength": 4000,
                                                    "minLength": 1,
                                                    "type": "string"
                                                  }
                                                },
                                                "x-akamai": {
                                                  "file-path": "schemas/set-variable.yaml"
                                                }
                                              }
                                            },
                                            "testCaseId": {
                                              "description": "Identifies a functional test case. To get this value, run the [List test cases](https://techdocs.akamai.com/test-ctr/reference/get-test-cases) operation.",
                                              "minimum": 1,
                                              "readOnly": true,
                                              "type": "integer"
                                            },
                                            "testRequest": {
                                              "additionalProperties": false,
                                              "description": "Specifies a test request included in the test case.",
                                              "type": "object",
                                              "required": [
                                                "testRequestUrl",
                                                "requestMethod"
                                              ],
                                              "properties": {
                                                "encodeRequestBody": {
                                                  "default": true,
                                                  "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                                  "nullable": true,
                                                  "type": "boolean"
                                                },
                                                "requestBody": {
                                                  "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                                  "maxLength": 4000,
                                                  "minLength": 1,
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "requestBodyResolved": {
                                                  "description": "Value of test request body after resolving all variables.",
                                                  "minLength": 1,
                                                  "nullable": true,
                                                  "readOnly": true,
                                                  "type": "string"
                                                },
                                                "requestHeaders": {
                                                  "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                                  "minItems": 0,
                                                  "type": "array",
                                                  "items": {
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                      "headerName",
                                                      "headerValue",
                                                      "headerAction"
                                                    ],
                                                    "properties": {
                                                      "headerAction": {
                                                        "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                                        "type": "string",
                                                        "enum": [
                                                          "ADD",
                                                          "MODIFY",
                                                          "FILTER"
                                                        ]
                                                      },
                                                      "headerName": {
                                                        "description": "Name of the request header.",
                                                        "minLength": 1,
                                                        "type": "string"
                                                      },
                                                      "headerNameResolved": {
                                                        "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                                        "minLength": 1,
                                                        "readOnly": true,
                                                        "type": "string"
                                                      },
                                                      "headerValue": {
                                                        "description": "Value of the request header.",
                                                        "minLength": 1,
                                                        "type": "string"
                                                      },
                                                      "headerValueResolved": {
                                                        "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                                        "minLength": 1,
                                                        "readOnly": true,
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "requestMethod": {
                                                  "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                                  "type": "string",
                                                  "enum": [
                                                    "HEAD",
                                                    "GET",
                                                    "POST"
                                                  ]
                                                },
                                                "tags": {
                                                  "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                                  "minItems": 0,
                                                  "type": "array",
                                                  "items": {
                                                    "minLength": 1,
                                                    "type": "string"
                                                  }
                                                },
                                                "testRequestUrl": {
                                                  "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                                  "maxLength": 2048,
                                                  "minLength": 1,
                                                  "type": "string"
                                                },
                                                "testRequestUrlResolved": {
                                                  "description": "Value of test request URL after resolving all variables.",
                                                  "minLength": 1,
                                                  "nullable": true,
                                                  "readOnly": true,
                                                  "type": "string"
                                                }
                                              },
                                              "x-akamai": {
                                                "file-path": "schemas/test-request.yaml"
                                              }
                                            },
                                            "warnings": {
                                              "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807). Any warnings related to variable groups would be captured here.",
                                              "minItems": 0,
                                              "readOnly": true,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "description": "Specifies the error that occurred.",
                                                "type": "object",
                                                "required": [
                                                  "type",
                                                  "title"
                                                ],
                                                "properties": {
                                                  "existingEntities": {
                                                    "description": "Lists objects included within the functional test case.",
                                                    "minItems": 0,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object"
                                                    }
                                                  },
                                                  "requestField": {
                                                    "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                                                    "minLength": 1,
                                                    "type": "string"
                                                  },
                                                  "requestObjects": {
                                                    "description": "Lists invalid request objects.",
                                                    "minItems": 0,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object"
                                                    }
                                                  },
                                                  "requestValues": {
                                                    "description": "Lists values corresponding to the `requestField`.",
                                                    "minItems": 0,
                                                    "type": "array",
                                                    "items": {
                                                      "anyOf": [
                                                        {
                                                          "title": "String",
                                                          "type": "string"
                                                        },
                                                        {
                                                          "title": "Integer",
                                                          "type": "integer"
                                                        },
                                                        {
                                                          "title": "Object",
                                                          "type": "object"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "title": {
                                                    "description": "Title of the error.",
                                                    "minLength": 1,
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "description": "Type of error.",
                                                    "minLength": 1,
                                                    "type": "string"
                                                  }
                                                },
                                                "x-akamai": {
                                                  "file-path": "schemas/sub-problem.yaml"
                                                }
                                              }
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/functional-test-case.yaml"
                                          }
                                        },
                                        "testCaseExecutionId": {
                                          "description": "Identifies the functional test case execution.",
                                          "minimum": 1,
                                          "type": "integer"
                                        },
                                        "testCaseId": {
                                          "description": "Identifies the functional test case.",
                                          "minimum": 1,
                                          "type": "integer"
                                        }
                                      }
                                    },
                                    "x-akamai": {
                                      "file-path": "schemas/functional-test-case-executions.yaml"
                                    }
                                  },
                                  "testSuiteContext": {
                                    "additionalProperties": false,
                                    "description": "Specifies a test suite.",
                                    "type": "object",
                                    "required": [
                                      "testSuiteId",
                                      "testSuiteName",
                                      "isLocked",
                                      "isStateful",
                                      "executableTestCaseCount"
                                    ],
                                    "properties": {
                                      "configs": {
                                        "additionalProperties": false,
                                        "default": null,
                                        "description": "Specifies the Property Manager property version associated with the test suite. It's `null` for test suites with no properties associated. ",
                                        "nullable": true,
                                        "type": "object",
                                        "required": [
                                          "propertyManager"
                                        ],
                                        "properties": {
                                          "propertyManager": {
                                            "additionalProperties": false,
                                            "description": "Specifies the property version associated with the test suite.",
                                            "type": "object",
                                            "required": [
                                              "propertyId",
                                              "propertyName",
                                              "propertyVersion"
                                            ],
                                            "properties": {
                                              "propertyId": {
                                                "description": "Identifies a Property Manager property.",
                                                "minimum": 1,
                                                "type": "integer"
                                              },
                                              "propertyName": {
                                                "description": "Name of the property.",
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "propertyVersion": {
                                                "description": "Version of the property.",
                                                "minimum": 1,
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        "x-akamai": {
                                          "file-path": "schemas/configs.yaml"
                                        }
                                      },
                                      "createdBy": {
                                        "description": "Username who created the item.",
                                        "minLength": 1,
                                        "readOnly": true,
                                        "type": "string",
                                        "x-akamai": {
                                          "file-path": "schemas/createdBy.yaml"
                                        }
                                      },
                                      "createdDate": {
                                        "description": "ISO 8601 timestamp indicating when the item was created.",
                                        "format": "date-time",
                                        "readOnly": true,
                                        "type": "string",
                                        "x-akamai": {
                                          "file-path": "schemas/createdDate.yaml"
                                        }
                                      },
                                      "deletedBy": {
                                        "description": "Username who last deleted the item.",
                                        "minLength": 1,
                                        "type": "string",
                                        "x-akamai": {
                                          "file-path": "schemas/deletedBy.yaml"
                                        }
                                      },
                                      "deletedDate": {
                                        "description": "ISO 8601 timestamp indicating when the item was deleted.",
                                        "format": "date-time",
                                        "type": "string",
                                        "x-akamai": {
                                          "file-path": "schemas/deletedDate.yaml"
                                        }
                                      },
                                      "executableTestCaseCount": {
                                        "description": "Number of included test cases executable in a test run. To learn more, see [Variable groups](https://techdocs.akamai.com/test-ctr/reference/variables-overview#variable-groups).",
                                        "minimum": 0,
                                        "readOnly": true,
                                        "type": "integer"
                                      },
                                      "isLocked": {
                                        "description": "Locks the test suite so that only designated owners or editors can modify it.",
                                        "type": "boolean"
                                      },
                                      "isStateful": {
                                        "description": "Sets the test suite to be run statefully, retaining cookies and session data for subsequent test cases within the test suite.",
                                        "type": "boolean"
                                      },
                                      "modifiedBy": {
                                        "description": "Username who last modified the item.",
                                        "minLength": 1,
                                        "readOnly": true,
                                        "type": "string",
                                        "x-akamai": {
                                          "file-path": "schemas/modifiedBy.yaml"
                                        }
                                      },
                                      "modifiedDate": {
                                        "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                        "format": "date-time",
                                        "readOnly": true,
                                        "type": "string",
                                        "x-akamai": {
                                          "file-path": "schemas/modifiedDate.yaml"
                                        }
                                      },
                                      "testSuiteDescription": {
                                        "default": null,
                                        "description": "Description of the test suite. It's `null` for test suites without descriptions. ",
                                        "maxLength": 4000,
                                        "minLength": 1,
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "testSuiteId": {
                                        "description": "Identifies a test suite.",
                                        "minimum": 1,
                                        "readOnly": true,
                                        "type": "integer"
                                      },
                                      "testSuiteName": {
                                        "description": "Unique name for each test suite.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "variables": {
                                        "description": "Variables used in the test run.",
                                        "minItems": 0,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variables appear with `{{variableName}}` syntax.",
                                          "title": "Single variable",
                                          "type": "object",
                                          "required": [
                                            "variableId",
                                            "variableName",
                                            "variableValue",
                                            "isDynamicallyUsed"
                                          ],
                                          "properties": {
                                            "createdBy": {
                                              "description": "Username who created the item.",
                                              "minLength": 1,
                                              "readOnly": true,
                                              "type": "string",
                                              "x-akamai": {
                                                "file-path": "schemas/createdBy.yaml"
                                              }
                                            },
                                            "createdDate": {
                                              "description": "ISO 8601 timestamp indicating when the item was created.",
                                              "format": "date-time",
                                              "readOnly": true,
                                              "type": "string",
                                              "x-akamai": {
                                                "file-path": "schemas/createdDate.yaml"
                                              }
                                            },
                                            "isDynamicallyUsed": {
                                              "description": "Whether the variable in `setVariables` is assigned dynamically.",
                                              "type": "boolean"
                                            },
                                            "modifiedBy": {
                                              "description": "Username who last modified the item.",
                                              "minLength": 1,
                                              "readOnly": true,
                                              "type": "string",
                                              "x-akamai": {
                                                "file-path": "schemas/modifiedBy.yaml"
                                              }
                                            },
                                            "modifiedDate": {
                                              "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                              "format": "date-time",
                                              "readOnly": true,
                                              "type": "string",
                                              "x-akamai": {
                                                "file-path": "schemas/modifiedDate.yaml"
                                              }
                                            },
                                            "variableId": {
                                              "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                              "minimum": 1,
                                              "readOnly": true,
                                              "type": "integer"
                                            },
                                            "variableName": {
                                              "description": "Name of the variable.",
                                              "maxLength": 100,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "variableValue": {
                                              "description": "Value of the variable.",
                                              "maxLength": 4000,
                                              "minLength": 1,
                                              "type": "string"
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/variable.yaml"
                                          }
                                        }
                                      }
                                    },
                                    "x-akamai": {
                                      "file-path": "schemas/test-suite-context.yaml"
                                    }
                                  },
                                  "testSuiteExecutionId": {
                                    "description": "Identifies a test suite execution.",
                                    "minimum": 1,
                                    "type": "integer"
                                  },
                                  "testSuiteId": {
                                    "description": "Identifies a test suite that executed.",
                                    "minimum": 1,
                                    "type": "integer"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/test-suite-execution.yaml"
                                }
                              }
                            }
                          }
                        },
                        "status": {
                          "description": "Functional objects' execution status. Possible values are: `IN_PROGRESS`, `COMPLETED`, `FAILED`, or `COMPLETED_WITH_UNEXPECTED_RESULTS`.",
                          "type": "string",
                          "enum": [
                            "IN_PROGRESS",
                            "COMPLETED",
                            "FAILED",
                            "COMPLETED_WITH_UNEXPECTED_RESULTS"
                          ]
                        },
                        "testCaseExecution": {
                          "additionalProperties": false,
                          "description": "Specifies functional test cases included in the test suite. If you provide `testCaseExecutions`, the API considers only those test cases under the current test run. If you omit `testCaseExecutions`, then all test cases execute within this test suite.",
                          "type": "object",
                          "required": [
                            "testRequest",
                            "clientProfile",
                            "condition",
                            "status",
                            "testCaseExecutionId"
                          ],
                          "properties": {
                            "clientProfile": {
                              "additionalProperties": false,
                              "description": "Specifies a client profile included in the test case.",
                              "type": "object",
                              "required": [
                                "ipVersion",
                                "client"
                              ],
                              "properties": {
                                "client": {
                                  "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                  "type": "string",
                                  "enum": [
                                    "CHROME",
                                    "CURL"
                                  ]
                                },
                                "clientVersion": {
                                  "description": "Client version of `CHROME` or `CURL` used to execute the test run.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "geoLocation": {
                                  "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                  "type": "string",
                                  "enum": [
                                    "US"
                                  ]
                                },
                                "ipVersion": {
                                  "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                  "type": "string",
                                  "enum": [
                                    "IPV4",
                                    "IPV6"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/test-run-get-client-profile.yaml"
                              }
                            },
                            "condition": {
                              "additionalProperties": false,
                              "description": "Specifies a condition included in the test case.",
                              "type": "object",
                              "required": [
                                "conditionExpression"
                              ],
                              "properties": {
                                "conditionExpression": {
                                  "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "conditionExpressionResolved": {
                                  "description": "Condition statement with resolved variables, if applicable.",
                                  "minLength": 1,
                                  "readOnly": true,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/condition.yaml"
                              }
                            },
                            "conditionEvaluationResult": {
                              "additionalProperties": false,
                              "description": "Specifies evaluation of conditions. It appears only for executions of functional test cases with the `COMPLETED` status.",
                              "type": "object",
                              "required": [
                                "result",
                                "actualConditionData"
                              ],
                              "properties": {
                                "actualConditionData": {
                                  "description": "Lists condition data collected when the functional test case URL executed.",
                                  "minItems": 1,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "value"
                                    ],
                                    "properties": {
                                      "name": {
                                        "description": "Name of the condition data.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "Value of the condition data.",
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "result": {
                                  "description": "Result after evaluating the conditions. Possible values are `PASSED` for conditions detected during the test run, `FAILED` for those undetected, `ERROR_OCCURRED` if the API couldn't execute the test run due to a system error, or `INCONCLUSIVE` for the conditions not able to evaluate.",
                                  "type": "string",
                                  "enum": [
                                    "PASSED",
                                    "FAILED",
                                    "ERROR_OCCURRED",
                                    "INCONCLUSIVE"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/condition-evaluation-result.yaml"
                              }
                            },
                            "errors": {
                              "description": "Lists details about an error.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "type",
                                  "title"
                                ],
                                "properties": {
                                  "requestField": {
                                    "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "requestValues": {
                                    "description": "Lists values corresponding to the `requestField`.",
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "title": "String",
                                          "type": "string"
                                        },
                                        {
                                          "title": "Integer",
                                          "type": "integer"
                                        },
                                        {
                                          "title": "Object",
                                          "type": "object"
                                        }
                                      ]
                                    }
                                  },
                                  "title": {
                                    "description": "Summary of the error.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Dot-notation explanation of the type of occurred error.",
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/error.yaml"
                              }
                            },
                            "status": {
                              "description": "Test case objects' execution status. Possible values are: `IN_PROGRESS`, `COMPLETED`, `SKIPPED`, or `FAILED`.",
                              "type": "string",
                              "enum": [
                                "IN_PROGRESS",
                                "COMPLETED",
                                "FAILED",
                                "SKIPPED"
                              ]
                            },
                            "testCaseExecutionId": {
                              "description": "Identifies the functional test case execution.",
                              "minimum": 1,
                              "readOnly": true,
                              "type": "integer"
                            },
                            "testRequest": {
                              "additionalProperties": false,
                              "description": "Specifies a test request included in the test case.",
                              "type": "object",
                              "required": [
                                "testRequestUrl",
                                "requestMethod"
                              ],
                              "properties": {
                                "encodeRequestBody": {
                                  "default": true,
                                  "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                  "nullable": true,
                                  "type": "boolean"
                                },
                                "requestBody": {
                                  "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                  "maxLength": 4000,
                                  "minLength": 1,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "requestBodyResolved": {
                                  "description": "Value of test request body after resolving all variables.",
                                  "minLength": 1,
                                  "nullable": true,
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "requestHeaders": {
                                  "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                      "headerName",
                                      "headerValue",
                                      "headerAction"
                                    ],
                                    "properties": {
                                      "headerAction": {
                                        "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                        "type": "string",
                                        "enum": [
                                          "ADD",
                                          "MODIFY",
                                          "FILTER"
                                        ]
                                      },
                                      "headerName": {
                                        "description": "Name of the request header.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "headerNameResolved": {
                                        "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                        "minLength": 1,
                                        "readOnly": true,
                                        "type": "string"
                                      },
                                      "headerValue": {
                                        "description": "Value of the request header.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "headerValueResolved": {
                                        "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                        "minLength": 1,
                                        "readOnly": true,
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "requestMethod": {
                                  "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                  "type": "string",
                                  "enum": [
                                    "HEAD",
                                    "GET",
                                    "POST"
                                  ]
                                },
                                "tags": {
                                  "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                },
                                "testRequestUrl": {
                                  "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                  "maxLength": 2048,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "testRequestUrlResolved": {
                                  "description": "Value of test request URL after resolving all variables.",
                                  "minLength": 1,
                                  "nullable": true,
                                  "readOnly": true,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/test-request.yaml"
                              }
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/functional-test-case-execution-simple.yaml"
                          }
                        },
                        "testSuiteExecutions": {
                          "description": "Lists test suites executed during the test run.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "Specifies the test suite executed during the test run.",
                            "type": "object",
                            "required": [
                              "status",
                              "testSuiteId",
                              "testCaseExecutions",
                              "testSuiteExecutionId"
                            ],
                            "properties": {
                              "completedDate": {
                                "description": "ISO 8601 timestamp indicating when the test run completed.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "status": {
                                "description": "Test suite's execution status. Possible values are: `IN_PROGRESS`, `COMPLETED`, `SKIPPED`, or `FAILED`.",
                                "type": "string",
                                "enum": [
                                  "IN_PROGRESS",
                                  "COMPLETED",
                                  "FAILED",
                                  "SKIPPED"
                                ]
                              },
                              "testCaseExecutions": {
                                "description": "Lists functional test cases executed during a test run.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "required": [
                                    "status",
                                    "testCaseId",
                                    "testCaseExecutionId"
                                  ],
                                  "properties": {
                                    "completedDate": {
                                      "description": "ISO 8601 timestamp indicating when the test run completed.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "conditionEvaluationResult": {
                                      "additionalProperties": false,
                                      "description": "Specifies evaluation of conditions. It appears only for executions of functional test cases with the `COMPLETED` status.",
                                      "type": "object",
                                      "required": [
                                        "result",
                                        "actualConditionData"
                                      ],
                                      "properties": {
                                        "actualConditionData": {
                                          "description": "Lists condition data collected when the functional test case URL executed.",
                                          "minItems": 1,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "Name of the condition data.",
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "Value of the condition data.",
                                                "minLength": 1,
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "result": {
                                          "description": "Result after evaluating the conditions. Possible values are `PASSED` for conditions detected during the test run, `FAILED` for those undetected, `ERROR_OCCURRED` if the API couldn't execute the test run due to a system error, or `INCONCLUSIVE` for the conditions not able to evaluate.",
                                          "type": "string",
                                          "enum": [
                                            "PASSED",
                                            "FAILED",
                                            "ERROR_OCCURRED",
                                            "INCONCLUSIVE"
                                          ]
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/condition-evaluation-result.yaml"
                                      }
                                    },
                                    "derivedTestCaseExecutions": {
                                      "description": "Lists functional derived test cases executed during a test run.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "type": "object",
                                        "required": [
                                          "status",
                                          "testCaseId"
                                        ],
                                        "properties": {
                                          "completedDate": {
                                            "description": "ISO 8601 timestamp indicating when the test run completed.",
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "conditionEvaluationResult": {
                                            "additionalProperties": false,
                                            "description": "Specifies evaluation of conditions. It appears only for executions of functional test cases with the `COMPLETED` status.",
                                            "type": "object",
                                            "required": [
                                              "result",
                                              "actualConditionData"
                                            ],
                                            "properties": {
                                              "actualConditionData": {
                                                "description": "Lists condition data collected when the functional test case URL executed.",
                                                "minItems": 1,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "required": [
                                                    "name",
                                                    "value"
                                                  ],
                                                  "properties": {
                                                    "name": {
                                                      "description": "Name of the condition data.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "description": "Value of the condition data.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              },
                                              "result": {
                                                "description": "Result after evaluating the conditions. Possible values are `PASSED` for conditions detected during the test run, `FAILED` for those undetected, `ERROR_OCCURRED` if the API couldn't execute the test run due to a system error, or `INCONCLUSIVE` for the conditions not able to evaluate.",
                                                "type": "string",
                                                "enum": [
                                                  "PASSED",
                                                  "FAILED",
                                                  "ERROR_OCCURRED",
                                                  "INCONCLUSIVE"
                                                ]
                                              }
                                            },
                                            "x-akamai": {
                                              "file-path": "schemas/condition-evaluation-result.yaml"
                                            }
                                          },
                                          "errors": {
                                            "description": "Lists details about an error.",
                                            "minItems": 0,
                                            "type": "array",
                                            "items": {
                                              "additionalProperties": false,
                                              "type": "object",
                                              "required": [
                                                "type",
                                                "title"
                                              ],
                                              "properties": {
                                                "requestField": {
                                                  "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                                                  "minLength": 1,
                                                  "type": "string"
                                                },
                                                "requestValues": {
                                                  "description": "Lists values corresponding to the `requestField`.",
                                                  "minItems": 0,
                                                  "type": "array",
                                                  "items": {
                                                    "anyOf": [
                                                      {
                                                        "title": "String",
                                                        "type": "string"
                                                      },
                                                      {
                                                        "title": "Integer",
                                                        "type": "integer"
                                                      },
                                                      {
                                                        "title": "Object",
                                                        "type": "object"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "title": {
                                                  "description": "Summary of the error.",
                                                  "minLength": 1,
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "description": "Dot-notation explanation of the type of occurred error.",
                                                  "minLength": 1,
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "x-akamai": {
                                              "file-path": "schemas/error.yaml"
                                            }
                                          },
                                          "resolvedSetVariables": {
                                            "description": "Contains information about variables that resolved as part of test case execution. It appears only for executions of functional test cases with the `COMPLETED` status.",
                                            "type": "object"
                                          },
                                          "status": {
                                            "description": "Test case objects' execution status. Possible values are: `IN_PROGRESS`, `COMPLETED`, `SKIPPED`, or `FAILED`.",
                                            "type": "string",
                                            "enum": [
                                              "IN_PROGRESS",
                                              "COMPLETED",
                                              "FAILED",
                                              "SKIPPED"
                                            ]
                                          },
                                          "testCaseContext": {
                                            "additionalProperties": false,
                                            "description": "Specifies the functional test case and included objects: condition, test request, and client profile.",
                                            "type": "object",
                                            "required": [
                                              "testCaseId",
                                              "order",
                                              "testRequest",
                                              "condition",
                                              "clientProfile"
                                            ],
                                            "properties": {
                                              "clientProfile": {
                                                "additionalProperties": false,
                                                "description": "Specifies a client profile included in the test case.",
                                                "type": "object",
                                                "required": [
                                                  "ipVersion",
                                                  "client"
                                                ],
                                                "properties": {
                                                  "client": {
                                                    "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                                    "type": "string",
                                                    "enum": [
                                                      "CHROME",
                                                      "CURL"
                                                    ]
                                                  },
                                                  "geoLocation": {
                                                    "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                                    "type": "string",
                                                    "enum": [
                                                      "US"
                                                    ]
                                                  },
                                                  "ipVersion": {
                                                    "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                                    "type": "string",
                                                    "enum": [
                                                      "IPV4",
                                                      "IPV6"
                                                    ]
                                                  }
                                                },
                                                "x-akamai": {
                                                  "file-path": "schemas/client-profile.yaml"
                                                }
                                              },
                                              "condition": {
                                                "additionalProperties": false,
                                                "description": "Specifies a condition included in the test case.",
                                                "type": "object",
                                                "required": [
                                                  "conditionExpression"
                                                ],
                                                "properties": {
                                                  "conditionExpression": {
                                                    "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                                    "minLength": 1,
                                                    "type": "string"
                                                  },
                                                  "conditionExpressionResolved": {
                                                    "description": "Condition statement with resolved variables, if applicable.",
                                                    "minLength": 1,
                                                    "readOnly": true,
                                                    "type": "string"
                                                  }
                                                },
                                                "x-akamai": {
                                                  "file-path": "schemas/condition.yaml"
                                                }
                                              },
                                              "createdBy": {
                                                "description": "Username who created the item.",
                                                "minLength": 1,
                                                "readOnly": true,
                                                "type": "string",
                                                "x-akamai": {
                                                  "file-path": "schemas/createdBy.yaml"
                                                }
                                              },
                                              "createdDate": {
                                                "description": "ISO 8601 timestamp indicating when the item was created.",
                                                "format": "date-time",
                                                "readOnly": true,
                                                "type": "string",
                                                "x-akamai": {
                                                  "file-path": "schemas/createdDate.yaml"
                                                }
                                              },
                                              "deletedBy": {
                                                "description": "Username who last deleted the item.",
                                                "minLength": 1,
                                                "type": "string",
                                                "x-akamai": {
                                                  "file-path": "schemas/deletedBy.yaml"
                                                }
                                              },
                                              "deletedDate": {
                                                "description": "ISO 8601 timestamp indicating when the item was deleted.",
                                                "format": "date-time",
                                                "type": "string",
                                                "x-akamai": {
                                                  "file-path": "schemas/deletedDate.yaml"
                                                }
                                              },
                                              "derivedTestCases": {
                                                "description": "Derived test cases in the response when there is reference to variable group(s).",
                                                "minItems": 0,
                                                "readOnly": true,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "description": "Specifies the functional derived test case when a variable group reference is present and included objects: condition, test request, and client profile.",
                                                  "type": "object",
                                                  "required": [
                                                    "testRequest",
                                                    "condition",
                                                    "clientProfile",
                                                    "order"
                                                  ],
                                                  "properties": {
                                                    "clientProfile": {
                                                      "additionalProperties": false,
                                                      "description": "Specifies a client profile included in the test case.",
                                                      "type": "object",
                                                      "required": [
                                                        "ipVersion",
                                                        "client"
                                                      ],
                                                      "properties": {
                                                        "client": {
                                                          "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                                          "type": "string",
                                                          "enum": [
                                                            "CHROME",
                                                            "CURL"
                                                          ]
                                                        },
                                                        "geoLocation": {
                                                          "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                                          "type": "string",
                                                          "enum": [
                                                            "US"
                                                          ]
                                                        },
                                                        "ipVersion": {
                                                          "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                                          "type": "string",
                                                          "enum": [
                                                            "IPV4",
                                                            "IPV6"
                                                          ]
                                                        }
                                                      },
                                                      "x-akamai": {
                                                        "file-path": "schemas/client-profile.yaml"
                                                      }
                                                    },
                                                    "condition": {
                                                      "additionalProperties": false,
                                                      "description": "Specifies a condition included in the test case.",
                                                      "type": "object",
                                                      "required": [
                                                        "conditionExpression"
                                                      ],
                                                      "properties": {
                                                        "conditionExpression": {
                                                          "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                                          "minLength": 1,
                                                          "type": "string"
                                                        },
                                                        "conditionExpressionResolved": {
                                                          "description": "Condition statement with resolved variables, if applicable.",
                                                          "minLength": 1,
                                                          "readOnly": true,
                                                          "type": "string"
                                                        }
                                                      },
                                                      "x-akamai": {
                                                        "file-path": "schemas/condition.yaml"
                                                      }
                                                    },
                                                    "order": {
                                                      "description": "Order of the derived test case. In stateful test suites, a test run's test cases execute in this order.  ",
                                                      "minimum": 0,
                                                      "readOnly": true,
                                                      "type": "integer"
                                                    },
                                                    "setVariables": {
                                                      "description": "Contains derived test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                                      "minItems": 0,
                                                      "type": "array",
                                                      "items": {
                                                        "additionalProperties": false,
                                                        "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                                        "type": "object",
                                                        "required": [
                                                          "variableId",
                                                          "variableName",
                                                          "variableValue"
                                                        ],
                                                        "properties": {
                                                          "variableId": {
                                                            "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                                            "minimum": 1,
                                                            "readOnly": true,
                                                            "type": "integer"
                                                          },
                                                          "variableName": {
                                                            "description": "Name of the variable.",
                                                            "maxLength": 100,
                                                            "minLength": 1,
                                                            "type": "string"
                                                          },
                                                          "variableValue": {
                                                            "description": "Value of the variable to resolve at runtime.",
                                                            "maxLength": 4000,
                                                            "minLength": 1,
                                                            "type": "string"
                                                          }
                                                        },
                                                        "x-akamai": {
                                                          "file-path": "schemas/set-variable.yaml"
                                                        }
                                                      }
                                                    },
                                                    "testRequest": {
                                                      "additionalProperties": false,
                                                      "description": "Specifies a test request included in the test case.",
                                                      "type": "object",
                                                      "required": [
                                                        "testRequestUrl",
                                                        "requestMethod"
                                                      ],
                                                      "properties": {
                                                        "encodeRequestBody": {
                                                          "default": true,
                                                          "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                                          "nullable": true,
                                                          "type": "boolean"
                                                        },
                                                        "requestBody": {
                                                          "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                                          "maxLength": 4000,
                                                          "minLength": 1,
                                                          "nullable": true,
                                                          "type": "string"
                                                        },
                                                        "requestBodyResolved": {
                                                          "description": "Value of test request body after resolving all variables.",
                                                          "minLength": 1,
                                                          "nullable": true,
                                                          "readOnly": true,
                                                          "type": "string"
                                                        },
                                                        "requestHeaders": {
                                                          "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                                          "minItems": 0,
                                                          "type": "array",
                                                          "items": {
                                                            "additionalProperties": false,
                                                            "type": "object",
                                                            "required": [
                                                              "headerName",
                                                              "headerValue",
                                                              "headerAction"
                                                            ],
                                                            "properties": {
                                                              "headerAction": {
                                                                "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                                                "type": "string",
                                                                "enum": [
                                                                  "ADD",
                                                                  "MODIFY",
                                                                  "FILTER"
                                                                ]
                                                              },
                                                              "headerName": {
                                                                "description": "Name of the request header.",
                                                                "minLength": 1,
                                                                "type": "string"
                                                              },
                                                              "headerNameResolved": {
                                                                "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                                                "minLength": 1,
                                                                "readOnly": true,
                                                                "type": "string"
                                                              },
                                                              "headerValue": {
                                                                "description": "Value of the request header.",
                                                                "minLength": 1,
                                                                "type": "string"
                                                              },
                                                              "headerValueResolved": {
                                                                "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                                                "minLength": 1,
                                                                "readOnly": true,
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "requestMethod": {
                                                          "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                                          "type": "string",
                                                          "enum": [
                                                            "HEAD",
                                                            "GET",
                                                            "POST"
                                                          ]
                                                        },
                                                        "tags": {
                                                          "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                                          "minItems": 0,
                                                          "type": "array",
                                                          "items": {
                                                            "minLength": 1,
                                                            "type": "string"
                                                          }
                                                        },
                                                        "testRequestUrl": {
                                                          "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                                          "maxLength": 2048,
                                                          "minLength": 1,
                                                          "type": "string"
                                                        },
                                                        "testRequestUrlResolved": {
                                                          "description": "Value of test request URL after resolving all variables.",
                                                          "minLength": 1,
                                                          "nullable": true,
                                                          "readOnly": true,
                                                          "type": "string"
                                                        }
                                                      },
                                                      "x-akamai": {
                                                        "file-path": "schemas/test-request.yaml"
                                                      }
                                                    }
                                                  },
                                                  "x-akamai": {
                                                    "file-path": "schemas/functional-derived-test-case.yaml"
                                                  }
                                                }
                                              },
                                              "modifiedBy": {
                                                "description": "Username who last modified the item.",
                                                "minLength": 1,
                                                "readOnly": true,
                                                "type": "string",
                                                "x-akamai": {
                                                  "file-path": "schemas/modifiedBy.yaml"
                                                }
                                              },
                                              "modifiedDate": {
                                                "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                                "format": "date-time",
                                                "readOnly": true,
                                                "type": "string",
                                                "x-akamai": {
                                                  "file-path": "schemas/modifiedDate.yaml"
                                                }
                                              },
                                              "order": {
                                                "description": "Order of the test case. In stateful test suites, a test run's test cases execute in this order.",
                                                "minimum": 1,
                                                "readOnly": true,
                                                "type": "integer"
                                              },
                                              "setVariables": {
                                                "description": "Contains test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                                "minItems": 0,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                                  "type": "object",
                                                  "required": [
                                                    "variableId",
                                                    "variableName",
                                                    "variableValue"
                                                  ],
                                                  "properties": {
                                                    "variableId": {
                                                      "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                                      "minimum": 1,
                                                      "readOnly": true,
                                                      "type": "integer"
                                                    },
                                                    "variableName": {
                                                      "description": "Name of the variable.",
                                                      "maxLength": 100,
                                                      "minLength": 1,
                                                      "type": "string"
                                                    },
                                                    "variableValue": {
                                                      "description": "Value of the variable to resolve at runtime.",
                                                      "maxLength": 4000,
                                                      "minLength": 1,
                                                      "type": "string"
                                                    }
                                                  },
                                                  "x-akamai": {
                                                    "file-path": "schemas/set-variable.yaml"
                                                  }
                                                }
                                              },
                                              "testCaseId": {
                                                "description": "Identifies a functional test case. To get this value, run the [List test cases](https://techdocs.akamai.com/test-ctr/reference/get-test-cases) operation.",
                                                "minimum": 1,
                                                "readOnly": true,
                                                "type": "integer"
                                              },
                                              "testRequest": {
                                                "additionalProperties": false,
                                                "description": "Specifies a test request included in the test case.",
                                                "type": "object",
                                                "required": [
                                                  "testRequestUrl",
                                                  "requestMethod"
                                                ],
                                                "properties": {
                                                  "encodeRequestBody": {
                                                    "default": true,
                                                    "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                                    "nullable": true,
                                                    "type": "boolean"
                                                  },
                                                  "requestBody": {
                                                    "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                                    "maxLength": 4000,
                                                    "minLength": 1,
                                                    "nullable": true,
                                                    "type": "string"
                                                  },
                                                  "requestBodyResolved": {
                                                    "description": "Value of test request body after resolving all variables.",
                                                    "minLength": 1,
                                                    "nullable": true,
                                                    "readOnly": true,
                                                    "type": "string"
                                                  },
                                                  "requestHeaders": {
                                                    "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                                    "minItems": 0,
                                                    "type": "array",
                                                    "items": {
                                                      "additionalProperties": false,
                                                      "type": "object",
                                                      "required": [
                                                        "headerName",
                                                        "headerValue",
                                                        "headerAction"
                                                      ],
                                                      "properties": {
                                                        "headerAction": {
                                                          "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                                          "type": "string",
                                                          "enum": [
                                                            "ADD",
                                                            "MODIFY",
                                                            "FILTER"
                                                          ]
                                                        },
                                                        "headerName": {
                                                          "description": "Name of the request header.",
                                                          "minLength": 1,
                                                          "type": "string"
                                                        },
                                                        "headerNameResolved": {
                                                          "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                                          "minLength": 1,
                                                          "readOnly": true,
                                                          "type": "string"
                                                        },
                                                        "headerValue": {
                                                          "description": "Value of the request header.",
                                                          "minLength": 1,
                                                          "type": "string"
                                                        },
                                                        "headerValueResolved": {
                                                          "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                                          "minLength": 1,
                                                          "readOnly": true,
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "requestMethod": {
                                                    "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                                    "type": "string",
                                                    "enum": [
                                                      "HEAD",
                                                      "GET",
                                                      "POST"
                                                    ]
                                                  },
                                                  "tags": {
                                                    "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                                    "minItems": 0,
                                                    "type": "array",
                                                    "items": {
                                                      "minLength": 1,
                                                      "type": "string"
                                                    }
                                                  },
                                                  "testRequestUrl": {
                                                    "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                                    "maxLength": 2048,
                                                    "minLength": 1,
                                                    "type": "string"
                                                  },
                                                  "testRequestUrlResolved": {
                                                    "description": "Value of test request URL after resolving all variables.",
                                                    "minLength": 1,
                                                    "nullable": true,
                                                    "readOnly": true,
                                                    "type": "string"
                                                  }
                                                },
                                                "x-akamai": {
                                                  "file-path": "schemas/test-request.yaml"
                                                }
                                              },
                                              "warnings": {
                                                "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807). Any warnings related to variable groups would be captured here.",
                                                "minItems": 0,
                                                "readOnly": true,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "description": "Specifies the error that occurred.",
                                                  "type": "object",
                                                  "required": [
                                                    "type",
                                                    "title"
                                                  ],
                                                  "properties": {
                                                    "existingEntities": {
                                                      "description": "Lists objects included within the functional test case.",
                                                      "minItems": 0,
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object"
                                                      }
                                                    },
                                                    "requestField": {
                                                      "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                    },
                                                    "requestObjects": {
                                                      "description": "Lists invalid request objects.",
                                                      "minItems": 0,
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object"
                                                      }
                                                    },
                                                    "requestValues": {
                                                      "description": "Lists values corresponding to the `requestField`.",
                                                      "minItems": 0,
                                                      "type": "array",
                                                      "items": {
                                                        "anyOf": [
                                                          {
                                                            "title": "String",
                                                            "type": "string"
                                                          },
                                                          {
                                                            "title": "Integer",
                                                            "type": "integer"
                                                          },
                                                          {
                                                            "title": "Object",
                                                            "type": "object"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    "title": {
                                                      "description": "Title of the error.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "description": "Type of error.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                    }
                                                  },
                                                  "x-akamai": {
                                                    "file-path": "schemas/sub-problem.yaml"
                                                  }
                                                }
                                              }
                                            },
                                            "x-akamai": {
                                              "file-path": "schemas/functional-test-case.yaml"
                                            }
                                          },
                                          "testCaseExecutionId": {
                                            "description": "Identifies the functional test case execution.",
                                            "minimum": 1,
                                            "type": "integer"
                                          },
                                          "testCaseId": {
                                            "description": "Identifies the functional test case.",
                                            "minimum": 1,
                                            "type": "integer"
                                          }
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/functional-derived-test-case-executions.yaml"
                                      }
                                    },
                                    "errors": {
                                      "description": "Lists details about an error.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "title"
                                        ],
                                        "properties": {
                                          "requestField": {
                                            "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "requestValues": {
                                            "description": "Lists values corresponding to the `requestField`.",
                                            "minItems": 0,
                                            "type": "array",
                                            "items": {
                                              "anyOf": [
                                                {
                                                  "title": "String",
                                                  "type": "string"
                                                },
                                                {
                                                  "title": "Integer",
                                                  "type": "integer"
                                                },
                                                {
                                                  "title": "Object",
                                                  "type": "object"
                                                }
                                              ]
                                            }
                                          },
                                          "title": {
                                            "description": "Summary of the error.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Dot-notation explanation of the type of occurred error.",
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/error.yaml"
                                      }
                                    },
                                    "isReevaluationInProgress": {
                                      "description": "Whether the test case execution is being reevaluated.",
                                      "readOnly": true,
                                      "type": "boolean"
                                    },
                                    "resolvedSetVariables": {
                                      "description": "Contains information about variables that resolved as part of test case execution. It appears only for executions of functional test cases with the `COMPLETED` status.",
                                      "type": "object"
                                    },
                                    "status": {
                                      "description": "Test case objects' execution status. Possible values are: `IN_PROGRESS`, `COMPLETED`, `SKIPPED`, or `FAILED`.",
                                      "type": "string",
                                      "enum": [
                                        "IN_PROGRESS",
                                        "COMPLETED",
                                        "FAILED",
                                        "SKIPPED"
                                      ]
                                    },
                                    "testCaseContext": {
                                      "additionalProperties": false,
                                      "description": "Specifies the functional test case and included objects: condition, test request, and client profile.",
                                      "type": "object",
                                      "required": [
                                        "testCaseId",
                                        "order",
                                        "testRequest",
                                        "condition",
                                        "clientProfile"
                                      ],
                                      "properties": {
                                        "clientProfile": {
                                          "additionalProperties": false,
                                          "description": "Specifies a client profile included in the test case.",
                                          "type": "object",
                                          "required": [
                                            "ipVersion",
                                            "client"
                                          ],
                                          "properties": {
                                            "client": {
                                              "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                              "type": "string",
                                              "enum": [
                                                "CHROME",
                                                "CURL"
                                              ]
                                            },
                                            "geoLocation": {
                                              "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                              "type": "string",
                                              "enum": [
                                                "US"
                                              ]
                                            },
                                            "ipVersion": {
                                              "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                              "type": "string",
                                              "enum": [
                                                "IPV4",
                                                "IPV6"
                                              ]
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/client-profile.yaml"
                                          }
                                        },
                                        "condition": {
                                          "additionalProperties": false,
                                          "description": "Specifies a condition included in the test case.",
                                          "type": "object",
                                          "required": [
                                            "conditionExpression"
                                          ],
                                          "properties": {
                                            "conditionExpression": {
                                              "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "conditionExpressionResolved": {
                                              "description": "Condition statement with resolved variables, if applicable.",
                                              "minLength": 1,
                                              "readOnly": true,
                                              "type": "string"
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/condition.yaml"
                                          }
                                        },
                                        "createdBy": {
                                          "description": "Username who created the item.",
                                          "minLength": 1,
                                          "readOnly": true,
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/createdBy.yaml"
                                          }
                                        },
                                        "createdDate": {
                                          "description": "ISO 8601 timestamp indicating when the item was created.",
                                          "format": "date-time",
                                          "readOnly": true,
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/createdDate.yaml"
                                          }
                                        },
                                        "deletedBy": {
                                          "description": "Username who last deleted the item.",
                                          "minLength": 1,
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/deletedBy.yaml"
                                          }
                                        },
                                        "deletedDate": {
                                          "description": "ISO 8601 timestamp indicating when the item was deleted.",
                                          "format": "date-time",
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/deletedDate.yaml"
                                          }
                                        },
                                        "derivedTestCases": {
                                          "description": "Derived test cases in the response when there is reference to variable group(s).",
                                          "minItems": 0,
                                          "readOnly": true,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "description": "Specifies the functional derived test case when a variable group reference is present and included objects: condition, test request, and client profile.",
                                            "type": "object",
                                            "required": [
                                              "testRequest",
                                              "condition",
                                              "clientProfile",
                                              "order"
                                            ],
                                            "properties": {
                                              "clientProfile": {
                                                "additionalProperties": false,
                                                "description": "Specifies a client profile included in the test case.",
                                                "type": "object",
                                                "required": [
                                                  "ipVersion",
                                                  "client"
                                                ],
                                                "properties": {
                                                  "client": {
                                                    "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                                    "type": "string",
                                                    "enum": [
                                                      "CHROME",
                                                      "CURL"
                                                    ]
                                                  },
                                                  "geoLocation": {
                                                    "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                                    "type": "string",
                                                    "enum": [
                                                      "US"
                                                    ]
                                                  },
                                                  "ipVersion": {
                                                    "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                                    "type": "string",
                                                    "enum": [
                                                      "IPV4",
                                                      "IPV6"
                                                    ]
                                                  }
                                                },
                                                "x-akamai": {
                                                  "file-path": "schemas/client-profile.yaml"
                                                }
                                              },
                                              "condition": {
                                                "additionalProperties": false,
                                                "description": "Specifies a condition included in the test case.",
                                                "type": "object",
                                                "required": [
                                                  "conditionExpression"
                                                ],
                                                "properties": {
                                                  "conditionExpression": {
                                                    "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                                    "minLength": 1,
                                                    "type": "string"
                                                  },
                                                  "conditionExpressionResolved": {
                                                    "description": "Condition statement with resolved variables, if applicable.",
                                                    "minLength": 1,
                                                    "readOnly": true,
                                                    "type": "string"
                                                  }
                                                },
                                                "x-akamai": {
                                                  "file-path": "schemas/condition.yaml"
                                                }
                                              },
                                              "order": {
                                                "description": "Order of the derived test case. In stateful test suites, a test run's test cases execute in this order.  ",
                                                "minimum": 0,
                                                "readOnly": true,
                                                "type": "integer"
                                              },
                                              "setVariables": {
                                                "description": "Contains derived test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                                "minItems": 0,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                                  "type": "object",
                                                  "required": [
                                                    "variableId",
                                                    "variableName",
                                                    "variableValue"
                                                  ],
                                                  "properties": {
                                                    "variableId": {
                                                      "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                                      "minimum": 1,
                                                      "readOnly": true,
                                                      "type": "integer"
                                                    },
                                                    "variableName": {
                                                      "description": "Name of the variable.",
                                                      "maxLength": 100,
                                                      "minLength": 1,
                                                      "type": "string"
                                                    },
                                                    "variableValue": {
                                                      "description": "Value of the variable to resolve at runtime.",
                                                      "maxLength": 4000,
                                                      "minLength": 1,
                                                      "type": "string"
                                                    }
                                                  },
                                                  "x-akamai": {
                                                    "file-path": "schemas/set-variable.yaml"
                                                  }
                                                }
                                              },
                                              "testRequest": {
                                                "additionalProperties": false,
                                                "description": "Specifies a test request included in the test case.",
                                                "type": "object",
                                                "required": [
                                                  "testRequestUrl",
                                                  "requestMethod"
                                                ],
                                                "properties": {
                                                  "encodeRequestBody": {
                                                    "default": true,
                                                    "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                                    "nullable": true,
                                                    "type": "boolean"
                                                  },
                                                  "requestBody": {
                                                    "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                                    "maxLength": 4000,
                                                    "minLength": 1,
                                                    "nullable": true,
                                                    "type": "string"
                                                  },
                                                  "requestBodyResolved": {
                                                    "description": "Value of test request body after resolving all variables.",
                                                    "minLength": 1,
                                                    "nullable": true,
                                                    "readOnly": true,
                                                    "type": "string"
                                                  },
                                                  "requestHeaders": {
                                                    "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                                    "minItems": 0,
                                                    "type": "array",
                                                    "items": {
                                                      "additionalProperties": false,
                                                      "type": "object",
                                                      "required": [
                                                        "headerName",
                                                        "headerValue",
                                                        "headerAction"
                                                      ],
                                                      "properties": {
                                                        "headerAction": {
                                                          "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                                          "type": "string",
                                                          "enum": [
                                                            "ADD",
                                                            "MODIFY",
                                                            "FILTER"
                                                          ]
                                                        },
                                                        "headerName": {
                                                          "description": "Name of the request header.",
                                                          "minLength": 1,
                                                          "type": "string"
                                                        },
                                                        "headerNameResolved": {
                                                          "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                                          "minLength": 1,
                                                          "readOnly": true,
                                                          "type": "string"
                                                        },
                                                        "headerValue": {
                                                          "description": "Value of the request header.",
                                                          "minLength": 1,
                                                          "type": "string"
                                                        },
                                                        "headerValueResolved": {
                                                          "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                                          "minLength": 1,
                                                          "readOnly": true,
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "requestMethod": {
                                                    "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                                    "type": "string",
                                                    "enum": [
                                                      "HEAD",
                                                      "GET",
                                                      "POST"
                                                    ]
                                                  },
                                                  "tags": {
                                                    "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                                    "minItems": 0,
                                                    "type": "array",
                                                    "items": {
                                                      "minLength": 1,
                                                      "type": "string"
                                                    }
                                                  },
                                                  "testRequestUrl": {
                                                    "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                                    "maxLength": 2048,
                                                    "minLength": 1,
                                                    "type": "string"
                                                  },
                                                  "testRequestUrlResolved": {
                                                    "description": "Value of test request URL after resolving all variables.",
                                                    "minLength": 1,
                                                    "nullable": true,
                                                    "readOnly": true,
                                                    "type": "string"
                                                  }
                                                },
                                                "x-akamai": {
                                                  "file-path": "schemas/test-request.yaml"
                                                }
                                              }
                                            },
                                            "x-akamai": {
                                              "file-path": "schemas/functional-derived-test-case.yaml"
                                            }
                                          }
                                        },
                                        "modifiedBy": {
                                          "description": "Username who last modified the item.",
                                          "minLength": 1,
                                          "readOnly": true,
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/modifiedBy.yaml"
                                          }
                                        },
                                        "modifiedDate": {
                                          "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                          "format": "date-time",
                                          "readOnly": true,
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/modifiedDate.yaml"
                                          }
                                        },
                                        "order": {
                                          "description": "Order of the test case. In stateful test suites, a test run's test cases execute in this order.",
                                          "minimum": 1,
                                          "readOnly": true,
                                          "type": "integer"
                                        },
                                        "setVariables": {
                                          "description": "Contains test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                          "minItems": 0,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                            "type": "object",
                                            "required": [
                                              "variableId",
                                              "variableName",
                                              "variableValue"
                                            ],
                                            "properties": {
                                              "variableId": {
                                                "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                                "minimum": 1,
                                                "readOnly": true,
                                                "type": "integer"
                                              },
                                              "variableName": {
                                                "description": "Name of the variable.",
                                                "maxLength": 100,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "variableValue": {
                                                "description": "Value of the variable to resolve at runtime.",
                                                "maxLength": 4000,
                                                "minLength": 1,
                                                "type": "string"
                                              }
                                            },
                                            "x-akamai": {
                                              "file-path": "schemas/set-variable.yaml"
                                            }
                                          }
                                        },
                                        "testCaseId": {
                                          "description": "Identifies a functional test case. To get this value, run the [List test cases](https://techdocs.akamai.com/test-ctr/reference/get-test-cases) operation.",
                                          "minimum": 1,
                                          "readOnly": true,
                                          "type": "integer"
                                        },
                                        "testRequest": {
                                          "additionalProperties": false,
                                          "description": "Specifies a test request included in the test case.",
                                          "type": "object",
                                          "required": [
                                            "testRequestUrl",
                                            "requestMethod"
                                          ],
                                          "properties": {
                                            "encodeRequestBody": {
                                              "default": true,
                                              "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                              "nullable": true,
                                              "type": "boolean"
                                            },
                                            "requestBody": {
                                              "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                              "maxLength": 4000,
                                              "minLength": 1,
                                              "nullable": true,
                                              "type": "string"
                                            },
                                            "requestBodyResolved": {
                                              "description": "Value of test request body after resolving all variables.",
                                              "minLength": 1,
                                              "nullable": true,
                                              "readOnly": true,
                                              "type": "string"
                                            },
                                            "requestHeaders": {
                                              "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                              "minItems": 0,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                  "headerName",
                                                  "headerValue",
                                                  "headerAction"
                                                ],
                                                "properties": {
                                                  "headerAction": {
                                                    "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                                    "type": "string",
                                                    "enum": [
                                                      "ADD",
                                                      "MODIFY",
                                                      "FILTER"
                                                    ]
                                                  },
                                                  "headerName": {
                                                    "description": "Name of the request header.",
                                                    "minLength": 1,
                                                    "type": "string"
                                                  },
                                                  "headerNameResolved": {
                                                    "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                                    "minLength": 1,
                                                    "readOnly": true,
                                                    "type": "string"
                                                  },
                                                  "headerValue": {
                                                    "description": "Value of the request header.",
                                                    "minLength": 1,
                                                    "type": "string"
                                                  },
                                                  "headerValueResolved": {
                                                    "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                                    "minLength": 1,
                                                    "readOnly": true,
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "requestMethod": {
                                              "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                              "type": "string",
                                              "enum": [
                                                "HEAD",
                                                "GET",
                                                "POST"
                                              ]
                                            },
                                            "tags": {
                                              "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                              "minItems": 0,
                                              "type": "array",
                                              "items": {
                                                "minLength": 1,
                                                "type": "string"
                                              }
                                            },
                                            "testRequestUrl": {
                                              "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                              "maxLength": 2048,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "testRequestUrlResolved": {
                                              "description": "Value of test request URL after resolving all variables.",
                                              "minLength": 1,
                                              "nullable": true,
                                              "readOnly": true,
                                              "type": "string"
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/test-request.yaml"
                                          }
                                        },
                                        "warnings": {
                                          "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807). Any warnings related to variable groups would be captured here.",
                                          "minItems": 0,
                                          "readOnly": true,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "description": "Specifies the error that occurred.",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "title"
                                            ],
                                            "properties": {
                                              "existingEntities": {
                                                "description": "Lists objects included within the functional test case.",
                                                "minItems": 0,
                                                "type": "array",
                                                "items": {
                                                  "type": "object"
                                                }
                                              },
                                              "requestField": {
                                                "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "requestObjects": {
                                                "description": "Lists invalid request objects.",
                                                "minItems": 0,
                                                "type": "array",
                                                "items": {
                                                  "type": "object"
                                                }
                                              },
                                              "requestValues": {
                                                "description": "Lists values corresponding to the `requestField`.",
                                                "minItems": 0,
                                                "type": "array",
                                                "items": {
                                                  "anyOf": [
                                                    {
                                                      "title": "String",
                                                      "type": "string"
                                                    },
                                                    {
                                                      "title": "Integer",
                                                      "type": "integer"
                                                    },
                                                    {
                                                      "title": "Object",
                                                      "type": "object"
                                                    }
                                                  ]
                                                }
                                              },
                                              "title": {
                                                "description": "Title of the error.",
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "type": {
                                                "description": "Type of error.",
                                                "minLength": 1,
                                                "type": "string"
                                              }
                                            },
                                            "x-akamai": {
                                              "file-path": "schemas/sub-problem.yaml"
                                            }
                                          }
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/functional-test-case.yaml"
                                      }
                                    },
                                    "testCaseExecutionId": {
                                      "description": "Identifies the functional test case execution.",
                                      "minimum": 1,
                                      "type": "integer"
                                    },
                                    "testCaseId": {
                                      "description": "Identifies the functional test case.",
                                      "minimum": 1,
                                      "type": "integer"
                                    }
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/functional-test-case-executions.yaml"
                                }
                              },
                              "testSuiteContext": {
                                "additionalProperties": false,
                                "description": "Specifies a test suite.",
                                "type": "object",
                                "required": [
                                  "testSuiteId",
                                  "testSuiteName",
                                  "isLocked",
                                  "isStateful",
                                  "executableTestCaseCount"
                                ],
                                "properties": {
                                  "configs": {
                                    "additionalProperties": false,
                                    "default": null,
                                    "description": "Specifies the Property Manager property version associated with the test suite. It's `null` for test suites with no properties associated. ",
                                    "nullable": true,
                                    "type": "object",
                                    "required": [
                                      "propertyManager"
                                    ],
                                    "properties": {
                                      "propertyManager": {
                                        "additionalProperties": false,
                                        "description": "Specifies the property version associated with the test suite.",
                                        "type": "object",
                                        "required": [
                                          "propertyId",
                                          "propertyName",
                                          "propertyVersion"
                                        ],
                                        "properties": {
                                          "propertyId": {
                                            "description": "Identifies a Property Manager property.",
                                            "minimum": 1,
                                            "type": "integer"
                                          },
                                          "propertyName": {
                                            "description": "Name of the property.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "propertyVersion": {
                                            "description": "Version of the property.",
                                            "minimum": 1,
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    },
                                    "x-akamai": {
                                      "file-path": "schemas/configs.yaml"
                                    }
                                  },
                                  "createdBy": {
                                    "description": "Username who created the item.",
                                    "minLength": 1,
                                    "readOnly": true,
                                    "type": "string",
                                    "x-akamai": {
                                      "file-path": "schemas/createdBy.yaml"
                                    }
                                  },
                                  "createdDate": {
                                    "description": "ISO 8601 timestamp indicating when the item was created.",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string",
                                    "x-akamai": {
                                      "file-path": "schemas/createdDate.yaml"
                                    }
                                  },
                                  "deletedBy": {
                                    "description": "Username who last deleted the item.",
                                    "minLength": 1,
                                    "type": "string",
                                    "x-akamai": {
                                      "file-path": "schemas/deletedBy.yaml"
                                    }
                                  },
                                  "deletedDate": {
                                    "description": "ISO 8601 timestamp indicating when the item was deleted.",
                                    "format": "date-time",
                                    "type": "string",
                                    "x-akamai": {
                                      "file-path": "schemas/deletedDate.yaml"
                                    }
                                  },
                                  "executableTestCaseCount": {
                                    "description": "Number of included test cases executable in a test run. To learn more, see [Variable groups](https://techdocs.akamai.com/test-ctr/reference/variables-overview#variable-groups).",
                                    "minimum": 0,
                                    "readOnly": true,
                                    "type": "integer"
                                  },
                                  "isLocked": {
                                    "description": "Locks the test suite so that only designated owners or editors can modify it.",
                                    "type": "boolean"
                                  },
                                  "isStateful": {
                                    "description": "Sets the test suite to be run statefully, retaining cookies and session data for subsequent test cases within the test suite.",
                                    "type": "boolean"
                                  },
                                  "modifiedBy": {
                                    "description": "Username who last modified the item.",
                                    "minLength": 1,
                                    "readOnly": true,
                                    "type": "string",
                                    "x-akamai": {
                                      "file-path": "schemas/modifiedBy.yaml"
                                    }
                                  },
                                  "modifiedDate": {
                                    "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string",
                                    "x-akamai": {
                                      "file-path": "schemas/modifiedDate.yaml"
                                    }
                                  },
                                  "testSuiteDescription": {
                                    "default": null,
                                    "description": "Description of the test suite. It's `null` for test suites without descriptions. ",
                                    "maxLength": 4000,
                                    "minLength": 1,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "testSuiteId": {
                                    "description": "Identifies a test suite.",
                                    "minimum": 1,
                                    "readOnly": true,
                                    "type": "integer"
                                  },
                                  "testSuiteName": {
                                    "description": "Unique name for each test suite.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "variables": {
                                    "description": "Variables used in the test run.",
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variables appear with `{{variableName}}` syntax.",
                                      "title": "Single variable",
                                      "type": "object",
                                      "required": [
                                        "variableId",
                                        "variableName",
                                        "variableValue",
                                        "isDynamicallyUsed"
                                      ],
                                      "properties": {
                                        "createdBy": {
                                          "description": "Username who created the item.",
                                          "minLength": 1,
                                          "readOnly": true,
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/createdBy.yaml"
                                          }
                                        },
                                        "createdDate": {
                                          "description": "ISO 8601 timestamp indicating when the item was created.",
                                          "format": "date-time",
                                          "readOnly": true,
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/createdDate.yaml"
                                          }
                                        },
                                        "isDynamicallyUsed": {
                                          "description": "Whether the variable in `setVariables` is assigned dynamically.",
                                          "type": "boolean"
                                        },
                                        "modifiedBy": {
                                          "description": "Username who last modified the item.",
                                          "minLength": 1,
                                          "readOnly": true,
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/modifiedBy.yaml"
                                          }
                                        },
                                        "modifiedDate": {
                                          "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                          "format": "date-time",
                                          "readOnly": true,
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/modifiedDate.yaml"
                                          }
                                        },
                                        "variableId": {
                                          "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                          "minimum": 1,
                                          "readOnly": true,
                                          "type": "integer"
                                        },
                                        "variableName": {
                                          "description": "Name of the variable.",
                                          "maxLength": 100,
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "variableValue": {
                                          "description": "Value of the variable.",
                                          "maxLength": 4000,
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/variable.yaml"
                                      }
                                    }
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/test-suite-context.yaml"
                                }
                              },
                              "testSuiteExecutionId": {
                                "description": "Identifies a test suite execution.",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "testSuiteId": {
                                "description": "Identifies a test suite that executed.",
                                "minimum": 1,
                                "type": "integer"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/test-suite-execution.yaml"
                            }
                          }
                        }
                      }
                    },
                    "note": {
                      "description": "Notes about the test run.",
                      "maxLength": 200,
                      "minLength": 1,
                      "type": "string"
                    },
                    "purgeInfo": {
                      "additionalProperties": false,
                      "description": "Contains details on purge. ",
                      "type": "object",
                      "required": [
                        "status"
                      ],
                      "properties": {
                        "errors": {
                          "description": "Lists details about an error.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "title": {
                                "description": "Summary of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Dot-notated identifier for each type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "status": {
                          "description": "Purge execution status. Possible values are: `IN_PROGRESS`, `COMPLETED`, `NOT_APPLICABLE`, or `FAILED`.",
                          "type": "string",
                          "enum": [
                            "NOT_APPLICABLE",
                            "IN_PROGRESS",
                            "COMPLETED",
                            "FAILED"
                          ]
                        }
                      }
                    },
                    "sendEmailOnCompletion": {
                      "default": true,
                      "description": "Sends a notification email after the test run completes.",
                      "type": "boolean"
                    },
                    "status": {
                      "description": "Test run's status. Possible values are: `IN_PROGRESS`, `COMPLETED`, `FAILED`, or `COMPLETED_WITH_UNEXPECTED_RESULTS`.",
                      "type": "string",
                      "enum": [
                        "IN_PROGRESS",
                        "COMPLETED",
                        "FAILED",
                        "COMPLETED_WITH_UNEXPECTED_RESULTS"
                      ]
                    },
                    "submittedBy": {
                      "description": "Username who submitted the test run.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "submittedDate": {
                      "description": "ISO 8601 timestamp indicating when the test run was submitted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "targetEnvironment": {
                      "description": "Environment against which the test run was executed, either `PRODUCTION` or `STAGING`.",
                      "type": "string",
                      "enum": [
                        "PRODUCTION",
                        "STAGING"
                      ]
                    },
                    "testRunId": {
                      "description": "Unique identifier for each test run.",
                      "minimum": 1,
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/test-run-get-individual.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists test runs submitted in your organization. The response is an array of objects, each keyed by `testRunId` with details and status of each test run.",
        "operationId": "get-test-runs",
        "summary": "List test runs",
        "tags": [
          "Test runs"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-runs"
        },
        "responses": {
          "200": {
            "description": "The response lists test runs.",
            "content": {
              "application/json": {
                "example": {
                  "testRuns": [
                    {
                      "completedDate": "2022-01-27T04:36:00+0000",
                      "note": "Test a change on staging that is implemented in config_user10 Version 15.",
                      "status": "COMPLETED",
                      "submittedBy": "jsmith@akamai.com",
                      "submittedDate": "2022-01-27T04:34:15+0000",
                      "targetEnvironment": "STAGING",
                      "testRunId": 1,
                      "functional": {
                        "status": "COMPLETED"
                      },
                      "purgeInfo": {
                        "status": "COMPLETED"
                      }
                    },
                    {
                      "completedDate": "2022-01-31T13:49:59+0000",
                      "note": "Test a change on staging that is implemented in config_user11 Version 15.",
                      "status": "COMPLETED",
                      "submittedBy": "jsmith@akamai.com",
                      "submittedDate": "2022-01-31T13:48:41+0000",
                      "targetEnvironment": "STAGING",
                      "testRunId": 2,
                      "functional": {
                        "status": "COMPLETED"
                      },
                      "purgeInfo": {
                        "status": "COMPLETED"
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains test runs created in your organization.",
                  "type": "object",
                  "required": [
                    "testRuns"
                  ],
                  "properties": {
                    "testRuns": {
                      "description": "Test runs created in your organization.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Represents the progress of a test run and its results. Data lists all objects that execute during the test run. Data may show more details based on your request's query parameters.",
                        "type": "object",
                        "required": [
                          "targetEnvironment",
                          "functional",
                          "submittedBy",
                          "submittedDate",
                          "status"
                        ],
                        "properties": {
                          "completedDate": {
                            "description": "ISO 8601 timestamp indicating when the test run was complete.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "functional": {
                            "additionalProperties": false,
                            "description": "Represents functional testing executed during the test run. Depending on what was the test run for, it may include `PropertyMangerExecution`, `testCaseExecution`, or `testSuiteExecutions`.",
                            "type": "object",
                            "required": [
                              "status"
                            ],
                            "properties": {
                              "status": {
                                "description": "Functional objects' execution status. Possible values are: `IN_PROGRESS`, `COMPLETED`, `COMPLETED_WITH_UNEXPECTED_RESULTS`, or `FAILED`.",
                                "type": "string",
                                "enum": [
                                  "IN_PROGRESS",
                                  "COMPLETED",
                                  "FAILED",
                                  "COMPLETED_WITH_UNEXPECTED_RESULTS"
                                ]
                              }
                            }
                          },
                          "note": {
                            "description": "Notes about the test run.",
                            "maxLength": 200,
                            "minLength": 1,
                            "type": "string"
                          },
                          "purgeInfo": {
                            "additionalProperties": false,
                            "description": "Contains details on purge. ",
                            "type": "object",
                            "required": [
                              "status"
                            ],
                            "properties": {
                              "errors": {
                                "description": "Lists details about an error.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "title"
                                  ],
                                  "properties": {
                                    "title": {
                                      "description": "Summary of the error.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "Dot-notated identifier for each type of error.",
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "status": {
                                "description": "Purge execution status. Possible values are: `IN_PROGRESS`, `COMPLETED`, `NOT_APPLICABLE`, or `FAILED`.",
                                "type": "string",
                                "enum": [
                                  "NOT_APPLICABLE",
                                  "IN_PROGRESS",
                                  "COMPLETED",
                                  "FAILED"
                                ]
                              }
                            }
                          },
                          "status": {
                            "description": "Test run's status. Possible values are: `IN_PROGRESS`, `COMPLETED`, `FAILED`, or `COMPLETED_WITH_UNEXPECTED_RESULTS`.",
                            "type": "string",
                            "enum": [
                              "IN_PROGRESS",
                              "COMPLETED",
                              "FAILED",
                              "COMPLETED_WITH_UNEXPECTED_RESULTS"
                            ]
                          },
                          "submittedBy": {
                            "description": "Username who submitted the test run.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "submittedDate": {
                            "description": "ISO 8601 timestamp indicating when the test run was submitted.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "targetEnvironment": {
                            "description": "Environment against which the test run was executed, either `PRODUCTION` or `STAGING`.",
                            "type": "string",
                            "enum": [
                              "PRODUCTION",
                              "STAGING"
                            ]
                          },
                          "testRunId": {
                            "description": "Unique identifier for each test run.",
                            "minimum": 1,
                            "readOnly": true,
                            "type": "integer"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/test-run.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/test-runs.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/test-runs/{testRunId}": {
      "get": {
        "description": "Returns details of a test run. Check [Functional testing results](https://techdocs.akamai.com/test-ctr/docs/test-run-results#functional-testing-results) to learn how to analyze the results. ",
        "operationId": "get-test-run",
        "summary": "Get a test run",
        "tags": [
          "Test runs"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-run"
        },
        "responses": {
          "200": {
            "description": "The response provides the test run results.",
            "content": {
              "application/json": {
                "examples": {
                  "testRunWithDynamicVariable": {
                    "summary": "Test run with dynamically assigned variables",
                    "value": {
                      "completedDate": "2022-01-27T04:36:00+0000",
                      "note": "Test a change on staging that is implemented in config_user11 Version 15.",
                      "sendEmailOnCompletion": true,
                      "status": "COMPLETED",
                      "submittedBy": "jsmith@example.com",
                      "submittedDate": "2022-01-27T04:34:15+0000",
                      "targetEnvironment": "STAGING",
                      "testRunId": 2,
                      "functional": {
                        "allExecutionObjectsIncluded": false,
                        "isReevaluationInProgress": true,
                        "maxReevaluationCompletionTime": "2022-01-27T05::36+0000",
                        "nextReevaluationCompletionTime": "2022-01-27T04:46:06+0000",
                        "status": "COMPLETED",
                        "propertyManagerExecution": {
                          "propertyId": 123,
                          "propertyName": "config_user11",
                          "propertyVersion": 15,
                          "testSuiteExecutions": [
                            {
                              "completedDate": "2022-01-27T04:36:00+0000",
                              "status": "COMPLETED",
                              "testSuiteExecutionId": 1,
                              "testSuiteId": 3,
                              "testSuiteContext": {
                                "executableTestCaseCount": 2,
                                "isLocked": true,
                                "isStateful": false,
                                "testSuiteDescription": "test the change in test case that includes config_user11 Version 15 property",
                                "testSuiteId": 3,
                                "testSuiteName": "testsuite1",
                                "variables": [
                                  {
                                    "createdBy": "jkowalski",
                                    "createdDate": "2022-01-27T04:34:15+0000",
                                    "modifiedBy": "adevi",
                                    "modifiedDate": "2022-01-27T04:34:16+0000",
                                    "variableId": 1,
                                    "variableName": "var1",
                                    "variableValue": "123"
                                  },
                                  {
                                    "createdBy": "hgildong",
                                    "createdDate": "2022-01-27T04:34:17+0000",
                                    "modifiedBy": "jperez",
                                    "modifiedDate": "2022-01-27T04:34:18+0000",
                                    "variableId": 2,
                                    "variableName": "var2",
                                    "variableValue": "abc"
                                  }
                                ]
                              },
                              "testCaseExecutions": [
                                {
                                  "completedDate": "2022-01-27T04:36:00+0000",
                                  "status": "COMPLETED",
                                  "testCaseExecutionId": 3,
                                  "testCaseId": 4,
                                  "conditionEvaluationResult": {
                                    "result": "PASSED",
                                    "actualConditionData": [
                                      {
                                        "name": "responseCode",
                                        "value": "200"
                                      }
                                    ]
                                  },
                                  "resolvedSetVariables": {
                                    "var1": "value-1",
                                    "var2": "value-2"
                                  },
                                  "testCaseContext": {
                                    "order": 3,
                                    "testCaseId": 4,
                                    "clientProfile": {
                                      "client": "CHROME",
                                      "clientVersion": "103.0.5060.53-1",
                                      "geoLocation": "US",
                                      "ipVersion": "IPV4"
                                    },
                                    "condition": {
                                      "conditionExpression": "Response code is one of {{resp_codes}}",
                                      "conditionExpressionResolved": "Response code is one of \"200\""
                                    },
                                    "testRequest": {
                                      "requestMethod": "GET",
                                      "testRequestUrl": "http://www.user8.example.com/"
                                    },
                                    "setVariables": [
                                      {
                                        "variableId": 2344,
                                        "variableName": "var1",
                                        "variableValue": "value-1"
                                      },
                                      {
                                        "variableId": 2344,
                                        "variableName": "var1",
                                        "variableValue": "value-1"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "completedDate": "2022-01-27T04:36:00+0000",
                                  "isReevaluationInProgress": true,
                                  "status": "COMPLETED",
                                  "testCaseExecutionId": 5,
                                  "testCaseId": 5,
                                  "conditionEvaluationResult": {
                                    "result": "INCONCLUSIVE",
                                    "actualConditionData": [
                                      {
                                        "name": "Inconclusive",
                                        "value": "The required data for condition evaluation is currently not available. System will reattempt multiple times for the data in next 2 hours and update the results."
                                      }
                                    ]
                                  },
                                  "resolvedSetVariables": {
                                    "var1": "value-1",
                                    "var2": "value-2"
                                  },
                                  "testCaseContext": {
                                    "order": 3,
                                    "testCaseId": 5,
                                    "clientProfile": {
                                      "client": "CHROME",
                                      "clientVersion": "103.0.5060.53-1",
                                      "geoLocation": "US",
                                      "ipVersion": "IPV4"
                                    },
                                    "condition": {
                                      "conditionExpression": "f line field \"Object status\" has a value"
                                    },
                                    "testRequest": {
                                      "requestMethod": "GET",
                                      "testRequestUrl": "http://www.user8.example.com/"
                                    },
                                    "setVariables": [
                                      {
                                        "variableId": 2344,
                                        "variableName": "var1",
                                        "variableValue": "value-1"
                                      },
                                      {
                                        "variableId": 2344,
                                        "variableName": "var1",
                                        "variableValue": "value-1"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      },
                      "purgeInfo": {
                        "status": "COMPLETED"
                      }
                    }
                  },
                  "testRunWithVariableGroup": {
                    "summary": "Test run with variable groups",
                    "value": {
                      "completedDate": "2022-01-27T04:36:00+0000",
                      "note": "Test a change on staging that is implemented in config_user11 Version 15.",
                      "sendEmailOnCompletion": true,
                      "status": "COMPLETED_WITH_UNEXPECTED_RESULTS",
                      "submittedBy": "jsmith@example.com",
                      "submittedDate": "2022-01-27T04:34:15+0000",
                      "targetEnvironment": "STAGING",
                      "testRunId": 2,
                      "functional": {
                        "allExecutionObjectsIncluded": true,
                        "status": "COMPLETED_WITH_UNEXPECTED_RESULTS",
                        "propertyManagerExecution": {
                          "propertyId": 123,
                          "propertyName": "config_user11",
                          "propertyVersion": 15,
                          "testSuiteExecutions": [
                            {
                              "completedDate": "2022-01-27T05:00:00+0000",
                              "status": "COMPLETED_WITH_UNEXPECTED_RESULTS",
                              "testSuiteExecutionId": 3,
                              "testSuiteId": 5,
                              "testSuiteContext": {
                                "executableTestCaseCount": 2,
                                "isLocked": false,
                                "isStateful": true,
                                "testSuiteDescription": "test the change in test case that includes ab1.gsshappylearning.com Version 2 property",
                                "testSuiteId": 5,
                                "testSuiteName": "testsuite3",
                                "variables": [
                                  {
                                    "createdBy": "jsmith",
                                    "createdDate": "2021-07-06T10:28:13+0000",
                                    "modifiedBy": "szhang",
                                    "modifiedDate": "2021-07-06T10:28:13+0000",
                                    "variableId": 204,
                                    "variableName": "sampleVarGroup",
                                    "variableGroupValue": [
                                      {
                                        "columnHeader": "urls",
                                        "columnValues": [
                                          "pqrs.com",
                                          "xyz.org"
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "createdBy": "alfulani",
                                    "createdDate": "2021-07-06T10:28:13+0000",
                                    "modifiedBy": "tyamada",
                                    "modifiedDate": "2021-07-06T10:28:13+0000",
                                    "variableId": 205,
                                    "variableName": "successCode",
                                    "variableGroupValue": [
                                      {
                                        "columnHeader": "statusCodes",
                                        "columnValues": [
                                          "200",
                                          "200"
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              "testCaseExecutions": [
                                {
                                  "status": "COMPLETED_WITH_UNEXPECTED_RESULTS",
                                  "testCaseExecutionId": 5,
                                  "testCaseId": 5,
                                  "testCaseContext": {
                                    "createdBy": "jperez",
                                    "createdDate": "2021-07-06T10:28:13+0000",
                                    "modifiedBy": "adevi",
                                    "modifiedDate": "2021-07-06T10:28:13+0000",
                                    "order": 1,
                                    "testCaseId": 5,
                                    "clientProfile": {
                                      "client": "CHROME",
                                      "clientVersion": "103.0.5060.53-1",
                                      "geoLocation": "US",
                                      "ipVersion": "IPV4"
                                    },
                                    "condition": {
                                      "conditionExpression": "Response code is one of \"{{successCode.statusCodes}}\""
                                    },
                                    "testRequest": {
                                      "requestMethod": "GET",
                                      "testRequestUrl": "https://{{sampleVarGroup.urls}}/index"
                                    }
                                  },
                                  "derivedTestCaseExecutions": [
                                    {
                                      "status": "COMPLETED",
                                      "testCaseExecutionId": 6,
                                      "testCaseId": 5,
                                      "conditionEvaluationResult": {
                                        "result": "PASSED",
                                        "actualConditionData": [
                                          {
                                            "name": "responseCode",
                                            "value": "200"
                                          }
                                        ]
                                      },
                                      "testCaseContext": {
                                        "order": 1,
                                        "clientProfile": {
                                          "client": "CHROME",
                                          "clientVersion": "103.0.5060.53-1",
                                          "geoLocation": "US",
                                          "ipVersion": "IPV4"
                                        },
                                        "condition": {
                                          "conditionExpression": "Response code is one of \"200\""
                                        },
                                        "testRequest": {
                                          "requestMethod": "GET",
                                          "testRequestUrl": "https://pqrs.com/index"
                                        }
                                      }
                                    },
                                    {
                                      "status": "COMPLETED",
                                      "testCaseExecutionId": 7,
                                      "testCaseId": 5,
                                      "conditionEvaluationResult": {
                                        "result": "FAILED",
                                        "actualConditionData": [
                                          {
                                            "name": "responseCode",
                                            "value": "403"
                                          }
                                        ]
                                      },
                                      "testCaseContext": {
                                        "order": 2,
                                        "clientProfile": {
                                          "client": "CHROME",
                                          "clientVersion": "103.0.5060.53-1",
                                          "geoLocation": "US",
                                          "ipVersion": "IPV4"
                                        },
                                        "condition": {
                                          "conditionExpression": "Response code is one of \"200\""
                                        },
                                        "testRequest": {
                                          "requestMethod": "GET",
                                          "testRequestUrl": "https://xyz.org/index"
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      },
                      "purgeInfo": {
                        "status": "COMPLETED"
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Represents the progress of a test run and its results. Data lists all objects that execute during the test run. Data may show more details based on your request's query parameters.",
                  "type": "object",
                  "required": [
                    "testRunId",
                    "targetEnvironment",
                    "functional",
                    "status",
                    "submittedBy",
                    "submittedDate",
                    "sendEmailOnCompletion"
                  ],
                  "properties": {
                    "completedDate": {
                      "description": "ISO 8601 timestamp indicating when the test run was complete.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "functional": {
                      "additionalProperties": false,
                      "description": "Represents functional testing executed during the test run. Depending on what was the test run for, it may include `PropertyMangerExecution`, `testCaseExecution`, or `testSuiteExecutions`.",
                      "type": "object",
                      "required": [
                        "status"
                      ],
                      "properties": {
                        "allExecutionObjectsIncluded": {
                          "default": true,
                          "description": "Whether the response includes all execution objects. If you don't have access to any of the hostnames used in the executions, you don't see these objects in the response.",
                          "type": "boolean"
                        },
                        "isReevaluationInProgress": {
                          "description": "Whether any test cases included in the test run are being reevaluated.",
                          "readOnly": true,
                          "type": "boolean"
                        },
                        "maxReevaluationCompletionTime": {
                          "description": "ISO 8601 timestamp indicating the maximum time all test cases will take to finish reevaluating.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "nextReevaluationCompletionTime": {
                          "description": "ISO 8601 timestamp indicating approximately when all test cases will finish reevaluating.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "propertyManagerExecution": {
                          "additionalProperties": false,
                          "description": "Contains information about the property for which this test was initiated.",
                          "type": "object",
                          "required": [
                            "propertyVersion",
                            "propertyId",
                            "propertyName",
                            "testSuiteExecutions"
                          ],
                          "properties": {
                            "propertyId": {
                              "description": "Identifies a property version.",
                              "minimum": 1,
                              "type": "integer"
                            },
                            "propertyName": {
                              "description": "Name of a property version.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "propertyVersion": {
                              "description": "Property version.",
                              "minimum": 1,
                              "type": "integer"
                            },
                            "testSuiteExecutions": {
                              "description": "Contains test Suite Executions created in your organization.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "Specifies the test suite executed during the test run.",
                                "type": "object",
                                "required": [
                                  "status",
                                  "testSuiteId",
                                  "testCaseExecutions",
                                  "testSuiteExecutionId"
                                ],
                                "properties": {
                                  "completedDate": {
                                    "description": "ISO 8601 timestamp indicating when the test run completed.",
                                    "format": "date-time",
                                    "type": "string"
                                  },
                                  "status": {
                                    "description": "Test suite's execution status. Possible values are: `IN_PROGRESS`, `COMPLETED`, `SKIPPED`, or `FAILED`.",
                                    "type": "string",
                                    "enum": [
                                      "IN_PROGRESS",
                                      "COMPLETED",
                                      "FAILED",
                                      "SKIPPED"
                                    ]
                                  },
                                  "testCaseExecutions": {
                                    "description": "Lists functional test cases executed during a test run.",
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "required": [
                                        "status",
                                        "testCaseId",
                                        "testCaseExecutionId"
                                      ],
                                      "properties": {
                                        "completedDate": {
                                          "description": "ISO 8601 timestamp indicating when the test run completed.",
                                          "format": "date-time",
                                          "type": "string"
                                        },
                                        "conditionEvaluationResult": {
                                          "additionalProperties": false,
                                          "description": "Specifies evaluation of conditions. It appears only for executions of functional test cases with the `COMPLETED` status.",
                                          "type": "object",
                                          "required": [
                                            "result",
                                            "actualConditionData"
                                          ],
                                          "properties": {
                                            "actualConditionData": {
                                              "description": "Lists condition data collected when the functional test case URL executed.",
                                              "minItems": 1,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                  "name",
                                                  "value"
                                                ],
                                                "properties": {
                                                  "name": {
                                                    "description": "Name of the condition data.",
                                                    "minLength": 1,
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "description": "Value of the condition data.",
                                                    "minLength": 1,
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "result": {
                                              "description": "Result after evaluating the conditions. Possible values are `PASSED` for conditions detected during the test run, `FAILED` for those undetected, `ERROR_OCCURRED` if the API couldn't execute the test run due to a system error, or `INCONCLUSIVE` for the conditions not able to evaluate.",
                                              "type": "string",
                                              "enum": [
                                                "PASSED",
                                                "FAILED",
                                                "ERROR_OCCURRED",
                                                "INCONCLUSIVE"
                                              ]
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/condition-evaluation-result.yaml"
                                          }
                                        },
                                        "derivedTestCaseExecutions": {
                                          "description": "Lists functional derived test cases executed during a test run.",
                                          "minItems": 0,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "required": [
                                              "status",
                                              "testCaseId"
                                            ],
                                            "properties": {
                                              "completedDate": {
                                                "description": "ISO 8601 timestamp indicating when the test run completed.",
                                                "format": "date-time",
                                                "type": "string"
                                              },
                                              "conditionEvaluationResult": {
                                                "additionalProperties": false,
                                                "description": "Specifies evaluation of conditions. It appears only for executions of functional test cases with the `COMPLETED` status.",
                                                "type": "object",
                                                "required": [
                                                  "result",
                                                  "actualConditionData"
                                                ],
                                                "properties": {
                                                  "actualConditionData": {
                                                    "description": "Lists condition data collected when the functional test case URL executed.",
                                                    "minItems": 1,
                                                    "type": "array",
                                                    "items": {
                                                      "additionalProperties": false,
                                                      "type": "object",
                                                      "required": [
                                                        "name",
                                                        "value"
                                                      ],
                                                      "properties": {
                                                        "name": {
                                                          "description": "Name of the condition data.",
                                                          "minLength": 1,
                                                          "type": "string"
                                                        },
                                                        "value": {
                                                          "description": "Value of the condition data.",
                                                          "minLength": 1,
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "result": {
                                                    "description": "Result after evaluating the conditions. Possible values are `PASSED` for conditions detected during the test run, `FAILED` for those undetected, `ERROR_OCCURRED` if the API couldn't execute the test run due to a system error, or `INCONCLUSIVE` for the conditions not able to evaluate.",
                                                    "type": "string",
                                                    "enum": [
                                                      "PASSED",
                                                      "FAILED",
                                                      "ERROR_OCCURRED",
                                                      "INCONCLUSIVE"
                                                    ]
                                                  }
                                                },
                                                "x-akamai": {
                                                  "file-path": "schemas/condition-evaluation-result.yaml"
                                                }
                                              },
                                              "errors": {
                                                "description": "Lists details about an error.",
                                                "minItems": 0,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "required": [
                                                    "type",
                                                    "title"
                                                  ],
                                                  "properties": {
                                                    "requestField": {
                                                      "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                    },
                                                    "requestValues": {
                                                      "description": "Lists values corresponding to the `requestField`.",
                                                      "minItems": 0,
                                                      "type": "array",
                                                      "items": {
                                                        "anyOf": [
                                                          {
                                                            "title": "String",
                                                            "type": "string"
                                                          },
                                                          {
                                                            "title": "Integer",
                                                            "type": "integer"
                                                          },
                                                          {
                                                            "title": "Object",
                                                            "type": "object"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    "title": {
                                                      "description": "Summary of the error.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "description": "Dot-notation explanation of the type of occurred error.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "x-akamai": {
                                                  "file-path": "schemas/error.yaml"
                                                }
                                              },
                                              "resolvedSetVariables": {
                                                "description": "Contains information about variables that resolved as part of test case execution. It appears only for executions of functional test cases with the `COMPLETED` status.",
                                                "type": "object"
                                              },
                                              "status": {
                                                "description": "Test case objects' execution status. Possible values are: `IN_PROGRESS`, `COMPLETED`, `SKIPPED`, or `FAILED`.",
                                                "type": "string",
                                                "enum": [
                                                  "IN_PROGRESS",
                                                  "COMPLETED",
                                                  "FAILED",
                                                  "SKIPPED"
                                                ]
                                              },
                                              "testCaseContext": {
                                                "additionalProperties": false,
                                                "description": "Specifies the functional test case and included objects: condition, test request, and client profile.",
                                                "type": "object",
                                                "required": [
                                                  "testCaseId",
                                                  "order",
                                                  "testRequest",
                                                  "condition",
                                                  "clientProfile"
                                                ],
                                                "properties": {
                                                  "clientProfile": {
                                                    "additionalProperties": false,
                                                    "description": "Specifies a client profile included in the test case.",
                                                    "type": "object",
                                                    "required": [
                                                      "ipVersion",
                                                      "client"
                                                    ],
                                                    "properties": {
                                                      "client": {
                                                        "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                                        "type": "string",
                                                        "enum": [
                                                          "CHROME",
                                                          "CURL"
                                                        ]
                                                      },
                                                      "geoLocation": {
                                                        "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                                        "type": "string",
                                                        "enum": [
                                                          "US"
                                                        ]
                                                      },
                                                      "ipVersion": {
                                                        "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                                        "type": "string",
                                                        "enum": [
                                                          "IPV4",
                                                          "IPV6"
                                                        ]
                                                      }
                                                    },
                                                    "x-akamai": {
                                                      "file-path": "schemas/client-profile.yaml"
                                                    }
                                                  },
                                                  "condition": {
                                                    "additionalProperties": false,
                                                    "description": "Specifies a condition included in the test case.",
                                                    "type": "object",
                                                    "required": [
                                                      "conditionExpression"
                                                    ],
                                                    "properties": {
                                                      "conditionExpression": {
                                                        "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                                        "minLength": 1,
                                                        "type": "string"
                                                      },
                                                      "conditionExpressionResolved": {
                                                        "description": "Condition statement with resolved variables, if applicable.",
                                                        "minLength": 1,
                                                        "readOnly": true,
                                                        "type": "string"
                                                      }
                                                    },
                                                    "x-akamai": {
                                                      "file-path": "schemas/condition.yaml"
                                                    }
                                                  },
                                                  "createdBy": {
                                                    "description": "Username who created the item.",
                                                    "minLength": 1,
                                                    "readOnly": true,
                                                    "type": "string",
                                                    "x-akamai": {
                                                      "file-path": "schemas/createdBy.yaml"
                                                    }
                                                  },
                                                  "createdDate": {
                                                    "description": "ISO 8601 timestamp indicating when the item was created.",
                                                    "format": "date-time",
                                                    "readOnly": true,
                                                    "type": "string",
                                                    "x-akamai": {
                                                      "file-path": "schemas/createdDate.yaml"
                                                    }
                                                  },
                                                  "deletedBy": {
                                                    "description": "Username who last deleted the item.",
                                                    "minLength": 1,
                                                    "type": "string",
                                                    "x-akamai": {
                                                      "file-path": "schemas/deletedBy.yaml"
                                                    }
                                                  },
                                                  "deletedDate": {
                                                    "description": "ISO 8601 timestamp indicating when the item was deleted.",
                                                    "format": "date-time",
                                                    "type": "string",
                                                    "x-akamai": {
                                                      "file-path": "schemas/deletedDate.yaml"
                                                    }
                                                  },
                                                  "derivedTestCases": {
                                                    "description": "Derived test cases in the response when there is reference to variable group(s).",
                                                    "minItems": 0,
                                                    "readOnly": true,
                                                    "type": "array",
                                                    "items": {
                                                      "additionalProperties": false,
                                                      "description": "Specifies the functional derived test case when a variable group reference is present and included objects: condition, test request, and client profile.",
                                                      "type": "object",
                                                      "required": [
                                                        "testRequest",
                                                        "condition",
                                                        "clientProfile",
                                                        "order"
                                                      ],
                                                      "properties": {
                                                        "clientProfile": {
                                                          "additionalProperties": false,
                                                          "description": "Specifies a client profile included in the test case.",
                                                          "type": "object",
                                                          "required": [
                                                            "ipVersion",
                                                            "client"
                                                          ],
                                                          "properties": {
                                                            "client": {
                                                              "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                                              "type": "string",
                                                              "enum": [
                                                                "CHROME",
                                                                "CURL"
                                                              ]
                                                            },
                                                            "geoLocation": {
                                                              "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                                              "type": "string",
                                                              "enum": [
                                                                "US"
                                                              ]
                                                            },
                                                            "ipVersion": {
                                                              "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                                              "type": "string",
                                                              "enum": [
                                                                "IPV4",
                                                                "IPV6"
                                                              ]
                                                            }
                                                          },
                                                          "x-akamai": {
                                                            "file-path": "schemas/client-profile.yaml"
                                                          }
                                                        },
                                                        "condition": {
                                                          "additionalProperties": false,
                                                          "description": "Specifies a condition included in the test case.",
                                                          "type": "object",
                                                          "required": [
                                                            "conditionExpression"
                                                          ],
                                                          "properties": {
                                                            "conditionExpression": {
                                                              "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                                              "minLength": 1,
                                                              "type": "string"
                                                            },
                                                            "conditionExpressionResolved": {
                                                              "description": "Condition statement with resolved variables, if applicable.",
                                                              "minLength": 1,
                                                              "readOnly": true,
                                                              "type": "string"
                                                            }
                                                          },
                                                          "x-akamai": {
                                                            "file-path": "schemas/condition.yaml"
                                                          }
                                                        },
                                                        "order": {
                                                          "description": "Order of the derived test case. In stateful test suites, a test run's test cases execute in this order.  ",
                                                          "minimum": 0,
                                                          "readOnly": true,
                                                          "type": "integer"
                                                        },
                                                        "setVariables": {
                                                          "description": "Contains derived test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                                          "minItems": 0,
                                                          "type": "array",
                                                          "items": {
                                                            "additionalProperties": false,
                                                            "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                                            "type": "object",
                                                            "required": [
                                                              "variableId",
                                                              "variableName",
                                                              "variableValue"
                                                            ],
                                                            "properties": {
                                                              "variableId": {
                                                                "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                                                "minimum": 1,
                                                                "readOnly": true,
                                                                "type": "integer"
                                                              },
                                                              "variableName": {
                                                                "description": "Name of the variable.",
                                                                "maxLength": 100,
                                                                "minLength": 1,
                                                                "type": "string"
                                                              },
                                                              "variableValue": {
                                                                "description": "Value of the variable to resolve at runtime.",
                                                                "maxLength": 4000,
                                                                "minLength": 1,
                                                                "type": "string"
                                                              }
                                                            },
                                                            "x-akamai": {
                                                              "file-path": "schemas/set-variable.yaml"
                                                            }
                                                          }
                                                        },
                                                        "testRequest": {
                                                          "additionalProperties": false,
                                                          "description": "Specifies a test request included in the test case.",
                                                          "type": "object",
                                                          "required": [
                                                            "testRequestUrl",
                                                            "requestMethod"
                                                          ],
                                                          "properties": {
                                                            "encodeRequestBody": {
                                                              "default": true,
                                                              "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                                              "nullable": true,
                                                              "type": "boolean"
                                                            },
                                                            "requestBody": {
                                                              "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                                              "maxLength": 4000,
                                                              "minLength": 1,
                                                              "nullable": true,
                                                              "type": "string"
                                                            },
                                                            "requestBodyResolved": {
                                                              "description": "Value of test request body after resolving all variables.",
                                                              "minLength": 1,
                                                              "nullable": true,
                                                              "readOnly": true,
                                                              "type": "string"
                                                            },
                                                            "requestHeaders": {
                                                              "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                                              "minItems": 0,
                                                              "type": "array",
                                                              "items": {
                                                                "additionalProperties": false,
                                                                "type": "object",
                                                                "required": [
                                                                  "headerName",
                                                                  "headerValue",
                                                                  "headerAction"
                                                                ],
                                                                "properties": {
                                                                  "headerAction": {
                                                                    "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                                                    "type": "string",
                                                                    "enum": [
                                                                      "ADD",
                                                                      "MODIFY",
                                                                      "FILTER"
                                                                    ]
                                                                  },
                                                                  "headerName": {
                                                                    "description": "Name of the request header.",
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                  },
                                                                  "headerNameResolved": {
                                                                    "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                                                    "minLength": 1,
                                                                    "readOnly": true,
                                                                    "type": "string"
                                                                  },
                                                                  "headerValue": {
                                                                    "description": "Value of the request header.",
                                                                    "minLength": 1,
                                                                    "type": "string"
                                                                  },
                                                                  "headerValueResolved": {
                                                                    "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                                                    "minLength": 1,
                                                                    "readOnly": true,
                                                                    "type": "string"
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            "requestMethod": {
                                                              "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                                              "type": "string",
                                                              "enum": [
                                                                "HEAD",
                                                                "GET",
                                                                "POST"
                                                              ]
                                                            },
                                                            "tags": {
                                                              "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                                              "minItems": 0,
                                                              "type": "array",
                                                              "items": {
                                                                "minLength": 1,
                                                                "type": "string"
                                                              }
                                                            },
                                                            "testRequestUrl": {
                                                              "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                                              "maxLength": 2048,
                                                              "minLength": 1,
                                                              "type": "string"
                                                            },
                                                            "testRequestUrlResolved": {
                                                              "description": "Value of test request URL after resolving all variables.",
                                                              "minLength": 1,
                                                              "nullable": true,
                                                              "readOnly": true,
                                                              "type": "string"
                                                            }
                                                          },
                                                          "x-akamai": {
                                                            "file-path": "schemas/test-request.yaml"
                                                          }
                                                        }
                                                      },
                                                      "x-akamai": {
                                                        "file-path": "schemas/functional-derived-test-case.yaml"
                                                      }
                                                    }
                                                  },
                                                  "modifiedBy": {
                                                    "description": "Username who last modified the item.",
                                                    "minLength": 1,
                                                    "readOnly": true,
                                                    "type": "string",
                                                    "x-akamai": {
                                                      "file-path": "schemas/modifiedBy.yaml"
                                                    }
                                                  },
                                                  "modifiedDate": {
                                                    "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                                    "format": "date-time",
                                                    "readOnly": true,
                                                    "type": "string",
                                                    "x-akamai": {
                                                      "file-path": "schemas/modifiedDate.yaml"
                                                    }
                                                  },
                                                  "order": {
                                                    "description": "Order of the test case. In stateful test suites, a test run's test cases execute in this order.",
                                                    "minimum": 1,
                                                    "readOnly": true,
                                                    "type": "integer"
                                                  },
                                                  "setVariables": {
                                                    "description": "Contains test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                                    "minItems": 0,
                                                    "type": "array",
                                                    "items": {
                                                      "additionalProperties": false,
                                                      "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                                      "type": "object",
                                                      "required": [
                                                        "variableId",
                                                        "variableName",
                                                        "variableValue"
                                                      ],
                                                      "properties": {
                                                        "variableId": {
                                                          "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                                          "minimum": 1,
                                                          "readOnly": true,
                                                          "type": "integer"
                                                        },
                                                        "variableName": {
                                                          "description": "Name of the variable.",
                                                          "maxLength": 100,
                                                          "minLength": 1,
                                                          "type": "string"
                                                        },
                                                        "variableValue": {
                                                          "description": "Value of the variable to resolve at runtime.",
                                                          "maxLength": 4000,
                                                          "minLength": 1,
                                                          "type": "string"
                                                        }
                                                      },
                                                      "x-akamai": {
                                                        "file-path": "schemas/set-variable.yaml"
                                                      }
                                                    }
                                                  },
                                                  "testCaseId": {
                                                    "description": "Identifies a functional test case. To get this value, run the [List test cases](https://techdocs.akamai.com/test-ctr/reference/get-test-cases) operation.",
                                                    "minimum": 1,
                                                    "readOnly": true,
                                                    "type": "integer"
                                                  },
                                                  "testRequest": {
                                                    "additionalProperties": false,
                                                    "description": "Specifies a test request included in the test case.",
                                                    "type": "object",
                                                    "required": [
                                                      "testRequestUrl",
                                                      "requestMethod"
                                                    ],
                                                    "properties": {
                                                      "encodeRequestBody": {
                                                        "default": true,
                                                        "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                                        "nullable": true,
                                                        "type": "boolean"
                                                      },
                                                      "requestBody": {
                                                        "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                                        "maxLength": 4000,
                                                        "minLength": 1,
                                                        "nullable": true,
                                                        "type": "string"
                                                      },
                                                      "requestBodyResolved": {
                                                        "description": "Value of test request body after resolving all variables.",
                                                        "minLength": 1,
                                                        "nullable": true,
                                                        "readOnly": true,
                                                        "type": "string"
                                                      },
                                                      "requestHeaders": {
                                                        "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                                        "minItems": 0,
                                                        "type": "array",
                                                        "items": {
                                                          "additionalProperties": false,
                                                          "type": "object",
                                                          "required": [
                                                            "headerName",
                                                            "headerValue",
                                                            "headerAction"
                                                          ],
                                                          "properties": {
                                                            "headerAction": {
                                                              "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                                              "type": "string",
                                                              "enum": [
                                                                "ADD",
                                                                "MODIFY",
                                                                "FILTER"
                                                              ]
                                                            },
                                                            "headerName": {
                                                              "description": "Name of the request header.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                            },
                                                            "headerNameResolved": {
                                                              "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                                              "minLength": 1,
                                                              "readOnly": true,
                                                              "type": "string"
                                                            },
                                                            "headerValue": {
                                                              "description": "Value of the request header.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                            },
                                                            "headerValueResolved": {
                                                              "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                                              "minLength": 1,
                                                              "readOnly": true,
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "requestMethod": {
                                                        "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                                        "type": "string",
                                                        "enum": [
                                                          "HEAD",
                                                          "GET",
                                                          "POST"
                                                        ]
                                                      },
                                                      "tags": {
                                                        "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                                        "minItems": 0,
                                                        "type": "array",
                                                        "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                        }
                                                      },
                                                      "testRequestUrl": {
                                                        "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                                        "maxLength": 2048,
                                                        "minLength": 1,
                                                        "type": "string"
                                                      },
                                                      "testRequestUrlResolved": {
                                                        "description": "Value of test request URL after resolving all variables.",
                                                        "minLength": 1,
                                                        "nullable": true,
                                                        "readOnly": true,
                                                        "type": "string"
                                                      }
                                                    },
                                                    "x-akamai": {
                                                      "file-path": "schemas/test-request.yaml"
                                                    }
                                                  },
                                                  "warnings": {
                                                    "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807). Any warnings related to variable groups would be captured here.",
                                                    "minItems": 0,
                                                    "readOnly": true,
                                                    "type": "array",
                                                    "items": {
                                                      "additionalProperties": false,
                                                      "description": "Specifies the error that occurred.",
                                                      "type": "object",
                                                      "required": [
                                                        "type",
                                                        "title"
                                                      ],
                                                      "properties": {
                                                        "existingEntities": {
                                                          "description": "Lists objects included within the functional test case.",
                                                          "minItems": 0,
                                                          "type": "array",
                                                          "items": {
                                                            "type": "object"
                                                          }
                                                        },
                                                        "requestField": {
                                                          "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                                                          "minLength": 1,
                                                          "type": "string"
                                                        },
                                                        "requestObjects": {
                                                          "description": "Lists invalid request objects.",
                                                          "minItems": 0,
                                                          "type": "array",
                                                          "items": {
                                                            "type": "object"
                                                          }
                                                        },
                                                        "requestValues": {
                                                          "description": "Lists values corresponding to the `requestField`.",
                                                          "minItems": 0,
                                                          "type": "array",
                                                          "items": {
                                                            "anyOf": [
                                                              {
                                                                "title": "String",
                                                                "type": "string"
                                                              },
                                                              {
                                                                "title": "Integer",
                                                                "type": "integer"
                                                              },
                                                              {
                                                                "title": "Object",
                                                                "type": "object"
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        "title": {
                                                          "description": "Title of the error.",
                                                          "minLength": 1,
                                                          "type": "string"
                                                        },
                                                        "type": {
                                                          "description": "Type of error.",
                                                          "minLength": 1,
                                                          "type": "string"
                                                        }
                                                      },
                                                      "x-akamai": {
                                                        "file-path": "schemas/sub-problem.yaml"
                                                      }
                                                    }
                                                  }
                                                },
                                                "x-akamai": {
                                                  "file-path": "schemas/functional-test-case.yaml"
                                                }
                                              },
                                              "testCaseExecutionId": {
                                                "description": "Identifies the functional test case execution.",
                                                "minimum": 1,
                                                "type": "integer"
                                              },
                                              "testCaseId": {
                                                "description": "Identifies the functional test case.",
                                                "minimum": 1,
                                                "type": "integer"
                                              }
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/functional-derived-test-case-executions.yaml"
                                          }
                                        },
                                        "errors": {
                                          "description": "Lists details about an error.",
                                          "minItems": 0,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "title"
                                            ],
                                            "properties": {
                                              "requestField": {
                                                "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "requestValues": {
                                                "description": "Lists values corresponding to the `requestField`.",
                                                "minItems": 0,
                                                "type": "array",
                                                "items": {
                                                  "anyOf": [
                                                    {
                                                      "title": "String",
                                                      "type": "string"
                                                    },
                                                    {
                                                      "title": "Integer",
                                                      "type": "integer"
                                                    },
                                                    {
                                                      "title": "Object",
                                                      "type": "object"
                                                    }
                                                  ]
                                                }
                                              },
                                              "title": {
                                                "description": "Summary of the error.",
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "type": {
                                                "description": "Dot-notation explanation of the type of occurred error.",
                                                "minLength": 1,
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/error.yaml"
                                          }
                                        },
                                        "isReevaluationInProgress": {
                                          "description": "Whether the test case execution is being reevaluated.",
                                          "readOnly": true,
                                          "type": "boolean"
                                        },
                                        "resolvedSetVariables": {
                                          "description": "Contains information about variables that resolved as part of test case execution. It appears only for executions of functional test cases with the `COMPLETED` status.",
                                          "type": "object"
                                        },
                                        "status": {
                                          "description": "Test case objects' execution status. Possible values are: `IN_PROGRESS`, `COMPLETED`, `SKIPPED`, or `FAILED`.",
                                          "type": "string",
                                          "enum": [
                                            "IN_PROGRESS",
                                            "COMPLETED",
                                            "FAILED",
                                            "SKIPPED"
                                          ]
                                        },
                                        "testCaseContext": {
                                          "additionalProperties": false,
                                          "description": "Specifies the functional test case and included objects: condition, test request, and client profile.",
                                          "type": "object",
                                          "required": [
                                            "testCaseId",
                                            "order",
                                            "testRequest",
                                            "condition",
                                            "clientProfile"
                                          ],
                                          "properties": {
                                            "clientProfile": {
                                              "additionalProperties": false,
                                              "description": "Specifies a client profile included in the test case.",
                                              "type": "object",
                                              "required": [
                                                "ipVersion",
                                                "client"
                                              ],
                                              "properties": {
                                                "client": {
                                                  "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                                  "type": "string",
                                                  "enum": [
                                                    "CHROME",
                                                    "CURL"
                                                  ]
                                                },
                                                "geoLocation": {
                                                  "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                                  "type": "string",
                                                  "enum": [
                                                    "US"
                                                  ]
                                                },
                                                "ipVersion": {
                                                  "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                                  "type": "string",
                                                  "enum": [
                                                    "IPV4",
                                                    "IPV6"
                                                  ]
                                                }
                                              },
                                              "x-akamai": {
                                                "file-path": "schemas/client-profile.yaml"
                                              }
                                            },
                                            "condition": {
                                              "additionalProperties": false,
                                              "description": "Specifies a condition included in the test case.",
                                              "type": "object",
                                              "required": [
                                                "conditionExpression"
                                              ],
                                              "properties": {
                                                "conditionExpression": {
                                                  "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                                  "minLength": 1,
                                                  "type": "string"
                                                },
                                                "conditionExpressionResolved": {
                                                  "description": "Condition statement with resolved variables, if applicable.",
                                                  "minLength": 1,
                                                  "readOnly": true,
                                                  "type": "string"
                                                }
                                              },
                                              "x-akamai": {
                                                "file-path": "schemas/condition.yaml"
                                              }
                                            },
                                            "createdBy": {
                                              "description": "Username who created the item.",
                                              "minLength": 1,
                                              "readOnly": true,
                                              "type": "string",
                                              "x-akamai": {
                                                "file-path": "schemas/createdBy.yaml"
                                              }
                                            },
                                            "createdDate": {
                                              "description": "ISO 8601 timestamp indicating when the item was created.",
                                              "format": "date-time",
                                              "readOnly": true,
                                              "type": "string",
                                              "x-akamai": {
                                                "file-path": "schemas/createdDate.yaml"
                                              }
                                            },
                                            "deletedBy": {
                                              "description": "Username who last deleted the item.",
                                              "minLength": 1,
                                              "type": "string",
                                              "x-akamai": {
                                                "file-path": "schemas/deletedBy.yaml"
                                              }
                                            },
                                            "deletedDate": {
                                              "description": "ISO 8601 timestamp indicating when the item was deleted.",
                                              "format": "date-time",
                                              "type": "string",
                                              "x-akamai": {
                                                "file-path": "schemas/deletedDate.yaml"
                                              }
                                            },
                                            "derivedTestCases": {
                                              "description": "Derived test cases in the response when there is reference to variable group(s).",
                                              "minItems": 0,
                                              "readOnly": true,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "description": "Specifies the functional derived test case when a variable group reference is present and included objects: condition, test request, and client profile.",
                                                "type": "object",
                                                "required": [
                                                  "testRequest",
                                                  "condition",
                                                  "clientProfile",
                                                  "order"
                                                ],
                                                "properties": {
                                                  "clientProfile": {
                                                    "additionalProperties": false,
                                                    "description": "Specifies a client profile included in the test case.",
                                                    "type": "object",
                                                    "required": [
                                                      "ipVersion",
                                                      "client"
                                                    ],
                                                    "properties": {
                                                      "client": {
                                                        "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                                        "type": "string",
                                                        "enum": [
                                                          "CHROME",
                                                          "CURL"
                                                        ]
                                                      },
                                                      "geoLocation": {
                                                        "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                                        "type": "string",
                                                        "enum": [
                                                          "US"
                                                        ]
                                                      },
                                                      "ipVersion": {
                                                        "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                                        "type": "string",
                                                        "enum": [
                                                          "IPV4",
                                                          "IPV6"
                                                        ]
                                                      }
                                                    },
                                                    "x-akamai": {
                                                      "file-path": "schemas/client-profile.yaml"
                                                    }
                                                  },
                                                  "condition": {
                                                    "additionalProperties": false,
                                                    "description": "Specifies a condition included in the test case.",
                                                    "type": "object",
                                                    "required": [
                                                      "conditionExpression"
                                                    ],
                                                    "properties": {
                                                      "conditionExpression": {
                                                        "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                                        "minLength": 1,
                                                        "type": "string"
                                                      },
                                                      "conditionExpressionResolved": {
                                                        "description": "Condition statement with resolved variables, if applicable.",
                                                        "minLength": 1,
                                                        "readOnly": true,
                                                        "type": "string"
                                                      }
                                                    },
                                                    "x-akamai": {
                                                      "file-path": "schemas/condition.yaml"
                                                    }
                                                  },
                                                  "order": {
                                                    "description": "Order of the derived test case. In stateful test suites, a test run's test cases execute in this order.  ",
                                                    "minimum": 0,
                                                    "readOnly": true,
                                                    "type": "integer"
                                                  },
                                                  "setVariables": {
                                                    "description": "Contains derived test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                                    "minItems": 0,
                                                    "type": "array",
                                                    "items": {
                                                      "additionalProperties": false,
                                                      "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                                      "type": "object",
                                                      "required": [
                                                        "variableId",
                                                        "variableName",
                                                        "variableValue"
                                                      ],
                                                      "properties": {
                                                        "variableId": {
                                                          "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                                          "minimum": 1,
                                                          "readOnly": true,
                                                          "type": "integer"
                                                        },
                                                        "variableName": {
                                                          "description": "Name of the variable.",
                                                          "maxLength": 100,
                                                          "minLength": 1,
                                                          "type": "string"
                                                        },
                                                        "variableValue": {
                                                          "description": "Value of the variable to resolve at runtime.",
                                                          "maxLength": 4000,
                                                          "minLength": 1,
                                                          "type": "string"
                                                        }
                                                      },
                                                      "x-akamai": {
                                                        "file-path": "schemas/set-variable.yaml"
                                                      }
                                                    }
                                                  },
                                                  "testRequest": {
                                                    "additionalProperties": false,
                                                    "description": "Specifies a test request included in the test case.",
                                                    "type": "object",
                                                    "required": [
                                                      "testRequestUrl",
                                                      "requestMethod"
                                                    ],
                                                    "properties": {
                                                      "encodeRequestBody": {
                                                        "default": true,
                                                        "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                                        "nullable": true,
                                                        "type": "boolean"
                                                      },
                                                      "requestBody": {
                                                        "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                                        "maxLength": 4000,
                                                        "minLength": 1,
                                                        "nullable": true,
                                                        "type": "string"
                                                      },
                                                      "requestBodyResolved": {
                                                        "description": "Value of test request body after resolving all variables.",
                                                        "minLength": 1,
                                                        "nullable": true,
                                                        "readOnly": true,
                                                        "type": "string"
                                                      },
                                                      "requestHeaders": {
                                                        "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                                        "minItems": 0,
                                                        "type": "array",
                                                        "items": {
                                                          "additionalProperties": false,
                                                          "type": "object",
                                                          "required": [
                                                            "headerName",
                                                            "headerValue",
                                                            "headerAction"
                                                          ],
                                                          "properties": {
                                                            "headerAction": {
                                                              "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                                              "type": "string",
                                                              "enum": [
                                                                "ADD",
                                                                "MODIFY",
                                                                "FILTER"
                                                              ]
                                                            },
                                                            "headerName": {
                                                              "description": "Name of the request header.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                            },
                                                            "headerNameResolved": {
                                                              "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                                              "minLength": 1,
                                                              "readOnly": true,
                                                              "type": "string"
                                                            },
                                                            "headerValue": {
                                                              "description": "Value of the request header.",
                                                              "minLength": 1,
                                                              "type": "string"
                                                            },
                                                            "headerValueResolved": {
                                                              "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                                              "minLength": 1,
                                                              "readOnly": true,
                                                              "type": "string"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "requestMethod": {
                                                        "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                                        "type": "string",
                                                        "enum": [
                                                          "HEAD",
                                                          "GET",
                                                          "POST"
                                                        ]
                                                      },
                                                      "tags": {
                                                        "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                                        "minItems": 0,
                                                        "type": "array",
                                                        "items": {
                                                          "minLength": 1,
                                                          "type": "string"
                                                        }
                                                      },
                                                      "testRequestUrl": {
                                                        "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                                        "maxLength": 2048,
                                                        "minLength": 1,
                                                        "type": "string"
                                                      },
                                                      "testRequestUrlResolved": {
                                                        "description": "Value of test request URL after resolving all variables.",
                                                        "minLength": 1,
                                                        "nullable": true,
                                                        "readOnly": true,
                                                        "type": "string"
                                                      }
                                                    },
                                                    "x-akamai": {
                                                      "file-path": "schemas/test-request.yaml"
                                                    }
                                                  }
                                                },
                                                "x-akamai": {
                                                  "file-path": "schemas/functional-derived-test-case.yaml"
                                                }
                                              }
                                            },
                                            "modifiedBy": {
                                              "description": "Username who last modified the item.",
                                              "minLength": 1,
                                              "readOnly": true,
                                              "type": "string",
                                              "x-akamai": {
                                                "file-path": "schemas/modifiedBy.yaml"
                                              }
                                            },
                                            "modifiedDate": {
                                              "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                              "format": "date-time",
                                              "readOnly": true,
                                              "type": "string",
                                              "x-akamai": {
                                                "file-path": "schemas/modifiedDate.yaml"
                                              }
                                            },
                                            "order": {
                                              "description": "Order of the test case. In stateful test suites, a test run's test cases execute in this order.",
                                              "minimum": 1,
                                              "readOnly": true,
                                              "type": "integer"
                                            },
                                            "setVariables": {
                                              "description": "Contains test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                              "minItems": 0,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                                "type": "object",
                                                "required": [
                                                  "variableId",
                                                  "variableName",
                                                  "variableValue"
                                                ],
                                                "properties": {
                                                  "variableId": {
                                                    "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                                    "minimum": 1,
                                                    "readOnly": true,
                                                    "type": "integer"
                                                  },
                                                  "variableName": {
                                                    "description": "Name of the variable.",
                                                    "maxLength": 100,
                                                    "minLength": 1,
                                                    "type": "string"
                                                  },
                                                  "variableValue": {
                                                    "description": "Value of the variable to resolve at runtime.",
                                                    "maxLength": 4000,
                                                    "minLength": 1,
                                                    "type": "string"
                                                  }
                                                },
                                                "x-akamai": {
                                                  "file-path": "schemas/set-variable.yaml"
                                                }
                                              }
                                            },
                                            "testCaseId": {
                                              "description": "Identifies a functional test case. To get this value, run the [List test cases](https://techdocs.akamai.com/test-ctr/reference/get-test-cases) operation.",
                                              "minimum": 1,
                                              "readOnly": true,
                                              "type": "integer"
                                            },
                                            "testRequest": {
                                              "additionalProperties": false,
                                              "description": "Specifies a test request included in the test case.",
                                              "type": "object",
                                              "required": [
                                                "testRequestUrl",
                                                "requestMethod"
                                              ],
                                              "properties": {
                                                "encodeRequestBody": {
                                                  "default": true,
                                                  "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                                  "nullable": true,
                                                  "type": "boolean"
                                                },
                                                "requestBody": {
                                                  "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                                  "maxLength": 4000,
                                                  "minLength": 1,
                                                  "nullable": true,
                                                  "type": "string"
                                                },
                                                "requestBodyResolved": {
                                                  "description": "Value of test request body after resolving all variables.",
                                                  "minLength": 1,
                                                  "nullable": true,
                                                  "readOnly": true,
                                                  "type": "string"
                                                },
                                                "requestHeaders": {
                                                  "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                                  "minItems": 0,
                                                  "type": "array",
                                                  "items": {
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                      "headerName",
                                                      "headerValue",
                                                      "headerAction"
                                                    ],
                                                    "properties": {
                                                      "headerAction": {
                                                        "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                                        "type": "string",
                                                        "enum": [
                                                          "ADD",
                                                          "MODIFY",
                                                          "FILTER"
                                                        ]
                                                      },
                                                      "headerName": {
                                                        "description": "Name of the request header.",
                                                        "minLength": 1,
                                                        "type": "string"
                                                      },
                                                      "headerNameResolved": {
                                                        "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                                        "minLength": 1,
                                                        "readOnly": true,
                                                        "type": "string"
                                                      },
                                                      "headerValue": {
                                                        "description": "Value of the request header.",
                                                        "minLength": 1,
                                                        "type": "string"
                                                      },
                                                      "headerValueResolved": {
                                                        "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                                        "minLength": 1,
                                                        "readOnly": true,
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "requestMethod": {
                                                  "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                                  "type": "string",
                                                  "enum": [
                                                    "HEAD",
                                                    "GET",
                                                    "POST"
                                                  ]
                                                },
                                                "tags": {
                                                  "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                                  "minItems": 0,
                                                  "type": "array",
                                                  "items": {
                                                    "minLength": 1,
                                                    "type": "string"
                                                  }
                                                },
                                                "testRequestUrl": {
                                                  "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                                  "maxLength": 2048,
                                                  "minLength": 1,
                                                  "type": "string"
                                                },
                                                "testRequestUrlResolved": {
                                                  "description": "Value of test request URL after resolving all variables.",
                                                  "minLength": 1,
                                                  "nullable": true,
                                                  "readOnly": true,
                                                  "type": "string"
                                                }
                                              },
                                              "x-akamai": {
                                                "file-path": "schemas/test-request.yaml"
                                              }
                                            },
                                            "warnings": {
                                              "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807). Any warnings related to variable groups would be captured here.",
                                              "minItems": 0,
                                              "readOnly": true,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "description": "Specifies the error that occurred.",
                                                "type": "object",
                                                "required": [
                                                  "type",
                                                  "title"
                                                ],
                                                "properties": {
                                                  "existingEntities": {
                                                    "description": "Lists objects included within the functional test case.",
                                                    "minItems": 0,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object"
                                                    }
                                                  },
                                                  "requestField": {
                                                    "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                                                    "minLength": 1,
                                                    "type": "string"
                                                  },
                                                  "requestObjects": {
                                                    "description": "Lists invalid request objects.",
                                                    "minItems": 0,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object"
                                                    }
                                                  },
                                                  "requestValues": {
                                                    "description": "Lists values corresponding to the `requestField`.",
                                                    "minItems": 0,
                                                    "type": "array",
                                                    "items": {
                                                      "anyOf": [
                                                        {
                                                          "title": "String",
                                                          "type": "string"
                                                        },
                                                        {
                                                          "title": "Integer",
                                                          "type": "integer"
                                                        },
                                                        {
                                                          "title": "Object",
                                                          "type": "object"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "title": {
                                                    "description": "Title of the error.",
                                                    "minLength": 1,
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "description": "Type of error.",
                                                    "minLength": 1,
                                                    "type": "string"
                                                  }
                                                },
                                                "x-akamai": {
                                                  "file-path": "schemas/sub-problem.yaml"
                                                }
                                              }
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/functional-test-case.yaml"
                                          }
                                        },
                                        "testCaseExecutionId": {
                                          "description": "Identifies the functional test case execution.",
                                          "minimum": 1,
                                          "type": "integer"
                                        },
                                        "testCaseId": {
                                          "description": "Identifies the functional test case.",
                                          "minimum": 1,
                                          "type": "integer"
                                        }
                                      }
                                    },
                                    "x-akamai": {
                                      "file-path": "schemas/functional-test-case-executions.yaml"
                                    }
                                  },
                                  "testSuiteContext": {
                                    "additionalProperties": false,
                                    "description": "Specifies a test suite.",
                                    "type": "object",
                                    "required": [
                                      "testSuiteId",
                                      "testSuiteName",
                                      "isLocked",
                                      "isStateful",
                                      "executableTestCaseCount"
                                    ],
                                    "properties": {
                                      "configs": {
                                        "additionalProperties": false,
                                        "default": null,
                                        "description": "Specifies the Property Manager property version associated with the test suite. It's `null` for test suites with no properties associated. ",
                                        "nullable": true,
                                        "type": "object",
                                        "required": [
                                          "propertyManager"
                                        ],
                                        "properties": {
                                          "propertyManager": {
                                            "additionalProperties": false,
                                            "description": "Specifies the property version associated with the test suite.",
                                            "type": "object",
                                            "required": [
                                              "propertyId",
                                              "propertyName",
                                              "propertyVersion"
                                            ],
                                            "properties": {
                                              "propertyId": {
                                                "description": "Identifies a Property Manager property.",
                                                "minimum": 1,
                                                "type": "integer"
                                              },
                                              "propertyName": {
                                                "description": "Name of the property.",
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "propertyVersion": {
                                                "description": "Version of the property.",
                                                "minimum": 1,
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        "x-akamai": {
                                          "file-path": "schemas/configs.yaml"
                                        }
                                      },
                                      "createdBy": {
                                        "description": "Username who created the item.",
                                        "minLength": 1,
                                        "readOnly": true,
                                        "type": "string",
                                        "x-akamai": {
                                          "file-path": "schemas/createdBy.yaml"
                                        }
                                      },
                                      "createdDate": {
                                        "description": "ISO 8601 timestamp indicating when the item was created.",
                                        "format": "date-time",
                                        "readOnly": true,
                                        "type": "string",
                                        "x-akamai": {
                                          "file-path": "schemas/createdDate.yaml"
                                        }
                                      },
                                      "deletedBy": {
                                        "description": "Username who last deleted the item.",
                                        "minLength": 1,
                                        "type": "string",
                                        "x-akamai": {
                                          "file-path": "schemas/deletedBy.yaml"
                                        }
                                      },
                                      "deletedDate": {
                                        "description": "ISO 8601 timestamp indicating when the item was deleted.",
                                        "format": "date-time",
                                        "type": "string",
                                        "x-akamai": {
                                          "file-path": "schemas/deletedDate.yaml"
                                        }
                                      },
                                      "executableTestCaseCount": {
                                        "description": "Number of included test cases executable in a test run. To learn more, see [Variable groups](https://techdocs.akamai.com/test-ctr/reference/variables-overview#variable-groups).",
                                        "minimum": 0,
                                        "readOnly": true,
                                        "type": "integer"
                                      },
                                      "isLocked": {
                                        "description": "Locks the test suite so that only designated owners or editors can modify it.",
                                        "type": "boolean"
                                      },
                                      "isStateful": {
                                        "description": "Sets the test suite to be run statefully, retaining cookies and session data for subsequent test cases within the test suite.",
                                        "type": "boolean"
                                      },
                                      "modifiedBy": {
                                        "description": "Username who last modified the item.",
                                        "minLength": 1,
                                        "readOnly": true,
                                        "type": "string",
                                        "x-akamai": {
                                          "file-path": "schemas/modifiedBy.yaml"
                                        }
                                      },
                                      "modifiedDate": {
                                        "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                        "format": "date-time",
                                        "readOnly": true,
                                        "type": "string",
                                        "x-akamai": {
                                          "file-path": "schemas/modifiedDate.yaml"
                                        }
                                      },
                                      "testSuiteDescription": {
                                        "default": null,
                                        "description": "Description of the test suite. It's `null` for test suites without descriptions. ",
                                        "maxLength": 4000,
                                        "minLength": 1,
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "testSuiteId": {
                                        "description": "Identifies a test suite.",
                                        "minimum": 1,
                                        "readOnly": true,
                                        "type": "integer"
                                      },
                                      "testSuiteName": {
                                        "description": "Unique name for each test suite.",
                                        "maxLength": 100,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "variables": {
                                        "description": "Variables used in the test run.",
                                        "minItems": 0,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variables appear with `{{variableName}}` syntax.",
                                          "title": "Single variable",
                                          "type": "object",
                                          "required": [
                                            "variableId",
                                            "variableName",
                                            "variableValue",
                                            "isDynamicallyUsed"
                                          ],
                                          "properties": {
                                            "createdBy": {
                                              "description": "Username who created the item.",
                                              "minLength": 1,
                                              "readOnly": true,
                                              "type": "string",
                                              "x-akamai": {
                                                "file-path": "schemas/createdBy.yaml"
                                              }
                                            },
                                            "createdDate": {
                                              "description": "ISO 8601 timestamp indicating when the item was created.",
                                              "format": "date-time",
                                              "readOnly": true,
                                              "type": "string",
                                              "x-akamai": {
                                                "file-path": "schemas/createdDate.yaml"
                                              }
                                            },
                                            "isDynamicallyUsed": {
                                              "description": "Whether the variable in `setVariables` is assigned dynamically.",
                                              "type": "boolean"
                                            },
                                            "modifiedBy": {
                                              "description": "Username who last modified the item.",
                                              "minLength": 1,
                                              "readOnly": true,
                                              "type": "string",
                                              "x-akamai": {
                                                "file-path": "schemas/modifiedBy.yaml"
                                              }
                                            },
                                            "modifiedDate": {
                                              "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                              "format": "date-time",
                                              "readOnly": true,
                                              "type": "string",
                                              "x-akamai": {
                                                "file-path": "schemas/modifiedDate.yaml"
                                              }
                                            },
                                            "variableId": {
                                              "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                              "minimum": 1,
                                              "readOnly": true,
                                              "type": "integer"
                                            },
                                            "variableName": {
                                              "description": "Name of the variable.",
                                              "maxLength": 100,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "variableValue": {
                                              "description": "Value of the variable.",
                                              "maxLength": 4000,
                                              "minLength": 1,
                                              "type": "string"
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/variable.yaml"
                                          }
                                        }
                                      }
                                    },
                                    "x-akamai": {
                                      "file-path": "schemas/test-suite-context.yaml"
                                    }
                                  },
                                  "testSuiteExecutionId": {
                                    "description": "Identifies a test suite execution.",
                                    "minimum": 1,
                                    "type": "integer"
                                  },
                                  "testSuiteId": {
                                    "description": "Identifies a test suite that executed.",
                                    "minimum": 1,
                                    "type": "integer"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/test-suite-execution.yaml"
                                }
                              }
                            }
                          }
                        },
                        "status": {
                          "description": "Functional objects' execution status. Possible values are: `IN_PROGRESS`, `COMPLETED`, `FAILED`, or `COMPLETED_WITH_UNEXPECTED_RESULTS`.",
                          "type": "string",
                          "enum": [
                            "IN_PROGRESS",
                            "COMPLETED",
                            "FAILED",
                            "COMPLETED_WITH_UNEXPECTED_RESULTS"
                          ]
                        },
                        "testCaseExecution": {
                          "additionalProperties": false,
                          "description": "Specifies functional test cases included in the test suite. If you provide `testCaseExecutions`, the API considers only those test cases under the current test run. If you omit `testCaseExecutions`, then all test cases execute within this test suite.",
                          "type": "object",
                          "required": [
                            "testRequest",
                            "clientProfile",
                            "condition",
                            "status",
                            "testCaseExecutionId"
                          ],
                          "properties": {
                            "clientProfile": {
                              "additionalProperties": false,
                              "description": "Specifies a client profile included in the test case.",
                              "type": "object",
                              "required": [
                                "ipVersion",
                                "client"
                              ],
                              "properties": {
                                "client": {
                                  "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                  "type": "string",
                                  "enum": [
                                    "CHROME",
                                    "CURL"
                                  ]
                                },
                                "clientVersion": {
                                  "description": "Client version of `CHROME` or `CURL` used to execute the test run.",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "geoLocation": {
                                  "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                  "type": "string",
                                  "enum": [
                                    "US"
                                  ]
                                },
                                "ipVersion": {
                                  "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                  "type": "string",
                                  "enum": [
                                    "IPV4",
                                    "IPV6"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/test-run-get-client-profile.yaml"
                              }
                            },
                            "condition": {
                              "additionalProperties": false,
                              "description": "Specifies a condition included in the test case.",
                              "type": "object",
                              "required": [
                                "conditionExpression"
                              ],
                              "properties": {
                                "conditionExpression": {
                                  "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "conditionExpressionResolved": {
                                  "description": "Condition statement with resolved variables, if applicable.",
                                  "minLength": 1,
                                  "readOnly": true,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/condition.yaml"
                              }
                            },
                            "conditionEvaluationResult": {
                              "additionalProperties": false,
                              "description": "Specifies evaluation of conditions. It appears only for executions of functional test cases with the `COMPLETED` status.",
                              "type": "object",
                              "required": [
                                "result",
                                "actualConditionData"
                              ],
                              "properties": {
                                "actualConditionData": {
                                  "description": "Lists condition data collected when the functional test case URL executed.",
                                  "minItems": 1,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "value"
                                    ],
                                    "properties": {
                                      "name": {
                                        "description": "Name of the condition data.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "Value of the condition data.",
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "result": {
                                  "description": "Result after evaluating the conditions. Possible values are `PASSED` for conditions detected during the test run, `FAILED` for those undetected, `ERROR_OCCURRED` if the API couldn't execute the test run due to a system error, or `INCONCLUSIVE` for the conditions not able to evaluate.",
                                  "type": "string",
                                  "enum": [
                                    "PASSED",
                                    "FAILED",
                                    "ERROR_OCCURRED",
                                    "INCONCLUSIVE"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/condition-evaluation-result.yaml"
                              }
                            },
                            "errors": {
                              "description": "Lists details about an error.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "type",
                                  "title"
                                ],
                                "properties": {
                                  "requestField": {
                                    "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "requestValues": {
                                    "description": "Lists values corresponding to the `requestField`.",
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "title": "String",
                                          "type": "string"
                                        },
                                        {
                                          "title": "Integer",
                                          "type": "integer"
                                        },
                                        {
                                          "title": "Object",
                                          "type": "object"
                                        }
                                      ]
                                    }
                                  },
                                  "title": {
                                    "description": "Summary of the error.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Dot-notation explanation of the type of occurred error.",
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/error.yaml"
                              }
                            },
                            "status": {
                              "description": "Test case objects' execution status. Possible values are: `IN_PROGRESS`, `COMPLETED`, `SKIPPED`, or `FAILED`.",
                              "type": "string",
                              "enum": [
                                "IN_PROGRESS",
                                "COMPLETED",
                                "FAILED",
                                "SKIPPED"
                              ]
                            },
                            "testCaseExecutionId": {
                              "description": "Identifies the functional test case execution.",
                              "minimum": 1,
                              "readOnly": true,
                              "type": "integer"
                            },
                            "testRequest": {
                              "additionalProperties": false,
                              "description": "Specifies a test request included in the test case.",
                              "type": "object",
                              "required": [
                                "testRequestUrl",
                                "requestMethod"
                              ],
                              "properties": {
                                "encodeRequestBody": {
                                  "default": true,
                                  "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                  "nullable": true,
                                  "type": "boolean"
                                },
                                "requestBody": {
                                  "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                  "maxLength": 4000,
                                  "minLength": 1,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "requestBodyResolved": {
                                  "description": "Value of test request body after resolving all variables.",
                                  "minLength": 1,
                                  "nullable": true,
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "requestHeaders": {
                                  "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                      "headerName",
                                      "headerValue",
                                      "headerAction"
                                    ],
                                    "properties": {
                                      "headerAction": {
                                        "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                        "type": "string",
                                        "enum": [
                                          "ADD",
                                          "MODIFY",
                                          "FILTER"
                                        ]
                                      },
                                      "headerName": {
                                        "description": "Name of the request header.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "headerNameResolved": {
                                        "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                        "minLength": 1,
                                        "readOnly": true,
                                        "type": "string"
                                      },
                                      "headerValue": {
                                        "description": "Value of the request header.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "headerValueResolved": {
                                        "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                        "minLength": 1,
                                        "readOnly": true,
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "requestMethod": {
                                  "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                  "type": "string",
                                  "enum": [
                                    "HEAD",
                                    "GET",
                                    "POST"
                                  ]
                                },
                                "tags": {
                                  "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                },
                                "testRequestUrl": {
                                  "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                  "maxLength": 2048,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "testRequestUrlResolved": {
                                  "description": "Value of test request URL after resolving all variables.",
                                  "minLength": 1,
                                  "nullable": true,
                                  "readOnly": true,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/test-request.yaml"
                              }
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/functional-test-case-execution-simple.yaml"
                          }
                        },
                        "testSuiteExecutions": {
                          "description": "Lists test suites executed during the test run.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "Specifies the test suite executed during the test run.",
                            "type": "object",
                            "required": [
                              "status",
                              "testSuiteId",
                              "testCaseExecutions",
                              "testSuiteExecutionId"
                            ],
                            "properties": {
                              "completedDate": {
                                "description": "ISO 8601 timestamp indicating when the test run completed.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "status": {
                                "description": "Test suite's execution status. Possible values are: `IN_PROGRESS`, `COMPLETED`, `SKIPPED`, or `FAILED`.",
                                "type": "string",
                                "enum": [
                                  "IN_PROGRESS",
                                  "COMPLETED",
                                  "FAILED",
                                  "SKIPPED"
                                ]
                              },
                              "testCaseExecutions": {
                                "description": "Lists functional test cases executed during a test run.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "required": [
                                    "status",
                                    "testCaseId",
                                    "testCaseExecutionId"
                                  ],
                                  "properties": {
                                    "completedDate": {
                                      "description": "ISO 8601 timestamp indicating when the test run completed.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "conditionEvaluationResult": {
                                      "additionalProperties": false,
                                      "description": "Specifies evaluation of conditions. It appears only for executions of functional test cases with the `COMPLETED` status.",
                                      "type": "object",
                                      "required": [
                                        "result",
                                        "actualConditionData"
                                      ],
                                      "properties": {
                                        "actualConditionData": {
                                          "description": "Lists condition data collected when the functional test case URL executed.",
                                          "minItems": 1,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "Name of the condition data.",
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "Value of the condition data.",
                                                "minLength": 1,
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "result": {
                                          "description": "Result after evaluating the conditions. Possible values are `PASSED` for conditions detected during the test run, `FAILED` for those undetected, `ERROR_OCCURRED` if the API couldn't execute the test run due to a system error, or `INCONCLUSIVE` for the conditions not able to evaluate.",
                                          "type": "string",
                                          "enum": [
                                            "PASSED",
                                            "FAILED",
                                            "ERROR_OCCURRED",
                                            "INCONCLUSIVE"
                                          ]
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/condition-evaluation-result.yaml"
                                      }
                                    },
                                    "derivedTestCaseExecutions": {
                                      "description": "Lists functional derived test cases executed during a test run.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "type": "object",
                                        "required": [
                                          "status",
                                          "testCaseId"
                                        ],
                                        "properties": {
                                          "completedDate": {
                                            "description": "ISO 8601 timestamp indicating when the test run completed.",
                                            "format": "date-time",
                                            "type": "string"
                                          },
                                          "conditionEvaluationResult": {
                                            "additionalProperties": false,
                                            "description": "Specifies evaluation of conditions. It appears only for executions of functional test cases with the `COMPLETED` status.",
                                            "type": "object",
                                            "required": [
                                              "result",
                                              "actualConditionData"
                                            ],
                                            "properties": {
                                              "actualConditionData": {
                                                "description": "Lists condition data collected when the functional test case URL executed.",
                                                "minItems": 1,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "required": [
                                                    "name",
                                                    "value"
                                                  ],
                                                  "properties": {
                                                    "name": {
                                                      "description": "Name of the condition data.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "description": "Value of the condition data.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              },
                                              "result": {
                                                "description": "Result after evaluating the conditions. Possible values are `PASSED` for conditions detected during the test run, `FAILED` for those undetected, `ERROR_OCCURRED` if the API couldn't execute the test run due to a system error, or `INCONCLUSIVE` for the conditions not able to evaluate.",
                                                "type": "string",
                                                "enum": [
                                                  "PASSED",
                                                  "FAILED",
                                                  "ERROR_OCCURRED",
                                                  "INCONCLUSIVE"
                                                ]
                                              }
                                            },
                                            "x-akamai": {
                                              "file-path": "schemas/condition-evaluation-result.yaml"
                                            }
                                          },
                                          "errors": {
                                            "description": "Lists details about an error.",
                                            "minItems": 0,
                                            "type": "array",
                                            "items": {
                                              "additionalProperties": false,
                                              "type": "object",
                                              "required": [
                                                "type",
                                                "title"
                                              ],
                                              "properties": {
                                                "requestField": {
                                                  "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                                                  "minLength": 1,
                                                  "type": "string"
                                                },
                                                "requestValues": {
                                                  "description": "Lists values corresponding to the `requestField`.",
                                                  "minItems": 0,
                                                  "type": "array",
                                                  "items": {
                                                    "anyOf": [
                                                      {
                                                        "title": "String",
                                                        "type": "string"
                                                      },
                                                      {
                                                        "title": "Integer",
                                                        "type": "integer"
                                                      },
                                                      {
                                                        "title": "Object",
                                                        "type": "object"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "title": {
                                                  "description": "Summary of the error.",
                                                  "minLength": 1,
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "description": "Dot-notation explanation of the type of occurred error.",
                                                  "minLength": 1,
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "x-akamai": {
                                              "file-path": "schemas/error.yaml"
                                            }
                                          },
                                          "resolvedSetVariables": {
                                            "description": "Contains information about variables that resolved as part of test case execution. It appears only for executions of functional test cases with the `COMPLETED` status.",
                                            "type": "object"
                                          },
                                          "status": {
                                            "description": "Test case objects' execution status. Possible values are: `IN_PROGRESS`, `COMPLETED`, `SKIPPED`, or `FAILED`.",
                                            "type": "string",
                                            "enum": [
                                              "IN_PROGRESS",
                                              "COMPLETED",
                                              "FAILED",
                                              "SKIPPED"
                                            ]
                                          },
                                          "testCaseContext": {
                                            "additionalProperties": false,
                                            "description": "Specifies the functional test case and included objects: condition, test request, and client profile.",
                                            "type": "object",
                                            "required": [
                                              "testCaseId",
                                              "order",
                                              "testRequest",
                                              "condition",
                                              "clientProfile"
                                            ],
                                            "properties": {
                                              "clientProfile": {
                                                "additionalProperties": false,
                                                "description": "Specifies a client profile included in the test case.",
                                                "type": "object",
                                                "required": [
                                                  "ipVersion",
                                                  "client"
                                                ],
                                                "properties": {
                                                  "client": {
                                                    "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                                    "type": "string",
                                                    "enum": [
                                                      "CHROME",
                                                      "CURL"
                                                    ]
                                                  },
                                                  "geoLocation": {
                                                    "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                                    "type": "string",
                                                    "enum": [
                                                      "US"
                                                    ]
                                                  },
                                                  "ipVersion": {
                                                    "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                                    "type": "string",
                                                    "enum": [
                                                      "IPV4",
                                                      "IPV6"
                                                    ]
                                                  }
                                                },
                                                "x-akamai": {
                                                  "file-path": "schemas/client-profile.yaml"
                                                }
                                              },
                                              "condition": {
                                                "additionalProperties": false,
                                                "description": "Specifies a condition included in the test case.",
                                                "type": "object",
                                                "required": [
                                                  "conditionExpression"
                                                ],
                                                "properties": {
                                                  "conditionExpression": {
                                                    "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                                    "minLength": 1,
                                                    "type": "string"
                                                  },
                                                  "conditionExpressionResolved": {
                                                    "description": "Condition statement with resolved variables, if applicable.",
                                                    "minLength": 1,
                                                    "readOnly": true,
                                                    "type": "string"
                                                  }
                                                },
                                                "x-akamai": {
                                                  "file-path": "schemas/condition.yaml"
                                                }
                                              },
                                              "createdBy": {
                                                "description": "Username who created the item.",
                                                "minLength": 1,
                                                "readOnly": true,
                                                "type": "string",
                                                "x-akamai": {
                                                  "file-path": "schemas/createdBy.yaml"
                                                }
                                              },
                                              "createdDate": {
                                                "description": "ISO 8601 timestamp indicating when the item was created.",
                                                "format": "date-time",
                                                "readOnly": true,
                                                "type": "string",
                                                "x-akamai": {
                                                  "file-path": "schemas/createdDate.yaml"
                                                }
                                              },
                                              "deletedBy": {
                                                "description": "Username who last deleted the item.",
                                                "minLength": 1,
                                                "type": "string",
                                                "x-akamai": {
                                                  "file-path": "schemas/deletedBy.yaml"
                                                }
                                              },
                                              "deletedDate": {
                                                "description": "ISO 8601 timestamp indicating when the item was deleted.",
                                                "format": "date-time",
                                                "type": "string",
                                                "x-akamai": {
                                                  "file-path": "schemas/deletedDate.yaml"
                                                }
                                              },
                                              "derivedTestCases": {
                                                "description": "Derived test cases in the response when there is reference to variable group(s).",
                                                "minItems": 0,
                                                "readOnly": true,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "description": "Specifies the functional derived test case when a variable group reference is present and included objects: condition, test request, and client profile.",
                                                  "type": "object",
                                                  "required": [
                                                    "testRequest",
                                                    "condition",
                                                    "clientProfile",
                                                    "order"
                                                  ],
                                                  "properties": {
                                                    "clientProfile": {
                                                      "additionalProperties": false,
                                                      "description": "Specifies a client profile included in the test case.",
                                                      "type": "object",
                                                      "required": [
                                                        "ipVersion",
                                                        "client"
                                                      ],
                                                      "properties": {
                                                        "client": {
                                                          "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                                          "type": "string",
                                                          "enum": [
                                                            "CHROME",
                                                            "CURL"
                                                          ]
                                                        },
                                                        "geoLocation": {
                                                          "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                                          "type": "string",
                                                          "enum": [
                                                            "US"
                                                          ]
                                                        },
                                                        "ipVersion": {
                                                          "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                                          "type": "string",
                                                          "enum": [
                                                            "IPV4",
                                                            "IPV6"
                                                          ]
                                                        }
                                                      },
                                                      "x-akamai": {
                                                        "file-path": "schemas/client-profile.yaml"
                                                      }
                                                    },
                                                    "condition": {
                                                      "additionalProperties": false,
                                                      "description": "Specifies a condition included in the test case.",
                                                      "type": "object",
                                                      "required": [
                                                        "conditionExpression"
                                                      ],
                                                      "properties": {
                                                        "conditionExpression": {
                                                          "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                                          "minLength": 1,
                                                          "type": "string"
                                                        },
                                                        "conditionExpressionResolved": {
                                                          "description": "Condition statement with resolved variables, if applicable.",
                                                          "minLength": 1,
                                                          "readOnly": true,
                                                          "type": "string"
                                                        }
                                                      },
                                                      "x-akamai": {
                                                        "file-path": "schemas/condition.yaml"
                                                      }
                                                    },
                                                    "order": {
                                                      "description": "Order of the derived test case. In stateful test suites, a test run's test cases execute in this order.  ",
                                                      "minimum": 0,
                                                      "readOnly": true,
                                                      "type": "integer"
                                                    },
                                                    "setVariables": {
                                                      "description": "Contains derived test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                                      "minItems": 0,
                                                      "type": "array",
                                                      "items": {
                                                        "additionalProperties": false,
                                                        "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                                        "type": "object",
                                                        "required": [
                                                          "variableId",
                                                          "variableName",
                                                          "variableValue"
                                                        ],
                                                        "properties": {
                                                          "variableId": {
                                                            "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                                            "minimum": 1,
                                                            "readOnly": true,
                                                            "type": "integer"
                                                          },
                                                          "variableName": {
                                                            "description": "Name of the variable.",
                                                            "maxLength": 100,
                                                            "minLength": 1,
                                                            "type": "string"
                                                          },
                                                          "variableValue": {
                                                            "description": "Value of the variable to resolve at runtime.",
                                                            "maxLength": 4000,
                                                            "minLength": 1,
                                                            "type": "string"
                                                          }
                                                        },
                                                        "x-akamai": {
                                                          "file-path": "schemas/set-variable.yaml"
                                                        }
                                                      }
                                                    },
                                                    "testRequest": {
                                                      "additionalProperties": false,
                                                      "description": "Specifies a test request included in the test case.",
                                                      "type": "object",
                                                      "required": [
                                                        "testRequestUrl",
                                                        "requestMethod"
                                                      ],
                                                      "properties": {
                                                        "encodeRequestBody": {
                                                          "default": true,
                                                          "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                                          "nullable": true,
                                                          "type": "boolean"
                                                        },
                                                        "requestBody": {
                                                          "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                                          "maxLength": 4000,
                                                          "minLength": 1,
                                                          "nullable": true,
                                                          "type": "string"
                                                        },
                                                        "requestBodyResolved": {
                                                          "description": "Value of test request body after resolving all variables.",
                                                          "minLength": 1,
                                                          "nullable": true,
                                                          "readOnly": true,
                                                          "type": "string"
                                                        },
                                                        "requestHeaders": {
                                                          "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                                          "minItems": 0,
                                                          "type": "array",
                                                          "items": {
                                                            "additionalProperties": false,
                                                            "type": "object",
                                                            "required": [
                                                              "headerName",
                                                              "headerValue",
                                                              "headerAction"
                                                            ],
                                                            "properties": {
                                                              "headerAction": {
                                                                "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                                                "type": "string",
                                                                "enum": [
                                                                  "ADD",
                                                                  "MODIFY",
                                                                  "FILTER"
                                                                ]
                                                              },
                                                              "headerName": {
                                                                "description": "Name of the request header.",
                                                                "minLength": 1,
                                                                "type": "string"
                                                              },
                                                              "headerNameResolved": {
                                                                "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                                                "minLength": 1,
                                                                "readOnly": true,
                                                                "type": "string"
                                                              },
                                                              "headerValue": {
                                                                "description": "Value of the request header.",
                                                                "minLength": 1,
                                                                "type": "string"
                                                              },
                                                              "headerValueResolved": {
                                                                "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                                                "minLength": 1,
                                                                "readOnly": true,
                                                                "type": "string"
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "requestMethod": {
                                                          "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                                          "type": "string",
                                                          "enum": [
                                                            "HEAD",
                                                            "GET",
                                                            "POST"
                                                          ]
                                                        },
                                                        "tags": {
                                                          "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                                          "minItems": 0,
                                                          "type": "array",
                                                          "items": {
                                                            "minLength": 1,
                                                            "type": "string"
                                                          }
                                                        },
                                                        "testRequestUrl": {
                                                          "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                                          "maxLength": 2048,
                                                          "minLength": 1,
                                                          "type": "string"
                                                        },
                                                        "testRequestUrlResolved": {
                                                          "description": "Value of test request URL after resolving all variables.",
                                                          "minLength": 1,
                                                          "nullable": true,
                                                          "readOnly": true,
                                                          "type": "string"
                                                        }
                                                      },
                                                      "x-akamai": {
                                                        "file-path": "schemas/test-request.yaml"
                                                      }
                                                    }
                                                  },
                                                  "x-akamai": {
                                                    "file-path": "schemas/functional-derived-test-case.yaml"
                                                  }
                                                }
                                              },
                                              "modifiedBy": {
                                                "description": "Username who last modified the item.",
                                                "minLength": 1,
                                                "readOnly": true,
                                                "type": "string",
                                                "x-akamai": {
                                                  "file-path": "schemas/modifiedBy.yaml"
                                                }
                                              },
                                              "modifiedDate": {
                                                "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                                "format": "date-time",
                                                "readOnly": true,
                                                "type": "string",
                                                "x-akamai": {
                                                  "file-path": "schemas/modifiedDate.yaml"
                                                }
                                              },
                                              "order": {
                                                "description": "Order of the test case. In stateful test suites, a test run's test cases execute in this order.",
                                                "minimum": 1,
                                                "readOnly": true,
                                                "type": "integer"
                                              },
                                              "setVariables": {
                                                "description": "Contains test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                                "minItems": 0,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                                  "type": "object",
                                                  "required": [
                                                    "variableId",
                                                    "variableName",
                                                    "variableValue"
                                                  ],
                                                  "properties": {
                                                    "variableId": {
                                                      "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                                      "minimum": 1,
                                                      "readOnly": true,
                                                      "type": "integer"
                                                    },
                                                    "variableName": {
                                                      "description": "Name of the variable.",
                                                      "maxLength": 100,
                                                      "minLength": 1,
                                                      "type": "string"
                                                    },
                                                    "variableValue": {
                                                      "description": "Value of the variable to resolve at runtime.",
                                                      "maxLength": 4000,
                                                      "minLength": 1,
                                                      "type": "string"
                                                    }
                                                  },
                                                  "x-akamai": {
                                                    "file-path": "schemas/set-variable.yaml"
                                                  }
                                                }
                                              },
                                              "testCaseId": {
                                                "description": "Identifies a functional test case. To get this value, run the [List test cases](https://techdocs.akamai.com/test-ctr/reference/get-test-cases) operation.",
                                                "minimum": 1,
                                                "readOnly": true,
                                                "type": "integer"
                                              },
                                              "testRequest": {
                                                "additionalProperties": false,
                                                "description": "Specifies a test request included in the test case.",
                                                "type": "object",
                                                "required": [
                                                  "testRequestUrl",
                                                  "requestMethod"
                                                ],
                                                "properties": {
                                                  "encodeRequestBody": {
                                                    "default": true,
                                                    "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                                    "nullable": true,
                                                    "type": "boolean"
                                                  },
                                                  "requestBody": {
                                                    "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                                    "maxLength": 4000,
                                                    "minLength": 1,
                                                    "nullable": true,
                                                    "type": "string"
                                                  },
                                                  "requestBodyResolved": {
                                                    "description": "Value of test request body after resolving all variables.",
                                                    "minLength": 1,
                                                    "nullable": true,
                                                    "readOnly": true,
                                                    "type": "string"
                                                  },
                                                  "requestHeaders": {
                                                    "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                                    "minItems": 0,
                                                    "type": "array",
                                                    "items": {
                                                      "additionalProperties": false,
                                                      "type": "object",
                                                      "required": [
                                                        "headerName",
                                                        "headerValue",
                                                        "headerAction"
                                                      ],
                                                      "properties": {
                                                        "headerAction": {
                                                          "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                                          "type": "string",
                                                          "enum": [
                                                            "ADD",
                                                            "MODIFY",
                                                            "FILTER"
                                                          ]
                                                        },
                                                        "headerName": {
                                                          "description": "Name of the request header.",
                                                          "minLength": 1,
                                                          "type": "string"
                                                        },
                                                        "headerNameResolved": {
                                                          "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                                          "minLength": 1,
                                                          "readOnly": true,
                                                          "type": "string"
                                                        },
                                                        "headerValue": {
                                                          "description": "Value of the request header.",
                                                          "minLength": 1,
                                                          "type": "string"
                                                        },
                                                        "headerValueResolved": {
                                                          "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                                          "minLength": 1,
                                                          "readOnly": true,
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "requestMethod": {
                                                    "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                                    "type": "string",
                                                    "enum": [
                                                      "HEAD",
                                                      "GET",
                                                      "POST"
                                                    ]
                                                  },
                                                  "tags": {
                                                    "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                                    "minItems": 0,
                                                    "type": "array",
                                                    "items": {
                                                      "minLength": 1,
                                                      "type": "string"
                                                    }
                                                  },
                                                  "testRequestUrl": {
                                                    "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                                    "maxLength": 2048,
                                                    "minLength": 1,
                                                    "type": "string"
                                                  },
                                                  "testRequestUrlResolved": {
                                                    "description": "Value of test request URL after resolving all variables.",
                                                    "minLength": 1,
                                                    "nullable": true,
                                                    "readOnly": true,
                                                    "type": "string"
                                                  }
                                                },
                                                "x-akamai": {
                                                  "file-path": "schemas/test-request.yaml"
                                                }
                                              },
                                              "warnings": {
                                                "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807). Any warnings related to variable groups would be captured here.",
                                                "minItems": 0,
                                                "readOnly": true,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "description": "Specifies the error that occurred.",
                                                  "type": "object",
                                                  "required": [
                                                    "type",
                                                    "title"
                                                  ],
                                                  "properties": {
                                                    "existingEntities": {
                                                      "description": "Lists objects included within the functional test case.",
                                                      "minItems": 0,
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object"
                                                      }
                                                    },
                                                    "requestField": {
                                                      "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                    },
                                                    "requestObjects": {
                                                      "description": "Lists invalid request objects.",
                                                      "minItems": 0,
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object"
                                                      }
                                                    },
                                                    "requestValues": {
                                                      "description": "Lists values corresponding to the `requestField`.",
                                                      "minItems": 0,
                                                      "type": "array",
                                                      "items": {
                                                        "anyOf": [
                                                          {
                                                            "title": "String",
                                                            "type": "string"
                                                          },
                                                          {
                                                            "title": "Integer",
                                                            "type": "integer"
                                                          },
                                                          {
                                                            "title": "Object",
                                                            "type": "object"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    "title": {
                                                      "description": "Title of the error.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "description": "Type of error.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                    }
                                                  },
                                                  "x-akamai": {
                                                    "file-path": "schemas/sub-problem.yaml"
                                                  }
                                                }
                                              }
                                            },
                                            "x-akamai": {
                                              "file-path": "schemas/functional-test-case.yaml"
                                            }
                                          },
                                          "testCaseExecutionId": {
                                            "description": "Identifies the functional test case execution.",
                                            "minimum": 1,
                                            "type": "integer"
                                          },
                                          "testCaseId": {
                                            "description": "Identifies the functional test case.",
                                            "minimum": 1,
                                            "type": "integer"
                                          }
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/functional-derived-test-case-executions.yaml"
                                      }
                                    },
                                    "errors": {
                                      "description": "Lists details about an error.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "title"
                                        ],
                                        "properties": {
                                          "requestField": {
                                            "description": "Request field name the error refers to. It can be a path or query parameter of the URL or any request payload field name.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "requestValues": {
                                            "description": "Lists values corresponding to the `requestField`.",
                                            "minItems": 0,
                                            "type": "array",
                                            "items": {
                                              "anyOf": [
                                                {
                                                  "title": "String",
                                                  "type": "string"
                                                },
                                                {
                                                  "title": "Integer",
                                                  "type": "integer"
                                                },
                                                {
                                                  "title": "Object",
                                                  "type": "object"
                                                }
                                              ]
                                            }
                                          },
                                          "title": {
                                            "description": "Summary of the error.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Dot-notation explanation of the type of occurred error.",
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/error.yaml"
                                      }
                                    },
                                    "isReevaluationInProgress": {
                                      "description": "Whether the test case execution is being reevaluated.",
                                      "readOnly": true,
                                      "type": "boolean"
                                    },
                                    "resolvedSetVariables": {
                                      "description": "Contains information about variables that resolved as part of test case execution. It appears only for executions of functional test cases with the `COMPLETED` status.",
                                      "type": "object"
                                    },
                                    "status": {
                                      "description": "Test case objects' execution status. Possible values are: `IN_PROGRESS`, `COMPLETED`, `SKIPPED`, or `FAILED`.",
                                      "type": "string",
                                      "enum": [
                                        "IN_PROGRESS",
                                        "COMPLETED",
                                        "FAILED",
                                        "SKIPPED"
                                      ]
                                    },
                                    "testCaseContext": {
                                      "additionalProperties": false,
                                      "description": "Specifies the functional test case and included objects: condition, test request, and client profile.",
                                      "type": "object",
                                      "required": [
                                        "testCaseId",
                                        "order",
                                        "testRequest",
                                        "condition",
                                        "clientProfile"
                                      ],
                                      "properties": {
                                        "clientProfile": {
                                          "additionalProperties": false,
                                          "description": "Specifies a client profile included in the test case.",
                                          "type": "object",
                                          "required": [
                                            "ipVersion",
                                            "client"
                                          ],
                                          "properties": {
                                            "client": {
                                              "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                              "type": "string",
                                              "enum": [
                                                "CHROME",
                                                "CURL"
                                              ]
                                            },
                                            "geoLocation": {
                                              "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                              "type": "string",
                                              "enum": [
                                                "US"
                                              ]
                                            },
                                            "ipVersion": {
                                              "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                              "type": "string",
                                              "enum": [
                                                "IPV4",
                                                "IPV6"
                                              ]
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/client-profile.yaml"
                                          }
                                        },
                                        "condition": {
                                          "additionalProperties": false,
                                          "description": "Specifies a condition included in the test case.",
                                          "type": "object",
                                          "required": [
                                            "conditionExpression"
                                          ],
                                          "properties": {
                                            "conditionExpression": {
                                              "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "conditionExpressionResolved": {
                                              "description": "Condition statement with resolved variables, if applicable.",
                                              "minLength": 1,
                                              "readOnly": true,
                                              "type": "string"
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/condition.yaml"
                                          }
                                        },
                                        "createdBy": {
                                          "description": "Username who created the item.",
                                          "minLength": 1,
                                          "readOnly": true,
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/createdBy.yaml"
                                          }
                                        },
                                        "createdDate": {
                                          "description": "ISO 8601 timestamp indicating when the item was created.",
                                          "format": "date-time",
                                          "readOnly": true,
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/createdDate.yaml"
                                          }
                                        },
                                        "deletedBy": {
                                          "description": "Username who last deleted the item.",
                                          "minLength": 1,
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/deletedBy.yaml"
                                          }
                                        },
                                        "deletedDate": {
                                          "description": "ISO 8601 timestamp indicating when the item was deleted.",
                                          "format": "date-time",
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/deletedDate.yaml"
                                          }
                                        },
                                        "derivedTestCases": {
                                          "description": "Derived test cases in the response when there is reference to variable group(s).",
                                          "minItems": 0,
                                          "readOnly": true,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "description": "Specifies the functional derived test case when a variable group reference is present and included objects: condition, test request, and client profile.",
                                            "type": "object",
                                            "required": [
                                              "testRequest",
                                              "condition",
                                              "clientProfile",
                                              "order"
                                            ],
                                            "properties": {
                                              "clientProfile": {
                                                "additionalProperties": false,
                                                "description": "Specifies a client profile included in the test case.",
                                                "type": "object",
                                                "required": [
                                                  "ipVersion",
                                                  "client"
                                                ],
                                                "properties": {
                                                  "client": {
                                                    "description": "Client type you want to use for the test run, either `CHROME` or `CURL`.",
                                                    "type": "string",
                                                    "enum": [
                                                      "CHROME",
                                                      "CURL"
                                                    ]
                                                  },
                                                  "geoLocation": {
                                                    "description": "Location type you want to use for the test run. The only currently supported value is `US`.",
                                                    "type": "string",
                                                    "enum": [
                                                      "US"
                                                    ]
                                                  },
                                                  "ipVersion": {
                                                    "description": "IP version to use in the test run, either `IPV4` or `IPV6`.",
                                                    "type": "string",
                                                    "enum": [
                                                      "IPV4",
                                                      "IPV6"
                                                    ]
                                                  }
                                                },
                                                "x-akamai": {
                                                  "file-path": "schemas/client-profile.yaml"
                                                }
                                              },
                                              "condition": {
                                                "additionalProperties": false,
                                                "description": "Specifies a condition included in the test case.",
                                                "type": "object",
                                                "required": [
                                                  "conditionExpression"
                                                ],
                                                "properties": {
                                                  "conditionExpression": {
                                                    "description": "Condition expression you want to evaluate in the test run. To create the expression, you need to [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template). To learn more, see [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) and [Example: create a condition](https://techdocs.akamai.com/test-ctr/reference/example-create-condition).",
                                                    "minLength": 1,
                                                    "type": "string"
                                                  },
                                                  "conditionExpressionResolved": {
                                                    "description": "Condition statement with resolved variables, if applicable.",
                                                    "minLength": 1,
                                                    "readOnly": true,
                                                    "type": "string"
                                                  }
                                                },
                                                "x-akamai": {
                                                  "file-path": "schemas/condition.yaml"
                                                }
                                              },
                                              "order": {
                                                "description": "Order of the derived test case. In stateful test suites, a test run's test cases execute in this order.  ",
                                                "minimum": 0,
                                                "readOnly": true,
                                                "type": "integer"
                                              },
                                              "setVariables": {
                                                "description": "Contains derived test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                                "minItems": 0,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                                  "type": "object",
                                                  "required": [
                                                    "variableId",
                                                    "variableName",
                                                    "variableValue"
                                                  ],
                                                  "properties": {
                                                    "variableId": {
                                                      "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                                      "minimum": 1,
                                                      "readOnly": true,
                                                      "type": "integer"
                                                    },
                                                    "variableName": {
                                                      "description": "Name of the variable.",
                                                      "maxLength": 100,
                                                      "minLength": 1,
                                                      "type": "string"
                                                    },
                                                    "variableValue": {
                                                      "description": "Value of the variable to resolve at runtime.",
                                                      "maxLength": 4000,
                                                      "minLength": 1,
                                                      "type": "string"
                                                    }
                                                  },
                                                  "x-akamai": {
                                                    "file-path": "schemas/set-variable.yaml"
                                                  }
                                                }
                                              },
                                              "testRequest": {
                                                "additionalProperties": false,
                                                "description": "Specifies a test request included in the test case.",
                                                "type": "object",
                                                "required": [
                                                  "testRequestUrl",
                                                  "requestMethod"
                                                ],
                                                "properties": {
                                                  "encodeRequestBody": {
                                                    "default": true,
                                                    "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                                    "nullable": true,
                                                    "type": "boolean"
                                                  },
                                                  "requestBody": {
                                                    "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                                    "maxLength": 4000,
                                                    "minLength": 1,
                                                    "nullable": true,
                                                    "type": "string"
                                                  },
                                                  "requestBodyResolved": {
                                                    "description": "Value of test request body after resolving all variables.",
                                                    "minLength": 1,
                                                    "nullable": true,
                                                    "readOnly": true,
                                                    "type": "string"
                                                  },
                                                  "requestHeaders": {
                                                    "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                                    "minItems": 0,
                                                    "type": "array",
                                                    "items": {
                                                      "additionalProperties": false,
                                                      "type": "object",
                                                      "required": [
                                                        "headerName",
                                                        "headerValue",
                                                        "headerAction"
                                                      ],
                                                      "properties": {
                                                        "headerAction": {
                                                          "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                                          "type": "string",
                                                          "enum": [
                                                            "ADD",
                                                            "MODIFY",
                                                            "FILTER"
                                                          ]
                                                        },
                                                        "headerName": {
                                                          "description": "Name of the request header.",
                                                          "minLength": 1,
                                                          "type": "string"
                                                        },
                                                        "headerNameResolved": {
                                                          "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                                          "minLength": 1,
                                                          "readOnly": true,
                                                          "type": "string"
                                                        },
                                                        "headerValue": {
                                                          "description": "Value of the request header.",
                                                          "minLength": 1,
                                                          "type": "string"
                                                        },
                                                        "headerValueResolved": {
                                                          "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                                          "minLength": 1,
                                                          "readOnly": true,
                                                          "type": "string"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "requestMethod": {
                                                    "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                                    "type": "string",
                                                    "enum": [
                                                      "HEAD",
                                                      "GET",
                                                      "POST"
                                                    ]
                                                  },
                                                  "tags": {
                                                    "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                                    "minItems": 0,
                                                    "type": "array",
                                                    "items": {
                                                      "minLength": 1,
                                                      "type": "string"
                                                    }
                                                  },
                                                  "testRequestUrl": {
                                                    "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                                    "maxLength": 2048,
                                                    "minLength": 1,
                                                    "type": "string"
                                                  },
                                                  "testRequestUrlResolved": {
                                                    "description": "Value of test request URL after resolving all variables.",
                                                    "minLength": 1,
                                                    "nullable": true,
                                                    "readOnly": true,
                                                    "type": "string"
                                                  }
                                                },
                                                "x-akamai": {
                                                  "file-path": "schemas/test-request.yaml"
                                                }
                                              }
                                            },
                                            "x-akamai": {
                                              "file-path": "schemas/functional-derived-test-case.yaml"
                                            }
                                          }
                                        },
                                        "modifiedBy": {
                                          "description": "Username who last modified the item.",
                                          "minLength": 1,
                                          "readOnly": true,
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/modifiedBy.yaml"
                                          }
                                        },
                                        "modifiedDate": {
                                          "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                          "format": "date-time",
                                          "readOnly": true,
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/modifiedDate.yaml"
                                          }
                                        },
                                        "order": {
                                          "description": "Order of the test case. In stateful test suites, a test run's test cases execute in this order.",
                                          "minimum": 1,
                                          "readOnly": true,
                                          "type": "integer"
                                        },
                                        "setVariables": {
                                          "description": "Contains test case variables to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                          "minItems": 0,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "description": "Specifies a test case variable to resolve at runtime. To learn more, see [Variables](https://techdocs.akamai.com/test-ctr/reference/variables-overview).",
                                            "type": "object",
                                            "required": [
                                              "variableId",
                                              "variableName",
                                              "variableValue"
                                            ],
                                            "properties": {
                                              "variableId": {
                                                "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                                "minimum": 1,
                                                "readOnly": true,
                                                "type": "integer"
                                              },
                                              "variableName": {
                                                "description": "Name of the variable.",
                                                "maxLength": 100,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "variableValue": {
                                                "description": "Value of the variable to resolve at runtime.",
                                                "maxLength": 4000,
                                                "minLength": 1,
                                                "type": "string"
                                              }
                                            },
                                            "x-akamai": {
                                              "file-path": "schemas/set-variable.yaml"
                                            }
                                          }
                                        },
                                        "testCaseId": {
                                          "description": "Identifies a functional test case. To get this value, run the [List test cases](https://techdocs.akamai.com/test-ctr/reference/get-test-cases) operation.",
                                          "minimum": 1,
                                          "readOnly": true,
                                          "type": "integer"
                                        },
                                        "testRequest": {
                                          "additionalProperties": false,
                                          "description": "Specifies a test request included in the test case.",
                                          "type": "object",
                                          "required": [
                                            "testRequestUrl",
                                            "requestMethod"
                                          ],
                                          "properties": {
                                            "encodeRequestBody": {
                                              "default": true,
                                              "description": "Encodes `requestBody`. It applies only if `clientType` is set to `CURL` and `requestMethod` to `POST`. For `requestMethod` set to `GET` or `HEAD`, the `requestBody` is `null` by default. For `requestMethod` set to `POST` the default value is `true`.",
                                              "nullable": true,
                                              "type": "boolean"
                                            },
                                            "requestBody": {
                                              "description": "Request body for the `testRequestUrl`. Provide it only if `clientType` is set to `CURL` and `requestMethod` is `POST`. For a `requestMethod` of `GET` or `HEAD`, the `requestBody` reflects a `null` value for an empty request body.",
                                              "maxLength": 4000,
                                              "minLength": 1,
                                              "nullable": true,
                                              "type": "string"
                                            },
                                            "requestBodyResolved": {
                                              "description": "Value of test request body after resolving all variables.",
                                              "minLength": 1,
                                              "nullable": true,
                                              "readOnly": true,
                                              "type": "string"
                                            },
                                            "requestHeaders": {
                                              "description": "Lists request or Akamai Pragma headers included in the functional test case. See [Pragma headers](https://techdocs.akamai.com/edge-diagnostics/docs/pragma-headers) for the list of supported values.",
                                              "minItems": 0,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                  "headerName",
                                                  "headerValue",
                                                  "headerAction"
                                                ],
                                                "properties": {
                                                  "headerAction": {
                                                    "description": "Request header settings. Possible values are: `ADD` to add the entered request headers, `MODIFY` to modify the existing request headers, or `FILTER` to filter entered request headers from this functional test case.",
                                                    "type": "string",
                                                    "enum": [
                                                      "ADD",
                                                      "MODIFY",
                                                      "FILTER"
                                                    ]
                                                  },
                                                  "headerName": {
                                                    "description": "Name of the request header.",
                                                    "minLength": 1,
                                                    "type": "string"
                                                  },
                                                  "headerNameResolved": {
                                                    "description": "Resolved value of `headerName`, if actual value contains resolvable variables.",
                                                    "minLength": 1,
                                                    "readOnly": true,
                                                    "type": "string"
                                                  },
                                                  "headerValue": {
                                                    "description": "Value of the request header.",
                                                    "minLength": 1,
                                                    "type": "string"
                                                  },
                                                  "headerValueResolved": {
                                                    "description": "Actual Value of the `headerValue` that contains the actual value of the variables included in header value.",
                                                    "minLength": 1,
                                                    "readOnly": true,
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "requestMethod": {
                                              "description": "Request method for the `testRequestUrl`. The available values are: `HEAD`, `GET`, and `POST`.",
                                              "type": "string",
                                              "enum": [
                                                "HEAD",
                                                "GET",
                                                "POST"
                                              ]
                                            },
                                            "tags": {
                                              "description": "Lists keywords for the test request. They're useful to filter test cases in the Test Center application.",
                                              "minItems": 0,
                                              "type": "array",
                                              "items": {
                                                "minLength": 1,
                                                "type": "string"
                                              }
                                            },
                                            "testRequestUrl": {
                                              "description": "Fully qualified URL of the page or object you want to test. The URL needs to include a protocol, a hostname, a path, and any optional query parameters. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                                              "maxLength": 2048,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "testRequestUrlResolved": {
                                              "description": "Value of test request URL after resolving all variables.",
                                              "minLength": 1,
                                              "nullable": true,
                                              "readOnly": true,
                                              "type": "string"
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/test-request.yaml"
                                          }
                                        },
                                        "warnings": {
                                          "description": "[HTTP Problem Details](https://tools.ietf.org/html/rfc7807). Any warnings related to variable groups would be captured here.",
                                          "minItems": 0,
                                          "readOnly": true,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "description": "Specifies the error that occurred.",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "title"
                                            ],
                                            "properties": {
                                              "existingEntities": {
                                                "description": "Lists objects included within the functional test case.",
                                                "minItems": 0,
                                                "type": "array",
                                                "items": {
                                                  "type": "object"
                                                }
                                              },
                                              "requestField": {
                                                "description": "Request field name the error refers to. It can be a URL path or query parameter or any request payload field name.",
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "requestObjects": {
                                                "description": "Lists invalid request objects.",
                                                "minItems": 0,
                                                "type": "array",
                                                "items": {
                                                  "type": "object"
                                                }
                                              },
                                              "requestValues": {
                                                "description": "Lists values corresponding to the `requestField`.",
                                                "minItems": 0,
                                                "type": "array",
                                                "items": {
                                                  "anyOf": [
                                                    {
                                                      "title": "String",
                                                      "type": "string"
                                                    },
                                                    {
                                                      "title": "Integer",
                                                      "type": "integer"
                                                    },
                                                    {
                                                      "title": "Object",
                                                      "type": "object"
                                                    }
                                                  ]
                                                }
                                              },
                                              "title": {
                                                "description": "Title of the error.",
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "type": {
                                                "description": "Type of error.",
                                                "minLength": 1,
                                                "type": "string"
                                              }
                                            },
                                            "x-akamai": {
                                              "file-path": "schemas/sub-problem.yaml"
                                            }
                                          }
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/functional-test-case.yaml"
                                      }
                                    },
                                    "testCaseExecutionId": {
                                      "description": "Identifies the functional test case execution.",
                                      "minimum": 1,
                                      "type": "integer"
                                    },
                                    "testCaseId": {
                                      "description": "Identifies the functional test case.",
                                      "minimum": 1,
                                      "type": "integer"
                                    }
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/functional-test-case-executions.yaml"
                                }
                              },
                              "testSuiteContext": {
                                "additionalProperties": false,
                                "description": "Specifies a test suite.",
                                "type": "object",
                                "required": [
                                  "testSuiteId",
                                  "testSuiteName",
                                  "isLocked",
                                  "isStateful",
                                  "executableTestCaseCount"
                                ],
                                "properties": {
                                  "configs": {
                                    "additionalProperties": false,
                                    "default": null,
                                    "description": "Specifies the Property Manager property version associated with the test suite. It's `null` for test suites with no properties associated. ",
                                    "nullable": true,
                                    "type": "object",
                                    "required": [
                                      "propertyManager"
                                    ],
                                    "properties": {
                                      "propertyManager": {
                                        "additionalProperties": false,
                                        "description": "Specifies the property version associated with the test suite.",
                                        "type": "object",
                                        "required": [
                                          "propertyId",
                                          "propertyName",
                                          "propertyVersion"
                                        ],
                                        "properties": {
                                          "propertyId": {
                                            "description": "Identifies a Property Manager property.",
                                            "minimum": 1,
                                            "type": "integer"
                                          },
                                          "propertyName": {
                                            "description": "Name of the property.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "propertyVersion": {
                                            "description": "Version of the property.",
                                            "minimum": 1,
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    },
                                    "x-akamai": {
                                      "file-path": "schemas/configs.yaml"
                                    }
                                  },
                                  "createdBy": {
                                    "description": "Username who created the item.",
                                    "minLength": 1,
                                    "readOnly": true,
                                    "type": "string",
                                    "x-akamai": {
                                      "file-path": "schemas/createdBy.yaml"
                                    }
                                  },
                                  "createdDate": {
                                    "description": "ISO 8601 timestamp indicating when the item was created.",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string",
                                    "x-akamai": {
                                      "file-path": "schemas/createdDate.yaml"
                                    }
                                  },
                                  "deletedBy": {
                                    "description": "Username who last deleted the item.",
                                    "minLength": 1,
                                    "type": "string",
                                    "x-akamai": {
                                      "file-path": "schemas/deletedBy.yaml"
                                    }
                                  },
                                  "deletedDate": {
                                    "description": "ISO 8601 timestamp indicating when the item was deleted.",
                                    "format": "date-time",
                                    "type": "string",
                                    "x-akamai": {
                                      "file-path": "schemas/deletedDate.yaml"
                                    }
                                  },
                                  "executableTestCaseCount": {
                                    "description": "Number of included test cases executable in a test run. To learn more, see [Variable groups](https://techdocs.akamai.com/test-ctr/reference/variables-overview#variable-groups).",
                                    "minimum": 0,
                                    "readOnly": true,
                                    "type": "integer"
                                  },
                                  "isLocked": {
                                    "description": "Locks the test suite so that only designated owners or editors can modify it.",
                                    "type": "boolean"
                                  },
                                  "isStateful": {
                                    "description": "Sets the test suite to be run statefully, retaining cookies and session data for subsequent test cases within the test suite.",
                                    "type": "boolean"
                                  },
                                  "modifiedBy": {
                                    "description": "Username who last modified the item.",
                                    "minLength": 1,
                                    "readOnly": true,
                                    "type": "string",
                                    "x-akamai": {
                                      "file-path": "schemas/modifiedBy.yaml"
                                    }
                                  },
                                  "modifiedDate": {
                                    "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "type": "string",
                                    "x-akamai": {
                                      "file-path": "schemas/modifiedDate.yaml"
                                    }
                                  },
                                  "testSuiteDescription": {
                                    "default": null,
                                    "description": "Description of the test suite. It's `null` for test suites without descriptions. ",
                                    "maxLength": 4000,
                                    "minLength": 1,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "testSuiteId": {
                                    "description": "Identifies a test suite.",
                                    "minimum": 1,
                                    "readOnly": true,
                                    "type": "integer"
                                  },
                                  "testSuiteName": {
                                    "description": "Unique name for each test suite.",
                                    "maxLength": 100,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "variables": {
                                    "description": "Variables used in the test run.",
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "description": "Specifies variables referenced `testRequestUrl`, `headerName`, `headerValue`, `requestBody`, or `conditionExpression` of a test case. Variables appear with `{{variableName}}` syntax.",
                                      "title": "Single variable",
                                      "type": "object",
                                      "required": [
                                        "variableId",
                                        "variableName",
                                        "variableValue",
                                        "isDynamicallyUsed"
                                      ],
                                      "properties": {
                                        "createdBy": {
                                          "description": "Username who created the item.",
                                          "minLength": 1,
                                          "readOnly": true,
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/createdBy.yaml"
                                          }
                                        },
                                        "createdDate": {
                                          "description": "ISO 8601 timestamp indicating when the item was created.",
                                          "format": "date-time",
                                          "readOnly": true,
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/createdDate.yaml"
                                          }
                                        },
                                        "isDynamicallyUsed": {
                                          "description": "Whether the variable in `setVariables` is assigned dynamically.",
                                          "type": "boolean"
                                        },
                                        "modifiedBy": {
                                          "description": "Username who last modified the item.",
                                          "minLength": 1,
                                          "readOnly": true,
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/modifiedBy.yaml"
                                          }
                                        },
                                        "modifiedDate": {
                                          "description": "ISO 8601 timestamp indicating when the item was last modified.",
                                          "format": "date-time",
                                          "readOnly": true,
                                          "type": "string",
                                          "x-akamai": {
                                            "file-path": "schemas/modifiedDate.yaml"
                                          }
                                        },
                                        "variableId": {
                                          "description": "Identifies a variable. To get this value, run the [List variables](https://techdocs.akamai.com/test-ctr/reference/get-variables) operation.",
                                          "minimum": 1,
                                          "readOnly": true,
                                          "type": "integer"
                                        },
                                        "variableName": {
                                          "description": "Name of the variable.",
                                          "maxLength": 100,
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "variableValue": {
                                          "description": "Value of the variable.",
                                          "maxLength": 4000,
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/variable.yaml"
                                      }
                                    }
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/test-suite-context.yaml"
                                }
                              },
                              "testSuiteExecutionId": {
                                "description": "Identifies a test suite execution.",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "testSuiteId": {
                                "description": "Identifies a test suite that executed.",
                                "minimum": 1,
                                "type": "integer"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/test-suite-execution.yaml"
                            }
                          }
                        }
                      }
                    },
                    "note": {
                      "description": "Notes about the test run.",
                      "maxLength": 200,
                      "minLength": 1,
                      "type": "string"
                    },
                    "purgeInfo": {
                      "additionalProperties": false,
                      "description": "Contains details on purge. ",
                      "type": "object",
                      "required": [
                        "status"
                      ],
                      "properties": {
                        "errors": {
                          "description": "Lists details about an error.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "title": {
                                "description": "Summary of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Dot-notated identifier for each type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "status": {
                          "description": "Purge execution status. Possible values are: `IN_PROGRESS`, `COMPLETED`, `NOT_APPLICABLE`, or `FAILED`.",
                          "type": "string",
                          "enum": [
                            "NOT_APPLICABLE",
                            "IN_PROGRESS",
                            "COMPLETED",
                            "FAILED"
                          ]
                        }
                      }
                    },
                    "sendEmailOnCompletion": {
                      "default": true,
                      "description": "Sends a notification email after the test run completes.",
                      "type": "boolean"
                    },
                    "status": {
                      "description": "Test run's status. Possible values are: `IN_PROGRESS`, `COMPLETED`, `FAILED`, or `COMPLETED_WITH_UNEXPECTED_RESULTS`.",
                      "type": "string",
                      "enum": [
                        "IN_PROGRESS",
                        "COMPLETED",
                        "FAILED",
                        "COMPLETED_WITH_UNEXPECTED_RESULTS"
                      ]
                    },
                    "submittedBy": {
                      "description": "Username who submitted the test run.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "submittedDate": {
                      "description": "ISO 8601 timestamp indicating when the test run was submitted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "targetEnvironment": {
                      "description": "Environment against which the test run was executed, either `PRODUCTION` or `STAGING`.",
                      "type": "string",
                      "enum": [
                        "PRODUCTION",
                        "STAGING"
                      ]
                    },
                    "testRunId": {
                      "description": "Unique identifier for each test run.",
                      "minimum": 1,
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/test-run-get-individual.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Includes test run context in the response.",
            "example": "{{includeContext}}",
            "in": "query",
            "name": "includeContext",
            "schema": {
              "default": true,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/includeContext-query.yaml"
            }
          },
          {
            "description": "Includes details on objects skipped during the test run in the response.",
            "example": "{{includeSkipped}}",
            "in": "query",
            "name": "includeSkipped",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/includeSkipped-query.yaml"
            }
          },
          {
            "description": "Includes audit information for run test cases and test suites in the response.",
            "example": "{{includeAuditInfoInContext}}",
            "in": "query",
            "name": "includeAuditInfoInContext",
            "schema": {
              "default": false,
              "example": false,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/includeAuditInfo-query.yaml"
            }
          },
          {
            "description": "Includes diff instances in the response.",
            "example": "{{includeDiffInstances}}",
            "in": "query",
            "name": "includeDiffInstances",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/includeDiffInstances-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Identifies a test run. To get this value, run the [List test runs](https://techdocs.akamai.com/test-ctr/reference/get-test-runs) operation.",
          "example": "{{testRunId}}",
          "in": "path",
          "name": "testRunId",
          "required": true,
          "schema": {
            "example": 2,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testRunId-path.yaml"
          }
        }
      ]
    }
  },
  "x-readme": {
    "samples-languages": [
      "curl",
      "python",
      "node"
    ]
  },
  "servers": [
    {
      "url": "https://{hostname}/test-management/v3"
    }
  ]
}