{
  "openapi": "3.0.0",
  "externalDocs": {
    "description": "See documentation for Akamai's Test Center API",
    "url": "https://techdocs.akamai.com/test-ctr/reference"
  },
  "info": {
    "title": "Akamai: Test Center API",
    "version": "v2",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "paths": {
    "/activities": {
      "get": {
        "description": "Returns the Test Center activity log for the set filters of operations performed in your organization.",
        "operationId": "get-activities",
        "summary": "List activities",
        "tags": [
          "Activities"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-activities"
        },
        "responses": {
          "200": {
            "description": "The response provides activity logs.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Contains information about all activity in your organization for the last 30 days.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Contains information about all activity in your organization for the last 30 days.",
                    "type": "object",
                    "required": [
                      "createdDate",
                      "createdBy",
                      "activityResource",
                      "activityAction",
                      "activityAdditionalInfo"
                    ],
                    "properties": {
                      "activityAction": {
                        "description": "Action or type of activity. For possible values, see [activityAction values](https://techdocs.akamai.com/test-ctr/reference/activityaction-values).",
                        "type": "string",
                        "enum": [
                          "create",
                          "edit",
                          "delete",
                          "run",
                          "clone",
                          "start",
                          "accept",
                          "unaccept",
                          "associate",
                          "dissociate"
                        ]
                      },
                      "activityAdditionalInfo": {
                        "additionalProperties": false,
                        "description": "Additional information about the resources involved in the activity. The included objects depend on the `activityResource` value.",
                        "type": "object",
                        "properties": {
                          "clientProfileId": {
                            "description": "Unique identifier of the client profile.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "comparativeTestCaseId": {
                            "description": "Unique identifier of the comparative test case.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "comparativeTestCaseName": {
                            "description": "Name of the comparative test case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "conditionId": {
                            "description": "Unique identifier of the condition.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "configVersionId": {
                            "description": "Unique identifier of the config version.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "functionalSourceTestCaseId": {
                            "description": "Unique identifier of the cloned functional test case.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "functionalTargetTestCaseId": {
                            "description": "Unique identifier of the new functional test case created from the source functional test case by cloning.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "functionalTestCaseId": {
                            "description": "Unique identifier of the functional test case.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "note": {
                            "description": "Notes about the particular resource.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "propertyName": {
                            "description": "Name of the property from Property Manager.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "propertyVersion": {
                            "description": "Version of the property from Property Manager.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "requirementId": {
                            "description": "Unique identifier of the requirement.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "requirementName": {
                            "description": "Name of the requirement.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "sourceClientProfileId": {
                            "description": "Unique identifier of the cloned client profile.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "sourceComparativeTestCaseId": {
                            "description": "Unique identifier of the cloned comparative test case.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "sourceComparativeTestCaseName": {
                            "description": "Name of the cloned comparative test case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "sourceConditionId": {
                            "description": "Unique identifier of the cloned condition.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "sourceRequirementId": {
                            "description": "Unique identifier of the cloned requirement.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "sourceTestDefinitionId": {
                            "description": "Unique identifier of the cloned test definition.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "sourceTestDefinitionName": {
                            "description": "Name of the cloned test definition.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "sourceTestRequestId": {
                            "description": "Unique identifier of the cloned test request.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "sourceTestSuiteId": {
                            "description": "Unique identifier of the cloned test suite.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "targetClientProfileId": {
                            "description": "Unique identifier of the new client profile created from the source client profile by cloning.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "targetComparativeTestCaseId": {
                            "description": "Unique identifier of the new comparative test case created from the source comparative test case by cloning.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "targetComparativeTestCaseName": {
                            "description": "Name of the new comparative test case created from the source comparative test case by cloning.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "targetConditionId": {
                            "description": "Unique identifier of the new condition created from the source condition by cloning.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "targetRequirementId": {
                            "description": "Unique identifier of the new requirement created from the source requirement by cloning.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "targetTestDefinitionId": {
                            "description": "Unique identifier of the new test definition created from the source test definition by cloning.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "targetTestDefinitionName": {
                            "description": "Name of the new test definition created from the source test definition by cloning.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "targetTestRequestId": {
                            "description": "Unique identifier of the new test request created from the source test request by cloning.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "targetTestSuiteId": {
                            "description": "Unique identifier of the new test suite created from the source test suite by cloning.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "testDefinitionExecutionId": {
                            "description": "Unique identifier of the test definition execution.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "testDefinitionId": {
                            "description": "Unique identifier of the test definition.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "testDefinitionName": {
                            "description": "Name of the test definition.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "testDifferenceId": {
                            "description": "Unique identifier of the comparative test diff.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "testRequestId": {
                            "description": "Unique identifier of the test request.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "testRunId": {
                            "description": "Unique identifier of the test run.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "testSuiteId": {
                            "description": "Unique identifier of the test suite.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "testSuiteName": {
                            "description": "Name of the test suite.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      },
                      "activityResource": {
                        "description": "Resource on which the activity was performed. Possible values are: `config_version`, `requirement`, `test_suite`, `functional_test_case`, `test_request`, `condition`, `client_profile`, `test_definition`, `comparative_test_case`, `test_run`, `test_definition_execution`, `test_difference`, or `test_difference_note`.",
                        "type": "string",
                        "enum": [
                          "test_definition",
                          "comparative_test_case",
                          "test_definition_execution",
                          "test_run",
                          "test_difference",
                          "test_difference_note",
                          "requirement",
                          "test_suite",
                          "functional_test_case",
                          "test_request",
                          "condition",
                          "client_profile",
                          "config_version"
                        ]
                      },
                      "createdBy": {
                        "description": "Username who performed the activity.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 timestamp indicating when the activity took place.",
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/get-activity-response.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getActivitiesResponse.yaml"
                  }
                },
                "example": [
                  {
                    "activityAction": "create",
                    "activityResource": "test_definition",
                    "createdBy": "mrossi",
                    "createdDate": "2019-12-17T09:11:12+0000",
                    "activityAdditionalInfo": {
                      "testDefinitionId": 13626,
                      "testDefinitionName": "TD / test"
                    }
                  },
                  {
                    "activityAction": "edit",
                    "activityResource": "test_definition",
                    "createdBy": "jkowalski",
                    "createdDate": "2019-12-27T17:37:43+0000",
                    "activityAdditionalInfo": {
                      "testDefinitionId": 13634,
                      "testDefinitionName": "td refac"
                    }
                  },
                  {
                    "activityAction": "create",
                    "activityResource": "comparative_test_case",
                    "createdBy": "hgildong",
                    "createdDate": "2019-12-17T09:15:11+0000",
                    "activityAdditionalInfo": {
                      "comparativeTestCaseId": 14506,
                      "comparativeTestCaseName": "tc1",
                      "testDefinitionId": 13626,
                      "testDefinitionName": "TD / test"
                    }
                  },
                  {
                    "activityAction": "create",
                    "activityResource": "test_run",
                    "createdBy": "jperez",
                    "createdDate": "2019-12-17T08:44:12+0000",
                    "activityAdditionalInfo": {
                      "note": "Test a change on staging",
                      "testRunId": 13078
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A resource you want to get the activity log for.",
            "example": "{{activityResource}}",
            "in": "query",
            "name": "activityResource",
            "schema": {
              "example": "test_definition",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/activityResource-query.yaml"
            }
          },
          {
            "description": "Unique identifier for each resource you want to get the activity log for.",
            "example": "{{resourceId}}",
            "in": "query",
            "name": "resourceId",
            "schema": {
              "example": 12,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/resourceId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/comparative/test-definition-executions": {
      "get": {
        "description": "Lists all test definition executions.",
        "operationId": "get-test-definition-executions",
        "summary": "List executions",
        "tags": [
          "Executions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-definition-executions"
        },
        "responses": {
          "200": {
            "description": "The response lists executions.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "List of test definition executions.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "The test definition execution is a component of a test run. A test run has one execution for each of its test definitions. A test definition execution contains the subset of test cases, IP versions, target hostname, and target environment of the test definition it belongs to.",
                    "type": "object",
                    "required": [
                      "testDefinitionExecutionId",
                      "testDefinitionId",
                      "testRunId",
                      "targetHostname",
                      "targetEnvironment",
                      "supportedComparisonSettings",
                      "submittedBy",
                      "submittedDate",
                      "status",
                      "ipVersions",
                      "errors",
                      "testCaseIds"
                    ],
                    "properties": {
                      "completedDate": {
                        "description": "ISO 8601 timestamp indicating when the test definition execution was completed.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "diffCount": {
                        "additionalProperties": false,
                        "description": "Contains information about diffs detected during the test run. It appears only when the execution's `status` is `completed`.",
                        "type": "object",
                        "required": [
                          "total",
                          "outstanding"
                        ],
                        "properties": {
                          "outstanding": {
                            "description": "Number of diffs not accepted.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "total": {
                            "description": "Total number of diffs detected.",
                            "minimum": 0,
                            "type": "integer"
                          }
                        }
                      },
                      "errors": {
                        "description": "Contains [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating errors occurred during the test run. It appears only when the execution's `status` is `failed`.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "type",
                            "title",
                            "ipVersion"
                          ],
                          "properties": {
                            "ipVersion": {
                              "description": "IP version for which the test definition execution failed.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "testCaseId": {
                              "description": "Unique identifier for each comparative test case for which the test definition execution failed. If missing, the execution failed for all test cases for the corresponding IP version.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "title": {
                              "description": "Summary of each error.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "type": {
                              "description": "Dot-notated identifier for each type of error.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        }
                      },
                      "ipVersions": {
                        "description": "IP versions for which the test run executed. Possible values are: `ipv4`, `ipv6`, or both.",
                        "maxItems": 2,
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                          "type": "string",
                          "enum": [
                            "ipv4",
                            "ipv6"
                          ]
                        }
                      },
                      "note": {
                        "description": "Notes about the test definition execution.",
                        "maxLength": 500,
                        "minLength": 0,
                        "type": "string"
                      },
                      "status": {
                        "description": "Execution's status. Possible values are: `in_progress`, `completed`, `failed`, or `archived`. A value of `failed` means that the execution couldn't be run because of an error. You can check its details in the `errors` array. A value of `archived` means there have been at least five subsequent runs for this test definition.",
                        "type": "string",
                        "enum": [
                          "in_progress",
                          "completed",
                          "failed",
                          "archived"
                        ]
                      },
                      "submittedBy": {
                        "description": "Username who initiated the test definition execution.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "submittedDate": {
                        "description": "ISO 8601 timestamp indicating when the test definition execution was submitted.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "supportedComparisonSettings": {
                        "description": "Attributes set for comparison between environments in the `comparisonSettings` array of each executed comparative test case. Possible values are: `responseCode`, `responseHeaders`, `cpcode`, `cachingOption`, `cacheKey`, `metadataVariables`, or `originServer`.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "responseCode",
                            "responseHeaders",
                            "cpcode",
                            "cachingOption",
                            "cacheKey",
                            "metadataVariables",
                            "originServer"
                          ]
                        }
                      },
                      "targetEnvironment": {
                        "description": "Environment against which Test Center executed the test run, either `production` or `staging`.",
                        "maxLength": 100,
                        "type": "string",
                        "enum": [
                          "production",
                          "staging"
                        ]
                      },
                      "targetHostname": {
                        "description": "Target environment hostname against which the test definition was executed.",
                        "format": "hostname",
                        "maxLength": 100,
                        "type": "string"
                      },
                      "testCaseIds": {
                        "description": "Contains unique identifiers of comparative test cases that executed. To get details of a test case, run the [Get a comparative test case](https://techdocs.akamai.com/test-ctr/reference/get-test-definition-test-case) operation.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "testDefinitionExecutionId": {
                        "description": "Unique identifier for each test definition execution.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "testDefinitionId": {
                        "description": "Unique identifier for each test definition that executed.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "testRunId": {
                        "description": "Identifier of the test run.",
                        "minimum": 0,
                        "type": "integer"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/get-comparative-test-definition-execution-response.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestDefinitionExecutionsResponse.yaml"
                  }
                },
                "example": [
                  {
                    "completedDate": "2018-08-18T12:37:26+0000",
                    "note": "A sample note",
                    "status": "completed",
                    "submittedBy": "jperez",
                    "submittedDate": "2018-08-18T11:37:26+0000",
                    "targetEnvironment": "production",
                    "targetHostname": "www.example-weather-production.com",
                    "testDefinitionExecutionId": 148,
                    "testDefinitionId": 738,
                    "testRunId": 133,
                    "ipVersions": [
                      "ipv6"
                    ],
                    "testCaseIds": [
                      1855
                    ],
                    "diffCount": {
                      "outstanding": 2,
                      "total": 2
                    }
                  },
                  {
                    "completedDate": "2018-03-20T11:43:26+0000",
                    "note": "Another sample note",
                    "status": "failed",
                    "submittedBy": "tyamada",
                    "submittedDate": "2018-03-20T11:37:26+0000",
                    "targetEnvironment": "staging",
                    "targetHostname": "www.example-weather-config-1-production.com",
                    "testDefinitionExecutionId": 149,
                    "testDefinitionId": 740,
                    "testRunId": 133,
                    "ipVersions": [
                      "ipv4",
                      "ipv6"
                    ],
                    "testCaseIds": [
                      1991,
                      1992
                    ],
                    "errors": [
                      {
                        "ipVersion": "ipv6",
                        "title": "IP version not supported",
                        "type": "ip.version.not.supported"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "List of comma-delimited test definition identifiers you want to filter executions' details for.",
            "example": "{{testDefinitionIds}}",
            "explode": false,
            "in": "query",
            "name": "testDefinitionIds",
            "style": "form",
            "schema": {
              "example": "738,740",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/testDefinitionIds-query.yaml"
            }
          },
          {
            "description": "Whether the response includes only the latest test definition execution for each passed valid test definition identifier. It's `false` by default.",
            "example": "{{latestPerTestDefinition}}",
            "in": "query",
            "name": "latestPerTestDefinition",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/latestPerTestDefinition-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/comparative/test-definition-executions/{testDefinitionExecutionId}": {
      "get": {
        "description": "Returns details of a test definition execution. The response includes identifiers of comparative test cases that belong to the test definition. It also includes details about the test run in which the test definition was executed, including target hostname, target environment, IP versions, and notes. Depending on the execution's `status`, the response includes different objects. For the `completed` status, there's a `diffCount` object. For the `failed` status, there's an `errors` array. If the test run is in progress when you call this operation, it returns a 404 error.",
        "operationId": "get-test-definition-execution",
        "summary": "Get an execution",
        "tags": [
          "Executions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-definition-execution"
        },
        "responses": {
          "200": {
            "description": "The response provides execution details.",
            "content": {
              "application/json": {
                "example": {
                  "completedDate": "2018-08-18T12:37:26+0000",
                  "note": "A sample note",
                  "status": "completed",
                  "submittedBy": "szhang",
                  "submittedDate": "2018-08-18T11:37:26+0000",
                  "targetEnvironment": "production",
                  "targetHostname": "www.example-weather-production.com",
                  "testDefinitionExecutionId": 148,
                  "testDefinitionId": 738,
                  "testRunId": 133,
                  "ipVersions": [
                    "ipv6"
                  ],
                  "testCaseIds": [
                    1855
                  ],
                  "diffCount": {
                    "outstanding": 2,
                    "total": 2
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The test definition execution is a component of a test run. A test run has one execution for each of its test definitions. A test definition execution contains the subset of test cases, IP versions, target hostname, and target environment of the test definition it belongs to.",
                  "type": "object",
                  "required": [
                    "testDefinitionExecutionId",
                    "testDefinitionId",
                    "testRunId",
                    "targetHostname",
                    "targetEnvironment",
                    "supportedComparisonSettings",
                    "submittedBy",
                    "submittedDate",
                    "status",
                    "ipVersions",
                    "errors",
                    "testCaseIds"
                  ],
                  "properties": {
                    "completedDate": {
                      "description": "ISO 8601 timestamp indicating when the test definition execution was completed.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "diffCount": {
                      "additionalProperties": false,
                      "description": "Contains information about diffs detected during the test run. It appears only when the execution's `status` is `completed`.",
                      "type": "object",
                      "required": [
                        "total",
                        "outstanding"
                      ],
                      "properties": {
                        "outstanding": {
                          "description": "Number of diffs not accepted.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "total": {
                          "description": "Total number of diffs detected.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      }
                    },
                    "errors": {
                      "description": "Contains [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating errors occurred during the test run. It appears only when the execution's `status` is `failed`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "type",
                          "title",
                          "ipVersion"
                        ],
                        "properties": {
                          "ipVersion": {
                            "description": "IP version for which the test definition execution failed.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "testCaseId": {
                            "description": "Unique identifier for each comparative test case for which the test definition execution failed. If missing, the execution failed for all test cases for the corresponding IP version.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "title": {
                            "description": "Summary of each error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Dot-notated identifier for each type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "ipVersions": {
                      "description": "IP versions for which the test run executed. Possible values are: `ipv4`, `ipv6`, or both.",
                      "maxItems": 2,
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string",
                        "enum": [
                          "ipv4",
                          "ipv6"
                        ]
                      }
                    },
                    "note": {
                      "description": "Notes about the test definition execution.",
                      "maxLength": 500,
                      "minLength": 0,
                      "type": "string"
                    },
                    "status": {
                      "description": "Execution's status. Possible values are: `in_progress`, `completed`, `failed`, or `archived`. A value of `failed` means that the execution couldn't be run because of an error. You can check its details in the `errors` array. A value of `archived` means there have been at least five subsequent runs for this test definition.",
                      "type": "string",
                      "enum": [
                        "in_progress",
                        "completed",
                        "failed",
                        "archived"
                      ]
                    },
                    "submittedBy": {
                      "description": "Username who initiated the test definition execution.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "submittedDate": {
                      "description": "ISO 8601 timestamp indicating when the test definition execution was submitted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "supportedComparisonSettings": {
                      "description": "Attributes set for comparison between environments in the `comparisonSettings` array of each executed comparative test case. Possible values are: `responseCode`, `responseHeaders`, `cpcode`, `cachingOption`, `cacheKey`, `metadataVariables`, or `originServer`.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "responseCode",
                          "responseHeaders",
                          "cpcode",
                          "cachingOption",
                          "cacheKey",
                          "metadataVariables",
                          "originServer"
                        ]
                      }
                    },
                    "targetEnvironment": {
                      "description": "Environment against which Test Center executed the test run, either `production` or `staging`.",
                      "maxLength": 100,
                      "type": "string",
                      "enum": [
                        "production",
                        "staging"
                      ]
                    },
                    "targetHostname": {
                      "description": "Target environment hostname against which the test definition was executed.",
                      "format": "hostname",
                      "maxLength": 100,
                      "type": "string"
                    },
                    "testCaseIds": {
                      "description": "Contains unique identifiers of comparative test cases that executed. To get details of a test case, run the [Get a comparative test case](https://techdocs.akamai.com/test-ctr/reference/get-test-definition-test-case) operation.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minimum": 0,
                        "type": "integer"
                      }
                    },
                    "testDefinitionExecutionId": {
                      "description": "Unique identifier for each test definition execution.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "testDefinitionId": {
                      "description": "Unique identifier for each test definition that executed.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "testRunId": {
                      "description": "Identifier of the test run.",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-comparative-test-definition-execution-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each test definition execution.",
          "example": "{{testDefinitionExecutionId}}",
          "in": "path",
          "name": "testDefinitionExecutionId",
          "required": true,
          "schema": {
            "example": 148,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testDefinitionExecutionId-path.yaml"
          }
        }
      ]
    },
    "/comparative/test-definition-executions/{testDefinitionExecutionId}/differences": {
      "get": {
        "description": "Lists diffs found for a test definition execution. The response is an array of objects. You can follow up and update the status of the diffs. See [Update diffs](https://techdocs.akamai.com/test-ctr/reference/put-test-definition-execution-differences).",
        "operationId": "get-test-definition-execution-differences",
        "summary": "List diffs",
        "tags": [
          "Executions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-definition-execution-differences"
        },
        "responses": {
          "200": {
            "description": "The response lists diffs.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "The list of differences in the test run in the two environments.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Contains information about the diff found between the source URL and target URL, under a specific IP version, within a specific geolocation and on a specific browser, as configured in the test cases of the test definition that was run.",
                    "type": "object",
                    "required": [
                      "differenceId",
                      "testCaseId",
                      "sourceUrl",
                      "targetUrl",
                      "ipVersion",
                      "geoLocation",
                      "browser",
                      "comparisonAttribute",
                      "parameterNames",
                      "sourceValue",
                      "targetValue",
                      "isAccepted"
                    ],
                    "properties": {
                      "browser": {
                        "additionalProperties": false,
                        "description": "Object containing browser info.",
                        "type": "object",
                        "required": [
                          "name",
                          "version"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the browser. The only available value is `chrome`.",
                            "type": "string",
                            "enum": [
                              "chrome"
                            ]
                          },
                          "version": {
                            "description": "Version of the browser.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      },
                      "comparisonAttribute": {
                        "description": "Comparison setting which the diff object addresses. Can be any comparison setting: `cacheKey`, `cachingOption`, `cpcode`, `metadataVariables`, `originServer`, `responseCode`, `responseHeaders`.",
                        "type": "string",
                        "enum": [
                          "responseCode",
                          "responseHeaders",
                          "cpcode",
                          "cachingOption",
                          "originServer",
                          "metadataVariables",
                          "cacheKey"
                        ]
                      },
                      "differenceId": {
                        "description": "Unique identifier for each diff.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "geoLocation": {
                        "description": "Identifier of the geolocation.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "ipVersion": {
                        "description": "IP version used for this execution, either `ipv4` or `ipv6`.",
                        "type": "string",
                        "enum": [
                          "ipv4",
                          "ipv6"
                        ]
                      },
                      "isAccepted": {
                        "default": false,
                        "description": "Whether the diff is accepted.",
                        "type": "boolean"
                      },
                      "parameterNames": {
                        "description": "List of strings which represents a hierarchy of keys deduced from the response header value.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "sourceUrl": {
                        "description": "URL of the object in source environment.",
                        "format": "uri",
                        "type": "string"
                      },
                      "sourceValue": {
                        "description": "Value of the comparison attribute for the `parameterNames` in source environment.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "targetUrl": {
                        "description": "URL of the object in target environment.",
                        "format": "uri",
                        "type": "string"
                      },
                      "targetValue": {
                        "description": "Value of the comparison attribute for the `parameterNames` in target environment.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "testCaseId": {
                        "description": "Unique identifier of comparative test case the diff belongs to.",
                        "minimum": 0,
                        "type": "integer"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/get-difference-response.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getDifferencesResponse.yaml"
                  }
                },
                "example": [
                  {
                    "comparisonAttribute": "responseHeaders",
                    "differenceId": "e52a1b76-d33d-11e7-9296-cec278b6b50a",
                    "geoLocation": "us",
                    "ipVersion": "ipv6",
                    "isAccepted": false,
                    "sourceUrl": "https://www.example-weather.com/",
                    "sourceValue": "gzip",
                    "targetUrl": "https://www.example-weather-production.com/",
                    "targetValue": "deflate",
                    "testCaseId": 1855,
                    "parameterNames": [
                      "Content-Encoding"
                    ],
                    "browser": {
                      "name": "chrome",
                      "version": "62"
                    }
                  },
                  {
                    "comparisonAttribute": "responseCode",
                    "differenceId": "eece8d88-d33d-11e7-9296-cec278b6b50a",
                    "geoLocation": "us",
                    "ipVersion": "ipv6",
                    "isAccepted": false,
                    "sourceUrl": "https://www.example-weather.com/regions/12345",
                    "sourceValue": "200",
                    "targetUrl": "https://www.example-weather-production.com/regions/12345",
                    "targetValue": "400",
                    "testCaseId": 1855,
                    "parameterNames": [],
                    "browser": {
                      "name": "chrome",
                      "version": "62"
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates the status of diffs. To learn more about diffs, check [Comparative testing concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts#comparative-testing). The operation responds with a [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses) that consists of two arrays: `successes` and `failures`. The `successes` array lists diffs updated successfully, whereas the `failures` array provides details on any remainders that failed.",
        "operationId": "put-test-definition-execution-differences",
        "summary": "Update diffs",
        "tags": [
          "Executions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/put-test-definition-execution-differences"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "List of objects containing unique identifiers of difference and their resolution status.",
                "minItems": 1,
                "type": "array",
                "items": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "differenceId",
                    "isAccepted"
                  ],
                  "properties": {
                    "differenceId": {
                      "description": "Unique identifier for each difference.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string"
                    },
                    "isAccepted": {
                      "description": "Whether the difference is accepted.",
                      "type": "boolean"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/updateDifferencesRequest.yaml"
                }
              },
              "example": [
                {
                  "differenceId": "e52a1b76-d33d-11e7-9296-cec278b6b50a",
                  "isAccepted": true
                },
                {
                  "differenceId": "fe59f1e6-0022-4119-b05b-71e33c2a0ee2",
                  "isAccepted": true
                }
              ]
            }
          }
        },
        "responses": {
          "207": {
            "description": "[Partial success responses](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "failures": [
                    {
                      "status": 200,
                      "title": "Validation Error",
                      "type": "validation.error",
                      "errors": [
                        {
                          "differenceId": "fe59f1e6-0022-4119-b05b-71e33c2a0ee2",
                          "errorField": "differenceId",
                          "title": "Invalid Value",
                          "type": "invalid.value"
                        }
                      ]
                    }
                  ],
                  "successes": [
                    {
                      "differenceId": "e52a1b76-d33d-11e7-9296-cec278b6b50a"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "An object encapsulating the status of the update differences operation.",
                  "type": "object",
                  "required": [
                    "successes",
                    "failures"
                  ],
                  "properties": {
                    "failures": {
                      "description": "HTTP Problem Detail object with extension fields.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "differenceId",
                          "type",
                          "title",
                          "status",
                          "instance"
                        ],
                        "properties": {
                          "differenceId": {
                            "description": "The unique identifier for difference as a UUID v4 string.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "instance": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "minimum": 0,
                            "type": "integer"
                          },
                          "title": {
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "successes": {
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "differenceId"
                        ],
                        "properties": {
                          "differenceId": {
                            "description": "The unique identifier for difference as a UUID v4 string.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/updateDifferencesResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each test definition execution.",
          "example": "{{testDefinitionExecutionId}}",
          "in": "path",
          "name": "testDefinitionExecutionId",
          "required": true,
          "schema": {
            "example": 148,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testDefinitionExecutionId-path.yaml"
          }
        }
      ]
    },
    "/comparative/test-definition-executions/{testDefinitionExecutionId}/differences/notes": {
      "post": {
        "description": "Creates notes for a set of diffs in bulk, under `testDefinitionExecutionId`. To access created notes, run the [List activities](https://techdocs.akamai.com/test-ctr/reference/get-activities) operation and set the value of `activityResource` to `test_difference_note`.",
        "operationId": "post-test-definition-execution-differences-notes",
        "summary": "Create notes for a set of diffs",
        "tags": [
          "Executions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-definition-execution-differences-notes"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Create notes for differences in bulk.",
                "minItems": 0,
                "type": "array",
                "items": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "differenceId",
                    "note"
                  ],
                  "properties": {
                    "differenceId": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "note": {
                      "minLength": 1,
                      "type": "string"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/createDiffNoteRequest.yaml"
                }
              },
              "example": [
                {
                  "differenceId": "e52a1b76-d33d-11e7-9296-cec278b6b50a",
                  "note": "Unexpected change due to incorrect content encoding config"
                },
                {
                  "differenceId": "eece8d88-d33d-11e7-9296-cec278b6b50a",
                  "note": "Expected change."
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each test definition execution.",
          "example": "{{testDefinitionExecutionId}}",
          "in": "path",
          "name": "testDefinitionExecutionId",
          "required": true,
          "schema": {
            "example": 148,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testDefinitionExecutionId-path.yaml"
          }
        }
      ]
    },
    "/comparative/test-definition-executions/{testDefinitionExecutionId}/differences/{differenceId}": {
      "get": {
        "description": "Returns details of a test definition execution diff.",
        "operationId": "get-test-definition-execution-difference",
        "summary": "Get a diff",
        "tags": [
          "Executions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-definition-execution-difference"
        },
        "responses": {
          "200": {
            "description": "The response provides execution diff details.",
            "content": {
              "application/json": {
                "example": {
                  "comparisonAttribute": "responseHeaders",
                  "differenceId": "e52a1b76-d33d-11e7-9296-cec278b6b50a",
                  "geoLocation": "us",
                  "ipVersion": "ipv6",
                  "isAccepted": false,
                  "sourceUrl": "https://www.example-weather.com/",
                  "sourceValue": "gzip",
                  "targetUrl": "https://www.example-weather-production.com/",
                  "targetValue": "deflate",
                  "testCaseId": 1855,
                  "parameterNames": [
                    "Content-Encoding"
                  ],
                  "browser": {
                    "name": "chrome",
                    "version": "62"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about the diff found between the source URL and target URL, under a specific IP version, within a specific geolocation and on a specific browser, as configured in the test cases of the test definition that was run.",
                  "type": "object",
                  "required": [
                    "differenceId",
                    "testCaseId",
                    "sourceUrl",
                    "targetUrl",
                    "ipVersion",
                    "geoLocation",
                    "browser",
                    "comparisonAttribute",
                    "parameterNames",
                    "sourceValue",
                    "targetValue",
                    "isAccepted"
                  ],
                  "properties": {
                    "browser": {
                      "additionalProperties": false,
                      "description": "Object containing browser info.",
                      "type": "object",
                      "required": [
                        "name",
                        "version"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the browser. The only available value is `chrome`.",
                          "type": "string",
                          "enum": [
                            "chrome"
                          ]
                        },
                        "version": {
                          "description": "Version of the browser.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "comparisonAttribute": {
                      "description": "Comparison setting which the diff object addresses. Can be any comparison setting: `cacheKey`, `cachingOption`, `cpcode`, `metadataVariables`, `originServer`, `responseCode`, `responseHeaders`.",
                      "type": "string",
                      "enum": [
                        "responseCode",
                        "responseHeaders",
                        "cpcode",
                        "cachingOption",
                        "originServer",
                        "metadataVariables",
                        "cacheKey"
                      ]
                    },
                    "differenceId": {
                      "description": "Unique identifier for each diff.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "geoLocation": {
                      "description": "Identifier of the geolocation.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "ipVersion": {
                      "description": "IP version used for this execution, either `ipv4` or `ipv6`.",
                      "type": "string",
                      "enum": [
                        "ipv4",
                        "ipv6"
                      ]
                    },
                    "isAccepted": {
                      "default": false,
                      "description": "Whether the diff is accepted.",
                      "type": "boolean"
                    },
                    "parameterNames": {
                      "description": "List of strings which represents a hierarchy of keys deduced from the response header value.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "sourceUrl": {
                      "description": "URL of the object in source environment.",
                      "format": "uri",
                      "type": "string"
                    },
                    "sourceValue": {
                      "description": "Value of the comparison attribute for the `parameterNames` in source environment.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "targetUrl": {
                      "description": "URL of the object in target environment.",
                      "format": "uri",
                      "type": "string"
                    },
                    "targetValue": {
                      "description": "Value of the comparison attribute for the `parameterNames` in target environment.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "testCaseId": {
                      "description": "Unique identifier of comparative test case the diff belongs to.",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-difference-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each diff.",
          "example": "{{differenceId}}",
          "in": "path",
          "name": "differenceId",
          "required": true,
          "schema": {
            "example": "e52a1b76-d33d-11e7-9296-cec278b6b50a",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/differenceId-path.yaml"
          }
        },
        {
          "description": "Unique identifier for each test definition execution.",
          "example": "{{testDefinitionExecutionId}}",
          "in": "path",
          "name": "testDefinitionExecutionId",
          "required": true,
          "schema": {
            "example": 148,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testDefinitionExecutionId-path.yaml"
          }
        }
      ]
    },
    "/comparative/test-definition-executions/{testDefinitionExecutionId}/differences/{differenceId}/raw-request-response": {
      "get": {
        "description": "Returns transaction details for both compared environments from which a diff was generated.",
        "operationId": "get-test-definition-execution-difference-raw-request-response",
        "summary": "Get transaction details for a diff",
        "tags": [
          "Executions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-definition-execution-difference-raw-request-response"
        },
        "responses": {
          "200": {
            "description": "The response provides transaction details.",
            "content": {
              "application/json": {
                "example": {
                  "sourceEnvironment": {
                    "request": {
                      "bodySize": 0,
                      "comment": "",
                      "headersSize": 610,
                      "httpVersion": "HTTP/1.1",
                      "method": "GET",
                      "url": "https://www.example-weather.com/",
                      "cookies": [],
                      "queryString": [],
                      "headers": [
                        {
                          "name": "Host",
                          "value": "www.example-weather"
                        }
                      ]
                    },
                    "response": {
                      "bodySize": 737,
                      "comment": "",
                      "headersSize": 1350,
                      "httpVersion": "HTTP/1.1",
                      "redirectURL": "",
                      "status": 200,
                      "statusText": "OK",
                      "cookies": [],
                      "content": {
                        "comment": "",
                        "compression": 0,
                        "mimeType": "application/javascript",
                        "size": 0,
                        "text": ""
                      },
                      "headers": [
                        {
                          "name": "Server",
                          "value": "Apache/2.4.7 (Ubuntu)"
                        },
                        {
                          "name": "Vary",
                          "value": "Accept-Encoding"
                        }
                      ]
                    }
                  },
                  "targetEnvironment": {
                    "request": {
                      "bodySize": 0,
                      "comment": "",
                      "headersSize": 625,
                      "httpVersion": "HTTP/1.1",
                      "method": "GET",
                      "url": "https://www.example-weather-production.com/",
                      "cookies": [],
                      "queryString": [],
                      "headers": [
                        {
                          "name": "Host",
                          "value": "www.example-weather-production.com"
                        }
                      ]
                    },
                    "response": {
                      "bodySize": 1597,
                      "comment": "",
                      "headersSize": 1560,
                      "httpVersion": "HTTP/1.1",
                      "redirectURL": "",
                      "status": 200,
                      "statusText": "OK",
                      "cookies": [],
                      "content": {
                        "comment": "",
                        "compression": 0,
                        "mimeType": "application/javascript",
                        "size": 0,
                        "text": ""
                      },
                      "headers": [
                        {
                          "name": "X-Akamai-Staging",
                          "value": "EdgeSuite"
                        },
                        {
                          "name": "Cache-Control",
                          "value": "max-age=82116"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains a raw request and response for a diff.",
                  "type": "object",
                  "required": [
                    "sourceEnvironment",
                    "targetEnvironment"
                  ],
                  "properties": {
                    "sourceEnvironment": {
                      "additionalProperties": false,
                      "description": "Contains a raw request for a diff.",
                      "type": "object",
                      "required": [
                        "request",
                        "response"
                      ],
                      "properties": {
                        "request": {
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "method",
                            "url",
                            "httpVersion",
                            "cookies",
                            "headers",
                            "queryString",
                            "headerSize",
                            "bodySize",
                            "comment"
                          ],
                          "properties": {
                            "bodySize": {
                              "minimum": 0,
                              "type": "integer"
                            },
                            "comment": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "cookies": {
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "headerSize": {
                              "minimum": 0,
                              "type": "integer"
                            },
                            "headers": {
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "value": {
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "httpVersion": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "method": {
                              "description": "Standard HTTP method. Possible options are: `GET`, `POST`, `DELETE`, `PUT`, or `PATCH`.",
                              "type": "string",
                              "enum": [
                                "GET",
                                "POST",
                                "DELETE",
                                "PUT",
                                "PATCH"
                              ]
                            },
                            "queryString": {
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "url": {
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        },
                        "response": {
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "status",
                            "statusText",
                            "httpVersion",
                            "cookies",
                            "headers",
                            "content",
                            "redirectURL",
                            "headerSize",
                            "bodySize",
                            "comment"
                          ],
                          "properties": {
                            "bodySize": {
                              "minimum": 0,
                              "type": "integer"
                            },
                            "comment": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "content": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "size",
                                "mimeType",
                                "comment",
                                "text",
                                "compression"
                              ],
                              "properties": {
                                "comment": {
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "compression": {
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "mimeType": {
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "size": {
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "text": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            },
                            "cookies": {
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "headerSize": {
                              "minimum": 0,
                              "type": "integer"
                            },
                            "headers": {
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "value": {
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "httpVersion": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "redirectURL": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "status": {
                              "minimum": 0,
                              "type": "integer"
                            },
                            "statusText": {
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "targetEnvironment": {
                      "additionalProperties": false,
                      "description": "Contains a raw response for a diff.",
                      "type": "object",
                      "required": [
                        "request",
                        "response"
                      ],
                      "properties": {
                        "request": {
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "method",
                            "url",
                            "httpVersion",
                            "cookies",
                            "headers",
                            "queryString",
                            "headerSize",
                            "bodySize",
                            "comment"
                          ],
                          "properties": {
                            "bodySize": {
                              "minimum": 0,
                              "type": "integer"
                            },
                            "comment": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "cookies": {
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "headerSize": {
                              "minimum": 0,
                              "type": "integer"
                            },
                            "headers": {
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "value": {
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "httpVersion": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "method": {
                              "description": "Standard HTTP method. Possible options are: `GET`, `POST`, `DELETE`, `PUT`, or `PATCH`.",
                              "type": "string",
                              "enum": [
                                "GET",
                                "POST",
                                "DELETE",
                                "PUT",
                                "PATCH"
                              ]
                            },
                            "queryString": {
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "url": {
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        },
                        "response": {
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "status",
                            "statusText",
                            "httpVersion",
                            "cookies",
                            "headers",
                            "content",
                            "redirectURL",
                            "headerSize",
                            "bodySize",
                            "comment"
                          ],
                          "properties": {
                            "bodySize": {
                              "minimum": 0,
                              "type": "integer"
                            },
                            "comment": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "content": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "size",
                                "mimeType",
                                "comment",
                                "text",
                                "compression"
                              ],
                              "properties": {
                                "comment": {
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "compression": {
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "mimeType": {
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "size": {
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "text": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            },
                            "cookies": {
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "headerSize": {
                              "minimum": 0,
                              "type": "integer"
                            },
                            "headers": {
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "value": {
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "httpVersion": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "redirectURL": {
                              "minLength": 1,
                              "type": "string"
                            },
                            "status": {
                              "minimum": 0,
                              "type": "integer"
                            },
                            "statusText": {
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getRawRequestResponseResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each diff.",
          "example": "{{differenceId}}",
          "in": "path",
          "name": "differenceId",
          "required": true,
          "schema": {
            "example": "e52a1b76-d33d-11e7-9296-cec278b6b50a",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/differenceId-path.yaml"
          }
        },
        {
          "description": "Unique identifier for each test definition execution.",
          "example": "{{testDefinitionExecutionId}}",
          "in": "path",
          "name": "testDefinitionExecutionId",
          "required": true,
          "schema": {
            "example": 148,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testDefinitionExecutionId-path.yaml"
          }
        }
      ]
    },
    "/comparative/test-definitions": {
      "post": {
        "description": "Creates a new test definition. Specify a `hostname` you're using Property Manager to deliver content for. Hostnames that use Instant Config, Slot Matching, or Zone Apex Mapping don't work. Once you specify a `hostname`, you cannot change it.",
        "operationId": "post-test-definitions",
        "summary": "Create a new test definition",
        "tags": [
          "Test definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-definitions"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "hostname": "www.example-weather.com",
                "testDefinitionDescription": "Testing weather prefetch configurations",
                "testDefinitionName": "Weather Test",
                "ipVersions": [
                  "ipv6"
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "An object containing data for creating a new test definition.",
                "type": "object",
                "required": [
                  "testDefinitionName",
                  "hostname",
                  "ipVersions"
                ],
                "properties": {
                  "hostname": {
                    "description": "The hostname to be tested.",
                    "example": "{{hostname}}",
                    "format": "hostname",
                    "type": "string"
                  },
                  "ipVersions": {
                    "description": "The IP versions to execute the test definition with.",
                    "maxItems": 2,
                    "minItems": 1,
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                      "type": "string",
                      "enum": [
                        "ipv4",
                        "ipv6"
                      ]
                    }
                  },
                  "testDefinitionDescription": {
                    "description": "The description you supply for the test definition. Max length is 4000 characters.",
                    "example": "{{testDefinitionDescription}}",
                    "maxLength": 4000,
                    "minLength": 1,
                    "type": "string"
                  },
                  "testDefinitionName": {
                    "description": "The name you supply for the test definition. Max length is 100 characters.",
                    "example": "{{testDefinitionName}}",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/createTestDefinitionRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created new test definition.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "mrossi",
                  "createdDate": "2018-03-16T10:46:21+0000",
                  "hostname": "www.example-weather.com",
                  "modifiedBy": "adevi",
                  "modifiedDate": "2018-03-16T10:46:22+0000",
                  "status": "active",
                  "testDefinitionDescription": "Testing weather prefetch configurations",
                  "testDefinitionId": 738,
                  "testDefinitionName": "Weather Test",
                  "ipVersions": [
                    "ipv6"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about a test definition.",
                  "type": "object",
                  "required": [
                    "testDefinitionId",
                    "testDefinitionName",
                    "hostname",
                    "ipVersions",
                    "createdBy",
                    "createdDate"
                  ],
                  "properties": {
                    "createdBy": {
                      "description": "Username who created the test definition.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the test definition was created.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the test definition.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the test definition was last deleted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "hostname": {
                      "description": "Hostname to be tested. Once set, you can't modify this value.",
                      "format": "hostname",
                      "maxLength": 100,
                      "type": "string"
                    },
                    "ipVersions": {
                      "description": "IP version you want to run the test for. Possible values are: `ipv4`, `ipv6`, or both.",
                      "maxItems": 2,
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string",
                        "enum": [
                          "ipv4",
                          "ipv6"
                        ]
                      }
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the test definition.",
                      "minLength": 0,
                      "readOnly": true,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the test definition was last modified.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "status": {
                      "description": "Test definition's status. Possible values are: `active` or `inactive`. The `inactive` status means the test definition was removed and you can't use it.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "inactive",
                        "active"
                      ]
                    },
                    "testDefinitionDescription": {
                      "description": "Description of the test definition.",
                      "maxLength": 4000,
                      "minLength": 0,
                      "type": "string"
                    },
                    "testDefinitionId": {
                      "description": "Unique identifier for each test definition.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "testDefinitionName": {
                      "description": "Name of the test definition.",
                      "maxLength": 100,
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-test-definition-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists test definitions created in your organization. The list can also include deleted test definitions that you can restore. The response is an array of objects, each keyed by `testDefinitionId`.",
        "operationId": "get-test-definitions",
        "summary": "List test definitions",
        "tags": [
          "Test definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-definitions"
        },
        "responses": {
          "200": {
            "description": "The response lists test definitions.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "List of test definitions.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Contains information about a test definition.",
                    "type": "object",
                    "required": [
                      "testDefinitionId",
                      "testDefinitionName",
                      "hostname",
                      "ipVersions",
                      "createdBy",
                      "createdDate"
                    ],
                    "properties": {
                      "createdBy": {
                        "description": "Username who created the test definition.",
                        "minLength": 1,
                        "readOnly": true,
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 timestamp indicating when the test definition was created.",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      },
                      "deletedBy": {
                        "description": "Username who last deleted the test definition.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "deletedDate": {
                        "description": "ISO 8601 timestamp indicating when the test definition was last deleted.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "hostname": {
                        "description": "Hostname to be tested. Once set, you can't modify this value.",
                        "format": "hostname",
                        "maxLength": 100,
                        "type": "string"
                      },
                      "ipVersions": {
                        "description": "IP version you want to run the test for. Possible values are: `ipv4`, `ipv6`, or both.",
                        "maxItems": 2,
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                          "type": "string",
                          "enum": [
                            "ipv4",
                            "ipv6"
                          ]
                        }
                      },
                      "modifiedBy": {
                        "description": "Username who last modified the test definition.",
                        "minLength": 0,
                        "readOnly": true,
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "ISO 8601 timestamp indicating when the test definition was last modified.",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      },
                      "status": {
                        "description": "Test definition's status. Possible values are: `active` or `inactive`. The `inactive` status means the test definition was removed and you can't use it.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "inactive",
                          "active"
                        ]
                      },
                      "testDefinitionDescription": {
                        "description": "Description of the test definition.",
                        "maxLength": 4000,
                        "minLength": 0,
                        "type": "string"
                      },
                      "testDefinitionId": {
                        "description": "Unique identifier for each test definition.",
                        "minimum": 1,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "testDefinitionName": {
                        "description": "Name of the test definition.",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/get-test-definition-response.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestDefinitionsResponse.yaml"
                  }
                },
                "example": [
                  {
                    "createdBy": "jkowalski",
                    "createdDate": "2018-03-16T10:46:21+0000",
                    "hostname": "www.example-weather.com",
                    "modifiedBy": "jperez",
                    "modifiedDate": "2018-03-16T10:46:22+0000",
                    "testDefinitionDescription": "Testing weather prefetch configurations",
                    "testDefinitionId": 738,
                    "testDefinitionName": "Weather Test",
                    "ipVersions": [
                      "ipv6"
                    ]
                  },
                  {
                    "createdBy": "mrossi",
                    "createdDate": "2018-03-11T17:45:27+0000",
                    "hostname": "www.example-weather-config-1.com",
                    "modifiedBy": "szhang",
                    "modifiedDate": "2018-03-22T10:56:45+0000",
                    "testDefinitionId": 495,
                    "testDefinitionName": "Weather Test Config 1",
                    "ipVersions": [
                      "ipv4"
                    ]
                  },
                  {
                    "createdBy": "tyamada",
                    "createdDate": "2018-03-16T10:46:21+0000",
                    "hostname": "www.example-weather-config-2.com",
                    "modifiedBy": "jperez",
                    "modifiedDate": "2018-03-16T10:46:22+0000",
                    "testDefinitionDescription": "Testing weather prefetch configurations (config 2)",
                    "testDefinitionId": 740,
                    "testDefinitionName": "Weather Test Config 2",
                    "ipVersions": [
                      "ipv4",
                      "ipv6"
                    ]
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Whether to list any items deleted within the last 30 days that you can restore. It's `false` by default.",
            "example": "{{includeRecentlyDeleted}}",
            "in": "query",
            "name": "includeRecentlyDeleted",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/includeRecentlyDeleted-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/comparative/test-definitions/{testDefinitionId}": {
      "get": {
        "description": "Returns details of a test definition, including its status. To check the included test cases, run the [List comparative test cases](https://techdocs.akamai.com/test-ctr/reference/get-test-definition-test-cases) operation.",
        "operationId": "get-test-definition",
        "summary": "Get a test definition",
        "tags": [
          "Test definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-definition"
        },
        "responses": {
          "200": {
            "description": "The response provides test definition details.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "hgildong",
                  "createdDate": "2018-03-16T10:46:21+0000",
                  "hostname": "www.example-weather.com",
                  "modifiedBy": "adevi",
                  "modifiedDate": "2018-03-16T10:46:22+0000",
                  "status": "active",
                  "testDefinitionDescription": "Testing weather prefetch configurations",
                  "testDefinitionId": 738,
                  "testDefinitionName": "Weather Test",
                  "ipVersions": [
                    "ipv6"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about a test definition.",
                  "type": "object",
                  "required": [
                    "testDefinitionId",
                    "testDefinitionName",
                    "hostname",
                    "ipVersions",
                    "createdBy",
                    "createdDate"
                  ],
                  "properties": {
                    "createdBy": {
                      "description": "Username who created the test definition.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the test definition was created.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the test definition.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the test definition was last deleted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "hostname": {
                      "description": "Hostname to be tested. Once set, you can't modify this value.",
                      "format": "hostname",
                      "maxLength": 100,
                      "type": "string"
                    },
                    "ipVersions": {
                      "description": "IP version you want to run the test for. Possible values are: `ipv4`, `ipv6`, or both.",
                      "maxItems": 2,
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string",
                        "enum": [
                          "ipv4",
                          "ipv6"
                        ]
                      }
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the test definition.",
                      "minLength": 0,
                      "readOnly": true,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the test definition was last modified.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "status": {
                      "description": "Test definition's status. Possible values are: `active` or `inactive`. The `inactive` status means the test definition was removed and you can't use it.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "inactive",
                        "active"
                      ]
                    },
                    "testDefinitionDescription": {
                      "description": "Description of the test definition.",
                      "maxLength": 4000,
                      "minLength": 0,
                      "type": "string"
                    },
                    "testDefinitionId": {
                      "description": "Unique identifier for each test definition.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "testDefinitionName": {
                      "description": "Name of the test definition.",
                      "maxLength": 100,
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-test-definition-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates a test definition except for its `hostname`, which you set once when creating the test definition.",
        "operationId": "put-test-definition",
        "summary": "Update a test definition",
        "tags": [
          "Test definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/put-test-definition"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "hostname": "www.example-weather.com",
                "testDefinitionDescription": "Testing weather prefetch configurations (edited)",
                "testDefinitionId": 738,
                "testDefinitionName": "Weather Test (edited)",
                "ipVersions": [
                  "ipv6"
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "A test definition object.",
                "type": "object",
                "required": [
                  "testDefinitionId",
                  "testDefinitionName",
                  "hostname",
                  "ipVersions"
                ],
                "properties": {
                  "createdBy": {
                    "description": "Username who created the test definition.",
                    "example": "{{createdBy}}",
                    "minLength": 1,
                    "readOnly": true,
                    "type": "string"
                  },
                  "createdDate": {
                    "description": "ISO 8601 timestamp indicating when the test definition was created.",
                    "example": "{{createdDate}}",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "hostname": {
                    "description": "Hostname to be tested. It can't be updated.",
                    "example": "{{hostname}}",
                    "format": "hostname",
                    "type": "string"
                  },
                  "ipVersions": {
                    "description": "IP versions for which the test has to be run, either `ipv4` or `ipv6`.",
                    "maxItems": 2,
                    "minItems": 1,
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                      "type": "string",
                      "enum": [
                        "ipv4",
                        "ipv6"
                      ]
                    }
                  },
                  "modifiedBy": {
                    "description": "Username who last modified the test definition.",
                    "example": "{{modifiedBy}}",
                    "minLength": 0,
                    "readOnly": true,
                    "type": "string"
                  },
                  "modifiedDate": {
                    "description": "ISO 8601 timestamp indicating when the test definition was last modified.",
                    "example": "{{modifiedDate}}",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "testDefinitionDescription": {
                    "description": "Description for the updated test definition.",
                    "example": "{{testDefinitionDescription}}",
                    "maxLength": 4000,
                    "minLength": 0,
                    "type": "string"
                  },
                  "testDefinitionId": {
                    "description": "Unique identifier for each test definition.",
                    "example": "{{testDefinitionId}}",
                    "minimum": 1,
                    "readOnly": true,
                    "type": "integer"
                  },
                  "testDefinitionName": {
                    "description": "Name of the test definition.",
                    "example": "{{testDefinitionName}}",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/updateTestDefinitionRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response returns the updated test definition.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "tyamada",
                  "createdDate": "2018-03-16T10:46:21+0000",
                  "hostname": "www.example-weather.com",
                  "modifiedBy": "adevi",
                  "modifiedDate": "2018-04-10T06:45:58+0000",
                  "testDefinitionDescription": "Testing weather prefetch configurations (edited)",
                  "testDefinitionId": 738,
                  "testDefinitionName": "Weather Test (edited)",
                  "ipVersions": [
                    "ipv6"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about a test definition.",
                  "type": "object",
                  "required": [
                    "testDefinitionId",
                    "testDefinitionName",
                    "hostname",
                    "ipVersions",
                    "createdBy",
                    "createdDate"
                  ],
                  "properties": {
                    "createdBy": {
                      "description": "Username who created the test definition.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the test definition was created.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the test definition.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the test definition was last deleted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "hostname": {
                      "description": "Hostname to be tested. Once set, you can't modify this value.",
                      "format": "hostname",
                      "maxLength": 100,
                      "type": "string"
                    },
                    "ipVersions": {
                      "description": "IP version you want to run the test for. Possible values are: `ipv4`, `ipv6`, or both.",
                      "maxItems": 2,
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string",
                        "enum": [
                          "ipv4",
                          "ipv6"
                        ]
                      }
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the test definition.",
                      "minLength": 0,
                      "readOnly": true,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the test definition was last modified.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "status": {
                      "description": "Test definition's status. Possible values are: `active` or `inactive`. The `inactive` status means the test definition was removed and you can't use it.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "inactive",
                        "active"
                      ]
                    },
                    "testDefinitionDescription": {
                      "description": "Description of the test definition.",
                      "maxLength": 4000,
                      "minLength": 0,
                      "type": "string"
                    },
                    "testDefinitionId": {
                      "description": "Unique identifier for each test definition.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "testDefinitionName": {
                      "description": "Name of the test definition.",
                      "maxLength": 100,
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-test-definition-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Deletes a test definition. You can [restore](https://techdocs.akamai.com/test-ctr/reference/post-test-definition-restore) test definitions within 30 days of deleting them.",
        "operationId": "delete-test-definition",
        "summary": "Delete a test definition",
        "tags": [
          "Test definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/delete-test-definition"
        },
        "responses": {
          "204": {
            "description": "Successfully deleted test definition.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each test definition.",
          "example": "{{testDefinitionId}}",
          "in": "path",
          "name": "testDefinitionId",
          "required": true,
          "schema": {
            "example": 738,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testDefinitionId-path.yaml"
          }
        }
      ]
    },
    "/comparative/test-definitions/{testDefinitionId}/clone": {
      "post": {
        "description": "Clones a test definition. Cloned test definitions have the same hostname and associated config as the source test definition. The operation also clones the included comparative test cases. If an optional request member of the request is missing, Test Center uses the value from the source test suite.",
        "operationId": "post-test-definition-clone",
        "summary": "Clone a test definition",
        "tags": [
          "Test definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-definition-clone"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "createdBy": "jperez",
                "createdDate": "2018-03-16T10:46:21+0000",
                "hostname": "www.example-weather-config-1.com",
                "modifiedBy": "hgildong",
                "modifiedDate": "2018-04-10T06:45:58+0000",
                "testDefinitionDescription": "Creating a copy of Weather Test",
                "testDefinitionId": 738,
                "testDefinitionName": "Copy of Weather Test"
              },
              "schema": {
                "additionalProperties": false,
                "description": "A test definition object you want to clone.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The username of the user who created the test definition.",
                    "example": "{{createdBy}}",
                    "readOnly": true,
                    "type": "string"
                  },
                  "createdDate": {
                    "description": "ISO 8601 timestamp indicating when the test definition was created.",
                    "example": "{{createdDate}}",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "hostname": {
                    "description": "The URL of the specific web page that you want to test.",
                    "example": "{{hostname}}",
                    "format": "hostname",
                    "type": "string"
                  },
                  "ipVersions": {
                    "description": "The IP versions to use when running the test.",
                    "maxItems": 2,
                    "minItems": 1,
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                      "type": "string",
                      "enum": [
                        "ipv4",
                        "ipv6"
                      ]
                    }
                  },
                  "modifiedBy": {
                    "description": "The username of the user who most recently modified the test definition.",
                    "example": "{{modifiedBy}}",
                    "minLength": 1,
                    "readOnly": true,
                    "type": "string"
                  },
                  "modifiedDate": {
                    "description": "ISO 8601 timestamp indicating when the test definition was last updated.",
                    "example": "{{modifiedDate}}",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "testDefinitionDescription": {
                    "description": "A description for the test definition. The max length is 4000 characters.",
                    "example": "{{testDefinitionDescription}}",
                    "maxLength": 4000,
                    "minLength": 1,
                    "type": "string"
                  },
                  "testDefinitionId": {
                    "description": "The unique identifier for each test definition being cloned.",
                    "example": "{{testDefinitionId}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "testDefinitionName": {
                    "description": "A short title for the test definition. The max length is 100 characters.",
                    "example": "{{testDefinitionName}}",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/cloneTestDefinitionRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully cloned test definition.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "hgildong",
                  "createdDate": "2018-04-10T06:47:16+0000",
                  "hostname": "www.example-weather-config-1.com",
                  "testDefinitionDescription": "Creating a copy of Weather Test",
                  "testDefinitionId": 3753,
                  "testDefinitionName": "Copy of Weather Test",
                  "ipVersions": [
                    "ipv6"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about a test definition.",
                  "type": "object",
                  "required": [
                    "testDefinitionId",
                    "testDefinitionName",
                    "hostname",
                    "ipVersions",
                    "createdBy",
                    "createdDate"
                  ],
                  "properties": {
                    "createdBy": {
                      "description": "Username who created the test definition.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the test definition was created.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the test definition.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the test definition was last deleted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "hostname": {
                      "description": "Hostname to be tested. Once set, you can't modify this value.",
                      "format": "hostname",
                      "maxLength": 100,
                      "type": "string"
                    },
                    "ipVersions": {
                      "description": "IP version you want to run the test for. Possible values are: `ipv4`, `ipv6`, or both.",
                      "maxItems": 2,
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string",
                        "enum": [
                          "ipv4",
                          "ipv6"
                        ]
                      }
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the test definition.",
                      "minLength": 0,
                      "readOnly": true,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the test definition was last modified.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "status": {
                      "description": "Test definition's status. Possible values are: `active` or `inactive`. The `inactive` status means the test definition was removed and you can't use it.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "inactive",
                        "active"
                      ]
                    },
                    "testDefinitionDescription": {
                      "description": "Description of the test definition.",
                      "maxLength": 4000,
                      "minLength": 0,
                      "type": "string"
                    },
                    "testDefinitionId": {
                      "description": "Unique identifier for each test definition.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "testDefinitionName": {
                      "description": "Name of the test definition.",
                      "maxLength": 100,
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-test-definition-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each test definition.",
          "example": "{{testDefinitionId}}",
          "in": "path",
          "name": "testDefinitionId",
          "required": true,
          "schema": {
            "example": 738,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testDefinitionId-path.yaml"
          }
        }
      ]
    },
    "/comparative/test-definitions/{testDefinitionId}/remove": {
      "post": {
        "description": "__Deprecated__ Removes a test definition. When you remove a test definition and make a GET request for it, its `status` is `inactive`. The API retains removed test definitions for 30 days from the date of the removal. After that, you receive a 404 error if you try to get it.",
        "operationId": "post-test-definition-remove",
        "summary": "Remove a test definition",
        "tags": [
          "Test definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-definition-remove"
        },
        "responses": {
          "204": {
            "description": "Successfully deleted test definition.",
            "content": {
              "*/*": {}
            }
          }
        },
        "x-akamai": {
          "status": "DEPRECATED"
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each test definition.",
          "example": "{{testDefinitionId}}",
          "in": "path",
          "name": "testDefinitionId",
          "required": true,
          "schema": {
            "example": 738,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testDefinitionId-path.yaml"
          }
        }
      ]
    },
    "/comparative/test-definitions/{testDefinitionId}/restore": {
      "post": {
        "description": "Restores a deleted test definition. A successful operation responds with the 200 status and the restored object in the `successes` array.",
        "operationId": "post-test-definition-restore",
        "summary": "Restore a test definition",
        "tags": [
          "Test definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-definition-restore"
        },
        "responses": {
          "200": {
            "description": "The response returns the restored test definition.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "hgildong",
                  "createdDate": "2018-03-16T10:46:21+0000",
                  "hostname": "www.example-weather.com",
                  "modifiedBy": "jsmith",
                  "modifiedDate": "2018-03-16T10:46:22+0000",
                  "status": "active",
                  "testDefinitionDescription": "Testing weather prefetch configurations",
                  "testDefinitionId": 738,
                  "testDefinitionName": "Weather Test",
                  "ipVersions": [
                    "ipv6"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about a test definition.",
                  "type": "object",
                  "required": [
                    "testDefinitionId",
                    "testDefinitionName",
                    "hostname",
                    "ipVersions",
                    "createdBy",
                    "createdDate"
                  ],
                  "properties": {
                    "createdBy": {
                      "description": "Username who created the test definition.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the test definition was created.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the test definition.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the test definition was last deleted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "hostname": {
                      "description": "Hostname to be tested. Once set, you can't modify this value.",
                      "format": "hostname",
                      "maxLength": 100,
                      "type": "string"
                    },
                    "ipVersions": {
                      "description": "IP version you want to run the test for. Possible values are: `ipv4`, `ipv6`, or both.",
                      "maxItems": 2,
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "type": "string",
                        "enum": [
                          "ipv4",
                          "ipv6"
                        ]
                      }
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the test definition.",
                      "minLength": 0,
                      "readOnly": true,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the test definition was last modified.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "status": {
                      "description": "Test definition's status. Possible values are: `active` or `inactive`. The `inactive` status means the test definition was removed and you can't use it.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "inactive",
                        "active"
                      ]
                    },
                    "testDefinitionDescription": {
                      "description": "Description of the test definition.",
                      "maxLength": 4000,
                      "minLength": 0,
                      "type": "string"
                    },
                    "testDefinitionId": {
                      "description": "Unique identifier for each test definition.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "testDefinitionName": {
                      "description": "Name of the test definition.",
                      "maxLength": 100,
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-test-definition-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each test definition.",
          "example": "{{testDefinitionId}}",
          "in": "path",
          "name": "testDefinitionId",
          "required": true,
          "schema": {
            "example": 738,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testDefinitionId-path.yaml"
          }
        }
      ]
    },
    "/comparative/test-definitions/{testDefinitionId}/test-cases": {
      "post": {
        "description": "Creates a comparative test case and includes it in a test definition. The hostname of the `url` you provide needs to match the `hostname` in the test definition the test case belongs to. You can't test authenticated content.",
        "operationId": "post-test-definition-test-cases",
        "summary": "Create a comparative test case",
        "tags": [
          "Test definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-definition-test-cases"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "testCaseDescription": "Base Page Test",
                "testCaseName": "Base Page",
                "testDefinitionId": 738,
                "url": "https://www.example-weather.com/",
                "comparisonSettings": {
                  "cacheKey": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true
                  },
                  "cachingOption": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true
                  },
                  "cpcode": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true
                  },
                  "metadataVariables": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true,
                    "compareAllExcept": [
                      "RUM_IS_IPV6",
                      "RUA_OUT_IS_APPLIED",
                      "RUM_XHR_TEST",
                      "RUM_CLIENT_TO_MAPPING_PCT",
                      "RANDOM_SAMPLE",
                      "RUM_IMPL_PM_GROUPID",
                      "RUM_IMPL_PM_GROUPNAME",
                      "RUM_IMPL_PM_PRODUCT",
                      "RUM_DEBUG"
                    ],
                    "compareOnly": []
                  },
                  "originServer": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true
                  },
                  "responseCode": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true
                  },
                  "responseHeaders": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true,
                    "compareAllExcept": [
                      "Age",
                      "Date",
                      "Expires",
                      "Server",
                      "Via",
                      "Set-Cookie",
                      "Cache-Control"
                    ],
                    "compareOnly": []
                  }
                },
                "requestHeaders": [
                  {
                    "headerAction": "add",
                    "headerName": "Max-Forwards",
                    "headerValues": "10"
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Contains information about a test case.",
                "type": "object",
                "required": [
                  "testDefinitionId",
                  "url",
                  "testCaseName",
                  "requestHeaders",
                  "comparisonSettings"
                ],
                "properties": {
                  "comparisonSettings": {
                    "additionalProperties": false,
                    "description": "Attributes to compare on different environments. By default the test case includes all comparison settings.",
                    "type": "object",
                    "required": [
                      "responseCode",
                      "responseHeaders",
                      "cpcode",
                      "cachingOption",
                      "cacheKey",
                      "metadataVariables",
                      "originServer"
                    ],
                    "properties": {
                      "cacheKey": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "cachingOption": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "cpcode": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "metadataVariables": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects",
                          "compareOnly",
                          "compareAllExcept"
                        ],
                        "properties": {
                          "compareAllExcept": {
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "compareOnly": {
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "originServer": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "responseCode": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "responseHeaders": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects",
                          "compareOnly",
                          "compareAllExcept"
                        ],
                        "properties": {
                          "compareAllExcept": {
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "compareOnly": {
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "requestHeaders": {
                    "description": "Request headers for the test case.",
                    "minItems": 0,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "headerName",
                        "headerValues",
                        "headerAction"
                      ],
                      "properties": {
                        "headerAction": {
                          "type": "string",
                          "enum": [
                            "add",
                            "modify",
                            "filter"
                          ]
                        },
                        "headerName": {
                          "description": "Name of the request header.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "headerValues": {
                          "description": "Value of the request header.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "testCaseDescription": {
                    "description": "Description you provide for the test case. Max length is 4000 characters.",
                    "example": "{{testCaseDescription}}",
                    "maxLength": 4000,
                    "minLength": 1,
                    "type": "string"
                  },
                  "testCaseName": {
                    "description": "Name you provide for the test case. Max length is 100 characters.",
                    "example": "{{testCaseName}}",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                  },
                  "testDefinitionId": {
                    "description": "Read-only. Unique identifier for each test definition.",
                    "example": "{{testDefinitionId}}",
                    "minLength": 1,
                    "readOnly": true,
                    "type": "string"
                  },
                  "url": {
                    "description": "URL of the page you want to test.",
                    "example": "{{url}}",
                    "format": "uri",
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/createTestCaseRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created new comparative test case.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "szhang",
                  "createdDate": "2018-03-16T10:46:23+0000",
                  "modifiedBy": "jkowalski",
                  "modifiedDate": "2018-03-16T10:46:28+0000",
                  "runOrder": 1,
                  "status": "active",
                  "testCaseDescription": "Base Page Test",
                  "testCaseId": 1855,
                  "testCaseName": "Base Page",
                  "testDefinitionId": 738,
                  "url": "https://www.example-weather.com/",
                  "comparisonSettings": {
                    "cacheKey": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "cachingOption": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "cpcode": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "metadataVariables": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true,
                      "compareAllExcept": [
                        "RUM_IS_IPV6",
                        "RUA_OUT_IS_APPLIED",
                        "RUM_XHR_TEST",
                        "RUM_CLIENT_TO_MAPPING_PCT",
                        "RANDOM_SAMPLE",
                        "RUM_IMPL_PM_GROUPID",
                        "RUM_IMPL_PM_GROUPNAME",
                        "RUM_IMPL_PM_PRODUCT",
                        "RUM_DEBUG"
                      ],
                      "compareOnly": []
                    },
                    "originServer": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "responseCode": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "responseHeaders": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true,
                      "compareAllExcept": [
                        "Age",
                        "Date",
                        "Expires",
                        "Server",
                        "Via",
                        "Set-Cookie",
                        "Cache-Control"
                      ],
                      "compareOnly": []
                    }
                  },
                  "requestHeaders": [
                    {
                      "headerAction": "add",
                      "headerName": "Max-Forwards",
                      "headerValues": "10"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about the comparative test case, including response headers and comparisons you want test. The embedded objects refer to the entities that get loaded after the initial HTML request is made.",
                  "type": "object",
                  "required": [
                    "testCaseId",
                    "testDefinitionId",
                    "url",
                    "testCaseName",
                    "runOrder",
                    "requestHeaders",
                    "comparisonSettings",
                    "createdBy",
                    "createdDate"
                  ],
                  "properties": {
                    "comparisonSettings": {
                      "additionalProperties": false,
                      "description": "Attributes compared between different environments.",
                      "type": "object",
                      "required": [
                        "responseCode",
                        "responseHeaders",
                        "cpcode",
                        "cachingOption",
                        "cacheKey",
                        "metadataVariables",
                        "originServer"
                      ],
                      "properties": {
                        "cacheKey": {
                          "additionalProperties": false,
                          "description": "String used by the Akamai Edge Server to identify the requested object in the cache.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes embedded objects for the cache key.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the cache key.",
                              "type": "boolean"
                            }
                          }
                        },
                        "cachingOption": {
                          "additionalProperties": false,
                          "description": "Specifies how long you want to cache content in your configuration.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes the embedded objects for the caching option.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the caching option.",
                              "type": "boolean"
                            }
                          }
                        },
                        "cpcode": {
                          "additionalProperties": false,
                          "description": "CP code used to deliver the content from the Akamai Edge Server.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes embedded objects for the CP code.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the CP code.",
                              "type": "boolean"
                            }
                          }
                        },
                        "metadataVariables": {
                          "additionalProperties": false,
                          "description": "Metadata variables used in the processing of the request.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects",
                            "compareOnly",
                            "compareAllExcept"
                          ],
                          "properties": {
                            "compareAllExcept": {
                              "description": "List of all metadata variables the test run ignores or doesn't compare.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "compareOnly": {
                              "description": "List of metadata variables the test run includes or compares.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes embedded objects for the metadata variables.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the metadata variables.",
                              "type": "boolean"
                            }
                          }
                        },
                        "originServer": {
                          "additionalProperties": false,
                          "description": "Hostname of the origin server.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison included the embedded objects for the origin server.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the origin server.",
                              "type": "boolean"
                            }
                          }
                        },
                        "responseCode": {
                          "additionalProperties": false,
                          "description": "Numerical part of the HTTP Status Code.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes embedded objects for the response code.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the response code.",
                              "type": "boolean"
                            }
                          }
                        },
                        "responseHeaders": {
                          "additionalProperties": false,
                          "description": "Response headers of the corresponding HTTP responses.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects",
                            "compareOnly",
                            "compareAllExcept"
                          ],
                          "properties": {
                            "compareAllExcept": {
                              "description": "List of all response headers the test run ignores or doesn't compare.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "compareOnly": {
                              "description": "List of response headers the test run includes or doesn't compares.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes embedded objects of the response headers.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the response headers.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "createdBy": {
                      "description": "Username who created the comparative test case.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the test definition was created.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the test case.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the test case was last deleted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the comparative test case.",
                      "minLength": 0,
                      "readOnly": true,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the test definition was last modified.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "requestHeaders": {
                      "description": "Contains request headers in the comparative test case.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "headerName",
                          "headerValues",
                          "headerAction"
                        ],
                        "properties": {
                          "headerAction": {
                            "description": "Request header settings. Possible values are: `add` to the list of request headers, `modify` existing request headers, or `filter` request headers belonging to this comparative test case.",
                            "type": "string",
                            "enum": [
                              "add",
                              "modify",
                              "filter"
                            ]
                          },
                          "headerName": {
                            "description": "Name of the request header.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "headerValues": {
                            "description": "Value of the request header.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "runOrder": {
                      "description": "Integer representing the order in which the test run executes the test case as part of its parent test definition.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "status": {
                      "description": "Comparative test case's status. Possible values are: `active` or `inactive`. The `inactive` status means the test case was removed and you can't use it.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "inactive",
                        "active"
                      ]
                    },
                    "testCaseDescription": {
                      "description": "Description of the comparative test case.",
                      "maxLength": 4000,
                      "minLength": 0,
                      "type": "string"
                    },
                    "testCaseId": {
                      "description": "Unique identifier for each comparative test case resource.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "testCaseName": {
                      "description": "Name of the comparative test case.",
                      "maxLength": 100,
                      "minLength": 1,
                      "type": "string"
                    },
                    "testDefinitionId": {
                      "description": "Unique identifier for each test definition resource.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "url": {
                      "description": "URL of the tested page.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestCaseResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists comparative test cases included in a test definition. The list can also include deleted test cases that you can restore. The response is an array of objects, each keyed by `testCaseId`.",
        "operationId": "get-test-definition-test-cases",
        "summary": "List comparative test cases included in a test definition",
        "tags": [
          "Test definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-definition-test-cases"
        },
        "responses": {
          "200": {
            "description": "The response lists test cases.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "List of test cases for the given test definition.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Contains information about the comparative test case, including response headers and comparisons you want test. The embedded objects refer to the entities that get loaded after the initial HTML request is made.",
                    "type": "object",
                    "required": [
                      "testCaseId",
                      "testDefinitionId",
                      "url",
                      "testCaseName",
                      "runOrder",
                      "requestHeaders",
                      "comparisonSettings",
                      "createdBy",
                      "createdDate"
                    ],
                    "properties": {
                      "comparisonSettings": {
                        "additionalProperties": false,
                        "description": "Attributes compared between different environments.",
                        "type": "object",
                        "required": [
                          "responseCode",
                          "responseHeaders",
                          "cpcode",
                          "cachingOption",
                          "cacheKey",
                          "metadataVariables",
                          "originServer"
                        ],
                        "properties": {
                          "cacheKey": {
                            "additionalProperties": false,
                            "description": "String used by the Akamai Edge Server to identify the requested object in the cache.",
                            "type": "object",
                            "required": [
                              "isEnabled",
                              "includeEmbeddedObjects"
                            ],
                            "properties": {
                              "includeEmbeddedObjects": {
                                "default": true,
                                "description": "Whether the test run comparison includes embedded objects for the cache key.",
                                "type": "boolean"
                              },
                              "isEnabled": {
                                "default": true,
                                "description": "Whether the test run compares the cache key.",
                                "type": "boolean"
                              }
                            }
                          },
                          "cachingOption": {
                            "additionalProperties": false,
                            "description": "Specifies how long you want to cache content in your configuration.",
                            "type": "object",
                            "required": [
                              "isEnabled",
                              "includeEmbeddedObjects"
                            ],
                            "properties": {
                              "includeEmbeddedObjects": {
                                "default": true,
                                "description": "Whether the test run comparison includes the embedded objects for the caching option.",
                                "type": "boolean"
                              },
                              "isEnabled": {
                                "default": true,
                                "description": "Whether the test run compares the caching option.",
                                "type": "boolean"
                              }
                            }
                          },
                          "cpcode": {
                            "additionalProperties": false,
                            "description": "CP code used to deliver the content from the Akamai Edge Server.",
                            "type": "object",
                            "required": [
                              "isEnabled",
                              "includeEmbeddedObjects"
                            ],
                            "properties": {
                              "includeEmbeddedObjects": {
                                "default": true,
                                "description": "Whether the test run comparison includes embedded objects for the CP code.",
                                "type": "boolean"
                              },
                              "isEnabled": {
                                "default": true,
                                "description": "Whether the test run compares the CP code.",
                                "type": "boolean"
                              }
                            }
                          },
                          "metadataVariables": {
                            "additionalProperties": false,
                            "description": "Metadata variables used in the processing of the request.",
                            "type": "object",
                            "required": [
                              "isEnabled",
                              "includeEmbeddedObjects",
                              "compareOnly",
                              "compareAllExcept"
                            ],
                            "properties": {
                              "compareAllExcept": {
                                "description": "List of all metadata variables the test run ignores or doesn't compare.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "compareOnly": {
                                "description": "List of metadata variables the test run includes or compares.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "includeEmbeddedObjects": {
                                "default": true,
                                "description": "Whether the test run comparison includes embedded objects for the metadata variables.",
                                "type": "boolean"
                              },
                              "isEnabled": {
                                "default": true,
                                "description": "Whether the test run compares the metadata variables.",
                                "type": "boolean"
                              }
                            }
                          },
                          "originServer": {
                            "additionalProperties": false,
                            "description": "Hostname of the origin server.",
                            "type": "object",
                            "required": [
                              "isEnabled",
                              "includeEmbeddedObjects"
                            ],
                            "properties": {
                              "includeEmbeddedObjects": {
                                "default": true,
                                "description": "Whether the test run comparison included the embedded objects for the origin server.",
                                "type": "boolean"
                              },
                              "isEnabled": {
                                "default": true,
                                "description": "Whether the test run compares the origin server.",
                                "type": "boolean"
                              }
                            }
                          },
                          "responseCode": {
                            "additionalProperties": false,
                            "description": "Numerical part of the HTTP Status Code.",
                            "type": "object",
                            "required": [
                              "isEnabled",
                              "includeEmbeddedObjects"
                            ],
                            "properties": {
                              "includeEmbeddedObjects": {
                                "default": true,
                                "description": "Whether the test run comparison includes embedded objects for the response code.",
                                "type": "boolean"
                              },
                              "isEnabled": {
                                "default": true,
                                "description": "Whether the test run compares the response code.",
                                "type": "boolean"
                              }
                            }
                          },
                          "responseHeaders": {
                            "additionalProperties": false,
                            "description": "Response headers of the corresponding HTTP responses.",
                            "type": "object",
                            "required": [
                              "isEnabled",
                              "includeEmbeddedObjects",
                              "compareOnly",
                              "compareAllExcept"
                            ],
                            "properties": {
                              "compareAllExcept": {
                                "description": "List of all response headers the test run ignores or doesn't compare.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "compareOnly": {
                                "description": "List of response headers the test run includes or doesn't compares.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "includeEmbeddedObjects": {
                                "default": true,
                                "description": "Whether the test run comparison includes embedded objects of the response headers.",
                                "type": "boolean"
                              },
                              "isEnabled": {
                                "default": true,
                                "description": "Whether the test run compares the response headers.",
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      },
                      "createdBy": {
                        "description": "Username who created the comparative test case.",
                        "minLength": 1,
                        "readOnly": true,
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 timestamp indicating when the test definition was created.",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      },
                      "deletedBy": {
                        "description": "Username who last deleted the test case.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "deletedDate": {
                        "description": "ISO 8601 timestamp indicating when the test case was last deleted.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "modifiedBy": {
                        "description": "Username who last modified the comparative test case.",
                        "minLength": 0,
                        "readOnly": true,
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "ISO 8601 timestamp indicating when the test definition was last modified.",
                        "format": "date-time",
                        "readOnly": true,
                        "type": "string"
                      },
                      "requestHeaders": {
                        "description": "Contains request headers in the comparative test case.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "headerName",
                            "headerValues",
                            "headerAction"
                          ],
                          "properties": {
                            "headerAction": {
                              "description": "Request header settings. Possible values are: `add` to the list of request headers, `modify` existing request headers, or `filter` request headers belonging to this comparative test case.",
                              "type": "string",
                              "enum": [
                                "add",
                                "modify",
                                "filter"
                              ]
                            },
                            "headerName": {
                              "description": "Name of the request header.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "headerValues": {
                              "description": "Value of the request header.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        }
                      },
                      "runOrder": {
                        "description": "Integer representing the order in which the test run executes the test case as part of its parent test definition.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "status": {
                        "description": "Comparative test case's status. Possible values are: `active` or `inactive`. The `inactive` status means the test case was removed and you can't use it.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "inactive",
                          "active"
                        ]
                      },
                      "testCaseDescription": {
                        "description": "Description of the comparative test case.",
                        "maxLength": 4000,
                        "minLength": 0,
                        "type": "string"
                      },
                      "testCaseId": {
                        "description": "Unique identifier for each comparative test case resource.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "testCaseName": {
                        "description": "Name of the comparative test case.",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string"
                      },
                      "testDefinitionId": {
                        "description": "Unique identifier for each test definition resource.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "url": {
                        "description": "URL of the tested page.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/getTestCaseResponse.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getComparativeTestCasesResponse.yaml"
                  }
                },
                "example": [
                  {
                    "createdBy": "szhang",
                    "createdDate": "2018-03-16T10:46:23+0000",
                    "modifiedBy": "mrossi",
                    "modifiedDate": "2018-03-16T10:46:28+0000",
                    "runOrder": 1,
                    "testCaseDescription": "Base Page Test",
                    "testCaseId": 1855,
                    "testCaseName": "Base Page",
                    "testDefinitionId": 738,
                    "url": "https://www.example-weather.com/",
                    "comparisonSettings": {
                      "cacheKey": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true
                      },
                      "cachingOption": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true
                      },
                      "cpcode": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true
                      },
                      "metadataVariables": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true,
                        "compareAllExcept": [
                          "RUM_IS_IPV6"
                        ],
                        "compareOnly": []
                      },
                      "originServer": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true
                      },
                      "responseCode": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true
                      },
                      "responseHeaders": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true,
                        "compareAllExcept": [
                          "Age",
                          "Date"
                        ],
                        "compareOnly": []
                      }
                    },
                    "requestHeaders": [
                      {
                        "headerAction": "add",
                        "headerName": "Max-Forwards",
                        "headerValues": "10"
                      }
                    ]
                  },
                  {
                    "createdBy": "adevi",
                    "createdDate": "2018-03-16T10:46:24+0000",
                    "modifiedBy": "tyamada",
                    "modifiedDate": "2018-03-16T10:46:30+0000",
                    "runOrder": 2,
                    "testCaseDescription": "Accounts page test",
                    "testCaseId": 1866,
                    "testCaseName": "Accounts page",
                    "testDefinitionId": 738,
                    "url": "https://www.example-weather.com/accounts",
                    "requestHeaders": [],
                    "comparisonSettings": {
                      "cacheKey": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true
                      },
                      "cachingOption": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true
                      },
                      "cpcode": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true
                      },
                      "metadataVariables": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true,
                        "compareAllExcept": [
                          "RUM_IS_IPV6"
                        ],
                        "compareOnly": []
                      },
                      "originServer": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true
                      },
                      "responseCode": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true
                      },
                      "responseHeaders": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true,
                        "compareAllExcept": [
                          "Age"
                        ],
                        "compareOnly": []
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Whether to list any items deleted within the last 30 days that you can restore. It's `false` by default.",
            "example": "{{includeRecentlyDeleted}}",
            "in": "query",
            "name": "includeRecentlyDeleted",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/includeRecentlyDeleted-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each test definition.",
          "example": "{{testDefinitionId}}",
          "in": "path",
          "name": "testDefinitionId",
          "required": true,
          "schema": {
            "example": 738,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testDefinitionId-path.yaml"
          }
        }
      ]
    },
    "/comparative/test-definitions/{testDefinitionId}/test-cases/{testCaseId}": {
      "get": {
        "description": "Returns details of a comparative test case, including its request headers and comparison settings.",
        "operationId": "get-test-definition-test-case",
        "summary": "Get a comparative test case",
        "tags": [
          "Test definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-definition-test-case"
        },
        "responses": {
          "200": {
            "description": "The response provides test case details.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "jkowalski",
                  "createdDate": "2018-03-16T10:46:23+0000",
                  "modifiedBy": "jsmith",
                  "modifiedDate": "2018-03-16T10:46:28+0000",
                  "runOrder": 1,
                  "status": "active",
                  "testCaseDescription": "Base Page Test",
                  "testCaseId": 1855,
                  "testCaseName": "Base Page",
                  "testDefinitionId": 738,
                  "url": "https://www.example-weather.com/",
                  "comparisonSettings": {
                    "cacheKey": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "cachingOption": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "cpcode": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "metadataVariables": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true,
                      "compareAllExcept": [
                        "RUM_IS_IPV6",
                        "RUA_OUT_IS_APPLIED",
                        "RUM_XHR_TEST",
                        "RUM_CLIENT_TO_MAPPING_PCT",
                        "RANDOM_SAMPLE",
                        "RUM_IMPL_PM_GROUPID",
                        "RUM_IMPL_PM_GROUPNAME",
                        "RUM_IMPL_PM_PRODUCT",
                        "RUM_DEBUG"
                      ],
                      "compareOnly": []
                    },
                    "originServer": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "responseCode": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "responseHeaders": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true,
                      "compareAllExcept": [
                        "Age",
                        "Date",
                        "Expires",
                        "Server",
                        "Via",
                        "Set-Cookie",
                        "Cache-Control"
                      ],
                      "compareOnly": []
                    }
                  },
                  "requestHeaders": [
                    {
                      "headerAction": "add",
                      "headerName": "Max-Forwards",
                      "headerValues": "10"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about the comparative test case, including response headers and comparisons you want test. The embedded objects refer to the entities that get loaded after the initial HTML request is made.",
                  "type": "object",
                  "required": [
                    "testCaseId",
                    "testDefinitionId",
                    "url",
                    "testCaseName",
                    "runOrder",
                    "requestHeaders",
                    "comparisonSettings",
                    "createdBy",
                    "createdDate"
                  ],
                  "properties": {
                    "comparisonSettings": {
                      "additionalProperties": false,
                      "description": "Attributes compared between different environments.",
                      "type": "object",
                      "required": [
                        "responseCode",
                        "responseHeaders",
                        "cpcode",
                        "cachingOption",
                        "cacheKey",
                        "metadataVariables",
                        "originServer"
                      ],
                      "properties": {
                        "cacheKey": {
                          "additionalProperties": false,
                          "description": "String used by the Akamai Edge Server to identify the requested object in the cache.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes embedded objects for the cache key.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the cache key.",
                              "type": "boolean"
                            }
                          }
                        },
                        "cachingOption": {
                          "additionalProperties": false,
                          "description": "Specifies how long you want to cache content in your configuration.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes the embedded objects for the caching option.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the caching option.",
                              "type": "boolean"
                            }
                          }
                        },
                        "cpcode": {
                          "additionalProperties": false,
                          "description": "CP code used to deliver the content from the Akamai Edge Server.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes embedded objects for the CP code.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the CP code.",
                              "type": "boolean"
                            }
                          }
                        },
                        "metadataVariables": {
                          "additionalProperties": false,
                          "description": "Metadata variables used in the processing of the request.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects",
                            "compareOnly",
                            "compareAllExcept"
                          ],
                          "properties": {
                            "compareAllExcept": {
                              "description": "List of all metadata variables the test run ignores or doesn't compare.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "compareOnly": {
                              "description": "List of metadata variables the test run includes or compares.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes embedded objects for the metadata variables.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the metadata variables.",
                              "type": "boolean"
                            }
                          }
                        },
                        "originServer": {
                          "additionalProperties": false,
                          "description": "Hostname of the origin server.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison included the embedded objects for the origin server.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the origin server.",
                              "type": "boolean"
                            }
                          }
                        },
                        "responseCode": {
                          "additionalProperties": false,
                          "description": "Numerical part of the HTTP Status Code.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes embedded objects for the response code.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the response code.",
                              "type": "boolean"
                            }
                          }
                        },
                        "responseHeaders": {
                          "additionalProperties": false,
                          "description": "Response headers of the corresponding HTTP responses.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects",
                            "compareOnly",
                            "compareAllExcept"
                          ],
                          "properties": {
                            "compareAllExcept": {
                              "description": "List of all response headers the test run ignores or doesn't compare.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "compareOnly": {
                              "description": "List of response headers the test run includes or doesn't compares.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes embedded objects of the response headers.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the response headers.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "createdBy": {
                      "description": "Username who created the comparative test case.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the test definition was created.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the test case.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the test case was last deleted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the comparative test case.",
                      "minLength": 0,
                      "readOnly": true,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the test definition was last modified.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "requestHeaders": {
                      "description": "Contains request headers in the comparative test case.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "headerName",
                          "headerValues",
                          "headerAction"
                        ],
                        "properties": {
                          "headerAction": {
                            "description": "Request header settings. Possible values are: `add` to the list of request headers, `modify` existing request headers, or `filter` request headers belonging to this comparative test case.",
                            "type": "string",
                            "enum": [
                              "add",
                              "modify",
                              "filter"
                            ]
                          },
                          "headerName": {
                            "description": "Name of the request header.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "headerValues": {
                            "description": "Value of the request header.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "runOrder": {
                      "description": "Integer representing the order in which the test run executes the test case as part of its parent test definition.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "status": {
                      "description": "Comparative test case's status. Possible values are: `active` or `inactive`. The `inactive` status means the test case was removed and you can't use it.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "inactive",
                        "active"
                      ]
                    },
                    "testCaseDescription": {
                      "description": "Description of the comparative test case.",
                      "maxLength": 4000,
                      "minLength": 0,
                      "type": "string"
                    },
                    "testCaseId": {
                      "description": "Unique identifier for each comparative test case resource.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "testCaseName": {
                      "description": "Name of the comparative test case.",
                      "maxLength": 100,
                      "minLength": 1,
                      "type": "string"
                    },
                    "testDefinitionId": {
                      "description": "Unique identifier for each test definition resource.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "url": {
                      "description": "URL of the tested page.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestCaseResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates a comparative test case. You can modify all members except for the `testCaseId` and the `testDefinitionId`.",
        "operationId": "put-test-definition-test-case",
        "summary": "Update a comparative test case",
        "tags": [
          "Test definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/put-test-definition-test-case"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "testCaseDescription": "Base Page Test (edited)",
                "testCaseId": 1855,
                "testCaseName": "Base Page (edited)",
                "testDefinitionId": 738,
                "url": "https://www.example-weather.com/",
                "requestHeaders": [],
                "comparisonSettings": {
                  "cacheKey": {
                    "includeEmbeddedObjects": false,
                    "isEnabled": false
                  },
                  "cachingOption": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true
                  },
                  "cpcode": {
                    "includeEmbeddedObjects": false,
                    "isEnabled": false
                  },
                  "metadataVariables": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true,
                    "compareAllExcept": [
                      "RUM_IS_IPV6",
                      "RUA_OUT_IS_APPLIED",
                      "RUM_XHR_TEST",
                      "RUM_CLIENT_TO_MAPPING_PCT",
                      "RANDOM_SAMPLE",
                      "RUM_IMPL_PM_GROUPID",
                      "RUM_IMPL_PM_GROUPNAME",
                      "RUM_IMPL_PM_PRODUCT",
                      "RUM_DEBUG"
                    ],
                    "compareOnly": []
                  },
                  "originServer": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true
                  },
                  "responseCode": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true
                  },
                  "responseHeaders": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true,
                    "compareAllExcept": [
                      "Age",
                      "Date",
                      "Expires",
                      "Server"
                    ],
                    "compareOnly": []
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "An object containing data for a single test case.",
                "type": "object",
                "required": [
                  "testCaseId",
                  "url",
                  "testCaseName",
                  "testCaseDescription",
                  "requestHeaders",
                  "comparisonSettings"
                ],
                "properties": {
                  "comparisonSettings": {
                    "additionalProperties": false,
                    "description": "Attributes to compare on different environments.",
                    "type": "object",
                    "required": [
                      "responseCode",
                      "responseHeaders",
                      "cpcode",
                      "cachingOption",
                      "cacheKey",
                      "metadataVariables",
                      "originServer"
                    ],
                    "properties": {
                      "cacheKey": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "cachingOption": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "cpcode": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "metadataVariables": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects",
                          "compareOnly",
                          "compareAllExcept"
                        ],
                        "properties": {
                          "compareAllExcept": {
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "compareOnly": {
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "originServer": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "responseCode": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "responseHeaders": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects",
                          "compareOnly",
                          "compareAllExcept"
                        ],
                        "properties": {
                          "compareAllExcept": {
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "compareOnly": {
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "createdBy": {
                    "description": "The user who created the test case.",
                    "example": "{{createdBy}}",
                    "minLength": 1,
                    "readOnly": true,
                    "type": "string"
                  },
                  "createdDate": {
                    "description": "ISO 8601 timestamp indicating when the test definition was created.",
                    "example": "{{createdDate}}",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "modifiedBy": {
                    "description": "The user who last modified the test case.",
                    "example": "{{modifiedBy}}",
                    "minLength": 0,
                    "readOnly": true,
                    "type": "string"
                  },
                  "modifiedDate": {
                    "description": "ISO 8601 timestamp indicating when the test definition was last modified.",
                    "example": "{{modifiedDate}}",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "requestHeaders": {
                    "description": "Request headers you want to add, modify, or filter.",
                    "minItems": 0,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "headerName",
                        "headerValues",
                        "headerAction"
                      ],
                      "properties": {
                        "headerAction": {
                          "type": "string",
                          "enum": [
                            "add",
                            "modify",
                            "filter"
                          ]
                        },
                        "headerName": {
                          "minLength": 1,
                          "type": "string"
                        },
                        "headerValues": {
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "runOrder": {
                    "description": "The test case's run order within the parent test definition.",
                    "example": "{{runOrder}}",
                    "minimum": 0,
                    "readOnly": true,
                    "type": "integer"
                  },
                  "testCaseDescription": {
                    "description": "Description about the test case.",
                    "example": "{{testCaseDescription}}",
                    "maxLength": 4000,
                    "minLength": 0,
                    "type": "string"
                  },
                  "testCaseId": {
                    "example": "{{testCaseId}}",
                    "minimum": 1,
                    "readOnly": true,
                    "type": "integer"
                  },
                  "testCaseName": {
                    "description": "A short title for the test case.",
                    "example": "{{testCaseName}}",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                  },
                  "testDefinitionId": {
                    "example": "{{testDefinitionId}}",
                    "minimum": 1,
                    "readOnly": true,
                    "type": "integer"
                  },
                  "url": {
                    "description": "URL of the page you want to test.",
                    "example": "{{url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/updateTestCaseRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response returns the updated test case.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "szhang",
                  "createdDate": "2018-03-16T10:46:23+0000",
                  "modifiedBy": "jkowalski",
                  "modifiedDate": "2018-04-10T06:32:31+0000",
                  "runOrder": 1,
                  "testCaseDescription": "Base Page Test (edited)",
                  "testCaseId": 1855,
                  "testCaseName": "Base Page (edited)",
                  "testDefinitionId": 738,
                  "url": "https://www.example-weather.com/",
                  "requestHeaders": [],
                  "comparisonSettings": {
                    "cacheKey": {
                      "includeEmbeddedObjects": false,
                      "isEnabled": false
                    },
                    "cachingOption": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "cpcode": {
                      "includeEmbeddedObjects": false,
                      "isEnabled": false
                    },
                    "metadataVariables": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true,
                      "compareAllExcept": [
                        "RUM_IS_IPV6",
                        "RUA_OUT_IS_APPLIED",
                        "RUM_XHR_TEST",
                        "RUM_CLIENT_TO_MAPPING_PCT",
                        "RANDOM_SAMPLE",
                        "RUM_IMPL_PM_GROUPID",
                        "RUM_IMPL_PM_GROUPNAME",
                        "RUM_IMPL_PM_PRODUCT",
                        "RUM_DEBUG"
                      ],
                      "compareOnly": []
                    },
                    "originServer": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "responseCode": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "responseHeaders": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true,
                      "compareAllExcept": [
                        "Age",
                        "Date",
                        "Expires",
                        "Server"
                      ],
                      "compareOnly": []
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about the comparative test case, including response headers and comparisons you want test. The embedded objects refer to the entities that get loaded after the initial HTML request is made.",
                  "type": "object",
                  "required": [
                    "testCaseId",
                    "testDefinitionId",
                    "url",
                    "testCaseName",
                    "runOrder",
                    "requestHeaders",
                    "comparisonSettings",
                    "createdBy",
                    "createdDate"
                  ],
                  "properties": {
                    "comparisonSettings": {
                      "additionalProperties": false,
                      "description": "Attributes compared between different environments.",
                      "type": "object",
                      "required": [
                        "responseCode",
                        "responseHeaders",
                        "cpcode",
                        "cachingOption",
                        "cacheKey",
                        "metadataVariables",
                        "originServer"
                      ],
                      "properties": {
                        "cacheKey": {
                          "additionalProperties": false,
                          "description": "String used by the Akamai Edge Server to identify the requested object in the cache.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes embedded objects for the cache key.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the cache key.",
                              "type": "boolean"
                            }
                          }
                        },
                        "cachingOption": {
                          "additionalProperties": false,
                          "description": "Specifies how long you want to cache content in your configuration.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes the embedded objects for the caching option.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the caching option.",
                              "type": "boolean"
                            }
                          }
                        },
                        "cpcode": {
                          "additionalProperties": false,
                          "description": "CP code used to deliver the content from the Akamai Edge Server.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes embedded objects for the CP code.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the CP code.",
                              "type": "boolean"
                            }
                          }
                        },
                        "metadataVariables": {
                          "additionalProperties": false,
                          "description": "Metadata variables used in the processing of the request.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects",
                            "compareOnly",
                            "compareAllExcept"
                          ],
                          "properties": {
                            "compareAllExcept": {
                              "description": "List of all metadata variables the test run ignores or doesn't compare.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "compareOnly": {
                              "description": "List of metadata variables the test run includes or compares.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes embedded objects for the metadata variables.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the metadata variables.",
                              "type": "boolean"
                            }
                          }
                        },
                        "originServer": {
                          "additionalProperties": false,
                          "description": "Hostname of the origin server.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison included the embedded objects for the origin server.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the origin server.",
                              "type": "boolean"
                            }
                          }
                        },
                        "responseCode": {
                          "additionalProperties": false,
                          "description": "Numerical part of the HTTP Status Code.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes embedded objects for the response code.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the response code.",
                              "type": "boolean"
                            }
                          }
                        },
                        "responseHeaders": {
                          "additionalProperties": false,
                          "description": "Response headers of the corresponding HTTP responses.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects",
                            "compareOnly",
                            "compareAllExcept"
                          ],
                          "properties": {
                            "compareAllExcept": {
                              "description": "List of all response headers the test run ignores or doesn't compare.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "compareOnly": {
                              "description": "List of response headers the test run includes or doesn't compares.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes embedded objects of the response headers.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the response headers.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "createdBy": {
                      "description": "Username who created the comparative test case.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the test definition was created.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the test case.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the test case was last deleted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the comparative test case.",
                      "minLength": 0,
                      "readOnly": true,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the test definition was last modified.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "requestHeaders": {
                      "description": "Contains request headers in the comparative test case.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "headerName",
                          "headerValues",
                          "headerAction"
                        ],
                        "properties": {
                          "headerAction": {
                            "description": "Request header settings. Possible values are: `add` to the list of request headers, `modify` existing request headers, or `filter` request headers belonging to this comparative test case.",
                            "type": "string",
                            "enum": [
                              "add",
                              "modify",
                              "filter"
                            ]
                          },
                          "headerName": {
                            "description": "Name of the request header.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "headerValues": {
                            "description": "Value of the request header.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "runOrder": {
                      "description": "Integer representing the order in which the test run executes the test case as part of its parent test definition.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "status": {
                      "description": "Comparative test case's status. Possible values are: `active` or `inactive`. The `inactive` status means the test case was removed and you can't use it.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "inactive",
                        "active"
                      ]
                    },
                    "testCaseDescription": {
                      "description": "Description of the comparative test case.",
                      "maxLength": 4000,
                      "minLength": 0,
                      "type": "string"
                    },
                    "testCaseId": {
                      "description": "Unique identifier for each comparative test case resource.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "testCaseName": {
                      "description": "Name of the comparative test case.",
                      "maxLength": 100,
                      "minLength": 1,
                      "type": "string"
                    },
                    "testDefinitionId": {
                      "description": "Unique identifier for each test definition resource.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "url": {
                      "description": "URL of the tested page.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestCaseResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Deletes a comparative test case. You can [restore](https://techdocs.akamai.com/test-ctr/reference/post-test-definition-test-case-restore) test cases within 30 days of deleting them.",
        "operationId": "delete-test-definition-test-case",
        "summary": "Delete a comparative test case",
        "tags": [
          "Test definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/delete-test-definition-test-case"
        },
        "responses": {
          "204": {
            "description": "Successfully deleted test case.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each functional test case.",
          "example": "{{testCaseId}}",
          "in": "path",
          "name": "testCaseId",
          "required": true,
          "schema": {
            "example": 301,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testCaseId-path.yaml"
          }
        },
        {
          "description": "Unique identifier for each test definition.",
          "example": "{{testDefinitionId}}",
          "in": "path",
          "name": "testDefinitionId",
          "required": true,
          "schema": {
            "example": 738,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testDefinitionId-path.yaml"
          }
        }
      ]
    },
    "/comparative/test-definitions/{testDefinitionId}/test-cases/{testCaseId}/clone": {
      "post": {
        "description": "Clones a comparative test case. If an optional request member of the request is missing, Test Center uses the value from the source test suite.",
        "operationId": "post-test-definition-test-case-clone",
        "summary": "Clone a comparative test case",
        "tags": [
          "Test definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-definition-test-case-clone"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "testCaseDescription": "Copy of Base Page Test",
                "testCaseId": 1855,
                "testCaseName": "Copy of Base Page",
                "testDefinitionId": 738,
                "url": "https://www.example-weather.com/",
                "requestHeaders": [],
                "comparisonSettings": {
                  "cacheKey": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true
                  },
                  "cachingOption": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true
                  },
                  "cpcode": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true
                  },
                  "metadataVariables": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true,
                    "compareAllExcept": [
                      "RUM_IS_IPV6",
                      "RUA_OUT_IS_APPLIED",
                      "RUM_XHR_TEST",
                      "RUM_CLIENT_TO_MAPPING_PCT",
                      "RANDOM_SAMPLE"
                    ],
                    "compareOnly": []
                  },
                  "originServer": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true
                  },
                  "responseCode": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true
                  },
                  "responseHeaders": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true,
                    "compareAllExcept": [
                      "Age",
                      "Date",
                      "Expires",
                      "Server",
                      "Via",
                      "Set-Cookie",
                      "Cache-Control"
                    ],
                    "compareOnly": []
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "Object containing data for cloning a new test case.",
                "type": "object",
                "properties": {
                  "comparisonSettings": {
                    "additionalProperties": false,
                    "description": "Attributes to compare on different environments. By default the test case includes all comparison settings.",
                    "type": "object",
                    "required": [
                      "responseCode",
                      "responseHeaders",
                      "cpcode",
                      "cachingOption",
                      "cacheKey",
                      "metadataVariables",
                      "originServer"
                    ],
                    "properties": {
                      "cacheKey": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "cachingOption": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "cpcode": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "metadataVariables": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects",
                          "compareOnly",
                          "compareAllExcept"
                        ],
                        "properties": {
                          "compareAllExcept": {
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "compareOnly": {
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "originServer": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "responseCode": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "responseHeaders": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects",
                          "compareOnly",
                          "compareAllExcept"
                        ],
                        "properties": {
                          "compareAllExcept": {
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "compareOnly": {
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "requestHeaders": {
                    "description": "Add specific request headers to the test case's set of requests. Modify or filter out existing request headers.",
                    "minItems": 0,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "headerName",
                        "headerValues",
                        "headerAction"
                      ],
                      "properties": {
                        "headerAction": {
                          "type": "string",
                          "enum": [
                            "add",
                            "modify",
                            "filter"
                          ]
                        },
                        "headerName": {
                          "description": "Name of the request header.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "headerValues": {
                          "description": "Value of the request header.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "testCaseDescription": {
                    "description": "Description you provide for the test case. Max length is 4000 characters.",
                    "example": "{{testCaseDescription}}",
                    "maxLength": 4000,
                    "minLength": 1,
                    "type": "string"
                  },
                  "testCaseId": {
                    "description": "Unique identifier for each comparative test case.",
                    "example": "{{testCaseId}}",
                    "minLength": 1,
                    "readOnly": true,
                    "type": "string"
                  },
                  "testCaseName": {
                    "description": "Name you provide for the test case. Max length is 100 characters.",
                    "example": "{{testCaseName}}",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                  },
                  "testDefinitionId": {
                    "description": "Unique identifier for each test definition.",
                    "example": "{{testDefinitionId}}",
                    "minLength": 1,
                    "readOnly": true,
                    "type": "string"
                  },
                  "url": {
                    "description": "URL of the specific web page you want to test.",
                    "example": "{{url}}",
                    "format": "uri",
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/clone-test-case-request.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully cloned test case.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "hgildong",
                  "createdDate": "2018-04-10T06:35:29+0000",
                  "testCaseDescription": "Copy of Base Page Test",
                  "testCaseId": 4621,
                  "testCaseName": "Copy of Base Page",
                  "testDefinitionId": 738,
                  "url": "https://www.example-weather.com/",
                  "requestHeaders": [],
                  "comparisonSettings": {
                    "cacheKey": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "cachingOption": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "cpcode": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "metadataVariables": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true,
                      "compareAllExcept": [
                        "RUM_IS_IPV6",
                        "RUA_OUT_IS_APPLIED",
                        "RUM_XHR_TEST",
                        "RUM_CLIENT_TO_MAPPING_PCT",
                        "RANDOM_SAMPLE"
                      ],
                      "compareOnly": []
                    },
                    "originServer": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "responseCode": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "responseHeaders": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true,
                      "compareAllExcept": [
                        "Age",
                        "Date",
                        "Expires",
                        "Server",
                        "Via",
                        "Set-Cookie",
                        "Cache-Control"
                      ],
                      "compareOnly": []
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about the comparative test case, including response headers and comparisons you want test. The embedded objects refer to the entities that get loaded after the initial HTML request is made.",
                  "type": "object",
                  "required": [
                    "testCaseId",
                    "testDefinitionId",
                    "url",
                    "testCaseName",
                    "runOrder",
                    "requestHeaders",
                    "comparisonSettings",
                    "createdBy",
                    "createdDate"
                  ],
                  "properties": {
                    "comparisonSettings": {
                      "additionalProperties": false,
                      "description": "Attributes compared between different environments.",
                      "type": "object",
                      "required": [
                        "responseCode",
                        "responseHeaders",
                        "cpcode",
                        "cachingOption",
                        "cacheKey",
                        "metadataVariables",
                        "originServer"
                      ],
                      "properties": {
                        "cacheKey": {
                          "additionalProperties": false,
                          "description": "String used by the Akamai Edge Server to identify the requested object in the cache.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes embedded objects for the cache key.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the cache key.",
                              "type": "boolean"
                            }
                          }
                        },
                        "cachingOption": {
                          "additionalProperties": false,
                          "description": "Specifies how long you want to cache content in your configuration.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes the embedded objects for the caching option.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the caching option.",
                              "type": "boolean"
                            }
                          }
                        },
                        "cpcode": {
                          "additionalProperties": false,
                          "description": "CP code used to deliver the content from the Akamai Edge Server.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes embedded objects for the CP code.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the CP code.",
                              "type": "boolean"
                            }
                          }
                        },
                        "metadataVariables": {
                          "additionalProperties": false,
                          "description": "Metadata variables used in the processing of the request.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects",
                            "compareOnly",
                            "compareAllExcept"
                          ],
                          "properties": {
                            "compareAllExcept": {
                              "description": "List of all metadata variables the test run ignores or doesn't compare.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "compareOnly": {
                              "description": "List of metadata variables the test run includes or compares.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes embedded objects for the metadata variables.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the metadata variables.",
                              "type": "boolean"
                            }
                          }
                        },
                        "originServer": {
                          "additionalProperties": false,
                          "description": "Hostname of the origin server.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison included the embedded objects for the origin server.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the origin server.",
                              "type": "boolean"
                            }
                          }
                        },
                        "responseCode": {
                          "additionalProperties": false,
                          "description": "Numerical part of the HTTP Status Code.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes embedded objects for the response code.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the response code.",
                              "type": "boolean"
                            }
                          }
                        },
                        "responseHeaders": {
                          "additionalProperties": false,
                          "description": "Response headers of the corresponding HTTP responses.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects",
                            "compareOnly",
                            "compareAllExcept"
                          ],
                          "properties": {
                            "compareAllExcept": {
                              "description": "List of all response headers the test run ignores or doesn't compare.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "compareOnly": {
                              "description": "List of response headers the test run includes or doesn't compares.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes embedded objects of the response headers.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the response headers.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "createdBy": {
                      "description": "Username who created the comparative test case.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the test definition was created.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the test case.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the test case was last deleted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the comparative test case.",
                      "minLength": 0,
                      "readOnly": true,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the test definition was last modified.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "requestHeaders": {
                      "description": "Contains request headers in the comparative test case.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "headerName",
                          "headerValues",
                          "headerAction"
                        ],
                        "properties": {
                          "headerAction": {
                            "description": "Request header settings. Possible values are: `add` to the list of request headers, `modify` existing request headers, or `filter` request headers belonging to this comparative test case.",
                            "type": "string",
                            "enum": [
                              "add",
                              "modify",
                              "filter"
                            ]
                          },
                          "headerName": {
                            "description": "Name of the request header.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "headerValues": {
                            "description": "Value of the request header.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "runOrder": {
                      "description": "Integer representing the order in which the test run executes the test case as part of its parent test definition.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "status": {
                      "description": "Comparative test case's status. Possible values are: `active` or `inactive`. The `inactive` status means the test case was removed and you can't use it.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "inactive",
                        "active"
                      ]
                    },
                    "testCaseDescription": {
                      "description": "Description of the comparative test case.",
                      "maxLength": 4000,
                      "minLength": 0,
                      "type": "string"
                    },
                    "testCaseId": {
                      "description": "Unique identifier for each comparative test case resource.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "testCaseName": {
                      "description": "Name of the comparative test case.",
                      "maxLength": 100,
                      "minLength": 1,
                      "type": "string"
                    },
                    "testDefinitionId": {
                      "description": "Unique identifier for each test definition resource.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "url": {
                      "description": "URL of the tested page.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestCaseResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each functional test case.",
          "example": "{{testCaseId}}",
          "in": "path",
          "name": "testCaseId",
          "required": true,
          "schema": {
            "example": 301,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testCaseId-path.yaml"
          }
        },
        {
          "description": "Unique identifier for each test definition.",
          "example": "{{testDefinitionId}}",
          "in": "path",
          "name": "testDefinitionId",
          "required": true,
          "schema": {
            "example": 738,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testDefinitionId-path.yaml"
          }
        }
      ]
    },
    "/comparative/test-definitions/{testDefinitionId}/test-cases/{testCaseId}/remove": {
      "post": {
        "description": "__Deprecated__ Removes a comparative test case included in a test definition. When you remove a test case and make a GET request for it, its `status` is `inactive`. The API retains removed test cases for 30 days from the date of the removal. After that, you receive a 404 error if you try to get it.",
        "operationId": "post-test-definition-test-case-remove",
        "summary": "Remove a comparative test case",
        "tags": [
          "Test definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-definition-test-case-remove"
        },
        "responses": {
          "204": {
            "description": "Successfully deleted test case.",
            "content": {
              "*/*": {}
            }
          }
        },
        "x-akamai": {
          "status": "DEPRECATED"
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each functional test case.",
          "example": "{{testCaseId}}",
          "in": "path",
          "name": "testCaseId",
          "required": true,
          "schema": {
            "example": 301,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testCaseId-path.yaml"
          }
        },
        {
          "description": "Unique identifier for each test definition.",
          "example": "{{testDefinitionId}}",
          "in": "path",
          "name": "testDefinitionId",
          "required": true,
          "schema": {
            "example": 738,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testDefinitionId-path.yaml"
          }
        }
      ]
    },
    "/comparative/test-definitions/{testDefinitionId}/test-cases/{testCaseId}/restore": {
      "post": {
        "description": "Restores a deleted comparative test case. A successful operation responds with the 200 status and the restored object in the `successes` array.",
        "operationId": "post-test-definition-test-case-restore",
        "summary": "Restore a comparative test case",
        "tags": [
          "Test definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-definition-test-case-restore"
        },
        "responses": {
          "200": {
            "description": "The response returns the restored test case.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "szhang",
                  "createdDate": "2018-03-16T10:46:23+0000",
                  "modifiedBy": "mrossi",
                  "modifiedDate": "2018-03-16T10:46:28+0000",
                  "runOrder": 1,
                  "status": "active",
                  "testCaseDescription": "Base Page Test",
                  "testCaseId": 1855,
                  "testCaseName": "Base Page",
                  "testDefinitionId": 738,
                  "url": "https://www.example-weather.com/",
                  "comparisonSettings": {
                    "cacheKey": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "cachingOption": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "cpcode": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "metadataVariables": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true,
                      "compareAllExcept": [
                        "RUM_IS_IPV6",
                        "RUA_OUT_IS_APPLIED",
                        "RUM_XHR_TEST",
                        "RUM_CLIENT_TO_MAPPING_PCT",
                        "RANDOM_SAMPLE",
                        "RUM_IMPL_PM_GROUPID",
                        "RUM_IMPL_PM_GROUPNAME",
                        "RUM_IMPL_PM_PRODUCT",
                        "RUM_DEBUG"
                      ],
                      "compareOnly": []
                    },
                    "originServer": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "responseCode": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "responseHeaders": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true,
                      "compareAllExcept": [
                        "Age",
                        "Date",
                        "Expires",
                        "Server",
                        "Via",
                        "Set-Cookie",
                        "Cache-Control"
                      ],
                      "compareOnly": []
                    }
                  },
                  "requestHeaders": [
                    {
                      "headerAction": "add",
                      "headerName": "Max-Forwards",
                      "headerValues": "10"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about the comparative test case, including response headers and comparisons you want test. The embedded objects refer to the entities that get loaded after the initial HTML request is made.",
                  "type": "object",
                  "required": [
                    "testCaseId",
                    "testDefinitionId",
                    "url",
                    "testCaseName",
                    "runOrder",
                    "requestHeaders",
                    "comparisonSettings",
                    "createdBy",
                    "createdDate"
                  ],
                  "properties": {
                    "comparisonSettings": {
                      "additionalProperties": false,
                      "description": "Attributes compared between different environments.",
                      "type": "object",
                      "required": [
                        "responseCode",
                        "responseHeaders",
                        "cpcode",
                        "cachingOption",
                        "cacheKey",
                        "metadataVariables",
                        "originServer"
                      ],
                      "properties": {
                        "cacheKey": {
                          "additionalProperties": false,
                          "description": "String used by the Akamai Edge Server to identify the requested object in the cache.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes embedded objects for the cache key.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the cache key.",
                              "type": "boolean"
                            }
                          }
                        },
                        "cachingOption": {
                          "additionalProperties": false,
                          "description": "Specifies how long you want to cache content in your configuration.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes the embedded objects for the caching option.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the caching option.",
                              "type": "boolean"
                            }
                          }
                        },
                        "cpcode": {
                          "additionalProperties": false,
                          "description": "CP code used to deliver the content from the Akamai Edge Server.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes embedded objects for the CP code.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the CP code.",
                              "type": "boolean"
                            }
                          }
                        },
                        "metadataVariables": {
                          "additionalProperties": false,
                          "description": "Metadata variables used in the processing of the request.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects",
                            "compareOnly",
                            "compareAllExcept"
                          ],
                          "properties": {
                            "compareAllExcept": {
                              "description": "List of all metadata variables the test run ignores or doesn't compare.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "compareOnly": {
                              "description": "List of metadata variables the test run includes or compares.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes embedded objects for the metadata variables.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the metadata variables.",
                              "type": "boolean"
                            }
                          }
                        },
                        "originServer": {
                          "additionalProperties": false,
                          "description": "Hostname of the origin server.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison included the embedded objects for the origin server.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the origin server.",
                              "type": "boolean"
                            }
                          }
                        },
                        "responseCode": {
                          "additionalProperties": false,
                          "description": "Numerical part of the HTTP Status Code.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes embedded objects for the response code.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the response code.",
                              "type": "boolean"
                            }
                          }
                        },
                        "responseHeaders": {
                          "additionalProperties": false,
                          "description": "Response headers of the corresponding HTTP responses.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects",
                            "compareOnly",
                            "compareAllExcept"
                          ],
                          "properties": {
                            "compareAllExcept": {
                              "description": "List of all response headers the test run ignores or doesn't compare.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "compareOnly": {
                              "description": "List of response headers the test run includes or doesn't compares.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "Whether the test run comparison includes embedded objects of the response headers.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "Whether the test run compares the response headers.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "createdBy": {
                      "description": "Username who created the comparative test case.",
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the test definition was created.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the test case.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the test case was last deleted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the comparative test case.",
                      "minLength": 0,
                      "readOnly": true,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the test definition was last modified.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "requestHeaders": {
                      "description": "Contains request headers in the comparative test case.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "headerName",
                          "headerValues",
                          "headerAction"
                        ],
                        "properties": {
                          "headerAction": {
                            "description": "Request header settings. Possible values are: `add` to the list of request headers, `modify` existing request headers, or `filter` request headers belonging to this comparative test case.",
                            "type": "string",
                            "enum": [
                              "add",
                              "modify",
                              "filter"
                            ]
                          },
                          "headerName": {
                            "description": "Name of the request header.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "headerValues": {
                            "description": "Value of the request header.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "runOrder": {
                      "description": "Integer representing the order in which the test run executes the test case as part of its parent test definition.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "status": {
                      "description": "Comparative test case's status. Possible values are: `active` or `inactive`. The `inactive` status means the test case was removed and you can't use it.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "inactive",
                        "active"
                      ]
                    },
                    "testCaseDescription": {
                      "description": "Description of the comparative test case.",
                      "maxLength": 4000,
                      "minLength": 0,
                      "type": "string"
                    },
                    "testCaseId": {
                      "description": "Unique identifier for each comparative test case resource.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "testCaseName": {
                      "description": "Name of the comparative test case.",
                      "maxLength": 100,
                      "minLength": 1,
                      "type": "string"
                    },
                    "testDefinitionId": {
                      "description": "Unique identifier for each test definition resource.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "url": {
                      "description": "URL of the tested page.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestCaseResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each functional test case.",
          "example": "{{testCaseId}}",
          "in": "path",
          "name": "testCaseId",
          "required": true,
          "schema": {
            "example": 301,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testCaseId-path.yaml"
          }
        },
        {
          "description": "Unique identifier for each test definition.",
          "example": "{{testDefinitionId}}",
          "in": "path",
          "name": "testDefinitionId",
          "required": true,
          "schema": {
            "example": 738,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testDefinitionId-path.yaml"
          }
        }
      ]
    },
    "/comparison-settings-default-values": {
      "get": {
        "description": "Returns the comparison lists for a specific test definition. This includes the `compareAllExcept` and `compareOnly` lists of comparisons.",
        "operationId": "get-comparison-settings-default-values",
        "summary": "List comparison lists",
        "tags": [
          "Comparison settings"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-comparison-settings-default-values"
        },
        "responses": {
          "200": {
            "description": "The response provides the comparison lists.",
            "content": {
              "application/json": {
                "example": {
                  "metadataVariables": {
                    "compareAllExcept": [],
                    "compareOnly": [
                      "PMUSER_*",
                      "AKA_PM_*"
                    ]
                  },
                  "responseHeaders": {
                    "compareAllExcept": [
                      "Age",
                      "Date",
                      "Expires",
                      "Server",
                      "Via",
                      "Set-Cookie",
                      "Cache-Control"
                    ],
                    "compareOnly": []
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Default value lists for comparison settings when a test case is created or updated.",
                  "type": "object",
                  "required": [
                    "responseHeaders",
                    "metadataVariables"
                  ],
                  "properties": {
                    "metadataVariables": {
                      "additionalProperties": false,
                      "description": "Inclusion or exclusion list of default values for metadata variables.",
                      "type": "object",
                      "required": [
                        "compareOnly",
                        "compareAllExcept"
                      ],
                      "properties": {
                        "compareAllExcept": {
                          "description": "Exclusion list of default values for metadata variables.",
                          "minItems": 0,
                          "type": "array",
                          "uniqueItems": true,
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "compareOnly": {
                          "description": "Inclusion list of default values for metadata variables.",
                          "minItems": 0,
                          "type": "array",
                          "uniqueItems": true,
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "responseHeaders": {
                      "additionalProperties": false,
                      "description": "Inclusion or exclusion list of default values for response headers.",
                      "type": "object",
                      "required": [
                        "compareOnly",
                        "compareAllExcept"
                      ],
                      "properties": {
                        "compareAllExcept": {
                          "description": "Exclusion list of default values for response headers.",
                          "minItems": 0,
                          "type": "array",
                          "uniqueItems": true,
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "compareOnly": {
                          "description": "Inclusion list of default values for response headers.",
                          "minItems": 0,
                          "type": "array",
                          "uniqueItems": true,
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getComparisonSettingsDefaultValuesResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/functional/client-profiles": {
      "get": {
        "description": "Lists two client profiles that you can use in functional test cases. The response is an array of objects, each keyed by `clientProfileId`.",
        "operationId": "get-client-profiles",
        "summary": "List client profiles",
        "tags": [
          "Client profiles"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-client-profiles"
        },
        "responses": {
          "200": {
            "description": "The response provides client profiles.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Lists all available client profiles.",
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Contains information about the Akamai-provided client profile.",
                    "type": "object",
                    "required": [
                      "clientProfileId",
                      "browser",
                      "geoLocation",
                      "ipVersion"
                    ],
                    "properties": {
                      "browser": {
                        "additionalProperties": false,
                        "description": "Contains information about the real browser used to execute the functional test case.",
                        "type": "object",
                        "required": [
                          "name",
                          "version"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the browser used to run functional test cases.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "version": {
                            "description": "Version of the browser used to run functional test cases.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      },
                      "clientProfileId": {
                        "description": "Unique identifier of the client profile.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "geoLocation": {
                        "description": "Geographic region for which the functional test cases using this client profile would execute. The only currently available value is `us` for United States.",
                        "type": "string",
                        "enum": [
                          "us"
                        ]
                      },
                      "ipVersion": {
                        "description": "IP versions for which the functional test cases using this client profile are run, either `ipv4` or `ipv6`.",
                        "type": "string",
                        "enum": [
                          "ipv4",
                          "ipv6"
                        ]
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/get-client-profile-response.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getClientProfilesResponse.yaml"
                  }
                },
                "example": [
                  {
                    "clientProfileId": 1,
                    "geoLocation": "us",
                    "ipVersion": "ipv6",
                    "browser": {
                      "name": "chrome",
                      "version": "72"
                    }
                  },
                  {
                    "clientProfileId": 2,
                    "geoLocation": "us",
                    "ipVersion": "ipv4",
                    "browser": {
                      "name": "chrome",
                      "version": "72"
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/functional/client-profiles/{clientProfileId}": {
      "get": {
        "description": "Returns details of a client profile.",
        "operationId": "get-client-profile",
        "summary": "Get a client profile",
        "tags": [
          "Client profiles"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-client-profile"
        },
        "responses": {
          "200": {
            "description": "The response returns client profile details.",
            "content": {
              "application/json": {
                "example": {
                  "clientProfileId": 1,
                  "geoLocation": "us",
                  "ipVersion": "ipv6",
                  "browser": {
                    "name": "chrome",
                    "version": "72"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about the Akamai-provided client profile.",
                  "type": "object",
                  "required": [
                    "clientProfileId",
                    "browser",
                    "geoLocation",
                    "ipVersion"
                  ],
                  "properties": {
                    "browser": {
                      "additionalProperties": false,
                      "description": "Contains information about the real browser used to execute the functional test case.",
                      "type": "object",
                      "required": [
                        "name",
                        "version"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the browser used to run functional test cases.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "version": {
                          "description": "Version of the browser used to run functional test cases.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "clientProfileId": {
                      "description": "Unique identifier of the client profile.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "geoLocation": {
                      "description": "Geographic region for which the functional test cases using this client profile would execute. The only currently available value is `us` for United States.",
                      "type": "string",
                      "enum": [
                        "us"
                      ]
                    },
                    "ipVersion": {
                      "description": "IP versions for which the functional test cases using this client profile are run, either `ipv4` or `ipv6`.",
                      "type": "string",
                      "enum": [
                        "ipv4",
                        "ipv6"
                      ]
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-client-profile-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each client profile.",
          "example": "{{clientProfileId}}",
          "in": "path",
          "name": "clientProfileId",
          "required": true,
          "schema": {
            "example": 1,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/clientProfileId-path.yaml"
          }
        }
      ]
    },
    "/functional/client-profiles/{clientProfileId}/associations/test-cases": {
      "get": {
        "description": "Lists all functional test cases that use a client profile. The response is an array of objects, each keyed by `testCaseId`.",
        "operationId": "get-client-profile-associations-test-cases",
        "summary": "List functional test cases that use a client profile",
        "tags": [
          "Client profiles"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-client-profile-associations-test-cases"
        },
        "responses": {
          "200": {
            "description": "The response lists test cases.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Contains functional test cases created in your organization.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Contains information about the functional test cases and included objects: conditions, test requests, and client profiles.",
                    "type": "object",
                    "required": [
                      "testCaseId",
                      "clientProfile",
                      "testRequest",
                      "condition",
                      "createdBy",
                      "createdDate",
                      "modifiedBy",
                      "modifiedDate"
                    ],
                    "properties": {
                      "clientProfile": {
                        "additionalProperties": false,
                        "description": "Contains information about the included client profile.",
                        "type": "object",
                        "required": [
                          "clientProfileId",
                          "browser",
                          "geoLocation",
                          "ipVersion"
                        ],
                        "properties": {
                          "browser": {
                            "additionalProperties": false,
                            "description": "Contains information about the real browser used to execute the functional test case.",
                            "type": "object",
                            "required": [
                              "name",
                              "version"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name of the browser used to run functional test cases.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "version": {
                                "description": "Version of the browser used to run functional test cases.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "clientProfileId": {
                            "description": "Unique identifier of the client profile.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "geoLocation": {
                            "description": "Geographic region for which the functional test cases using this client profile would execute. The only currently available value is `us` for United States.",
                            "type": "string",
                            "enum": [
                              "us"
                            ]
                          },
                          "ipVersion": {
                            "description": "IP versions for which the functional test cases using this client profile are run, either `ipv4` or `ipv6`.",
                            "type": "string",
                            "enum": [
                              "ipv4",
                              "ipv6"
                            ]
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/get-client-profile-response.yaml"
                        }
                      },
                      "condition": {
                        "additionalProperties": false,
                        "description": "Contains information about the included condition.",
                        "type": "object",
                        "required": [
                          "conditionId",
                          "condition",
                          "createdBy",
                          "createdDate",
                          "modifiedBy",
                          "modifiedDate"
                        ],
                        "properties": {
                          "condition": {
                            "additionalProperties": false,
                            "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                            "type": "object",
                            "required": [
                              "conditionNodeId",
                              "values"
                            ],
                            "properties": {
                              "conditionNode": {
                                "additionalProperties": false,
                                "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                                "type": "object",
                                "required": [
                                  "conditionNodeId",
                                  "values"
                                ],
                                "properties": {
                                  "conditionNode": {
                                    "type": "object"
                                  },
                                  "conditionNodeId": {
                                    "minimum": 0,
                                    "readOnly": true,
                                    "type": "integer"
                                  },
                                  "values": {
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/condition-node-nested.yaml"
                                }
                              },
                              "conditionNodeId": {
                                "description": "Unique identifier for each condition node taken from the test catalog template.",
                                "minimum": 0,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "values": {
                                "description": "List of values selected from the condition node or input supported by the node.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/condition-node.yaml"
                            }
                          },
                          "conditionId": {
                            "description": "Unique identifier for each condition.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "createdBy": {
                            "description": "Username who created the condition.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the condition was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "deletedBy": {
                            "description": "Username who last deleted the condition.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "deletedDate": {
                            "description": "ISO 8601 timestamp indicating when the condition was last deleted.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "modifiedBy": {
                            "description": "Username who last modified the condition.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "modifiedDate": {
                            "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/get-condition-response.yaml"
                        }
                      },
                      "createdBy": {
                        "description": "Username who created the functional test case.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 timestamp indicating when the functional test case was created.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "deletedBy": {
                        "description": "Username who last deleted the functional test case.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "deletedDate": {
                        "description": "ISO 8601 timestamp indicating when the functional test case was last deleted.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "modifiedBy": {
                        "description": "Username who last modified the functional test case.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "ISO 8601 timestamp indicating when the functional test case was last modified.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "testCaseId": {
                        "description": "Unique identifier for each functional test case.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "testRequest": {
                        "additionalProperties": false,
                        "description": "Contains information about the included test request.",
                        "type": "object",
                        "required": [
                          "testRequestId",
                          "testRequestUrl",
                          "createdBy",
                          "createdDate",
                          "modifiedBy",
                          "modifiedDate"
                        ],
                        "properties": {
                          "createdBy": {
                            "description": "Username who created the test request.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the test request was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "deletedBy": {
                            "description": "Username who last deleted the test request.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "deletedDate": {
                            "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "modifiedBy": {
                            "description": "Username who last modified the test request.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "modifiedDate": {
                            "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "requestHeaders": {
                            "description": "Contains information about request headers included in the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "headerName",
                                "headerValue",
                                "headerAction"
                              ],
                              "properties": {
                                "headerAction": {
                                  "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                                  "type": "string",
                                  "enum": [
                                    "add",
                                    "modify",
                                    "filter"
                                  ]
                                },
                                "headerName": {
                                  "description": "Name of the request header.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "headerValue": {
                                  "description": "Value of the request header.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "tags": {
                            "description": "Keywords associated with the test request.",
                            "maxItems": 50,
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "testRequestId": {
                            "description": "Unique identifier for each test request.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "testRequestUrl": {
                            "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                            "format": "uri",
                            "maxLength": 2048,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/get-test-request-response.yaml"
                        }
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/get-functional-test-case-response.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestCasesResponse.yaml"
                  }
                },
                "example": [
                  {
                    "createdBy": "hgildong",
                    "createdDate": "2020-01-07T06:25:07+0000",
                    "modifiedBy": "jsmith",
                    "modifiedDate": "2020-01-07T06:25:07+0000",
                    "testCaseId": 302,
                    "clientProfile": {
                      "clientProfileId": 1,
                      "geoLocation": "us",
                      "ipVersion": "ipv6",
                      "browser": {
                        "name": "chrome",
                        "version": "72"
                      }
                    },
                    "condition": {
                      "conditionId": 41,
                      "createdBy": "jperez",
                      "createdDate": "2019-12-15T04:30:46+0000",
                      "modifiedBy": "szhang",
                      "modifiedDate": "2020-01-06T19:58:52+0000",
                      "condition": {
                        "conditionNodeId": 1,
                        "values": [
                          "response_header"
                        ],
                        "conditionNode": {
                          "conditionNodeId": 4,
                          "values": [
                            "Content-Type"
                          ],
                          "conditionNode": {
                            "conditionNodeId": 5,
                            "values": [
                              "has_a_value"
                            ],
                            "conditionNode": {
                              "conditionNodeId": 7,
                              "values": [
                                "ends_with"
                              ],
                              "conditionNode": {
                                "conditionNodeId": 4,
                                "values": [
                                  "json"
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "testRequest": {
                      "createdBy": "adevi",
                      "createdDate": "2019-12-31T08:52:57+0000",
                      "modifiedBy": "jperez",
                      "modifiedDate": "2020-01-03T09:26:09+0000",
                      "testRequestId": 59,
                      "testRequestUrl": "https://www.atcuser8.akamaiu.com/?abc=1234555",
                      "requestHeaders": [
                        {
                          "headerAction": "add",
                          "headerName": "Accept",
                          "headerValues": "v1"
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each client profile.",
          "example": "{{clientProfileId}}",
          "in": "path",
          "name": "clientProfileId",
          "required": true,
          "schema": {
            "example": 1,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/clientProfileId-path.yaml"
          }
        }
      ]
    },
    "/functional/config-versions": {
      "post": {
        "description": "Adds a new config version to Test Center from Property Manager. You can perform this operation only for properties added to Property Manager. If they're not added, see the [Property Manager API documentation](https://techdocs.akamai.com/property-mgr/reference/post-property-versions) or the [Property Manager webhelp](https://techdocs.akamai.com/property-mgr/docs/create-new-prop) to learn how to do it.",
        "operationId": "post-config-versions",
        "summary": "Add a config version",
        "tags": [
          "Config versions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-config-versions"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "arlFileId": 424809,
                "propertyVersion": 6
              },
              "schema": {
                "additionalProperties": false,
                "description": "An object containing details of config version you want to add to Test Center.",
                "type": "object",
                "required": [
                  "arlFileId",
                  "propertyVersion"
                ],
                "properties": {
                  "arlFileId": {
                    "description": "Unique identifier of a property associated with the config version.",
                    "example": "{{arlFileId}}",
                    "minimum": 1,
                    "type": "integer"
                  },
                  "propertyVersion": {
                    "description": "Version of the property associated with the config version.",
                    "example": "{{propertyVersion}}",
                    "minimum": 1,
                    "type": "integer"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/createConfigVersionRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created new config version.",
            "content": {
              "application/json": {
                "example": {
                  "arlFileId": 424809,
                  "configVersionId": 919,
                  "lastSync": "2020-01-04T11:35:30+0000",
                  "modifiedBy": "mrossi",
                  "modifiedDate": "2020-01-04T11:35:30+0000",
                  "propertyName": "atc_test_config",
                  "propertyVersion": 6,
                  "propertyVersionNote": "Test asset v1"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about a config version. Config versions refer to Property Manager property versions. All operations performed on config versions are saved only in Test Center and they don't affect properties in Property Manager.",
                  "type": "object",
                  "required": [
                    "configVersionId",
                    "lastSync",
                    "arlFileId"
                  ],
                  "properties": {
                    "arlFileId": {
                      "description": "Unique identifier of a property that corresponds to the config version.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "configVersionId": {
                      "description": "Unique identifier for each config version.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the config version from Test Center.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the config version was last deleted from Test Center.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastSync": {
                      "description": "ISO 8601 timestamp indicating when the config version was last synchronized with Property Manager. This is also the date when the config version was added to Test Center.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the config version.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the config version was last modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "propertyName": {
                      "description": "Name of the imported property that corresponds to this config version.",
                      "maxLength": 255,
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string"
                    },
                    "propertyVersion": {
                      "description": "Version of the imported property that corresponds to this config version.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "propertyVersionNote": {
                      "description": "Notes about the property version that corresponds to this config version imported from Property Manager.",
                      "minLength": 0,
                      "readOnly": true,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-config-version-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists config versions added to Test Center from Property Manager available in your organization. The list can also include deleted config versions that you can restore. The response is an array of objects, each keyed by `configVersionId`.",
        "operationId": "get-config-versions",
        "summary": "List config versions",
        "tags": [
          "Config versions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-config-versions"
        },
        "responses": {
          "200": {
            "description": "The response lists config versions.",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about a config version. Config versions refer to Property Manager property versions. All operations performed on config versions are saved only in Test Center and they don't affect properties in Property Manager.",
                  "type": "object",
                  "required": [
                    "configVersionId",
                    "lastSync",
                    "arlFileId"
                  ],
                  "properties": {
                    "arlFileId": {
                      "description": "Unique identifier of a property that corresponds to the config version.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "configVersionId": {
                      "description": "Unique identifier for each config version.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the config version from Test Center.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the config version was last deleted from Test Center.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastSync": {
                      "description": "ISO 8601 timestamp indicating when the config version was last synchronized with Property Manager. This is also the date when the config version was added to Test Center.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the config version.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the config version was last modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "propertyName": {
                      "description": "Name of the imported property that corresponds to this config version.",
                      "maxLength": 255,
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string"
                    },
                    "propertyVersion": {
                      "description": "Version of the imported property that corresponds to this config version.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "propertyVersionNote": {
                      "description": "Notes about the property version that corresponds to this config version imported from Property Manager.",
                      "minLength": 0,
                      "readOnly": true,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-config-version-response.yaml"
                  }
                },
                "example": [
                  {
                    "arlFileId": 424809,
                    "configVersionId": 919,
                    "lastSync": "2020-01-04T11:35:30+0000",
                    "modifiedBy": "mrossi",
                    "modifiedDate": "2022-01-04T11:50:00+0000",
                    "propertyName": "atc_test_config",
                    "propertyVersion": 6,
                    "propertyVersionNote": "Test asset v1"
                  },
                  {
                    "arlFileId": 424820,
                    "configVersionId": 920,
                    "lastSync": "2020-01-04T11:45:30+0000",
                    "modifiedBy": "adevi",
                    "modifiedDate": "2020-01-04T11:50:00+0000",
                    "propertyName": "atc_test_config2",
                    "propertyVersion": 2
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Whether to list any items deleted within the last 30 days that you can restore. It's `false` by default.",
            "example": "{{includeRecentlyDeleted}}",
            "in": "query",
            "name": "includeRecentlyDeleted",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/includeRecentlyDeleted-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/functional/config-versions/{configVersionId}": {
      "get": {
        "description": "Returns details of a config version.",
        "operationId": "get-config-version",
        "summary": "Get a config version",
        "tags": [
          "Config versions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-config-version"
        },
        "responses": {
          "200": {
            "description": "The response provides config version details.",
            "content": {
              "application/json": {
                "example": {
                  "arlFileId": 424809,
                  "configVersionId": 919,
                  "lastSync": "2020-01-04T11:35:30+0000",
                  "modifiedBy": "tyamada",
                  "modifiedDate": "2020-01-04T11:35:30+0000",
                  "propertyName": "atc_test_config",
                  "propertyVersion": 6,
                  "propertyVersionNote": "Test asset v1"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about a config version. Config versions refer to Property Manager property versions. All operations performed on config versions are saved only in Test Center and they don't affect properties in Property Manager.",
                  "type": "object",
                  "required": [
                    "configVersionId",
                    "lastSync",
                    "arlFileId"
                  ],
                  "properties": {
                    "arlFileId": {
                      "description": "Unique identifier of a property that corresponds to the config version.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "configVersionId": {
                      "description": "Unique identifier for each config version.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the config version from Test Center.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the config version was last deleted from Test Center.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastSync": {
                      "description": "ISO 8601 timestamp indicating when the config version was last synchronized with Property Manager. This is also the date when the config version was added to Test Center.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the config version.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the config version was last modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "propertyName": {
                      "description": "Name of the imported property that corresponds to this config version.",
                      "maxLength": 255,
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string"
                    },
                    "propertyVersion": {
                      "description": "Version of the imported property that corresponds to this config version.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "propertyVersionNote": {
                      "description": "Notes about the property version that corresponds to this config version imported from Property Manager.",
                      "minLength": 0,
                      "readOnly": true,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-config-version-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Deletes a config version from Test Center. You can delete either a config version or a config version with all included objects. The operation has three possible outcomes. When `deleteChildResources` is `false`, the operation responds with the 200 status. When `deleteChildResources` is `true`, the operation responds with the [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses). Regardless of the `deleteChildResources` value, the operation responds with a 4xx status if the deletion can't be processed. You can [restore](https://techdocs.akamai.com/test-ctr/reference/post-config-version-restore) config versions within 30 days of deleting them.",
        "operationId": "delete-config-version",
        "summary": "Delete a config version",
        "tags": [
          "Config versions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/delete-config-version"
        },
        "responses": {
          "200": {
            "description": "The response returns details of the deleted config version.",
            "content": {
              "application/json": {
                "example": {
                  "configVersions": {
                    "failures": [],
                    "successes": [
                      919
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains a unique identifier of the config version deleted successfully or details about failure of the operation.",
                  "type": "object",
                  "required": [
                    "configVersions"
                  ],
                  "properties": {
                    "configVersions": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minimum": 0,
                            "type": "integer"
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getDeletedConfigVersionResponse.yaml"
                  }
                }
              }
            }
          },
          "207": {
            "description": "[Partial success responses](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "conditions": {
                    "failures": [],
                    "successes": [
                      3539
                    ]
                  },
                  "configVersions": {
                    "failures": [],
                    "successes": [
                      919
                    ]
                  },
                  "testCases": {
                    "failures": [],
                    "successes": [
                      6552
                    ]
                  },
                  "testRequests": {
                    "failures": [],
                    "successes": [
                      4788
                    ]
                  },
                  "testSuites": {
                    "failures": [],
                    "successes": [
                      4490
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Lists unique identifiers of the config version and included objects, test suites, functional test cases, conditions, and test requests, deleted successfully or details about failed operations.",
                  "type": "object",
                  "required": [
                    "configVersions",
                    "testSuites",
                    "testCases",
                    "testRequests",
                    "conditions"
                  ],
                  "properties": {
                    "conditions": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minimum": 0,
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "configVersions": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minimum": 0,
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "testCases": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minimum": 0,
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "testRequests": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minimum": 0,
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "testSuites": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minimum": 0,
                            "type": "integer"
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getDeletedConfigVersionsResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Whether to delete the test suite with included functional test cases, test requests, and conditions. It's `false` by default.",
            "example": "{{deleteChildResources}}",
            "in": "query",
            "name": "deleteChildResources",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/deleteChildResources-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each config version.",
          "example": "{{configVersionId}}",
          "in": "path",
          "name": "configVersionId",
          "required": true,
          "schema": {
            "example": 919,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/configVersionId-path.yaml"
          }
        }
      ]
    },
    "/functional/config-versions/{configVersionId}/associations/test-suites": {
      "get": {
        "description": "Lists all test suites associated with a config version. The response is an array of objects, each keyed by `testSuiteId`.",
        "operationId": "get-config-version-associations-test-suites",
        "summary": "List test suites associated with a config version",
        "tags": [
          "Config versions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-config-version-associations-test-suites"
        },
        "responses": {
          "200": {
            "description": "The response lists test suites.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Contains test suites created in your organization.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Contains information about a test suite.",
                    "type": "object",
                    "required": [
                      "testSuiteId",
                      "testSuiteName",
                      "locked",
                      "stateful",
                      "createdBy",
                      "createdDate",
                      "modifiedBy",
                      "modifiedDate"
                    ],
                    "properties": {
                      "createdBy": {
                        "description": "Username who created the test suite.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 timestamp indicating when the test suite was created.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "deletedBy": {
                        "description": "Username who last deleted the test suite.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "deletedDate": {
                        "description": "ISO 8601 timestamp indicating when the test suite was last deleted.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "locked": {
                        "description": "Whether the test suite is locked. If it's locked, only designated owners or editors can modify it.",
                        "type": "boolean"
                      },
                      "modifiedBy": {
                        "description": "Username who last modified the test suite.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "ISO 8601 timestamp indicating when the test suite was last modified.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "stateful": {
                        "description": "Whether the test suite is run statefully. If a test suite is run statefully, cookies and session information are retained for subsequent test cases within the test suite.",
                        "type": "boolean"
                      },
                      "testSuiteDescription": {
                        "description": "Description of the test suite.",
                        "maxLength": 4000,
                        "minLength": 0,
                        "type": "string"
                      },
                      "testSuiteId": {
                        "description": "Unique identifier for each test suite.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "testSuiteName": {
                        "description": "Unique name of the test suite.",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/get-test-suite-response.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestSuitesResponse.yaml"
                  }
                },
                "example": [
                  {
                    "createdBy": "jsmith",
                    "createdDate": "2019-10-30T12:09:37+0000",
                    "locked": false,
                    "modifiedBy": "hgildong",
                    "modifiedDate": "2019-10-30T12:09:37+0000",
                    "stateful": false,
                    "testSuiteDescription": "This test suite performs basic check of www.atcuser8.akamaiu.com",
                    "testSuiteId": 284,
                    "testSuiteName": "www.atcuser8.akamaiu.com test suite"
                  },
                  {
                    "createdBy": "mrossi",
                    "createdDate": "2019-11-06T23:37:23+0000",
                    "locked": false,
                    "modifiedBy": "jsmith",
                    "modifiedDate": "2019-11-11T09:55:05+0000",
                    "stateful": false,
                    "testSuiteDescription": "This test suite validates caching of images used in www.atcuser8.akamaiu.com",
                    "testSuiteId": 317,
                    "testSuiteName": "www.atcuser8.akamaiu.com images test suite"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each config version.",
          "example": "{{configVersionId}}",
          "in": "path",
          "name": "configVersionId",
          "required": true,
          "schema": {
            "example": 919,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/configVersionId-path.yaml"
          }
        }
      ]
    },
    "/functional/config-versions/{configVersionId}/associations/test-suites/associate": {
      "post": {
        "description": "Associates a list of test suites with a config version. You can associate a test suite with either a requirement or a config version. It can't be associated with both of them at the same time. If you need to associate a particular test suite with both, a requirement and a config version, you can clone the created test suite. See [Clone test suites](https://techdocs.akamai.com/test-ctr/reference/post-test-suites-clone). The operation responds with a [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses) that consists of two arrays, `successes` and `failures`. The `successes` array lists unique identifiers of test suites associated successfully, whereas the `failures` array provides details on any remainders that failed.",
        "operationId": "post-config-version-associations-test-suites-associate",
        "summary": "Associate test suites with a config version",
        "tags": [
          "Config versions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-config-version-associations-test-suites-associate"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": [
                77,
                122
              ],
              "schema": {
                "description": "Contains unique identifiers of test suites you want to associate or dissociate.",
                "minItems": 0,
                "type": "array",
                "items": {
                  "minimum": 0,
                  "type": "integer"
                },
                "x-akamai": {
                  "file-path": "schemas/testSuitesAssociationRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "[Partial success responses](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "successes": [
                    77
                  ],
                  "failures": [
                    {
                      "requestField": "testSuiteId",
                      "title": "Resource not found",
                      "type": "resource.not.found",
                      "requestValues": [
                        122
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains a list of unique identifiers of associated or dissociated test suites.",
                  "type": "object",
                  "required": [
                    "failures",
                    "successes"
                  ],
                  "properties": {
                    "failures": {
                      "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "requestField": {
                            "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestValues": {
                            "description": "Request field values.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "successes": {
                      "description": "List of unique identifiers of successfully associated or dissociated test suites.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minimum": 0,
                        "type": "integer"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/testSuitesAssociationResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each config version.",
          "example": "{{configVersionId}}",
          "in": "path",
          "name": "configVersionId",
          "required": true,
          "schema": {
            "example": 919,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/configVersionId-path.yaml"
          }
        }
      ]
    },
    "/functional/config-versions/{configVersionId}/associations/test-suites/dissociate": {
      "post": {
        "description": "Dissociates a list of test suites from a config version. The operation responds with a [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses) that consists of two arrays, `successes` and `failures`. The `successes` array lists unique identifiers of test suites dissociated successfully, whereas the `failures` array provides details on any remainders that failed.",
        "operationId": "post-config-version-associations-test-suites-dissociate",
        "summary": "Dissociate test suites from a config version",
        "tags": [
          "Config versions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-config-version-associations-test-suites-dissociate"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": [
                77,
                122
              ],
              "schema": {
                "description": "Contains unique identifiers of test suites you want to associate or dissociate.",
                "minItems": 0,
                "type": "array",
                "items": {
                  "minimum": 0,
                  "type": "integer"
                },
                "x-akamai": {
                  "file-path": "schemas/testSuitesAssociationRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "[Partial success responses](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "successes": [
                    77
                  ],
                  "failures": [
                    {
                      "requestField": "testSuiteId",
                      "title": "Resource not found",
                      "type": "resource.not.found",
                      "requestValues": [
                        122
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains a list of unique identifiers of associated or dissociated test suites.",
                  "type": "object",
                  "required": [
                    "failures",
                    "successes"
                  ],
                  "properties": {
                    "failures": {
                      "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "requestField": {
                            "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestValues": {
                            "description": "Request field values.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "successes": {
                      "description": "List of unique identifiers of successfully associated or dissociated test suites.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minimum": 0,
                        "type": "integer"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/testSuitesAssociationResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each config version.",
          "example": "{{configVersionId}}",
          "in": "path",
          "name": "configVersionId",
          "required": true,
          "schema": {
            "example": 919,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/configVersionId-path.yaml"
          }
        }
      ]
    },
    "/functional/config-versions/{configVersionId}/restore": {
      "post": {
        "description": "Restores a deleted config version in Test Center. You can restore either an empty config version or a config version together with all the included objects, test suites, functional test cases, test requests, and conditions. The operation has three possible outcomes. When `restoreChildResources` is `false`, a 200 response provides the restored object in the `successes` array. When `restoreChildResources` is `true`, the operation responds with the [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses) and various objects in the appropriate `successes` or `failures` arrays. Regardless of the `restoreChildResources` value, if there's a problem with restoring the config version object, the operation responds with a 4xx status.",
        "operationId": "post-config-version-restore",
        "summary": "Restore a config version",
        "tags": [
          "Config versions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-config-version-restore"
        },
        "responses": {
          "200": {
            "description": "The response returns the restored config version.",
            "content": {
              "application/json": {
                "example": {
                  "configVersions": {
                    "failures": [],
                    "successes": [
                      {
                        "arlFileId": 483684,
                        "configVersionId": 919,
                        "lastSync": "2020-09-17T11:07:45+0000",
                        "modifiedBy": "tyamada",
                        "modifiedDate": "2020-09-17T11:07:45+0000",
                        "propertyName": "Api_Test",
                        "propertyVersion": 7
                      }
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains the restored config version or details about failure of the operation.",
                  "type": "object",
                  "required": [
                    "configVersions"
                  ],
                  "properties": {
                    "configVersions": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "description": "Contains config versions added to your organization.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about a config version. Config versions refer to Property Manager property versions. All operations performed on config versions are saved only in Test Center and they don't affect properties in Property Manager.",
                              "type": "object",
                              "required": [
                                "configVersionId",
                                "lastSync",
                                "arlFileId"
                              ],
                              "properties": {
                                "arlFileId": {
                                  "description": "Unique identifier of a property that corresponds to the config version.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "configVersionId": {
                                  "description": "Unique identifier for each config version.",
                                  "minimum": 1,
                                  "readOnly": true,
                                  "type": "integer"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the config version from Test Center.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the config version was last deleted from Test Center.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "lastSync": {
                                  "description": "ISO 8601 timestamp indicating when the config version was last synchronized with Property Manager. This is also the date when the config version was added to Test Center.",
                                  "format": "date-time",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the config version.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the config version was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "propertyName": {
                                  "description": "Name of the imported property that corresponds to this config version.",
                                  "maxLength": 255,
                                  "minLength": 1,
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "propertyVersion": {
                                  "description": "Version of the imported property that corresponds to this config version.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "propertyVersionNote": {
                                  "description": "Notes about the property version that corresponds to this config version imported from Property Manager.",
                                  "minLength": 0,
                                  "readOnly": true,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-config-version-response.yaml"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-config-versions-response.yaml"
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getRestoredConfigVersionResponse.yaml"
                  }
                }
              }
            }
          },
          "207": {
            "description": "[Partial success responses](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "conditions": {
                    "failures": [],
                    "successes": [
                      {
                        "conditionId": 3539,
                        "createdBy": "szhang",
                        "createdDate": "2020-09-17T11:06:19+0000",
                        "modifiedBy": "hgildong",
                        "modifiedDate": "2020-09-17T11:07:46+0000",
                        "condition": {
                          "conditionNodeId": 1,
                          "values": [
                            "response_code"
                          ],
                          "conditionNode": {
                            "conditionNodeId": 2,
                            "values": [
                              "is_one_of"
                            ],
                            "conditionNode": {
                              "conditionNodeId": 3,
                              "values": [
                                200
                              ]
                            }
                          }
                        }
                      }
                    ]
                  },
                  "configVersions": {
                    "failures": [],
                    "successes": [
                      {
                        "arlFileId": 483684,
                        "configVersionId": 919,
                        "lastSync": "2020-09-17T11:07:45+0000",
                        "modifiedBy": "hgildong",
                        "modifiedDate": "2020-09-17T11:07:45+0000",
                        "propertyName": "Api_Test",
                        "propertyVersion": 7
                      }
                    ]
                  },
                  "testCases": {
                    "failures": [],
                    "successes": [
                      {
                        "createdBy": "tyamada",
                        "createdDate": "2020-09-17T11:06:32+0000",
                        "modifiedBy": "adevi",
                        "modifiedDate": "2020-09-17T11:07:46+0000",
                        "testCaseId": 6552,
                        "clientProfile": {
                          "clientProfileId": 2,
                          "geoLocation": "us",
                          "ipVersion": "ipv4",
                          "browser": {
                            "name": "chrome",
                            "version": "65.0"
                          }
                        },
                        "condition": {
                          "conditionId": 3539,
                          "createdBy": "alfulani",
                          "createdDate": "2020-09-17T11:06:19+0000",
                          "modifiedBy": "jperez",
                          "modifiedDate": "2020-09-17T11:07:46+0000",
                          "condition": {
                            "conditionNodeId": 1,
                            "values": [
                              "response_code"
                            ],
                            "conditionNode": {
                              "conditionNodeId": 2,
                              "values": [
                                "is_one_of"
                              ],
                              "conditionNode": {
                                "conditionNodeId": 3,
                                "values": [
                                  200
                                ]
                              }
                            }
                          }
                        },
                        "testRequest": {
                          "createdBy": "adevi",
                          "createdDate": "2020-09-17T01:53:33+0000",
                          "modifiedBy": "mrossi",
                          "modifiedDate": "2020-09-17T11:07:46+0000",
                          "testRequestId": 4788,
                          "testRequestUrl": "http://atc.atctest.com/atc-qa-1600307608680",
                          "tags": [
                            "ATC_Automation-Tag"
                          ],
                          "requestHeaders": [
                            {
                              "headerAction": "add",
                              "headerName": "Accept-ATC_Automation-1600307592247",
                              "headerValue": "Application/html"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "testRequests": {
                    "failures": [],
                    "successes": [
                      {
                        "createdBy": "jsmith",
                        "createdDate": "2020-09-17T01:53:33+0000",
                        "modifiedBy": "jsmith",
                        "modifiedDate": "2020-09-17T11:07:46+0000",
                        "testRequestId": 4788,
                        "testRequestUrl": "http://atc.atctest.com/atc-qa-1600307608680",
                        "tags": [
                          "ATC_Automation-Tag"
                        ],
                        "requestHeaders": [
                          {
                            "headerAction": "add",
                            "headerName": "Accept-ATC_Automation-1600307592247",
                            "headerValue": "Application/html"
                          }
                        ]
                      }
                    ]
                  },
                  "testSuites": {
                    "failures": [],
                    "successes": [
                      {
                        "createdBy": "adevi",
                        "createdDate": "2020-09-17T10:41:39+0000",
                        "locked": false,
                        "modifiedBy": "adevi",
                        "modifiedDate": "2020-09-17T11:07:46+0000",
                        "stateful": true,
                        "testSuiteId": 4490,
                        "testSuiteName": "Ap test"
                      }
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains the restored config version and included objects, test suites, functional test cases, conditions, and test requests, or details about any failures of the operation.",
                  "type": "object",
                  "required": [
                    "configVersions",
                    "testSuites",
                    "testCases",
                    "testRequests",
                    "conditions"
                  ],
                  "properties": {
                    "conditions": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "description": "Contains conditions available for your organization.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about the condition.",
                              "type": "object",
                              "required": [
                                "conditionId",
                                "condition",
                                "createdBy",
                                "createdDate",
                                "modifiedBy",
                                "modifiedDate"
                              ],
                              "properties": {
                                "condition": {
                                  "additionalProperties": false,
                                  "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                                  "type": "object",
                                  "required": [
                                    "conditionNodeId",
                                    "values"
                                  ],
                                  "properties": {
                                    "conditionNode": {
                                      "additionalProperties": false,
                                      "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                                      "type": "object",
                                      "required": [
                                        "conditionNodeId",
                                        "values"
                                      ],
                                      "properties": {
                                        "conditionNode": {
                                          "type": "object"
                                        },
                                        "conditionNodeId": {
                                          "minimum": 0,
                                          "readOnly": true,
                                          "type": "integer"
                                        },
                                        "values": {
                                          "minItems": 0,
                                          "type": "array",
                                          "items": {
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/condition-node-nested.yaml"
                                      }
                                    },
                                    "conditionNodeId": {
                                      "description": "Unique identifier for each condition node taken from the test catalog template.",
                                      "minimum": 0,
                                      "readOnly": true,
                                      "type": "integer"
                                    },
                                    "values": {
                                      "description": "List of values selected from the condition node or input supported by the node.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/condition-node.yaml"
                                  }
                                },
                                "conditionId": {
                                  "description": "Unique identifier for each condition.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "createdBy": {
                                  "description": "Username who created the condition.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the condition was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the condition.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the condition was last deleted.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the condition.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-condition-response.yaml"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-conditions-response.yaml"
                            }
                          }
                        }
                      }
                    },
                    "configVersions": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "description": "Contains config versions added to your organization.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about a config version. Config versions refer to Property Manager property versions. All operations performed on config versions are saved only in Test Center and they don't affect properties in Property Manager.",
                              "type": "object",
                              "required": [
                                "configVersionId",
                                "lastSync",
                                "arlFileId"
                              ],
                              "properties": {
                                "arlFileId": {
                                  "description": "Unique identifier of a property that corresponds to the config version.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "configVersionId": {
                                  "description": "Unique identifier for each config version.",
                                  "minimum": 1,
                                  "readOnly": true,
                                  "type": "integer"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the config version from Test Center.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the config version was last deleted from Test Center.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "lastSync": {
                                  "description": "ISO 8601 timestamp indicating when the config version was last synchronized with Property Manager. This is also the date when the config version was added to Test Center.",
                                  "format": "date-time",
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the config version.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the config version was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "propertyName": {
                                  "description": "Name of the imported property that corresponds to this config version.",
                                  "maxLength": 255,
                                  "minLength": 1,
                                  "readOnly": true,
                                  "type": "string"
                                },
                                "propertyVersion": {
                                  "description": "Version of the imported property that corresponds to this config version.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "propertyVersionNote": {
                                  "description": "Notes about the property version that corresponds to this config version imported from Property Manager.",
                                  "minLength": 0,
                                  "readOnly": true,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-config-version-response.yaml"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-config-versions-response.yaml"
                            }
                          }
                        }
                      }
                    },
                    "testCases": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "description": "Contains functional test cases created in your organization.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about the functional test cases and included objects: conditions, test requests, and client profiles.",
                              "type": "object",
                              "required": [
                                "testCaseId",
                                "clientProfile",
                                "testRequest",
                                "condition",
                                "createdBy",
                                "createdDate",
                                "modifiedBy",
                                "modifiedDate"
                              ],
                              "properties": {
                                "clientProfile": {
                                  "additionalProperties": false,
                                  "description": "Contains information about the included client profile.",
                                  "type": "object",
                                  "required": [
                                    "clientProfileId",
                                    "browser",
                                    "geoLocation",
                                    "ipVersion"
                                  ],
                                  "properties": {
                                    "browser": {
                                      "additionalProperties": false,
                                      "description": "Contains information about the real browser used to execute the functional test case.",
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "version"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "Name of the browser used to run functional test cases.",
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "version": {
                                          "description": "Version of the browser used to run functional test cases.",
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "clientProfileId": {
                                      "description": "Unique identifier of the client profile.",
                                      "minimum": 0,
                                      "type": "integer"
                                    },
                                    "geoLocation": {
                                      "description": "Geographic region for which the functional test cases using this client profile would execute. The only currently available value is `us` for United States.",
                                      "type": "string",
                                      "enum": [
                                        "us"
                                      ]
                                    },
                                    "ipVersion": {
                                      "description": "IP versions for which the functional test cases using this client profile are run, either `ipv4` or `ipv6`.",
                                      "type": "string",
                                      "enum": [
                                        "ipv4",
                                        "ipv6"
                                      ]
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-client-profile-response.yaml"
                                  }
                                },
                                "condition": {
                                  "additionalProperties": false,
                                  "description": "Contains information about the included condition.",
                                  "type": "object",
                                  "required": [
                                    "conditionId",
                                    "condition",
                                    "createdBy",
                                    "createdDate",
                                    "modifiedBy",
                                    "modifiedDate"
                                  ],
                                  "properties": {
                                    "condition": {
                                      "additionalProperties": false,
                                      "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                                      "type": "object",
                                      "required": [
                                        "conditionNodeId",
                                        "values"
                                      ],
                                      "properties": {
                                        "conditionNode": {
                                          "additionalProperties": false,
                                          "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                                          "type": "object",
                                          "required": [
                                            "conditionNodeId",
                                            "values"
                                          ],
                                          "properties": {
                                            "conditionNode": {
                                              "type": "object"
                                            },
                                            "conditionNodeId": {
                                              "minimum": 0,
                                              "readOnly": true,
                                              "type": "integer"
                                            },
                                            "values": {
                                              "minItems": 0,
                                              "type": "array",
                                              "items": {
                                                "minLength": 1,
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/condition-node-nested.yaml"
                                          }
                                        },
                                        "conditionNodeId": {
                                          "description": "Unique identifier for each condition node taken from the test catalog template.",
                                          "minimum": 0,
                                          "readOnly": true,
                                          "type": "integer"
                                        },
                                        "values": {
                                          "description": "List of values selected from the condition node or input supported by the node.",
                                          "minItems": 0,
                                          "type": "array",
                                          "items": {
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/condition-node.yaml"
                                      }
                                    },
                                    "conditionId": {
                                      "description": "Unique identifier for each condition.",
                                      "minimum": 1,
                                      "type": "integer"
                                    },
                                    "createdBy": {
                                      "description": "Username who created the condition.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "createdDate": {
                                      "description": "ISO 8601 timestamp indicating when the condition was created.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "deletedBy": {
                                      "description": "Username who last deleted the condition.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "deletedDate": {
                                      "description": "ISO 8601 timestamp indicating when the condition was last deleted.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "modifiedBy": {
                                      "description": "Username who last modified the condition.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "modifiedDate": {
                                      "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                                      "format": "date-time",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-condition-response.yaml"
                                  }
                                },
                                "createdBy": {
                                  "description": "Username who created the functional test case.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the functional test case was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the functional test case.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the functional test case was last deleted.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the functional test case.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the functional test case was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "testCaseId": {
                                  "description": "Unique identifier for each functional test case.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "testRequest": {
                                  "additionalProperties": false,
                                  "description": "Contains information about the included test request.",
                                  "type": "object",
                                  "required": [
                                    "testRequestId",
                                    "testRequestUrl",
                                    "createdBy",
                                    "createdDate",
                                    "modifiedBy",
                                    "modifiedDate"
                                  ],
                                  "properties": {
                                    "createdBy": {
                                      "description": "Username who created the test request.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "createdDate": {
                                      "description": "ISO 8601 timestamp indicating when the test request was created.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "deletedBy": {
                                      "description": "Username who last deleted the test request.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "deletedDate": {
                                      "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "modifiedBy": {
                                      "description": "Username who last modified the test request.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "modifiedDate": {
                                      "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "requestHeaders": {
                                      "description": "Contains information about request headers included in the functional test case.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "type": "object",
                                        "required": [
                                          "headerName",
                                          "headerValue",
                                          "headerAction"
                                        ],
                                        "properties": {
                                          "headerAction": {
                                            "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                                            "type": "string",
                                            "enum": [
                                              "add",
                                              "modify",
                                              "filter"
                                            ]
                                          },
                                          "headerName": {
                                            "description": "Name of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "headerValue": {
                                            "description": "Value of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "tags": {
                                      "description": "Keywords associated with the test request.",
                                      "maxItems": 50,
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "testRequestId": {
                                      "description": "Unique identifier for each test request.",
                                      "minimum": 1,
                                      "type": "integer"
                                    },
                                    "testRequestUrl": {
                                      "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                                      "format": "uri",
                                      "maxLength": 2048,
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-test-request-response.yaml"
                                  }
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-functional-test-case-response.yaml"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-functional-test-cases-response.yaml"
                            }
                          }
                        }
                      }
                    },
                    "testRequests": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "description": "Contains test requests created in your organization.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about a test request.",
                              "type": "object",
                              "required": [
                                "testRequestId",
                                "testRequestUrl",
                                "createdBy",
                                "createdDate",
                                "modifiedBy",
                                "modifiedDate"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "Username who created the test request.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the test request was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the test request.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the test request.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "requestHeaders": {
                                  "description": "Contains information about request headers included in the functional test case.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                      "headerName",
                                      "headerValue",
                                      "headerAction"
                                    ],
                                    "properties": {
                                      "headerAction": {
                                        "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                                        "type": "string",
                                        "enum": [
                                          "add",
                                          "modify",
                                          "filter"
                                        ]
                                      },
                                      "headerName": {
                                        "description": "Name of the request header.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "headerValue": {
                                        "description": "Value of the request header.",
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "tags": {
                                  "description": "Keywords associated with the test request.",
                                  "maxItems": 50,
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                },
                                "testRequestId": {
                                  "description": "Unique identifier for each test request.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "testRequestUrl": {
                                  "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                                  "format": "uri",
                                  "maxLength": 2048,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-test-request-response.yaml"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-test-requests-response.yaml"
                            }
                          }
                        }
                      }
                    },
                    "testSuites": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "description": "Contains test suites created in your organization.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about a test suite.",
                              "type": "object",
                              "required": [
                                "testSuiteId",
                                "testSuiteName",
                                "locked",
                                "stateful",
                                "createdBy",
                                "createdDate",
                                "modifiedBy",
                                "modifiedDate"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "Username who created the test suite.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the test suite was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the test suite.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the test suite was last deleted.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "locked": {
                                  "description": "Whether the test suite is locked. If it's locked, only designated owners or editors can modify it.",
                                  "type": "boolean"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the test suite.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the test suite was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "stateful": {
                                  "description": "Whether the test suite is run statefully. If a test suite is run statefully, cookies and session information are retained for subsequent test cases within the test suite.",
                                  "type": "boolean"
                                },
                                "testSuiteDescription": {
                                  "description": "Description of the test suite.",
                                  "maxLength": 4000,
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "testSuiteId": {
                                  "description": "Unique identifier for each test suite.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "testSuiteName": {
                                  "description": "Unique name of the test suite.",
                                  "maxLength": 100,
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-test-suite-response.yaml"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-test-suites-response.yaml"
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getRestoredConfigVersionsResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Whether to restore the test suite with included functional test cases, test requests, and conditions. It's `false` by default.",
            "example": "{{restoreChildResources}}",
            "in": "query",
            "name": "restoreChildResources",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/restoreChildResources-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each config version.",
          "example": "{{configVersionId}}",
          "in": "path",
          "name": "configVersionId",
          "required": true,
          "schema": {
            "example": 919,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/configVersionId-path.yaml"
          }
        }
      ]
    },
    "/functional/requirements": {
      "post": {
        "description": "Creates a new requirement.",
        "operationId": "post-requirements",
        "summary": "Create a requirement",
        "tags": [
          "Requirements"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-requirements"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "requirementDescription": "The basic requirement to test the config changes",
                "requirementName": "Example.com sanity requirement",
                "references": [
                  {
                    "referenceTitle": "Basic",
                    "referenceUrl": "http://www.atcuser8.akamaiu.com/reference"
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Contains information about a requirement.",
                "type": "object",
                "required": [
                  "requirementName"
                ],
                "properties": {
                  "references": {
                    "description": "Contains information about external references providing more details about the requirement.",
                    "minItems": 0,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "referenceTitle"
                      ],
                      "properties": {
                        "referenceTitle": {
                          "description": "Title of the external reference.",
                          "maxLength": 100,
                          "minLength": 0,
                          "type": "string"
                        },
                        "referenceUrl": {
                          "description": "URL of the reference. For example, a ticket in your ticketing system with the request for the config changes.",
                          "maxLength": 2048,
                          "minLength": 0,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "requirementDescription": {
                    "description": "Description of the requirement.",
                    "example": "{{requirementDescription}}",
                    "maxLength": 4000,
                    "minLength": 0,
                    "type": "string"
                  },
                  "requirementName": {
                    "description": "Name of the requirement.",
                    "example": "{{requirementName}}",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/createRequirementRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created new requirement.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "hgildong",
                  "createdDate": "2019-10-30T12:09:37+0000",
                  "modifiedBy": "alfulani",
                  "modifiedDate": "2019-10-30T12:09:37+0000",
                  "requirementDescription": "The basic requirement to test the config changes",
                  "requirementId": 7,
                  "requirementName": "Example.com sanity requirement",
                  "references": [
                    {
                      "referenceTitle": "Basic",
                      "referenceUrl": "http://www.atcuser8.akamaiu.com/reference"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about a requirement.",
                  "type": "object",
                  "required": [
                    "requirementId",
                    "requirementName",
                    "createdBy",
                    "createdDate",
                    "modifiedBy",
                    "modifiedDate"
                  ],
                  "properties": {
                    "createdBy": {
                      "description": "Username who created the requirement.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the requirement was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the requirement.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the requirement was last deleted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the requirement.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the requirement was last modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "references": {
                      "description": "Contains information about external reference providing more details about the requirement.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "referenceTitle"
                        ],
                        "properties": {
                          "referenceTitle": {
                            "description": "Title of the external reference.",
                            "maxLength": 100,
                            "minLength": 0,
                            "type": "string"
                          },
                          "referenceUrl": {
                            "description": "URL of the reference. For example, a ticket in your ticketing system with the request for the config changes.",
                            "maxLength": 2048,
                            "minLength": 0,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requirementDescription": {
                      "description": "Description of the requirement.",
                      "maxLength": 4000,
                      "minLength": 0,
                      "type": "string"
                    },
                    "requirementId": {
                      "description": "Unique identifier for each requirement.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "requirementName": {
                      "description": "Name of the requirement.",
                      "maxLength": 100,
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-requirement-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists requirements created in your organization. The list can also include deleted requirements that you can restore. The response is an array of objects, each keyed by `requirementId`.",
        "operationId": "get-requirements",
        "summary": "List requirements",
        "tags": [
          "Requirements"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-requirements"
        },
        "responses": {
          "200": {
            "description": "The response lists requirements.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Contains requirements created in your organization.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Contains information about a requirement.",
                    "type": "object",
                    "required": [
                      "requirementId",
                      "requirementName",
                      "createdBy",
                      "createdDate",
                      "modifiedBy",
                      "modifiedDate"
                    ],
                    "properties": {
                      "createdBy": {
                        "description": "Username who created the requirement.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 timestamp indicating when the requirement was created.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "deletedBy": {
                        "description": "Username who last deleted the requirement.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "deletedDate": {
                        "description": "ISO 8601 timestamp indicating when the requirement was last deleted.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "modifiedBy": {
                        "description": "Username who last modified the requirement.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "ISO 8601 timestamp indicating when the requirement was last modified.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "references": {
                        "description": "Contains information about external reference providing more details about the requirement.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "referenceTitle"
                          ],
                          "properties": {
                            "referenceTitle": {
                              "description": "Title of the external reference.",
                              "maxLength": 100,
                              "minLength": 0,
                              "type": "string"
                            },
                            "referenceUrl": {
                              "description": "URL of the reference. For example, a ticket in your ticketing system with the request for the config changes.",
                              "maxLength": 2048,
                              "minLength": 0,
                              "type": "string"
                            }
                          }
                        }
                      },
                      "requirementDescription": {
                        "description": "Description of the requirement.",
                        "maxLength": 4000,
                        "minLength": 0,
                        "type": "string"
                      },
                      "requirementId": {
                        "description": "Unique identifier for each requirement.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "requirementName": {
                        "description": "Name of the requirement.",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/get-requirement-response.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getRequirementsResponse.yaml"
                  }
                },
                "example": [
                  {
                    "createdBy": "szhang",
                    "createdDate": "2019-10-30T12:09:37+0000",
                    "modifiedBy": "tyamada",
                    "modifiedDate": "2019-10-30T12:09:37+0000",
                    "requirementDescription": "The basic requirement to test the config changes",
                    "requirementId": 7,
                    "requirementName": "Example.com sanity requirement",
                    "references": [
                      {
                        "referenceTitle": "Basic",
                        "referenceUrl": "http://www.atcuser8.akamaiu.com/reference"
                      }
                    ]
                  },
                  {
                    "createdBy": "tyamada",
                    "createdDate": "2019-11-30T12:09:37+0000",
                    "modifiedBy": "tyamada",
                    "modifiedDate": "2019-11-30T12:09:37+0000",
                    "requirementId": 8,
                    "requirementName": "www.atcuser8.akamaiu.com sanity requirement",
                    "references": [
                      {
                        "referenceTitle": "TTL"
                      }
                    ]
                  },
                  {
                    "createdBy": "jperez",
                    "createdDate": "2019-11-30T12:09:37+0000",
                    "modifiedBy": "jperez",
                    "modifiedDate": "2019-11-30T12:09:37+0000",
                    "requirementId": 9,
                    "requirementName": "www.atcuser8.akamaiu.com sanity requirement2"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Whether to list any items deleted within the last 30 days that you can restore. It's `false` by default.",
            "example": "{{includeRecentlyDeleted}}",
            "in": "query",
            "name": "includeRecentlyDeleted",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/includeRecentlyDeleted-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/functional/requirements/{requirementId}": {
      "get": {
        "description": "Returns details of a requirement.",
        "operationId": "get-requirement",
        "summary": "Get a requirement",
        "tags": [
          "Requirements"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-requirement"
        },
        "responses": {
          "200": {
            "description": "The response returns requirement details.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "jsmith",
                  "createdDate": "2019-10-30T12:09:37+0000",
                  "modifiedBy": "mrossi",
                  "modifiedDate": "2019-10-30T12:09:37+0000",
                  "requirementDescription": "The basic requirement to test the config changes",
                  "requirementId": 7,
                  "requirementName": "Example.com sanity requirement",
                  "references": [
                    {
                      "referenceTitle": "Basic",
                      "referenceUrl": "http://www.atcuser8.akamaiu.com/reference"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about a requirement.",
                  "type": "object",
                  "required": [
                    "requirementId",
                    "requirementName",
                    "createdBy",
                    "createdDate",
                    "modifiedBy",
                    "modifiedDate"
                  ],
                  "properties": {
                    "createdBy": {
                      "description": "Username who created the requirement.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the requirement was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the requirement.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the requirement was last deleted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the requirement.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the requirement was last modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "references": {
                      "description": "Contains information about external reference providing more details about the requirement.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "referenceTitle"
                        ],
                        "properties": {
                          "referenceTitle": {
                            "description": "Title of the external reference.",
                            "maxLength": 100,
                            "minLength": 0,
                            "type": "string"
                          },
                          "referenceUrl": {
                            "description": "URL of the reference. For example, a ticket in your ticketing system with the request for the config changes.",
                            "maxLength": 2048,
                            "minLength": 0,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requirementDescription": {
                      "description": "Description of the requirement.",
                      "maxLength": 4000,
                      "minLength": 0,
                      "type": "string"
                    },
                    "requirementId": {
                      "description": "Unique identifier for each requirement.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "requirementName": {
                      "description": "Name of the requirement.",
                      "maxLength": 100,
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-requirement-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates a requirement. For optional, modifiable request members that you don't include in the request Test Center uses default values.",
        "operationId": "put-requirement",
        "summary": "Update a requirement",
        "tags": [
          "Requirements"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/put-requirement"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "requirementDescription": "The basic requirement to test the config changes",
                "requirementName": "Example.com sanity requirement updated",
                "references": [
                  {
                    "referenceTitle": "Basic",
                    "referenceUrl": "http://www.atcuser8.akamaiu.com/reference"
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Contains information about a business requirement behind the config changes and links it to your ticketing system. When sending the PUT request you need to provide only required members. For optional, missing ones Test Center uses default values.",
                "type": "object",
                "required": [
                  "requirementName"
                ],
                "properties": {
                  "createdBy": {
                    "description": "Username who created the requirement.",
                    "example": "{{createdBy}}",
                    "minLength": 1,
                    "readOnly": true,
                    "type": "string"
                  },
                  "createdDate": {
                    "description": "ISO 8601 timestamp indicating when the requirement was created.",
                    "example": "{{createdDate}}",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "modifiedBy": {
                    "description": "Username who last modified the requirement.",
                    "example": "{{modifiedBy}}",
                    "minLength": 0,
                    "readOnly": true,
                    "type": "string"
                  },
                  "modifiedDate": {
                    "description": "ISO 8601 timestamp indicating when the requirement was last modified.",
                    "example": "{{modifiedDate}}",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "references": {
                    "description": "Contains information about external references providing more details about the requirement. The [default value](https://techdocs.akamai.com/test-ctr/reference/default-values) for the PUT request is an empty array.",
                    "minItems": 0,
                    "type": "array",
                    "default": [],
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "referenceTitle"
                      ],
                      "properties": {
                        "referenceTitle": {
                          "description": "Title of the external reference that you provide.",
                          "maxLength": 100,
                          "minLength": 0,
                          "type": "string"
                        },
                        "referenceUrl": {
                          "default": "",
                          "description": "URL of the reference that you provide. For example, a ticket in your ticketing system with the request for the config changes. The [default value](https://techdocs.akamai.com/test-ctr/reference/default-values) for the PUT request is an empty string.",
                          "maxLength": 2048,
                          "minLength": 0,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "requirementDescription": {
                    "default": "",
                    "description": "Description you provide for the requirement. The [default value](https://techdocs.akamai.com/test-ctr/reference/default-values) for the PUT request is an empty string.",
                    "example": "{{requirementDescription}}",
                    "maxLength": 4000,
                    "minLength": 0,
                    "type": "string"
                  },
                  "requirementId": {
                    "description": "Unique identifier for each requirement.",
                    "example": "{{requirementId}}",
                    "minimum": 1,
                    "readOnly": true,
                    "type": "integer"
                  },
                  "requirementName": {
                    "description": "Name you provide for the requirement.",
                    "example": "{{requirementName}}",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/updateRequirementRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response returns the updated requirement.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "szhang",
                  "createdDate": "2019-10-30T12:09:37+0000",
                  "modifiedBy": "adevi",
                  "modifiedDate": "2019-11-30T12:09:37+0000",
                  "requirementDescription": "The basic requirement to test the config changes",
                  "requirementId": 7,
                  "requirementName": "Example.com sanity requirement updated",
                  "references": [
                    {
                      "referenceTitle": "Basic",
                      "referenceUrl": "http://www.atcuser8.akamaiu.com/reference"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about a requirement.",
                  "type": "object",
                  "required": [
                    "requirementId",
                    "requirementName",
                    "createdBy",
                    "createdDate",
                    "modifiedBy",
                    "modifiedDate"
                  ],
                  "properties": {
                    "createdBy": {
                      "description": "Username who created the requirement.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the requirement was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the requirement.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the requirement was last deleted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the requirement.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the requirement was last modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "references": {
                      "description": "Contains information about external reference providing more details about the requirement.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "referenceTitle"
                        ],
                        "properties": {
                          "referenceTitle": {
                            "description": "Title of the external reference.",
                            "maxLength": 100,
                            "minLength": 0,
                            "type": "string"
                          },
                          "referenceUrl": {
                            "description": "URL of the reference. For example, a ticket in your ticketing system with the request for the config changes.",
                            "maxLength": 2048,
                            "minLength": 0,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "requirementDescription": {
                      "description": "Description of the requirement.",
                      "maxLength": 4000,
                      "minLength": 0,
                      "type": "string"
                    },
                    "requirementId": {
                      "description": "Unique identifier for each requirement.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "requirementName": {
                      "description": "Name of the requirement.",
                      "maxLength": 100,
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-requirement-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Deletes a requirement. You can delete either a requirement or a requirement with all included objects. The operation has three possible outcomes. When `deleteChildResources` is `false`, the operation responds with the 200 status. When `deleteChildResources` is `true`, the operation responds with the [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses). Regardless of the `deleteChildResources` value, the operation responds with a 4xx status if the deletion can't be processed. You can [restore](https://techdocs.akamai.com/test-ctr/reference/post-requirement-restore) requirements within 30 days of deleting them.",
        "operationId": "delete-requirement",
        "summary": "Delete a requirement",
        "tags": [
          "Requirements"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/delete-requirement"
        },
        "responses": {
          "200": {
            "description": "The response returns details of the deleted requirement.",
            "content": {
              "application/json": {
                "example": {
                  "requirements": {
                    "failures": [],
                    "successes": [
                      7
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains a unique identifier of the requirement deleted successfully or details about failure of the operation.",
                  "type": "object",
                  "required": [
                    "requirements"
                  ],
                  "properties": {
                    "requirements": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minimum": 0,
                            "type": "integer"
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getDeletedRequirementResponse.yaml"
                  }
                }
              }
            }
          },
          "207": {
            "description": "[Partial success responses](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "conditions": {
                    "failures": [],
                    "successes": [
                      3566
                    ]
                  },
                  "requirements": {
                    "failures": [],
                    "successes": [
                      7
                    ]
                  },
                  "testCases": {
                    "failures": [],
                    "successes": [
                      6593
                    ]
                  },
                  "testRequests": {
                    "failures": [],
                    "successes": [
                      4853
                    ]
                  },
                  "testSuites": {
                    "failures": [],
                    "successes": [
                      4531
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Lists unique identifiers of the requirement and included objects, test suites, functional test cases, conditions, and test requests, deleted successfully or details about failed operations.",
                  "type": "object",
                  "required": [
                    "requirements",
                    "testSuites",
                    "testCases",
                    "testRequests",
                    "conditions"
                  ],
                  "properties": {
                    "conditions": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minimum": 0,
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "requirements": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minimum": 0,
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "testCases": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minimum": 0,
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "testRequests": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minimum": 0,
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "testSuites": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minimum": 0,
                            "type": "integer"
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getDeletedRequirementsResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Whether to delete the test suite with included functional test cases, test requests, and conditions. It's `false` by default.",
            "example": "{{deleteChildResources}}",
            "in": "query",
            "name": "deleteChildResources",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/deleteChildResources-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each requirement.",
          "example": "{{requirementId}}",
          "in": "path",
          "name": "requirementId",
          "required": true,
          "schema": {
            "example": 22,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/requirementId-path.yaml"
          }
        }
      ]
    },
    "/functional/requirements/{requirementId}/associations/test-suites": {
      "get": {
        "description": "Lists all test suites associated with a requirement. The response is an array of objects, each keyed by `testSuiteId`.",
        "operationId": "get-requirement-associations-test-suites",
        "summary": "List test suites associated with a requirement",
        "tags": [
          "Requirements"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-requirement-associations-test-suites"
        },
        "responses": {
          "200": {
            "description": "The response lists test suites.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Contains test suites created in your organization.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Contains information about a test suite.",
                    "type": "object",
                    "required": [
                      "testSuiteId",
                      "testSuiteName",
                      "locked",
                      "stateful",
                      "createdBy",
                      "createdDate",
                      "modifiedBy",
                      "modifiedDate"
                    ],
                    "properties": {
                      "createdBy": {
                        "description": "Username who created the test suite.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 timestamp indicating when the test suite was created.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "deletedBy": {
                        "description": "Username who last deleted the test suite.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "deletedDate": {
                        "description": "ISO 8601 timestamp indicating when the test suite was last deleted.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "locked": {
                        "description": "Whether the test suite is locked. If it's locked, only designated owners or editors can modify it.",
                        "type": "boolean"
                      },
                      "modifiedBy": {
                        "description": "Username who last modified the test suite.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "ISO 8601 timestamp indicating when the test suite was last modified.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "stateful": {
                        "description": "Whether the test suite is run statefully. If a test suite is run statefully, cookies and session information are retained for subsequent test cases within the test suite.",
                        "type": "boolean"
                      },
                      "testSuiteDescription": {
                        "description": "Description of the test suite.",
                        "maxLength": 4000,
                        "minLength": 0,
                        "type": "string"
                      },
                      "testSuiteId": {
                        "description": "Unique identifier for each test suite.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "testSuiteName": {
                        "description": "Unique name of the test suite.",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/get-test-suite-response.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestSuitesResponse.yaml"
                  }
                },
                "example": [
                  {
                    "createdBy": "szhang",
                    "createdDate": "2019-10-30T12:09:37+0000",
                    "locked": false,
                    "modifiedBy": "alfulani",
                    "modifiedDate": "2019-10-30T12:09:37+0000",
                    "stateful": false,
                    "testSuiteDescription": "This test suite performs basic check of www.atcuser8.akamaiu.com",
                    "testSuiteId": 284,
                    "testSuiteName": "www.atcuser8.akamaiu.com test suite"
                  },
                  {
                    "createdBy": "hgildong",
                    "createdDate": "2019-11-06T23:37:23+0000",
                    "locked": false,
                    "modifiedBy": "szhang",
                    "modifiedDate": "2019-11-11T09:55:05+0000",
                    "stateful": false,
                    "testSuiteDescription": "This test suite validates caching of images used in www.atcuser8.akamaiu.com",
                    "testSuiteId": 317,
                    "testSuiteName": "www.atcuser8.akamaiu.com images test suite"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each requirement.",
          "example": "{{requirementId}}",
          "in": "path",
          "name": "requirementId",
          "required": true,
          "schema": {
            "example": 22,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/requirementId-path.yaml"
          }
        }
      ]
    },
    "/functional/requirements/{requirementId}/associations/test-suites/associate": {
      "post": {
        "description": "Associates a list of test suites with a requirement. You can associate a test suite with either a requirement or a config version. It can't be associated with both of them at the same time. If you need to associate a particular test suite with both, a requirement and a config version, you can clone the created test suite. See [Clone test suites](https://techdocs.akamai.com/test-ctr/reference/post-test-suites-clone). The operation responds with a [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses) that consists of two arrays, `successes` and `failures`. The `successes` array lists unique identifiers of test suites associated successfully, whereas the `failures` array provides details on any remainders that failed.",
        "operationId": "post-requirement-associations-test-suites-associate",
        "summary": "Associate test suites with a requirement",
        "tags": [
          "Requirements"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-requirement-associations-test-suites-associate"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": [
                77,
                122
              ],
              "schema": {
                "description": "Contains unique identifiers of test suites you want to associate or dissociate.",
                "minItems": 0,
                "type": "array",
                "items": {
                  "minimum": 0,
                  "type": "integer"
                },
                "x-akamai": {
                  "file-path": "schemas/testSuitesAssociationRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "[Partial success responses](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "successes": [
                    77
                  ],
                  "failures": [
                    {
                      "requestField": "testSuiteId",
                      "title": "Resource not found",
                      "type": "resource.not.found",
                      "requestValues": [
                        122
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains a list of unique identifiers of associated or dissociated test suites.",
                  "type": "object",
                  "required": [
                    "failures",
                    "successes"
                  ],
                  "properties": {
                    "failures": {
                      "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "requestField": {
                            "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestValues": {
                            "description": "Request field values.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "successes": {
                      "description": "List of unique identifiers of successfully associated or dissociated test suites.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minimum": 0,
                        "type": "integer"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/testSuitesAssociationResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each requirement.",
          "example": "{{requirementId}}",
          "in": "path",
          "name": "requirementId",
          "required": true,
          "schema": {
            "example": 22,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/requirementId-path.yaml"
          }
        }
      ]
    },
    "/functional/requirements/{requirementId}/associations/test-suites/dissociate": {
      "post": {
        "description": "Dissociates a list of test suites from a requirement. The operation responds with a [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses) that consists of two arrays, `successes` and `failures`. The `successes` array lists unique identifiers of test suites dissociated successfully, whereas the `failures` array provides details on any remainders that failed.",
        "operationId": "post-requirement-associations-test-suites-dissociate",
        "summary": "Dissociate test suites from a requirement",
        "tags": [
          "Requirements"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-requirement-associations-test-suites-dissociate"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": [
                77,
                122
              ],
              "schema": {
                "description": "Contains unique identifiers of test suites you want to associate or dissociate.",
                "minItems": 0,
                "type": "array",
                "items": {
                  "minimum": 0,
                  "type": "integer"
                },
                "x-akamai": {
                  "file-path": "schemas/testSuitesAssociationRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "[Partial success responses](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "successes": [
                    77
                  ],
                  "failures": [
                    {
                      "requestField": "testSuiteId",
                      "title": "Resource not found",
                      "type": "resource.not.found",
                      "requestValues": [
                        122
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains a list of unique identifiers of associated or dissociated test suites.",
                  "type": "object",
                  "required": [
                    "failures",
                    "successes"
                  ],
                  "properties": {
                    "failures": {
                      "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "requestField": {
                            "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestValues": {
                            "description": "Request field values.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "successes": {
                      "description": "List of unique identifiers of successfully associated or dissociated test suites.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minimum": 0,
                        "type": "integer"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/testSuitesAssociationResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each requirement.",
          "example": "{{requirementId}}",
          "in": "path",
          "name": "requirementId",
          "required": true,
          "schema": {
            "example": 22,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/requirementId-path.yaml"
          }
        }
      ]
    },
    "/functional/requirements/{requirementId}/restore": {
      "post": {
        "description": "Restores a deleted requirement. You can restore either an empty requirement or a requirement together with all the included objects, test suites, functional test cases, test requests, and conditions. The operation has three possible outcomes. When `restoreChildResources` is `false`, a 200 response provides the restored object in the `successes` array. When `restoreChildResources` is `true`, the operation responds with the [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses) and various objects in the appropriate `successes` or `failures` arrays. Regardless of the `restoreChildResources` value, if there's a problem with restoring the requirement object, the operation responds with a 4xx status.",
        "operationId": "post-requirement-restore",
        "summary": "Restore a requirement",
        "tags": [
          "Requirements"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-requirement-restore"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "requirements": {
                    "failures": [],
                    "successes": [
                      {
                        "createdBy": "adevi",
                        "createdDate": "2020-09-18T06:03:20+0000",
                        "modifiedBy": "hgildong",
                        "modifiedDate": "2020-09-18T06:05:57+0000",
                        "requirementDescription": "The basic requirement to test the config changes",
                        "requirementId": 7,
                        "requirementName": "Example.com sanity requirement"
                      }
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains the restored requirement or details about failure of the operation.",
                  "type": "object",
                  "required": [
                    "requirements"
                  ],
                  "properties": {
                    "requirements": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "description": "Contains requirements created in your organization.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about a requirement.",
                              "type": "object",
                              "required": [
                                "requirementId",
                                "requirementName",
                                "createdBy",
                                "createdDate",
                                "modifiedBy",
                                "modifiedDate"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "Username who created the requirement.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the requirement was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the requirement.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the requirement was last deleted.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the requirement.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the requirement was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "references": {
                                  "description": "Contains information about external reference providing more details about the requirement.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                      "referenceTitle"
                                    ],
                                    "properties": {
                                      "referenceTitle": {
                                        "description": "Title of the external reference.",
                                        "maxLength": 100,
                                        "minLength": 0,
                                        "type": "string"
                                      },
                                      "referenceUrl": {
                                        "description": "URL of the reference. For example, a ticket in your ticketing system with the request for the config changes.",
                                        "maxLength": 2048,
                                        "minLength": 0,
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "requirementDescription": {
                                  "description": "Description of the requirement.",
                                  "maxLength": 4000,
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "requirementId": {
                                  "description": "Unique identifier for each requirement.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "requirementName": {
                                  "description": "Name of the requirement.",
                                  "maxLength": 100,
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-requirement-response.yaml"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-requirements-response.yaml"
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getRestoredRequirementResponse.yaml"
                  }
                }
              }
            }
          },
          "207": {
            "description": "[Partial success responses](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "conditions": {
                    "failures": [],
                    "successes": [
                      {
                        "conditionId": 3566,
                        "createdBy": "tyamada",
                        "createdDate": "2020-09-18T06:00:55+0000",
                        "modifiedBy": "jsmith",
                        "modifiedDate": "2020-09-18T06:36:33+0000",
                        "condition": {
                          "conditionNodeId": 1,
                          "values": [
                            "response_header"
                          ],
                          "conditionNode": {
                            "conditionNodeId": 4,
                            "values": [
                              "atcuser"
                            ],
                            "conditionNode": {
                              "conditionNodeId": 5,
                              "values": [
                                "has_a_value"
                              ]
                            }
                          }
                        }
                      }
                    ]
                  },
                  "requirements": {
                    "failures": [],
                    "successes": [
                      {
                        "createdBy": "mrossi",
                        "createdDate": "2020-09-18T06:03:20+0000",
                        "modifiedBy": "tyamada",
                        "modifiedDate": "2020-09-18T06:36:32+0000",
                        "requirementDescription": "The basic requirement to test the config changes",
                        "requirementId": 7,
                        "requirementName": "Example.com sanity requirement"
                      }
                    ]
                  },
                  "testCases": {
                    "failures": [],
                    "successes": [
                      {
                        "createdBy": "jkowalski",
                        "createdDate": "2020-09-18T06:02:54+0000",
                        "modifiedBy": "jsmith",
                        "modifiedDate": "2020-09-18T06:36:33+0000",
                        "testCaseId": 6593,
                        "clientProfile": {
                          "clientProfileId": 2,
                          "geoLocation": "us",
                          "ipVersion": "ipv4",
                          "browser": {
                            "name": "chrome",
                            "version": "65.0"
                          }
                        },
                        "condition": {
                          "conditionId": 3566,
                          "createdBy": "jsmith",
                          "createdDate": "2020-09-18T06:00:55+0000",
                          "modifiedBy": "jkowalski",
                          "modifiedDate": "2020-09-18T06:36:33+0000",
                          "condition": {
                            "conditionNodeId": 1,
                            "values": [
                              "response_header"
                            ],
                            "conditionNode": {
                              "conditionNodeId": 4,
                              "values": [
                                "atcuser"
                              ],
                              "conditionNode": {
                                "conditionNodeId": 5,
                                "values": [
                                  "has_a_value"
                                ]
                              }
                            }
                          }
                        },
                        "testRequest": {
                          "createdBy": "adevi",
                          "createdDate": "2020-09-18T06:01:56+0000",
                          "modifiedBy": "alfulani",
                          "modifiedDate": "2020-09-18T06:36:33+0000",
                          "testRequestId": 4853,
                          "testRequestUrl": "http://ab.fail.www.akamaiflowershop.com/atc-qa-1600393947647",
                          "tags": [
                            "akamaiflowershop"
                          ]
                        }
                      }
                    ]
                  },
                  "testRequests": {
                    "failures": [],
                    "successes": [
                      {
                        "createdBy": "jkowalski",
                        "createdDate": "2020-09-18T06:01:56+0000",
                        "modifiedBy": "jkowalski",
                        "modifiedDate": "2020-09-18T06:36:33+0000",
                        "testRequestId": 4853,
                        "testRequestUrl": "http://ab.fail.www.akamaiflowershop.com/atc-qa-1600393947647",
                        "tags": [
                          "akamaiflowershop"
                        ]
                      }
                    ]
                  },
                  "testSuites": {
                    "failures": [],
                    "successes": [
                      {
                        "createdBy": "tyamada",
                        "createdDate": "2020-09-18T06:03:40+0000",
                        "locked": false,
                        "modifiedBy": "szhang",
                        "modifiedDate": "2020-09-18T06:36:33+0000",
                        "stateful": false,
                        "testSuiteDescription": "Test suite for requirement June.2022",
                        "testSuiteId": 4531,
                        "testSuiteName": "Example.com sanity requirement"
                      }
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains the restored requirement and included objects, test suites, functional test cases, conditions, and test requests, or details about any failures of the operation.",
                  "type": "object",
                  "required": [
                    "requirements",
                    "testSuites",
                    "testCases",
                    "testRequests",
                    "conditions"
                  ],
                  "properties": {
                    "conditions": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "description": "Contains conditions available for your organization.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about the condition.",
                              "type": "object",
                              "required": [
                                "conditionId",
                                "condition",
                                "createdBy",
                                "createdDate",
                                "modifiedBy",
                                "modifiedDate"
                              ],
                              "properties": {
                                "condition": {
                                  "additionalProperties": false,
                                  "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                                  "type": "object",
                                  "required": [
                                    "conditionNodeId",
                                    "values"
                                  ],
                                  "properties": {
                                    "conditionNode": {
                                      "additionalProperties": false,
                                      "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                                      "type": "object",
                                      "required": [
                                        "conditionNodeId",
                                        "values"
                                      ],
                                      "properties": {
                                        "conditionNode": {
                                          "type": "object"
                                        },
                                        "conditionNodeId": {
                                          "minimum": 0,
                                          "readOnly": true,
                                          "type": "integer"
                                        },
                                        "values": {
                                          "minItems": 0,
                                          "type": "array",
                                          "items": {
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/condition-node-nested.yaml"
                                      }
                                    },
                                    "conditionNodeId": {
                                      "description": "Unique identifier for each condition node taken from the test catalog template.",
                                      "minimum": 0,
                                      "readOnly": true,
                                      "type": "integer"
                                    },
                                    "values": {
                                      "description": "List of values selected from the condition node or input supported by the node.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/condition-node.yaml"
                                  }
                                },
                                "conditionId": {
                                  "description": "Unique identifier for each condition.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "createdBy": {
                                  "description": "Username who created the condition.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the condition was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the condition.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the condition was last deleted.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the condition.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-condition-response.yaml"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-conditions-response.yaml"
                            }
                          }
                        }
                      }
                    },
                    "requirements": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "description": "Contains requirements created in your organization.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about a requirement.",
                              "type": "object",
                              "required": [
                                "requirementId",
                                "requirementName",
                                "createdBy",
                                "createdDate",
                                "modifiedBy",
                                "modifiedDate"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "Username who created the requirement.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the requirement was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the requirement.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the requirement was last deleted.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the requirement.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the requirement was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "references": {
                                  "description": "Contains information about external reference providing more details about the requirement.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                      "referenceTitle"
                                    ],
                                    "properties": {
                                      "referenceTitle": {
                                        "description": "Title of the external reference.",
                                        "maxLength": 100,
                                        "minLength": 0,
                                        "type": "string"
                                      },
                                      "referenceUrl": {
                                        "description": "URL of the reference. For example, a ticket in your ticketing system with the request for the config changes.",
                                        "maxLength": 2048,
                                        "minLength": 0,
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "requirementDescription": {
                                  "description": "Description of the requirement.",
                                  "maxLength": 4000,
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "requirementId": {
                                  "description": "Unique identifier for each requirement.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "requirementName": {
                                  "description": "Name of the requirement.",
                                  "maxLength": 100,
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-requirement-response.yaml"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-requirements-response.yaml"
                            }
                          }
                        }
                      }
                    },
                    "testCases": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "description": "Contains functional test cases created in your organization.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about the functional test cases and included objects: conditions, test requests, and client profiles.",
                              "type": "object",
                              "required": [
                                "testCaseId",
                                "clientProfile",
                                "testRequest",
                                "condition",
                                "createdBy",
                                "createdDate",
                                "modifiedBy",
                                "modifiedDate"
                              ],
                              "properties": {
                                "clientProfile": {
                                  "additionalProperties": false,
                                  "description": "Contains information about the included client profile.",
                                  "type": "object",
                                  "required": [
                                    "clientProfileId",
                                    "browser",
                                    "geoLocation",
                                    "ipVersion"
                                  ],
                                  "properties": {
                                    "browser": {
                                      "additionalProperties": false,
                                      "description": "Contains information about the real browser used to execute the functional test case.",
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "version"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "Name of the browser used to run functional test cases.",
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "version": {
                                          "description": "Version of the browser used to run functional test cases.",
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "clientProfileId": {
                                      "description": "Unique identifier of the client profile.",
                                      "minimum": 0,
                                      "type": "integer"
                                    },
                                    "geoLocation": {
                                      "description": "Geographic region for which the functional test cases using this client profile would execute. The only currently available value is `us` for United States.",
                                      "type": "string",
                                      "enum": [
                                        "us"
                                      ]
                                    },
                                    "ipVersion": {
                                      "description": "IP versions for which the functional test cases using this client profile are run, either `ipv4` or `ipv6`.",
                                      "type": "string",
                                      "enum": [
                                        "ipv4",
                                        "ipv6"
                                      ]
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-client-profile-response.yaml"
                                  }
                                },
                                "condition": {
                                  "additionalProperties": false,
                                  "description": "Contains information about the included condition.",
                                  "type": "object",
                                  "required": [
                                    "conditionId",
                                    "condition",
                                    "createdBy",
                                    "createdDate",
                                    "modifiedBy",
                                    "modifiedDate"
                                  ],
                                  "properties": {
                                    "condition": {
                                      "additionalProperties": false,
                                      "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                                      "type": "object",
                                      "required": [
                                        "conditionNodeId",
                                        "values"
                                      ],
                                      "properties": {
                                        "conditionNode": {
                                          "additionalProperties": false,
                                          "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                                          "type": "object",
                                          "required": [
                                            "conditionNodeId",
                                            "values"
                                          ],
                                          "properties": {
                                            "conditionNode": {
                                              "type": "object"
                                            },
                                            "conditionNodeId": {
                                              "minimum": 0,
                                              "readOnly": true,
                                              "type": "integer"
                                            },
                                            "values": {
                                              "minItems": 0,
                                              "type": "array",
                                              "items": {
                                                "minLength": 1,
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/condition-node-nested.yaml"
                                          }
                                        },
                                        "conditionNodeId": {
                                          "description": "Unique identifier for each condition node taken from the test catalog template.",
                                          "minimum": 0,
                                          "readOnly": true,
                                          "type": "integer"
                                        },
                                        "values": {
                                          "description": "List of values selected from the condition node or input supported by the node.",
                                          "minItems": 0,
                                          "type": "array",
                                          "items": {
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/condition-node.yaml"
                                      }
                                    },
                                    "conditionId": {
                                      "description": "Unique identifier for each condition.",
                                      "minimum": 1,
                                      "type": "integer"
                                    },
                                    "createdBy": {
                                      "description": "Username who created the condition.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "createdDate": {
                                      "description": "ISO 8601 timestamp indicating when the condition was created.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "deletedBy": {
                                      "description": "Username who last deleted the condition.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "deletedDate": {
                                      "description": "ISO 8601 timestamp indicating when the condition was last deleted.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "modifiedBy": {
                                      "description": "Username who last modified the condition.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "modifiedDate": {
                                      "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                                      "format": "date-time",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-condition-response.yaml"
                                  }
                                },
                                "createdBy": {
                                  "description": "Username who created the functional test case.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the functional test case was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the functional test case.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the functional test case was last deleted.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the functional test case.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the functional test case was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "testCaseId": {
                                  "description": "Unique identifier for each functional test case.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "testRequest": {
                                  "additionalProperties": false,
                                  "description": "Contains information about the included test request.",
                                  "type": "object",
                                  "required": [
                                    "testRequestId",
                                    "testRequestUrl",
                                    "createdBy",
                                    "createdDate",
                                    "modifiedBy",
                                    "modifiedDate"
                                  ],
                                  "properties": {
                                    "createdBy": {
                                      "description": "Username who created the test request.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "createdDate": {
                                      "description": "ISO 8601 timestamp indicating when the test request was created.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "deletedBy": {
                                      "description": "Username who last deleted the test request.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "deletedDate": {
                                      "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "modifiedBy": {
                                      "description": "Username who last modified the test request.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "modifiedDate": {
                                      "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "requestHeaders": {
                                      "description": "Contains information about request headers included in the functional test case.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "type": "object",
                                        "required": [
                                          "headerName",
                                          "headerValue",
                                          "headerAction"
                                        ],
                                        "properties": {
                                          "headerAction": {
                                            "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                                            "type": "string",
                                            "enum": [
                                              "add",
                                              "modify",
                                              "filter"
                                            ]
                                          },
                                          "headerName": {
                                            "description": "Name of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "headerValue": {
                                            "description": "Value of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "tags": {
                                      "description": "Keywords associated with the test request.",
                                      "maxItems": 50,
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "testRequestId": {
                                      "description": "Unique identifier for each test request.",
                                      "minimum": 1,
                                      "type": "integer"
                                    },
                                    "testRequestUrl": {
                                      "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                                      "format": "uri",
                                      "maxLength": 2048,
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-test-request-response.yaml"
                                  }
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-functional-test-case-response.yaml"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-functional-test-cases-response.yaml"
                            }
                          }
                        }
                      }
                    },
                    "testRequests": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "description": "Contains test requests created in your organization.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about a test request.",
                              "type": "object",
                              "required": [
                                "testRequestId",
                                "testRequestUrl",
                                "createdBy",
                                "createdDate",
                                "modifiedBy",
                                "modifiedDate"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "Username who created the test request.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the test request was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the test request.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the test request.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "requestHeaders": {
                                  "description": "Contains information about request headers included in the functional test case.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                      "headerName",
                                      "headerValue",
                                      "headerAction"
                                    ],
                                    "properties": {
                                      "headerAction": {
                                        "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                                        "type": "string",
                                        "enum": [
                                          "add",
                                          "modify",
                                          "filter"
                                        ]
                                      },
                                      "headerName": {
                                        "description": "Name of the request header.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "headerValue": {
                                        "description": "Value of the request header.",
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "tags": {
                                  "description": "Keywords associated with the test request.",
                                  "maxItems": 50,
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                },
                                "testRequestId": {
                                  "description": "Unique identifier for each test request.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "testRequestUrl": {
                                  "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                                  "format": "uri",
                                  "maxLength": 2048,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-test-request-response.yaml"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-test-requests-response.yaml"
                            }
                          }
                        }
                      }
                    },
                    "testSuites": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "description": "Contains test suites created in your organization.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about a test suite.",
                              "type": "object",
                              "required": [
                                "testSuiteId",
                                "testSuiteName",
                                "locked",
                                "stateful",
                                "createdBy",
                                "createdDate",
                                "modifiedBy",
                                "modifiedDate"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "Username who created the test suite.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the test suite was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the test suite.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the test suite was last deleted.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "locked": {
                                  "description": "Whether the test suite is locked. If it's locked, only designated owners or editors can modify it.",
                                  "type": "boolean"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the test suite.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the test suite was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "stateful": {
                                  "description": "Whether the test suite is run statefully. If a test suite is run statefully, cookies and session information are retained for subsequent test cases within the test suite.",
                                  "type": "boolean"
                                },
                                "testSuiteDescription": {
                                  "description": "Description of the test suite.",
                                  "maxLength": 4000,
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "testSuiteId": {
                                  "description": "Unique identifier for each test suite.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "testSuiteName": {
                                  "description": "Unique name of the test suite.",
                                  "maxLength": 100,
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-test-suite-response.yaml"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-test-suites-response.yaml"
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getRestoredRequirementsResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Whether to restore the test suite with included functional test cases, test requests, and conditions. It's `false` by default.",
            "example": "{{restoreChildResources}}",
            "in": "query",
            "name": "restoreChildResources",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/restoreChildResources-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each requirement.",
          "example": "{{requirementId}}",
          "in": "path",
          "name": "requirementId",
          "required": true,
          "schema": {
            "example": 22,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/requirementId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-case-executions/{testCaseExecutionId}/raw-request-response": {
      "get": {
        "description": "Returns transaction details for a URL of the test request in functional testing.",
        "operationId": "get-test-case-execution-raw-request-response",
        "summary": "Get transaction details for a functional test case",
        "tags": [
          "Executions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-case-execution-raw-request-response"
        },
        "responses": {
          "200": {
            "description": "The response provides transaction details.",
            "content": {
              "application/json": {
                "example": {
                  "request": {
                    "bodySize": 0,
                    "comment": "",
                    "headersSize": 658,
                    "httpVersion": "HTTP/1.1",
                    "method": "GET",
                    "url": "http://www.atcuser3.akamaiu.com/catalog/view/theme/akamai/image/icon_currency.png",
                    "cookies": [],
                    "queryString": [],
                    "headers": [
                      {
                        "name": "Host",
                        "value": "www.atcuser3.akamaiu.com"
                      }
                    ]
                  },
                  "response": {
                    "bodySize": 738,
                    "comment": "",
                    "headersSize": 2147,
                    "httpVersion": "HTTP/1.1",
                    "redirectURL": "",
                    "status": 200,
                    "statusText": "OK",
                    "cookies": [],
                    "content": {
                      "comment": "",
                      "compression": 0,
                      "mimeType": "image/png",
                      "size": 0,
                      "text": null
                    },
                    "headers": [
                      {
                        "name": "Server",
                        "value": "Apache/2.4.7 (Ubuntu)"
                      },
                      {
                        "name": "Connection",
                        "value": "keep-alive"
                      }
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains a raw request and response for a functional test case.",
                  "type": "object",
                  "required": [
                    "request",
                    "response"
                  ],
                  "properties": {
                    "request": {
                      "additionalProperties": false,
                      "description": "Contains a raw request for a functional test case.",
                      "type": "object",
                      "required": [
                        "method",
                        "url",
                        "httpVersion",
                        "cookies",
                        "headers",
                        "queryString",
                        "headerSize",
                        "bodySize",
                        "comment"
                      ],
                      "properties": {
                        "bodySize": {
                          "description": "Size of the body of the request.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "comment": {
                          "description": "Comments for the request.",
                          "minLength": 0,
                          "type": "string"
                        },
                        "cookies": {
                          "description": "Request cookies.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "headerSize": {
                          "description": "Header size of the request.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "headers": {
                          "description": "Contains information about standard and customized headers of the request.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                              "name",
                              "value"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name of the customized header.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "value": {
                                "description": "Value of the customized header.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "httpVersion": {
                          "description": "HTTP version of the request.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "method": {
                          "description": "Standard HTTP method. Possible values are: `GET`, `POST`, `DELETE`, `PUT`, or `PATCH`.",
                          "type": "string",
                          "enum": [
                            "GET",
                            "POST",
                            "DELETE",
                            "PUT",
                            "PATCH"
                          ]
                        },
                        "queryString": {
                          "description": "Contains query strings of the request.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "url": {
                          "description": "URL of the request.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/get-test-url-request.yaml"
                      }
                    },
                    "response": {
                      "additionalProperties": false,
                      "description": "Contains a raw response for a functional test case.",
                      "type": "object",
                      "required": [
                        "status",
                        "statusText",
                        "httpVersion",
                        "cookies",
                        "headers",
                        "content",
                        "redirectURL",
                        "headerSize",
                        "bodySize",
                        "comment"
                      ],
                      "properties": {
                        "bodySize": {
                          "description": "Size of the body of the response in bytes.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "comment": {
                          "description": "Comments to the response.",
                          "minLength": 0,
                          "type": "string"
                        },
                        "content": {
                          "additionalProperties": false,
                          "description": "Contains information about content-type header of the response.",
                          "type": "object",
                          "required": [
                            "size",
                            "mimeType",
                            "comment",
                            "text",
                            "compression"
                          ],
                          "properties": {
                            "comment": {
                              "description": "Comments about the resource.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "compression": {
                              "description": "Compression applied to the resource.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "mimeType": {
                              "description": "Media type of the resource.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "size": {
                              "description": "Size of the resource in bytes.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "text": {
                              "description": "Text of the resource.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        },
                        "cookies": {
                          "description": "Response cookies.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "headerSize": {
                          "description": "Header size of the response.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "headers": {
                          "description": "Contains information about headers of the response.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                              "name",
                              "value"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name of the response header.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "value": {
                                "description": "Value of the response header.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "httpVersion": {
                          "description": "HTTP version of the response.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "redirectURL": {
                          "description": "Redirection URL of the response.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "status": {
                          "description": "HTTP status code of the response.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "statusText": {
                          "description": "HTTP status code text of the response.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/get-test-url-response.yaml"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getRawRequestResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each functional test case execution.",
          "example": "{{testCaseExecutionId}}",
          "in": "path",
          "name": "testCaseExecutionId",
          "required": true,
          "schema": {
            "example": 22,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testCaseExecutionId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-cases": {
      "post": {
        "description": "Creates a list of new functional test cases. Each test case consists of a test request, client profile, and condition. The operation responds with a [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses) that consists of two arrays, `successes` and `failures`. The `successes` array consists of successfully created objects, whereas the `failures` array provides details on any remainders that failed.",
        "operationId": "post-test-cases",
        "summary": "Create functional test cases",
        "tags": [
          "Test cases"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-cases"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Contains information about the functional test cases and unique identifiers of included objects: conditions, test requests, and client profiles.",
                "minItems": 1,
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "testRequestId",
                    "conditionId",
                    "clientProfileId"
                  ],
                  "properties": {
                    "clientProfileId": {
                      "description": "Unique identifier for each included client profile.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "conditionId": {
                      "description": "Unique identifier for each included condition.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "testRequestId": {
                      "description": "Unique identifier for each included test request.",
                      "minimum": 1,
                      "type": "integer"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/create-functional-test-case-request.yaml"
                }
              },
              "example": [
                {
                  "clientProfileId": 1,
                  "conditionId": 47,
                  "testRequestId": 59
                },
                {
                  "clientProfileId": 1,
                  "conditionId": 47,
                  "testRequestId": 59111
                }
              ]
            }
          }
        },
        "responses": {
          "207": {
            "description": "[Partial success responses](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "failures": [
                    {
                      "requestField": "testRequestId",
                      "title": "Resource not found",
                      "type": "resource.not.found",
                      "requestValues": [
                        59111
                      ]
                    }
                  ],
                  "successes": [
                    {
                      "createdBy": "szhang",
                      "createdDate": "2020-01-07T06:25:07+0000",
                      "modifiedBy": "jkowalski",
                      "modifiedDate": "2020-01-07T06:25:07+0000",
                      "testCaseId": 301,
                      "clientProfile": {
                        "clientProfileId": 2,
                        "geoLocation": "US",
                        "ipVersion": "ipv4",
                        "browser": {
                          "name": "chrome",
                          "version": "72"
                        }
                      },
                      "condition": {
                        "conditionId": 47,
                        "createdBy": "tyamada",
                        "createdDate": "2019-12-15T04:30:46+0000",
                        "modifiedBy": "adevi",
                        "modifiedDate": "2020-01-06T19:58:52+0000",
                        "condition": {
                          "conditionNodeId": 1,
                          "values": [
                            "response_header"
                          ],
                          "conditionNode": {
                            "conditionNodeId": 4,
                            "values": [
                              "Content-Type"
                            ],
                            "conditionNode": {
                              "conditionNodeId": 5,
                              "values": [
                                "has_a_value"
                              ],
                              "conditionNode": {
                                "conditionNodeId": 7,
                                "values": [
                                  "ends_with"
                                ],
                                "conditionNode": {
                                  "conditionNodeId": 4,
                                  "values": [
                                    "json"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      },
                      "testRequest": {
                        "createdBy": "jperez",
                        "createdDate": "2019-12-31T08:52:57+0000",
                        "modifiedBy": "szhang",
                        "modifiedDate": "2020-01-03T09:26:09+0000",
                        "testRequestId": 59,
                        "testRequestUrl": "https://www.atcuser8.akamaiu.com/?abc=1234555",
                        "requestHeaders": [
                          {
                            "headerAction": "add",
                            "headerName": "Accept",
                            "headerValues": "v1"
                          }
                        ]
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Response for creating functional test cases.",
                  "type": "object",
                  "required": [
                    "failures",
                    "successes"
                  ],
                  "properties": {
                    "failures": {
                      "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Functional test cases that already exist.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about the functional test cases and included objects: conditions, test requests, and client profiles.",
                              "type": "object",
                              "required": [
                                "testCaseId",
                                "clientProfile",
                                "testRequest",
                                "condition",
                                "createdBy",
                                "createdDate",
                                "modifiedBy",
                                "modifiedDate"
                              ],
                              "properties": {
                                "clientProfile": {
                                  "additionalProperties": false,
                                  "description": "Contains information about the included client profile.",
                                  "type": "object",
                                  "required": [
                                    "clientProfileId",
                                    "browser",
                                    "geoLocation",
                                    "ipVersion"
                                  ],
                                  "properties": {
                                    "browser": {
                                      "additionalProperties": false,
                                      "description": "Contains information about the real browser used to execute the functional test case.",
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "version"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "Name of the browser used to run functional test cases.",
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "version": {
                                          "description": "Version of the browser used to run functional test cases.",
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "clientProfileId": {
                                      "description": "Unique identifier of the client profile.",
                                      "minimum": 0,
                                      "type": "integer"
                                    },
                                    "geoLocation": {
                                      "description": "Geographic region for which the functional test cases using this client profile would execute. The only currently available value is `us` for United States.",
                                      "type": "string",
                                      "enum": [
                                        "us"
                                      ]
                                    },
                                    "ipVersion": {
                                      "description": "IP versions for which the functional test cases using this client profile are run, either `ipv4` or `ipv6`.",
                                      "type": "string",
                                      "enum": [
                                        "ipv4",
                                        "ipv6"
                                      ]
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-client-profile-response.yaml"
                                  }
                                },
                                "condition": {
                                  "additionalProperties": false,
                                  "description": "Contains information about the included condition.",
                                  "type": "object",
                                  "required": [
                                    "conditionId",
                                    "condition",
                                    "createdBy",
                                    "createdDate",
                                    "modifiedBy",
                                    "modifiedDate"
                                  ],
                                  "properties": {
                                    "condition": {
                                      "additionalProperties": false,
                                      "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                                      "type": "object",
                                      "required": [
                                        "conditionNodeId",
                                        "values"
                                      ],
                                      "properties": {
                                        "conditionNode": {
                                          "additionalProperties": false,
                                          "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                                          "type": "object",
                                          "required": [
                                            "conditionNodeId",
                                            "values"
                                          ],
                                          "properties": {
                                            "conditionNode": {
                                              "type": "object"
                                            },
                                            "conditionNodeId": {
                                              "minimum": 0,
                                              "readOnly": true,
                                              "type": "integer"
                                            },
                                            "values": {
                                              "minItems": 0,
                                              "type": "array",
                                              "items": {
                                                "minLength": 1,
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/condition-node-nested.yaml"
                                          }
                                        },
                                        "conditionNodeId": {
                                          "description": "Unique identifier for each condition node taken from the test catalog template.",
                                          "minimum": 0,
                                          "readOnly": true,
                                          "type": "integer"
                                        },
                                        "values": {
                                          "description": "List of values selected from the condition node or input supported by the node.",
                                          "minItems": 0,
                                          "type": "array",
                                          "items": {
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/condition-node.yaml"
                                      }
                                    },
                                    "conditionId": {
                                      "description": "Unique identifier for each condition.",
                                      "minimum": 1,
                                      "type": "integer"
                                    },
                                    "createdBy": {
                                      "description": "Username who created the condition.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "createdDate": {
                                      "description": "ISO 8601 timestamp indicating when the condition was created.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "deletedBy": {
                                      "description": "Username who last deleted the condition.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "deletedDate": {
                                      "description": "ISO 8601 timestamp indicating when the condition was last deleted.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "modifiedBy": {
                                      "description": "Username who last modified the condition.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "modifiedDate": {
                                      "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                                      "format": "date-time",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-condition-response.yaml"
                                  }
                                },
                                "createdBy": {
                                  "description": "Username who created the functional test case.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the functional test case was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the functional test case.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the functional test case was last deleted.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the functional test case.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the functional test case was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "testCaseId": {
                                  "description": "Unique identifier for each functional test case.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "testRequest": {
                                  "additionalProperties": false,
                                  "description": "Contains information about the included test request.",
                                  "type": "object",
                                  "required": [
                                    "testRequestId",
                                    "testRequestUrl",
                                    "createdBy",
                                    "createdDate",
                                    "modifiedBy",
                                    "modifiedDate"
                                  ],
                                  "properties": {
                                    "createdBy": {
                                      "description": "Username who created the test request.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "createdDate": {
                                      "description": "ISO 8601 timestamp indicating when the test request was created.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "deletedBy": {
                                      "description": "Username who last deleted the test request.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "deletedDate": {
                                      "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "modifiedBy": {
                                      "description": "Username who last modified the test request.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "modifiedDate": {
                                      "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "requestHeaders": {
                                      "description": "Contains information about request headers included in the functional test case.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "type": "object",
                                        "required": [
                                          "headerName",
                                          "headerValue",
                                          "headerAction"
                                        ],
                                        "properties": {
                                          "headerAction": {
                                            "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                                            "type": "string",
                                            "enum": [
                                              "add",
                                              "modify",
                                              "filter"
                                            ]
                                          },
                                          "headerName": {
                                            "description": "Name of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "headerValue": {
                                            "description": "Value of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "tags": {
                                      "description": "Keywords associated with the test request.",
                                      "maxItems": 50,
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "testRequestId": {
                                      "description": "Unique identifier for each test request.",
                                      "minimum": 1,
                                      "type": "integer"
                                    },
                                    "testRequestUrl": {
                                      "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                                      "format": "uri",
                                      "maxLength": 2048,
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-test-request-response.yaml"
                                  }
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-functional-test-case-response.yaml"
                              }
                            }
                          },
                          "requestField": {
                            "description": "Request field name. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Request objects that were invalid.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "description": "Contains information about the functional test cases and unique identifiers of included objects: conditions, test requests, and client profiles.",
                              "minItems": 1,
                              "type": "array",
                              "uniqueItems": true,
                              "items": {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "testRequestId",
                                  "conditionId",
                                  "clientProfileId"
                                ],
                                "properties": {
                                  "clientProfileId": {
                                    "description": "Unique identifier for each included client profile.",
                                    "minimum": 1,
                                    "type": "integer"
                                  },
                                  "conditionId": {
                                    "description": "Unique identifier for each included condition.",
                                    "minimum": 1,
                                    "type": "integer"
                                  },
                                  "testRequestId": {
                                    "description": "Unique identifier for each included test request.",
                                    "minimum": 1,
                                    "type": "integer"
                                  }
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/create-functional-test-case-request.yaml"
                              }
                            }
                          },
                          "requestValues": {
                            "description": "Request field values.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "successes": {
                      "description": "Contains a list of unique identifiers of functional test cases created successfully together with details about included objects.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information about the functional test cases and included objects: conditions, test requests, and client profiles.",
                        "type": "object",
                        "required": [
                          "testCaseId",
                          "clientProfile",
                          "testRequest",
                          "condition",
                          "createdBy",
                          "createdDate",
                          "modifiedBy",
                          "modifiedDate"
                        ],
                        "properties": {
                          "clientProfile": {
                            "additionalProperties": false,
                            "description": "Contains information about the included client profile.",
                            "type": "object",
                            "required": [
                              "clientProfileId",
                              "browser",
                              "geoLocation",
                              "ipVersion"
                            ],
                            "properties": {
                              "browser": {
                                "additionalProperties": false,
                                "description": "Contains information about the real browser used to execute the functional test case.",
                                "type": "object",
                                "required": [
                                  "name",
                                  "version"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name of the browser used to run functional test cases.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "version": {
                                    "description": "Version of the browser used to run functional test cases.",
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                }
                              },
                              "clientProfileId": {
                                "description": "Unique identifier of the client profile.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "geoLocation": {
                                "description": "Geographic region for which the functional test cases using this client profile would execute. The only currently available value is `us` for United States.",
                                "type": "string",
                                "enum": [
                                  "us"
                                ]
                              },
                              "ipVersion": {
                                "description": "IP versions for which the functional test cases using this client profile are run, either `ipv4` or `ipv6`.",
                                "type": "string",
                                "enum": [
                                  "ipv4",
                                  "ipv6"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-client-profile-response.yaml"
                            }
                          },
                          "condition": {
                            "additionalProperties": false,
                            "description": "Contains information about the included condition.",
                            "type": "object",
                            "required": [
                              "conditionId",
                              "condition",
                              "createdBy",
                              "createdDate",
                              "modifiedBy",
                              "modifiedDate"
                            ],
                            "properties": {
                              "condition": {
                                "additionalProperties": false,
                                "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                                "type": "object",
                                "required": [
                                  "conditionNodeId",
                                  "values"
                                ],
                                "properties": {
                                  "conditionNode": {
                                    "additionalProperties": false,
                                    "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                                    "type": "object",
                                    "required": [
                                      "conditionNodeId",
                                      "values"
                                    ],
                                    "properties": {
                                      "conditionNode": {
                                        "type": "object"
                                      },
                                      "conditionNodeId": {
                                        "minimum": 0,
                                        "readOnly": true,
                                        "type": "integer"
                                      },
                                      "values": {
                                        "minItems": 0,
                                        "type": "array",
                                        "items": {
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-akamai": {
                                      "file-path": "schemas/condition-node-nested.yaml"
                                    }
                                  },
                                  "conditionNodeId": {
                                    "description": "Unique identifier for each condition node taken from the test catalog template.",
                                    "minimum": 0,
                                    "readOnly": true,
                                    "type": "integer"
                                  },
                                  "values": {
                                    "description": "List of values selected from the condition node or input supported by the node.",
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/condition-node.yaml"
                                }
                              },
                              "conditionId": {
                                "description": "Unique identifier for each condition.",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "createdBy": {
                                "description": "Username who created the condition.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "createdDate": {
                                "description": "ISO 8601 timestamp indicating when the condition was created.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "deletedBy": {
                                "description": "Username who last deleted the condition.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "deletedDate": {
                                "description": "ISO 8601 timestamp indicating when the condition was last deleted.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "modifiedBy": {
                                "description": "Username who last modified the condition.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "modifiedDate": {
                                "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-condition-response.yaml"
                            }
                          },
                          "createdBy": {
                            "description": "Username who created the functional test case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the functional test case was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "deletedBy": {
                            "description": "Username who last deleted the functional test case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "deletedDate": {
                            "description": "ISO 8601 timestamp indicating when the functional test case was last deleted.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "modifiedBy": {
                            "description": "Username who last modified the functional test case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "modifiedDate": {
                            "description": "ISO 8601 timestamp indicating when the functional test case was last modified.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "testCaseId": {
                            "description": "Unique identifier for each functional test case.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "testRequest": {
                            "additionalProperties": false,
                            "description": "Contains information about the included test request.",
                            "type": "object",
                            "required": [
                              "testRequestId",
                              "testRequestUrl",
                              "createdBy",
                              "createdDate",
                              "modifiedBy",
                              "modifiedDate"
                            ],
                            "properties": {
                              "createdBy": {
                                "description": "Username who created the test request.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "createdDate": {
                                "description": "ISO 8601 timestamp indicating when the test request was created.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "deletedBy": {
                                "description": "Username who last deleted the test request.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "deletedDate": {
                                "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "modifiedBy": {
                                "description": "Username who last modified the test request.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "modifiedDate": {
                                "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "requestHeaders": {
                                "description": "Contains information about request headers included in the functional test case.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "required": [
                                    "headerName",
                                    "headerValue",
                                    "headerAction"
                                  ],
                                  "properties": {
                                    "headerAction": {
                                      "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                                      "type": "string",
                                      "enum": [
                                        "add",
                                        "modify",
                                        "filter"
                                      ]
                                    },
                                    "headerName": {
                                      "description": "Name of the request header.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "headerValue": {
                                      "description": "Value of the request header.",
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "tags": {
                                "description": "Keywords associated with the test request.",
                                "maxItems": 50,
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "testRequestId": {
                                "description": "Unique identifier for each test request.",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "testRequestUrl": {
                                "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                                "format": "uri",
                                "maxLength": 2048,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-test-request-response.yaml"
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/get-functional-test-case-response.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/createTestCaseResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists functional test cases created in your organization. The list can also include deleted test cases that you can restore. The response is an array of objects, each keyed by `testCaseId`.",
        "operationId": "get-test-cases",
        "summary": "List functional test cases",
        "tags": [
          "Test cases"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-cases"
        },
        "responses": {
          "200": {
            "description": "The response lists test cases.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Contains functional test cases created in your organization.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Contains information about the functional test cases and included objects: conditions, test requests, and client profiles.",
                    "type": "object",
                    "required": [
                      "testCaseId",
                      "clientProfile",
                      "testRequest",
                      "condition",
                      "createdBy",
                      "createdDate",
                      "modifiedBy",
                      "modifiedDate"
                    ],
                    "properties": {
                      "clientProfile": {
                        "additionalProperties": false,
                        "description": "Contains information about the included client profile.",
                        "type": "object",
                        "required": [
                          "clientProfileId",
                          "browser",
                          "geoLocation",
                          "ipVersion"
                        ],
                        "properties": {
                          "browser": {
                            "additionalProperties": false,
                            "description": "Contains information about the real browser used to execute the functional test case.",
                            "type": "object",
                            "required": [
                              "name",
                              "version"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name of the browser used to run functional test cases.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "version": {
                                "description": "Version of the browser used to run functional test cases.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "clientProfileId": {
                            "description": "Unique identifier of the client profile.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "geoLocation": {
                            "description": "Geographic region for which the functional test cases using this client profile would execute. The only currently available value is `us` for United States.",
                            "type": "string",
                            "enum": [
                              "us"
                            ]
                          },
                          "ipVersion": {
                            "description": "IP versions for which the functional test cases using this client profile are run, either `ipv4` or `ipv6`.",
                            "type": "string",
                            "enum": [
                              "ipv4",
                              "ipv6"
                            ]
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/get-client-profile-response.yaml"
                        }
                      },
                      "condition": {
                        "additionalProperties": false,
                        "description": "Contains information about the included condition.",
                        "type": "object",
                        "required": [
                          "conditionId",
                          "condition",
                          "createdBy",
                          "createdDate",
                          "modifiedBy",
                          "modifiedDate"
                        ],
                        "properties": {
                          "condition": {
                            "additionalProperties": false,
                            "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                            "type": "object",
                            "required": [
                              "conditionNodeId",
                              "values"
                            ],
                            "properties": {
                              "conditionNode": {
                                "additionalProperties": false,
                                "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                                "type": "object",
                                "required": [
                                  "conditionNodeId",
                                  "values"
                                ],
                                "properties": {
                                  "conditionNode": {
                                    "type": "object"
                                  },
                                  "conditionNodeId": {
                                    "minimum": 0,
                                    "readOnly": true,
                                    "type": "integer"
                                  },
                                  "values": {
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/condition-node-nested.yaml"
                                }
                              },
                              "conditionNodeId": {
                                "description": "Unique identifier for each condition node taken from the test catalog template.",
                                "minimum": 0,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "values": {
                                "description": "List of values selected from the condition node or input supported by the node.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/condition-node.yaml"
                            }
                          },
                          "conditionId": {
                            "description": "Unique identifier for each condition.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "createdBy": {
                            "description": "Username who created the condition.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the condition was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "deletedBy": {
                            "description": "Username who last deleted the condition.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "deletedDate": {
                            "description": "ISO 8601 timestamp indicating when the condition was last deleted.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "modifiedBy": {
                            "description": "Username who last modified the condition.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "modifiedDate": {
                            "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/get-condition-response.yaml"
                        }
                      },
                      "createdBy": {
                        "description": "Username who created the functional test case.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 timestamp indicating when the functional test case was created.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "deletedBy": {
                        "description": "Username who last deleted the functional test case.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "deletedDate": {
                        "description": "ISO 8601 timestamp indicating when the functional test case was last deleted.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "modifiedBy": {
                        "description": "Username who last modified the functional test case.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "ISO 8601 timestamp indicating when the functional test case was last modified.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "testCaseId": {
                        "description": "Unique identifier for each functional test case.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "testRequest": {
                        "additionalProperties": false,
                        "description": "Contains information about the included test request.",
                        "type": "object",
                        "required": [
                          "testRequestId",
                          "testRequestUrl",
                          "createdBy",
                          "createdDate",
                          "modifiedBy",
                          "modifiedDate"
                        ],
                        "properties": {
                          "createdBy": {
                            "description": "Username who created the test request.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the test request was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "deletedBy": {
                            "description": "Username who last deleted the test request.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "deletedDate": {
                            "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "modifiedBy": {
                            "description": "Username who last modified the test request.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "modifiedDate": {
                            "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "requestHeaders": {
                            "description": "Contains information about request headers included in the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "headerName",
                                "headerValue",
                                "headerAction"
                              ],
                              "properties": {
                                "headerAction": {
                                  "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                                  "type": "string",
                                  "enum": [
                                    "add",
                                    "modify",
                                    "filter"
                                  ]
                                },
                                "headerName": {
                                  "description": "Name of the request header.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "headerValue": {
                                  "description": "Value of the request header.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "tags": {
                            "description": "Keywords associated with the test request.",
                            "maxItems": 50,
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "testRequestId": {
                            "description": "Unique identifier for each test request.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "testRequestUrl": {
                            "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                            "format": "uri",
                            "maxLength": 2048,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/get-test-request-response.yaml"
                        }
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/get-functional-test-case-response.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestCasesResponse.yaml"
                  }
                },
                "example": [
                  {
                    "createdBy": "jsmith",
                    "createdDate": "2020-01-07T06:25:07+0000",
                    "modifiedBy": "jperez",
                    "modifiedDate": "2020-01-07T06:25:07+0000",
                    "testCaseId": 301,
                    "clientProfile": {
                      "clientProfileId": 2,
                      "geoLocation": "us",
                      "ipVersion": "ipv4",
                      "browser": {
                        "name": "chrome",
                        "version": "72"
                      }
                    },
                    "condition": {
                      "conditionId": 47,
                      "createdBy": "mrossi",
                      "createdDate": "2019-12-15T04:30:46+0000",
                      "modifiedBy": "jperez",
                      "modifiedDate": "2020-01-06T19:58:52+0000",
                      "condition": {
                        "conditionNodeId": 1,
                        "values": [
                          "response_header"
                        ],
                        "conditionNode": {
                          "conditionNodeId": 4,
                          "values": [
                            "Content-Type"
                          ],
                          "conditionNode": {
                            "conditionNodeId": 5,
                            "values": [
                              "has_a_value"
                            ],
                            "conditionNode": {
                              "conditionNodeId": 7,
                              "values": [
                                "ends_with"
                              ],
                              "conditionNode": {
                                "conditionNodeId": 4,
                                "values": [
                                  "json"
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "testRequest": {
                      "createdBy": "alfulani",
                      "createdDate": "2019-12-31T08:52:57+0000",
                      "modifiedBy": "adevi",
                      "modifiedDate": "2020-01-03T09:26:09+0000",
                      "testRequestId": 59,
                      "testRequestUrl": "https://www.atcuser8.akamaiu.com/?abc=1234555",
                      "requestHeaders": [
                        {
                          "headerAction": "add",
                          "headerName": "Accept",
                          "headerValues": "v1"
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Whether to list any items deleted within the last 30 days that you can restore. It's `false` by default.",
            "example": "{{includeRecentlyDeleted}}",
            "in": "query",
            "name": "includeRecentlyDeleted",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/includeRecentlyDeleted-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/functional/test-cases/clone": {
      "post": {
        "description": "Clones a list of functional test cases. To clone a functional test case, you need to modify at least one included object: condition, test request, or client profile. Test Center changes only the objects included in the request. Those not included in the request are taken from the source functional test cases. The operation responds with a [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses) that consists of two arrays: `successes` and `failures`. The `successes` array lists all successfully cloned objects, whereas the `failures` array provides details on any remainders that failed.",
        "operationId": "post-test-cases-clone",
        "summary": "Clone functional test cases",
        "tags": [
          "Test cases"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-cases-clone"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Contains information about functional test cases and included objects you want to clone.",
                "minItems": 1,
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "additionalProperties": false,
                  "description": "Contains information about functional test cases you want to clone. To clone them, you need to change at least one included object, a test request, a condition, or a client profile. See [Default values](https://techdocs.akamai.com/test-ctr/reference/default-values).",
                  "type": "object",
                  "required": [
                    "testCaseId"
                  ],
                  "properties": {
                    "clientProfileId": {
                      "description": "Identifies any other client profile you want to specify instead of the one in the test case you're cloning. If not provided, then the cloned functional test case uses the original client profile.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "conditionId": {
                      "description": "Identifies any other condition you want to specify instead of the one in the test case you're cloning. If not provided, then the cloned functional test case uses the original condition.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "testCaseId": {
                      "description": "Unique identifier for each functional test case you want to clone.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "testRequestId": {
                      "description": "Identifies any other test request you want to specify instead of the one in the test case you're cloning. If not provided, then the cloned functional test case uses the original test request.",
                      "minimum": 1,
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/clone-functional-test-case-request-object.yaml"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/cloneTestCaseRequest.yaml"
                }
              },
              "example": [
                {
                  "clientProfileId": 2,
                  "testCaseId": 301
                },
                {
                  "conditionId": 47,
                  "testCaseId": 308
                }
              ]
            }
          }
        },
        "responses": {
          "207": {
            "description": "[Partial success responses](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "failures": [
                    {
                      "requestField": "testCaseId",
                      "title": "Resource not found",
                      "type": "resource.not.found",
                      "requestValues": [
                        308
                      ]
                    }
                  ],
                  "successes": [
                    {
                      "createdBy": "alfulani",
                      "createdDate": "2020-01-07T06:25:07+0000",
                      "modifiedBy": "jperez",
                      "modifiedDate": "2020-01-07T06:25:07+0000",
                      "testCaseId": 303,
                      "clientProfile": {
                        "clientProfileId": 2,
                        "geoLocation": "US",
                        "ipVersion": "ipv4",
                        "browser": {
                          "name": "chrome",
                          "version": "72"
                        }
                      },
                      "condition": {
                        "conditionId": 47,
                        "createdBy": "tyamada",
                        "createdDate": "2019-12-15T04:30:46+0000",
                        "modifiedBy": "jsmith",
                        "modifiedDate": "2020-01-06T19:58:52+0000",
                        "condition": {
                          "conditionNodeId": 1,
                          "values": [
                            "response_header"
                          ],
                          "conditionNode": {
                            "conditionNodeId": 4,
                            "values": [
                              "Content-Type"
                            ],
                            "conditionNode": {
                              "conditionNodeId": 5,
                              "values": [
                                "has_a_value"
                              ],
                              "conditionNode": {
                                "conditionNodeId": 7,
                                "values": [
                                  "ends_with"
                                ],
                                "conditionNode": {
                                  "conditionNodeId": 4,
                                  "values": [
                                    "json"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      },
                      "testRequest": {
                        "createdBy": "jperez",
                        "createdDate": "2019-12-31T08:52:57+0000",
                        "modifiedBy": "jsmith",
                        "modifiedDate": "2020-01-03T09:26:09+0000",
                        "testRequestId": 59,
                        "testRequestUrl": "https://www.atcuser8.akamaiu.com/?abc=1234555",
                        "requestHeaders": [
                          {
                            "headerAction": "add",
                            "headerName": "Accept",
                            "headerValues": "v1"
                          }
                        ]
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Response for cloning the functional test cases.",
                  "type": "object",
                  "required": [
                    "failures",
                    "successes"
                  ],
                  "properties": {
                    "failures": {
                      "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items that weren't cloned.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Objects included within the functional test case.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about the functional test cases and included objects: conditions, test requests, and client profiles.",
                              "type": "object",
                              "required": [
                                "testCaseId",
                                "clientProfile",
                                "testRequest",
                                "condition",
                                "createdBy",
                                "createdDate",
                                "modifiedBy",
                                "modifiedDate"
                              ],
                              "properties": {
                                "clientProfile": {
                                  "additionalProperties": false,
                                  "description": "Contains information about the included client profile.",
                                  "type": "object",
                                  "required": [
                                    "clientProfileId",
                                    "browser",
                                    "geoLocation",
                                    "ipVersion"
                                  ],
                                  "properties": {
                                    "browser": {
                                      "additionalProperties": false,
                                      "description": "Contains information about the real browser used to execute the functional test case.",
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "version"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "Name of the browser used to run functional test cases.",
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "version": {
                                          "description": "Version of the browser used to run functional test cases.",
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "clientProfileId": {
                                      "description": "Unique identifier of the client profile.",
                                      "minimum": 0,
                                      "type": "integer"
                                    },
                                    "geoLocation": {
                                      "description": "Geographic region for which the functional test cases using this client profile would execute. The only currently available value is `us` for United States.",
                                      "type": "string",
                                      "enum": [
                                        "us"
                                      ]
                                    },
                                    "ipVersion": {
                                      "description": "IP versions for which the functional test cases using this client profile are run, either `ipv4` or `ipv6`.",
                                      "type": "string",
                                      "enum": [
                                        "ipv4",
                                        "ipv6"
                                      ]
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-client-profile-response.yaml"
                                  }
                                },
                                "condition": {
                                  "additionalProperties": false,
                                  "description": "Contains information about the included condition.",
                                  "type": "object",
                                  "required": [
                                    "conditionId",
                                    "condition",
                                    "createdBy",
                                    "createdDate",
                                    "modifiedBy",
                                    "modifiedDate"
                                  ],
                                  "properties": {
                                    "condition": {
                                      "additionalProperties": false,
                                      "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                                      "type": "object",
                                      "required": [
                                        "conditionNodeId",
                                        "values"
                                      ],
                                      "properties": {
                                        "conditionNode": {
                                          "additionalProperties": false,
                                          "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                                          "type": "object",
                                          "required": [
                                            "conditionNodeId",
                                            "values"
                                          ],
                                          "properties": {
                                            "conditionNode": {
                                              "type": "object"
                                            },
                                            "conditionNodeId": {
                                              "minimum": 0,
                                              "readOnly": true,
                                              "type": "integer"
                                            },
                                            "values": {
                                              "minItems": 0,
                                              "type": "array",
                                              "items": {
                                                "minLength": 1,
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/condition-node-nested.yaml"
                                          }
                                        },
                                        "conditionNodeId": {
                                          "description": "Unique identifier for each condition node taken from the test catalog template.",
                                          "minimum": 0,
                                          "readOnly": true,
                                          "type": "integer"
                                        },
                                        "values": {
                                          "description": "List of values selected from the condition node or input supported by the node.",
                                          "minItems": 0,
                                          "type": "array",
                                          "items": {
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/condition-node.yaml"
                                      }
                                    },
                                    "conditionId": {
                                      "description": "Unique identifier for each condition.",
                                      "minimum": 1,
                                      "type": "integer"
                                    },
                                    "createdBy": {
                                      "description": "Username who created the condition.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "createdDate": {
                                      "description": "ISO 8601 timestamp indicating when the condition was created.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "deletedBy": {
                                      "description": "Username who last deleted the condition.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "deletedDate": {
                                      "description": "ISO 8601 timestamp indicating when the condition was last deleted.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "modifiedBy": {
                                      "description": "Username who last modified the condition.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "modifiedDate": {
                                      "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                                      "format": "date-time",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-condition-response.yaml"
                                  }
                                },
                                "createdBy": {
                                  "description": "Username who created the functional test case.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the functional test case was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the functional test case.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the functional test case was last deleted.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the functional test case.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the functional test case was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "testCaseId": {
                                  "description": "Unique identifier for each functional test case.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "testRequest": {
                                  "additionalProperties": false,
                                  "description": "Contains information about the included test request.",
                                  "type": "object",
                                  "required": [
                                    "testRequestId",
                                    "testRequestUrl",
                                    "createdBy",
                                    "createdDate",
                                    "modifiedBy",
                                    "modifiedDate"
                                  ],
                                  "properties": {
                                    "createdBy": {
                                      "description": "Username who created the test request.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "createdDate": {
                                      "description": "ISO 8601 timestamp indicating when the test request was created.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "deletedBy": {
                                      "description": "Username who last deleted the test request.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "deletedDate": {
                                      "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "modifiedBy": {
                                      "description": "Username who last modified the test request.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "modifiedDate": {
                                      "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "requestHeaders": {
                                      "description": "Contains information about request headers included in the functional test case.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "type": "object",
                                        "required": [
                                          "headerName",
                                          "headerValue",
                                          "headerAction"
                                        ],
                                        "properties": {
                                          "headerAction": {
                                            "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                                            "type": "string",
                                            "enum": [
                                              "add",
                                              "modify",
                                              "filter"
                                            ]
                                          },
                                          "headerName": {
                                            "description": "Name of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "headerValue": {
                                            "description": "Value of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "tags": {
                                      "description": "Keywords associated with the test request.",
                                      "maxItems": 50,
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "testRequestId": {
                                      "description": "Unique identifier for each test request.",
                                      "minimum": 1,
                                      "type": "integer"
                                    },
                                    "testRequestUrl": {
                                      "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                                      "format": "uri",
                                      "maxLength": 2048,
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-test-request-response.yaml"
                                  }
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-functional-test-case-response.yaml"
                              }
                            }
                          },
                          "requestField": {
                            "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Request objects that were invalid.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about functional test cases you want to clone. To clone them, you need to change at least one included object, a test request, a condition, or a client profile. See [Default values](https://techdocs.akamai.com/test-ctr/reference/default-values).",
                              "type": "object",
                              "required": [
                                "testCaseId"
                              ],
                              "properties": {
                                "clientProfileId": {
                                  "description": "Identifies any other client profile you want to specify instead of the one in the test case you're cloning. If not provided, then the cloned functional test case uses the original client profile.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "conditionId": {
                                  "description": "Identifies any other condition you want to specify instead of the one in the test case you're cloning. If not provided, then the cloned functional test case uses the original condition.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "testCaseId": {
                                  "description": "Unique identifier for each functional test case you want to clone.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "testRequestId": {
                                  "description": "Identifies any other test request you want to specify instead of the one in the test case you're cloning. If not provided, then the cloned functional test case uses the original test request.",
                                  "minimum": 1,
                                  "type": "integer"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/clone-functional-test-case-request-object.yaml"
                              }
                            }
                          },
                          "requestValues": {
                            "description": "Value of `requestField`.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "successes": {
                      "description": "List of unique identifiers of successfully cloned functional test cases. Includes objects within them and their details.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information about the functional test cases and included objects: conditions, test requests, and client profiles.",
                        "type": "object",
                        "required": [
                          "testCaseId",
                          "clientProfile",
                          "testRequest",
                          "condition",
                          "createdBy",
                          "createdDate",
                          "modifiedBy",
                          "modifiedDate"
                        ],
                        "properties": {
                          "clientProfile": {
                            "additionalProperties": false,
                            "description": "Contains information about the included client profile.",
                            "type": "object",
                            "required": [
                              "clientProfileId",
                              "browser",
                              "geoLocation",
                              "ipVersion"
                            ],
                            "properties": {
                              "browser": {
                                "additionalProperties": false,
                                "description": "Contains information about the real browser used to execute the functional test case.",
                                "type": "object",
                                "required": [
                                  "name",
                                  "version"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name of the browser used to run functional test cases.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "version": {
                                    "description": "Version of the browser used to run functional test cases.",
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                }
                              },
                              "clientProfileId": {
                                "description": "Unique identifier of the client profile.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "geoLocation": {
                                "description": "Geographic region for which the functional test cases using this client profile would execute. The only currently available value is `us` for United States.",
                                "type": "string",
                                "enum": [
                                  "us"
                                ]
                              },
                              "ipVersion": {
                                "description": "IP versions for which the functional test cases using this client profile are run, either `ipv4` or `ipv6`.",
                                "type": "string",
                                "enum": [
                                  "ipv4",
                                  "ipv6"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-client-profile-response.yaml"
                            }
                          },
                          "condition": {
                            "additionalProperties": false,
                            "description": "Contains information about the included condition.",
                            "type": "object",
                            "required": [
                              "conditionId",
                              "condition",
                              "createdBy",
                              "createdDate",
                              "modifiedBy",
                              "modifiedDate"
                            ],
                            "properties": {
                              "condition": {
                                "additionalProperties": false,
                                "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                                "type": "object",
                                "required": [
                                  "conditionNodeId",
                                  "values"
                                ],
                                "properties": {
                                  "conditionNode": {
                                    "additionalProperties": false,
                                    "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                                    "type": "object",
                                    "required": [
                                      "conditionNodeId",
                                      "values"
                                    ],
                                    "properties": {
                                      "conditionNode": {
                                        "type": "object"
                                      },
                                      "conditionNodeId": {
                                        "minimum": 0,
                                        "readOnly": true,
                                        "type": "integer"
                                      },
                                      "values": {
                                        "minItems": 0,
                                        "type": "array",
                                        "items": {
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-akamai": {
                                      "file-path": "schemas/condition-node-nested.yaml"
                                    }
                                  },
                                  "conditionNodeId": {
                                    "description": "Unique identifier for each condition node taken from the test catalog template.",
                                    "minimum": 0,
                                    "readOnly": true,
                                    "type": "integer"
                                  },
                                  "values": {
                                    "description": "List of values selected from the condition node or input supported by the node.",
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/condition-node.yaml"
                                }
                              },
                              "conditionId": {
                                "description": "Unique identifier for each condition.",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "createdBy": {
                                "description": "Username who created the condition.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "createdDate": {
                                "description": "ISO 8601 timestamp indicating when the condition was created.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "deletedBy": {
                                "description": "Username who last deleted the condition.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "deletedDate": {
                                "description": "ISO 8601 timestamp indicating when the condition was last deleted.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "modifiedBy": {
                                "description": "Username who last modified the condition.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "modifiedDate": {
                                "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-condition-response.yaml"
                            }
                          },
                          "createdBy": {
                            "description": "Username who created the functional test case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the functional test case was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "deletedBy": {
                            "description": "Username who last deleted the functional test case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "deletedDate": {
                            "description": "ISO 8601 timestamp indicating when the functional test case was last deleted.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "modifiedBy": {
                            "description": "Username who last modified the functional test case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "modifiedDate": {
                            "description": "ISO 8601 timestamp indicating when the functional test case was last modified.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "testCaseId": {
                            "description": "Unique identifier for each functional test case.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "testRequest": {
                            "additionalProperties": false,
                            "description": "Contains information about the included test request.",
                            "type": "object",
                            "required": [
                              "testRequestId",
                              "testRequestUrl",
                              "createdBy",
                              "createdDate",
                              "modifiedBy",
                              "modifiedDate"
                            ],
                            "properties": {
                              "createdBy": {
                                "description": "Username who created the test request.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "createdDate": {
                                "description": "ISO 8601 timestamp indicating when the test request was created.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "deletedBy": {
                                "description": "Username who last deleted the test request.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "deletedDate": {
                                "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "modifiedBy": {
                                "description": "Username who last modified the test request.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "modifiedDate": {
                                "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "requestHeaders": {
                                "description": "Contains information about request headers included in the functional test case.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "required": [
                                    "headerName",
                                    "headerValue",
                                    "headerAction"
                                  ],
                                  "properties": {
                                    "headerAction": {
                                      "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                                      "type": "string",
                                      "enum": [
                                        "add",
                                        "modify",
                                        "filter"
                                      ]
                                    },
                                    "headerName": {
                                      "description": "Name of the request header.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "headerValue": {
                                      "description": "Value of the request header.",
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "tags": {
                                "description": "Keywords associated with the test request.",
                                "maxItems": 50,
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "testRequestId": {
                                "description": "Unique identifier for each test request.",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "testRequestUrl": {
                                "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                                "format": "uri",
                                "maxLength": 2048,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-test-request-response.yaml"
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/get-functional-test-case-response.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/cloneTestCaseResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/functional/test-cases/{testCaseId}": {
      "get": {
        "description": "Returns details of a functional test case.",
        "operationId": "get-test-case",
        "summary": "Get a functional test case",
        "tags": [
          "Test cases"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-case"
        },
        "responses": {
          "200": {
            "description": "The response provides test case details.",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about the functional test cases and included objects: conditions, test requests, and client profiles.",
                  "type": "object",
                  "required": [
                    "testCaseId",
                    "clientProfile",
                    "testRequest",
                    "condition",
                    "createdBy",
                    "createdDate",
                    "modifiedBy",
                    "modifiedDate"
                  ],
                  "properties": {
                    "clientProfile": {
                      "additionalProperties": false,
                      "description": "Contains information about the included client profile.",
                      "type": "object",
                      "required": [
                        "clientProfileId",
                        "browser",
                        "geoLocation",
                        "ipVersion"
                      ],
                      "properties": {
                        "browser": {
                          "additionalProperties": false,
                          "description": "Contains information about the real browser used to execute the functional test case.",
                          "type": "object",
                          "required": [
                            "name",
                            "version"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the browser used to run functional test cases.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "version": {
                              "description": "Version of the browser used to run functional test cases.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        },
                        "clientProfileId": {
                          "description": "Unique identifier of the client profile.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "geoLocation": {
                          "description": "Geographic region for which the functional test cases using this client profile would execute. The only currently available value is `us` for United States.",
                          "type": "string",
                          "enum": [
                            "us"
                          ]
                        },
                        "ipVersion": {
                          "description": "IP versions for which the functional test cases using this client profile are run, either `ipv4` or `ipv6`.",
                          "type": "string",
                          "enum": [
                            "ipv4",
                            "ipv6"
                          ]
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/get-client-profile-response.yaml"
                      }
                    },
                    "condition": {
                      "additionalProperties": false,
                      "description": "Contains information about the included condition.",
                      "type": "object",
                      "required": [
                        "conditionId",
                        "condition",
                        "createdBy",
                        "createdDate",
                        "modifiedBy",
                        "modifiedDate"
                      ],
                      "properties": {
                        "condition": {
                          "additionalProperties": false,
                          "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                          "type": "object",
                          "required": [
                            "conditionNodeId",
                            "values"
                          ],
                          "properties": {
                            "conditionNode": {
                              "additionalProperties": false,
                              "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                              "type": "object",
                              "required": [
                                "conditionNodeId",
                                "values"
                              ],
                              "properties": {
                                "conditionNode": {
                                  "type": "object"
                                },
                                "conditionNodeId": {
                                  "minimum": 0,
                                  "readOnly": true,
                                  "type": "integer"
                                },
                                "values": {
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/condition-node-nested.yaml"
                              }
                            },
                            "conditionNodeId": {
                              "description": "Unique identifier for each condition node taken from the test catalog template.",
                              "minimum": 0,
                              "readOnly": true,
                              "type": "integer"
                            },
                            "values": {
                              "description": "List of values selected from the condition node or input supported by the node.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/condition-node.yaml"
                          }
                        },
                        "conditionId": {
                          "description": "Unique identifier for each condition.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "createdBy": {
                          "description": "Username who created the condition.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "createdDate": {
                          "description": "ISO 8601 timestamp indicating when the condition was created.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "deletedBy": {
                          "description": "Username who last deleted the condition.",
                          "minLength": 0,
                          "type": "string"
                        },
                        "deletedDate": {
                          "description": "ISO 8601 timestamp indicating when the condition was last deleted.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "modifiedBy": {
                          "description": "Username who last modified the condition.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "modifiedDate": {
                          "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/get-condition-response.yaml"
                      }
                    },
                    "createdBy": {
                      "description": "Username who created the functional test case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the functional test case was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the functional test case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the functional test case was last deleted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the functional test case.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the functional test case was last modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "testCaseId": {
                      "description": "Unique identifier for each functional test case.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "testRequest": {
                      "additionalProperties": false,
                      "description": "Contains information about the included test request.",
                      "type": "object",
                      "required": [
                        "testRequestId",
                        "testRequestUrl",
                        "createdBy",
                        "createdDate",
                        "modifiedBy",
                        "modifiedDate"
                      ],
                      "properties": {
                        "createdBy": {
                          "description": "Username who created the test request.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "createdDate": {
                          "description": "ISO 8601 timestamp indicating when the test request was created.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "deletedBy": {
                          "description": "Username who last deleted the test request.",
                          "minLength": 0,
                          "type": "string"
                        },
                        "deletedDate": {
                          "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "modifiedBy": {
                          "description": "Username who last modified the test request.",
                          "minLength": 0,
                          "type": "string"
                        },
                        "modifiedDate": {
                          "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "requestHeaders": {
                          "description": "Contains information about request headers included in the functional test case.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                              "headerName",
                              "headerValue",
                              "headerAction"
                            ],
                            "properties": {
                              "headerAction": {
                                "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                                "type": "string",
                                "enum": [
                                  "add",
                                  "modify",
                                  "filter"
                                ]
                              },
                              "headerName": {
                                "description": "Name of the request header.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "headerValue": {
                                "description": "Value of the request header.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "tags": {
                          "description": "Keywords associated with the test request.",
                          "maxItems": 50,
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "testRequestId": {
                          "description": "Unique identifier for each test request.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "testRequestUrl": {
                          "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                          "format": "uri",
                          "maxLength": 2048,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/get-test-request-response.yaml"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-functional-test-case-response.yaml"
                  }
                },
                "example": [
                  {
                    "createdBy": "tyamada",
                    "createdDate": "2020-01-07T06:25:07+0000",
                    "modifiedBy": "jkowalski",
                    "modifiedDate": "2020-01-07T06:25:07+0000",
                    "testCaseId": 301,
                    "clientProfile": {
                      "clientProfileId": 2,
                      "geoLocation": "us",
                      "ipVersion": "ipv4",
                      "browser": {
                        "name": "chrome",
                        "version": "72"
                      }
                    },
                    "condition": {
                      "conditionId": 47,
                      "createdBy": "szhang",
                      "createdDate": "2019-12-15T04:30:46+0000",
                      "modifiedBy": "jsmith",
                      "modifiedDate": "2020-01-06T19:58:52+0000",
                      "condition": {
                        "conditionNodeId": 1,
                        "values": [
                          "response_header"
                        ],
                        "conditionNode": {
                          "conditionNodeId": 4,
                          "values": [
                            "Content-Type"
                          ],
                          "conditionNode": {
                            "conditionNodeId": 5,
                            "values": [
                              "has_a_value"
                            ],
                            "conditionNode": {
                              "conditionNodeId": 7,
                              "values": [
                                "ends_with"
                              ],
                              "conditionNode": {
                                "conditionNodeId": 4,
                                "values": [
                                  "json"
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "testRequest": {
                      "createdBy": "tyamada",
                      "createdDate": "2019-12-31T08:52:57+0000",
                      "modifiedBy": "szhang",
                      "modifiedDate": "2020-01-03T09:26:09+0000",
                      "testRequestId": 59,
                      "testRequestUrl": "https://www.atcuser8.akamaiu.com/?abc=1234555",
                      "requestHeaders": [
                        {
                          "headerAction": "add",
                          "headerName": "Accept",
                          "headerValues": "v1"
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates a functional test case. For optional, modifiable request members that you don't include in the request Test Center uses default values.",
        "operationId": "put-test-case",
        "summary": "Update a functional test case",
        "tags": [
          "Test cases"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/put-test-case"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "clientProfileId": 1,
                "conditionId": 47,
                "testRequestId": 59
              },
              "schema": {
                "additionalProperties": false,
                "description": "Contains information about the functional test cases and included objects: conditions, test requests, and client profiles.",
                "type": "object",
                "required": [
                  "testRequestId",
                  "conditionId",
                  "clientProfileId"
                ],
                "properties": {
                  "clientProfileId": {
                    "description": "Unique identifier for each included client profile.",
                    "example": "{{clientProfileId}}",
                    "minimum": 1,
                    "type": "integer"
                  },
                  "conditionId": {
                    "description": "Unique identifier for each included condition.",
                    "example": "{{conditionId}}",
                    "minimum": 1,
                    "type": "integer"
                  },
                  "testRequestId": {
                    "description": "Unique identifier for each included test request.",
                    "example": "{{testRequestId}}",
                    "minimum": 1,
                    "type": "integer"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/update-functional-test-case-request.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response returns the updated test case.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "szhang",
                  "createdDate": "2020-01-07T06:25:07+0000",
                  "modifiedBy": "mrossi",
                  "modifiedDate": "2020-01-07T06:53:24+0000",
                  "testCaseId": 301,
                  "clientProfile": {
                    "clientProfileId": 1,
                    "geoLocation": "US",
                    "ipVersion": "ipv6",
                    "browser": {
                      "name": "chrome",
                      "version": "72"
                    }
                  },
                  "condition": {
                    "conditionId": 47,
                    "createdBy": "mrossi",
                    "createdDate": "2019-12-15T04:30:46+0000",
                    "modifiedBy": "szhang",
                    "modifiedDate": "2020-01-06T19:58:52+0000",
                    "condition": {
                      "conditionNodeId": 1,
                      "values": [
                        "response_header"
                      ],
                      "conditionNode": {
                        "conditionNodeId": 4,
                        "values": [
                          "Content-Type"
                        ],
                        "conditionNode": {
                          "conditionNodeId": 5,
                          "values": [
                            "has_a_value"
                          ],
                          "conditionNode": {
                            "conditionNodeId": 7,
                            "values": [
                              "ends_with"
                            ],
                            "conditionNode": {
                              "conditionNodeId": 4,
                              "values": [
                                "json"
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "testRequest": {
                    "createdBy": "adevi",
                    "createdDate": "2019-12-31T08:52:57+0000",
                    "modifiedBy": "jperez",
                    "modifiedDate": "2020-01-03T09:26:09+0000",
                    "testRequestId": 59,
                    "testRequestUrl": "https://www.atcuser8.akamaiu.com/?abc=123",
                    "tags": [],
                    "requestHeaders": [
                      {
                        "headerAction": "add",
                        "headerName": "Accept",
                        "headerValues": "v1"
                      }
                    ]
                  }
                },
                "schema": {
                  "description": "Contains functional test cases created in your organization.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Contains information about the functional test cases and included objects: conditions, test requests, and client profiles.",
                    "type": "object",
                    "required": [
                      "testCaseId",
                      "clientProfile",
                      "testRequest",
                      "condition",
                      "createdBy",
                      "createdDate",
                      "modifiedBy",
                      "modifiedDate"
                    ],
                    "properties": {
                      "clientProfile": {
                        "additionalProperties": false,
                        "description": "Contains information about the included client profile.",
                        "type": "object",
                        "required": [
                          "clientProfileId",
                          "browser",
                          "geoLocation",
                          "ipVersion"
                        ],
                        "properties": {
                          "browser": {
                            "additionalProperties": false,
                            "description": "Contains information about the real browser used to execute the functional test case.",
                            "type": "object",
                            "required": [
                              "name",
                              "version"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name of the browser used to run functional test cases.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "version": {
                                "description": "Version of the browser used to run functional test cases.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "clientProfileId": {
                            "description": "Unique identifier of the client profile.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "geoLocation": {
                            "description": "Geographic region for which the functional test cases using this client profile would execute. The only currently available value is `us` for United States.",
                            "type": "string",
                            "enum": [
                              "us"
                            ]
                          },
                          "ipVersion": {
                            "description": "IP versions for which the functional test cases using this client profile are run, either `ipv4` or `ipv6`.",
                            "type": "string",
                            "enum": [
                              "ipv4",
                              "ipv6"
                            ]
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/get-client-profile-response.yaml"
                        }
                      },
                      "condition": {
                        "additionalProperties": false,
                        "description": "Contains information about the included condition.",
                        "type": "object",
                        "required": [
                          "conditionId",
                          "condition",
                          "createdBy",
                          "createdDate",
                          "modifiedBy",
                          "modifiedDate"
                        ],
                        "properties": {
                          "condition": {
                            "additionalProperties": false,
                            "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                            "type": "object",
                            "required": [
                              "conditionNodeId",
                              "values"
                            ],
                            "properties": {
                              "conditionNode": {
                                "additionalProperties": false,
                                "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                                "type": "object",
                                "required": [
                                  "conditionNodeId",
                                  "values"
                                ],
                                "properties": {
                                  "conditionNode": {
                                    "type": "object"
                                  },
                                  "conditionNodeId": {
                                    "minimum": 0,
                                    "readOnly": true,
                                    "type": "integer"
                                  },
                                  "values": {
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/condition-node-nested.yaml"
                                }
                              },
                              "conditionNodeId": {
                                "description": "Unique identifier for each condition node taken from the test catalog template.",
                                "minimum": 0,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "values": {
                                "description": "List of values selected from the condition node or input supported by the node.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/condition-node.yaml"
                            }
                          },
                          "conditionId": {
                            "description": "Unique identifier for each condition.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "createdBy": {
                            "description": "Username who created the condition.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the condition was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "deletedBy": {
                            "description": "Username who last deleted the condition.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "deletedDate": {
                            "description": "ISO 8601 timestamp indicating when the condition was last deleted.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "modifiedBy": {
                            "description": "Username who last modified the condition.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "modifiedDate": {
                            "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/get-condition-response.yaml"
                        }
                      },
                      "createdBy": {
                        "description": "Username who created the functional test case.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 timestamp indicating when the functional test case was created.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "deletedBy": {
                        "description": "Username who last deleted the functional test case.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "deletedDate": {
                        "description": "ISO 8601 timestamp indicating when the functional test case was last deleted.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "modifiedBy": {
                        "description": "Username who last modified the functional test case.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "ISO 8601 timestamp indicating when the functional test case was last modified.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "testCaseId": {
                        "description": "Unique identifier for each functional test case.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "testRequest": {
                        "additionalProperties": false,
                        "description": "Contains information about the included test request.",
                        "type": "object",
                        "required": [
                          "testRequestId",
                          "testRequestUrl",
                          "createdBy",
                          "createdDate",
                          "modifiedBy",
                          "modifiedDate"
                        ],
                        "properties": {
                          "createdBy": {
                            "description": "Username who created the test request.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the test request was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "deletedBy": {
                            "description": "Username who last deleted the test request.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "deletedDate": {
                            "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "modifiedBy": {
                            "description": "Username who last modified the test request.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "modifiedDate": {
                            "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "requestHeaders": {
                            "description": "Contains information about request headers included in the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "headerName",
                                "headerValue",
                                "headerAction"
                              ],
                              "properties": {
                                "headerAction": {
                                  "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                                  "type": "string",
                                  "enum": [
                                    "add",
                                    "modify",
                                    "filter"
                                  ]
                                },
                                "headerName": {
                                  "description": "Name of the request header.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "headerValue": {
                                  "description": "Value of the request header.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "tags": {
                            "description": "Keywords associated with the test request.",
                            "maxItems": 50,
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "testRequestId": {
                            "description": "Unique identifier for each test request.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "testRequestUrl": {
                            "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                            "format": "uri",
                            "maxLength": 2048,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/get-test-request-response.yaml"
                        }
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/get-functional-test-case-response.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-functional-test-cases-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Deletes a functional test case. You can delete either a functional test case or a functional test case with all included objects. The operation has three possible outcomes. When `deleteChildResources` is `false`, the operation responds with the 200 status. When `deleteChildResources` is `true`, the operation responds with the [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses). Regardless of the `deleteChildResources` value, the operation responds with a 4xx status if the deletion can't be processed. You can [restore](https://techdocs.akamai.com/test-ctr/reference/post-test-case-restore) test cases within 30 days of deleting them.",
        "operationId": "delete-test-case",
        "summary": "Delete a functional test case",
        "tags": [
          "Test cases"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/delete-test-case"
        },
        "responses": {
          "200": {
            "description": "The response returns details of the deleted test case.",
            "content": {
              "application/json": {
                "example": {
                  "testCases": {
                    "failures": [],
                    "successes": [
                      301
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains a unique identifier of the config version deleted successfully or details about failure of the operation.",
                  "type": "object",
                  "required": [
                    "testCases"
                  ],
                  "properties": {
                    "testCases": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minimum": 0,
                            "type": "integer"
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getFunctionalDeletedTestCaseResponse.yaml"
                  }
                }
              }
            }
          },
          "207": {
            "description": "[Partial success responses](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "conditions": {
                    "failures": [],
                    "successes": [
                      3566
                    ]
                  },
                  "testCases": {
                    "failures": [],
                    "successes": [
                      301
                    ]
                  },
                  "testRequests": {
                    "failures": [],
                    "successes": [
                      4853
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Lists unique identifiers of the functional test case and included objects, conditions and test requests, deleted successfully or details about failed operations.",
                  "type": "object",
                  "required": [
                    "testCases",
                    "testRequests",
                    "conditions"
                  ],
                  "properties": {
                    "conditions": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minimum": 0,
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "testCases": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minimum": 0,
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "testRequests": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minimum": 0,
                            "type": "integer"
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getFunctionalDeletedTestCasesResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Whether to delete the test suite with included functional test cases, test requests, and conditions. It's `false` by default.",
            "example": "{{deleteChildResources}}",
            "in": "query",
            "name": "deleteChildResources",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/deleteChildResources-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each functional test case.",
          "example": "{{testCaseId}}",
          "in": "path",
          "name": "testCaseId",
          "required": true,
          "schema": {
            "example": 301,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testCaseId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-cases/{testCaseId}/associations/test-suites": {
      "get": {
        "description": "Lists all test suites that include a functional test case. The response is an array of objects, each keyed by `testSuiteId`.",
        "operationId": "get-test-case-associations-test-suites",
        "summary": "List test suites with a functional test case",
        "tags": [
          "Test cases"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-case-associations-test-suites"
        },
        "responses": {
          "200": {
            "description": "The response list test suites.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Contains test suites created in your organization.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Contains information about a test suite.",
                    "type": "object",
                    "required": [
                      "testSuiteId",
                      "testSuiteName",
                      "locked",
                      "stateful",
                      "createdBy",
                      "createdDate",
                      "modifiedBy",
                      "modifiedDate"
                    ],
                    "properties": {
                      "createdBy": {
                        "description": "Username who created the test suite.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 timestamp indicating when the test suite was created.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "deletedBy": {
                        "description": "Username who last deleted the test suite.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "deletedDate": {
                        "description": "ISO 8601 timestamp indicating when the test suite was last deleted.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "locked": {
                        "description": "Whether the test suite is locked. If it's locked, only designated owners or editors can modify it.",
                        "type": "boolean"
                      },
                      "modifiedBy": {
                        "description": "Username who last modified the test suite.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "ISO 8601 timestamp indicating when the test suite was last modified.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "stateful": {
                        "description": "Whether the test suite is run statefully. If a test suite is run statefully, cookies and session information are retained for subsequent test cases within the test suite.",
                        "type": "boolean"
                      },
                      "testSuiteDescription": {
                        "description": "Description of the test suite.",
                        "maxLength": 4000,
                        "minLength": 0,
                        "type": "string"
                      },
                      "testSuiteId": {
                        "description": "Unique identifier for each test suite.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "testSuiteName": {
                        "description": "Unique name of the test suite.",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/get-test-suite-response.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-test-suites-response.yaml"
                  }
                },
                "example": [
                  {
                    "createdBy": "hgildong",
                    "createdDate": "2019-10-30T12:09:37+0000",
                    "locked": false,
                    "modifiedBy": "jkowalski",
                    "modifiedDate": "2019-10-30T12:09:37+0000",
                    "stateful": false,
                    "testSuiteDescription": "This test suite performs basic check of www.atcuser8.akamaiu.com",
                    "testSuiteId": 284,
                    "testSuiteName": "www.atcuser8.akamaiu.com test suite"
                  },
                  {
                    "createdBy": "szhang",
                    "createdDate": "2019-11-06T23:37:23+0000",
                    "locked": false,
                    "modifiedBy": "tyamada",
                    "modifiedDate": "2019-11-11T09:55:05+0000",
                    "stateful": false,
                    "testSuiteDescription": "This test suite validates caching of images used in www.atcuser8.akamaiu.com",
                    "testSuiteId": 317,
                    "testSuiteName": "www.atcuser8.akamaiu.com images test suite"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each functional test case.",
          "example": "{{testCaseId}}",
          "in": "path",
          "name": "testCaseId",
          "required": true,
          "schema": {
            "example": 301,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testCaseId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-cases/{testCaseId}/associations/test-suites/associate": {
      "post": {
        "description": "Assigns a test suite to a functional test case. You can include a test case in only one test suite. To use the same test case in a different test suite, [create](https://techdocs.akamai.com/test-ctr/reference/post-test-cases) the same functional test case again and [include](https://techdocs.akamai.com/test-ctr/reference/post-test-suite-associations-test-cases-associate) it in another test suite. The operation responds with a [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses) that consists of two arrays, `successes` and `failures`. The `successes` array lists unique identifiers of test suites assigned successfully, whereas the `failures` array provides details on any remainders that failed.",
        "operationId": "post-test-case-associations-test-suites-associate",
        "summary": "Assign test suites to a functional test case",
        "tags": [
          "Test cases"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-case-associations-test-suites-associate"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": [
                77,
                122
              ],
              "schema": {
                "description": "Test suites IDs you want to assign to a test case.",
                "minLength": 1,
                "type": "string",
                "x-akamai": {
                  "file-path": "schemas/post-test-case-associations-test-suites-associate-request.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "[Partial success responses](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "successes": [
                    77
                  ],
                  "failures": [
                    {
                      "requestField": "testSuiteId",
                      "title": "Resource not found",
                      "type": "resource.not.found",
                      "requestValues": [
                        122
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains a list of unique identifiers of associated or dissociated test suites.",
                  "type": "object",
                  "required": [
                    "failures",
                    "successes"
                  ],
                  "properties": {
                    "failures": {
                      "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "requestField": {
                            "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestValues": {
                            "description": "Request field values.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "successes": {
                      "description": "List of unique identifiers of successfully associated or dissociated test suites.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minimum": 0,
                        "type": "integer"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/testSuitesAssociationResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each functional test case.",
          "example": "{{testCaseId}}",
          "in": "path",
          "name": "testCaseId",
          "required": true,
          "schema": {
            "example": 301,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testCaseId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-cases/{testCaseId}/associations/test-suites/dissociate": {
      "post": {
        "description": "Removes a list of test suites from a functional test case. The operation responds with a [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses) that consists of two arrays, `successes` and `failures`. The `successes` array lists unique identifiers of test suites removed successfully, whereas the `failures` array provides details on any remainders that failed.",
        "operationId": "post-test-case-associations-test-suites-dissociate",
        "summary": "Remove test suites from a functional test case",
        "tags": [
          "Test cases"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-case-associations-test-suites-dissociate"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": [
                77,
                122
              ],
              "schema": {
                "description": "Test suites IDs you want to remove from a test case.",
                "minLength": 1,
                "type": "string",
                "x-akamai": {
                  "file-path": "schemas/post-test-case-associations-test-suites-dissociate-request.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "[Partial success responses](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "successes": [
                    77
                  ],
                  "failures": [
                    {
                      "requestField": "testSuiteId",
                      "title": "Resource not found",
                      "type": "resource.not.found",
                      "requestValues": [
                        122
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains a list of unique identifiers of associated or dissociated test suites.",
                  "type": "object",
                  "required": [
                    "failures",
                    "successes"
                  ],
                  "properties": {
                    "failures": {
                      "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "requestField": {
                            "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestValues": {
                            "description": "Request field values.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "successes": {
                      "description": "List of unique identifiers of successfully associated or dissociated test suites.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minimum": 0,
                        "type": "integer"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/testSuitesAssociationResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each functional test case.",
          "example": "{{testCaseId}}",
          "in": "path",
          "name": "testCaseId",
          "required": true,
          "schema": {
            "example": 301,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testCaseId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-cases/{testCaseId}/restore": {
      "post": {
        "description": "Restores a deleted functional test case. You can restore either an empty functional test case or a functional test case together with all the included objects, test requests, and conditions. The operation has three possible outcomes. When `restoreChildResources` is `false`, a 200 response provides the restored object in the `successes` array. When `restoreChildResources` is `true`, the operation responds with the [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses) and various objects in the appropriate `successes` or `failures` arrays. Regardless of the `restoreChildResources` value, if there's a problem with restoring the functional test case object, the operation responds with a 4xx status.",
        "operationId": "post-test-case-restore",
        "summary": "Restore a functional test case",
        "tags": [
          "Test cases"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-case-restore"
        },
        "responses": {
          "200": {
            "description": "The response returns the restored test case.",
            "content": {
              "application/json": {
                "example": {
                  "testCases": {
                    "failures": [],
                    "successes": [
                      {
                        "createdBy": "hgildong",
                        "createdDate": "2020-09-18T06:02:54+0000",
                        "modifiedBy": "hgildong",
                        "modifiedDate": "2020-09-18T09:04:35+0000",
                        "testCaseId": 301,
                        "clientProfile": {
                          "clientProfileId": 2,
                          "geoLocation": "us",
                          "ipVersion": "ipv4",
                          "browser": {
                            "name": "chrome",
                            "version": "65.0"
                          }
                        },
                        "condition": {
                          "conditionId": 3566,
                          "createdBy": "szhang",
                          "createdDate": "2020-09-18T06:00:55+0000",
                          "modifiedBy": "jkowalski",
                          "modifiedDate": "2020-09-18T07:48:38+0000",
                          "condition": {
                            "conditionNodeId": 1,
                            "values": [
                              "response_header"
                            ],
                            "conditionNode": {
                              "conditionNodeId": 4,
                              "values": [
                                "atcuser"
                              ],
                              "conditionNode": {
                                "conditionNodeId": 5,
                                "values": [
                                  "has_a_value"
                                ]
                              }
                            }
                          }
                        },
                        "testRequest": {
                          "createdBy": "alfulani",
                          "createdDate": "2020-09-18T06:01:56+0000",
                          "modifiedBy": "jperez",
                          "modifiedDate": "2020-09-18T07:48:38+0000",
                          "testRequestId": 4853,
                          "testRequestUrl": "http://ab.fail.www.akamaiflowershop.com/atc-qa-1600393947647",
                          "tags": [
                            "akamaiflowershop"
                          ]
                        }
                      }
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains the restored functional test case or details about failure of the operation.",
                  "type": "object",
                  "required": [
                    "testCases"
                  ],
                  "properties": {
                    "testCases": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "description": "Contains functional test cases created in your organization.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about the functional test cases and included objects: conditions, test requests, and client profiles.",
                              "type": "object",
                              "required": [
                                "testCaseId",
                                "clientProfile",
                                "testRequest",
                                "condition",
                                "createdBy",
                                "createdDate",
                                "modifiedBy",
                                "modifiedDate"
                              ],
                              "properties": {
                                "clientProfile": {
                                  "additionalProperties": false,
                                  "description": "Contains information about the included client profile.",
                                  "type": "object",
                                  "required": [
                                    "clientProfileId",
                                    "browser",
                                    "geoLocation",
                                    "ipVersion"
                                  ],
                                  "properties": {
                                    "browser": {
                                      "additionalProperties": false,
                                      "description": "Contains information about the real browser used to execute the functional test case.",
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "version"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "Name of the browser used to run functional test cases.",
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "version": {
                                          "description": "Version of the browser used to run functional test cases.",
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "clientProfileId": {
                                      "description": "Unique identifier of the client profile.",
                                      "minimum": 0,
                                      "type": "integer"
                                    },
                                    "geoLocation": {
                                      "description": "Geographic region for which the functional test cases using this client profile would execute. The only currently available value is `us` for United States.",
                                      "type": "string",
                                      "enum": [
                                        "us"
                                      ]
                                    },
                                    "ipVersion": {
                                      "description": "IP versions for which the functional test cases using this client profile are run, either `ipv4` or `ipv6`.",
                                      "type": "string",
                                      "enum": [
                                        "ipv4",
                                        "ipv6"
                                      ]
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-client-profile-response.yaml"
                                  }
                                },
                                "condition": {
                                  "additionalProperties": false,
                                  "description": "Contains information about the included condition.",
                                  "type": "object",
                                  "required": [
                                    "conditionId",
                                    "condition",
                                    "createdBy",
                                    "createdDate",
                                    "modifiedBy",
                                    "modifiedDate"
                                  ],
                                  "properties": {
                                    "condition": {
                                      "additionalProperties": false,
                                      "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                                      "type": "object",
                                      "required": [
                                        "conditionNodeId",
                                        "values"
                                      ],
                                      "properties": {
                                        "conditionNode": {
                                          "additionalProperties": false,
                                          "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                                          "type": "object",
                                          "required": [
                                            "conditionNodeId",
                                            "values"
                                          ],
                                          "properties": {
                                            "conditionNode": {
                                              "type": "object"
                                            },
                                            "conditionNodeId": {
                                              "minimum": 0,
                                              "readOnly": true,
                                              "type": "integer"
                                            },
                                            "values": {
                                              "minItems": 0,
                                              "type": "array",
                                              "items": {
                                                "minLength": 1,
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/condition-node-nested.yaml"
                                          }
                                        },
                                        "conditionNodeId": {
                                          "description": "Unique identifier for each condition node taken from the test catalog template.",
                                          "minimum": 0,
                                          "readOnly": true,
                                          "type": "integer"
                                        },
                                        "values": {
                                          "description": "List of values selected from the condition node or input supported by the node.",
                                          "minItems": 0,
                                          "type": "array",
                                          "items": {
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/condition-node.yaml"
                                      }
                                    },
                                    "conditionId": {
                                      "description": "Unique identifier for each condition.",
                                      "minimum": 1,
                                      "type": "integer"
                                    },
                                    "createdBy": {
                                      "description": "Username who created the condition.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "createdDate": {
                                      "description": "ISO 8601 timestamp indicating when the condition was created.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "deletedBy": {
                                      "description": "Username who last deleted the condition.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "deletedDate": {
                                      "description": "ISO 8601 timestamp indicating when the condition was last deleted.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "modifiedBy": {
                                      "description": "Username who last modified the condition.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "modifiedDate": {
                                      "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                                      "format": "date-time",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-condition-response.yaml"
                                  }
                                },
                                "createdBy": {
                                  "description": "Username who created the functional test case.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the functional test case was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the functional test case.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the functional test case was last deleted.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the functional test case.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the functional test case was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "testCaseId": {
                                  "description": "Unique identifier for each functional test case.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "testRequest": {
                                  "additionalProperties": false,
                                  "description": "Contains information about the included test request.",
                                  "type": "object",
                                  "required": [
                                    "testRequestId",
                                    "testRequestUrl",
                                    "createdBy",
                                    "createdDate",
                                    "modifiedBy",
                                    "modifiedDate"
                                  ],
                                  "properties": {
                                    "createdBy": {
                                      "description": "Username who created the test request.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "createdDate": {
                                      "description": "ISO 8601 timestamp indicating when the test request was created.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "deletedBy": {
                                      "description": "Username who last deleted the test request.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "deletedDate": {
                                      "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "modifiedBy": {
                                      "description": "Username who last modified the test request.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "modifiedDate": {
                                      "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "requestHeaders": {
                                      "description": "Contains information about request headers included in the functional test case.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "type": "object",
                                        "required": [
                                          "headerName",
                                          "headerValue",
                                          "headerAction"
                                        ],
                                        "properties": {
                                          "headerAction": {
                                            "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                                            "type": "string",
                                            "enum": [
                                              "add",
                                              "modify",
                                              "filter"
                                            ]
                                          },
                                          "headerName": {
                                            "description": "Name of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "headerValue": {
                                            "description": "Value of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "tags": {
                                      "description": "Keywords associated with the test request.",
                                      "maxItems": 50,
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "testRequestId": {
                                      "description": "Unique identifier for each test request.",
                                      "minimum": 1,
                                      "type": "integer"
                                    },
                                    "testRequestUrl": {
                                      "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                                      "format": "uri",
                                      "maxLength": 2048,
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-test-request-response.yaml"
                                  }
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-functional-test-case-response.yaml"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-functional-test-cases-response.yaml"
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getFunctionalRestoredTestCaseResponse.yaml"
                  }
                }
              }
            }
          },
          "207": {
            "description": "[Partial success responses](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "conditions": {
                    "failures": [],
                    "successes": [
                      {
                        "conditionId": 3566,
                        "createdBy": "jperez",
                        "createdDate": "2020-09-18T06:00:55+0000",
                        "modifiedBy": "adevi",
                        "modifiedDate": "2020-09-18T09:06:45+0000",
                        "condition": {
                          "conditionNodeId": 1,
                          "values": [
                            "response_header"
                          ],
                          "conditionNode": {
                            "conditionNodeId": 4,
                            "values": [
                              "atcuser"
                            ],
                            "conditionNode": {
                              "conditionNodeId": 5,
                              "values": [
                                "has_a_value"
                              ]
                            }
                          }
                        }
                      }
                    ]
                  },
                  "testCases": {
                    "failures": [],
                    "successes": [
                      {
                        "createdBy": "mrossi",
                        "createdDate": "2020-09-18T06:02:54+0000",
                        "modifiedBy": "mrossi",
                        "modifiedDate": "2020-09-18T09:06:45+0000",
                        "testCaseId": 301,
                        "clientProfile": {
                          "clientProfileId": 2,
                          "geoLocation": "us",
                          "ipVersion": "ipv4",
                          "browser": {
                            "name": "chrome",
                            "version": "65.0"
                          }
                        },
                        "condition": {
                          "conditionId": 3566,
                          "createdBy": "jkowalski",
                          "createdDate": "2020-09-18T06:00:55+0000",
                          "modifiedBy": "szhang",
                          "modifiedDate": "2020-09-18T09:06:45+0000",
                          "condition": {
                            "conditionNodeId": 1,
                            "values": [
                              "response_header"
                            ],
                            "conditionNode": {
                              "conditionNodeId": 4,
                              "values": [
                                "atcuser"
                              ],
                              "conditionNode": {
                                "conditionNodeId": 5,
                                "values": [
                                  "has_a_value"
                                ]
                              }
                            }
                          }
                        },
                        "testRequest": {
                          "createdBy": "tyamada",
                          "createdDate": "2020-09-18T06:01:56+0000",
                          "modifiedBy": "jsmith",
                          "modifiedDate": "2020-09-18T09:06:45+0000",
                          "testRequestId": 4853,
                          "testRequestUrl": "http://ab.fail.www.akamaiflowershop.com/atc-qa-1600393947647",
                          "tags": [
                            "akamaiflowershop"
                          ]
                        }
                      }
                    ]
                  },
                  "testRequests": {
                    "failures": [],
                    "successes": [
                      {
                        "createdBy": "jkowalski",
                        "createdDate": "2020-09-18T06:01:56+0000",
                        "modifiedBy": "hgildong",
                        "modifiedDate": "2020-09-18T09:06:45+0000",
                        "testRequestId": 4853,
                        "testRequestUrl": "http://ab.fail.www.akamaiflowershop.com/atc-qa-1600393947647",
                        "tags": [
                          "akamaiflowershop"
                        ]
                      }
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains the restored functional test cases and included objects, conditions and test requests, or details about any failures of the operation.",
                  "type": "object",
                  "required": [
                    "testCases",
                    "testRequests",
                    "conditions"
                  ],
                  "properties": {
                    "conditions": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "description": "Contains conditions available for your organization.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about the condition.",
                              "type": "object",
                              "required": [
                                "conditionId",
                                "condition",
                                "createdBy",
                                "createdDate",
                                "modifiedBy",
                                "modifiedDate"
                              ],
                              "properties": {
                                "condition": {
                                  "additionalProperties": false,
                                  "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                                  "type": "object",
                                  "required": [
                                    "conditionNodeId",
                                    "values"
                                  ],
                                  "properties": {
                                    "conditionNode": {
                                      "additionalProperties": false,
                                      "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                                      "type": "object",
                                      "required": [
                                        "conditionNodeId",
                                        "values"
                                      ],
                                      "properties": {
                                        "conditionNode": {
                                          "type": "object"
                                        },
                                        "conditionNodeId": {
                                          "minimum": 0,
                                          "readOnly": true,
                                          "type": "integer"
                                        },
                                        "values": {
                                          "minItems": 0,
                                          "type": "array",
                                          "items": {
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/condition-node-nested.yaml"
                                      }
                                    },
                                    "conditionNodeId": {
                                      "description": "Unique identifier for each condition node taken from the test catalog template.",
                                      "minimum": 0,
                                      "readOnly": true,
                                      "type": "integer"
                                    },
                                    "values": {
                                      "description": "List of values selected from the condition node or input supported by the node.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/condition-node.yaml"
                                  }
                                },
                                "conditionId": {
                                  "description": "Unique identifier for each condition.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "createdBy": {
                                  "description": "Username who created the condition.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the condition was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the condition.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the condition was last deleted.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the condition.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-condition-response.yaml"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-conditions-response.yaml"
                            }
                          }
                        }
                      }
                    },
                    "testCases": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "description": "Contains functional test cases created in your organization.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about the functional test cases and included objects: conditions, test requests, and client profiles.",
                              "type": "object",
                              "required": [
                                "testCaseId",
                                "clientProfile",
                                "testRequest",
                                "condition",
                                "createdBy",
                                "createdDate",
                                "modifiedBy",
                                "modifiedDate"
                              ],
                              "properties": {
                                "clientProfile": {
                                  "additionalProperties": false,
                                  "description": "Contains information about the included client profile.",
                                  "type": "object",
                                  "required": [
                                    "clientProfileId",
                                    "browser",
                                    "geoLocation",
                                    "ipVersion"
                                  ],
                                  "properties": {
                                    "browser": {
                                      "additionalProperties": false,
                                      "description": "Contains information about the real browser used to execute the functional test case.",
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "version"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "Name of the browser used to run functional test cases.",
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "version": {
                                          "description": "Version of the browser used to run functional test cases.",
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "clientProfileId": {
                                      "description": "Unique identifier of the client profile.",
                                      "minimum": 0,
                                      "type": "integer"
                                    },
                                    "geoLocation": {
                                      "description": "Geographic region for which the functional test cases using this client profile would execute. The only currently available value is `us` for United States.",
                                      "type": "string",
                                      "enum": [
                                        "us"
                                      ]
                                    },
                                    "ipVersion": {
                                      "description": "IP versions for which the functional test cases using this client profile are run, either `ipv4` or `ipv6`.",
                                      "type": "string",
                                      "enum": [
                                        "ipv4",
                                        "ipv6"
                                      ]
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-client-profile-response.yaml"
                                  }
                                },
                                "condition": {
                                  "additionalProperties": false,
                                  "description": "Contains information about the included condition.",
                                  "type": "object",
                                  "required": [
                                    "conditionId",
                                    "condition",
                                    "createdBy",
                                    "createdDate",
                                    "modifiedBy",
                                    "modifiedDate"
                                  ],
                                  "properties": {
                                    "condition": {
                                      "additionalProperties": false,
                                      "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                                      "type": "object",
                                      "required": [
                                        "conditionNodeId",
                                        "values"
                                      ],
                                      "properties": {
                                        "conditionNode": {
                                          "additionalProperties": false,
                                          "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                                          "type": "object",
                                          "required": [
                                            "conditionNodeId",
                                            "values"
                                          ],
                                          "properties": {
                                            "conditionNode": {
                                              "type": "object"
                                            },
                                            "conditionNodeId": {
                                              "minimum": 0,
                                              "readOnly": true,
                                              "type": "integer"
                                            },
                                            "values": {
                                              "minItems": 0,
                                              "type": "array",
                                              "items": {
                                                "minLength": 1,
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/condition-node-nested.yaml"
                                          }
                                        },
                                        "conditionNodeId": {
                                          "description": "Unique identifier for each condition node taken from the test catalog template.",
                                          "minimum": 0,
                                          "readOnly": true,
                                          "type": "integer"
                                        },
                                        "values": {
                                          "description": "List of values selected from the condition node or input supported by the node.",
                                          "minItems": 0,
                                          "type": "array",
                                          "items": {
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/condition-node.yaml"
                                      }
                                    },
                                    "conditionId": {
                                      "description": "Unique identifier for each condition.",
                                      "minimum": 1,
                                      "type": "integer"
                                    },
                                    "createdBy": {
                                      "description": "Username who created the condition.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "createdDate": {
                                      "description": "ISO 8601 timestamp indicating when the condition was created.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "deletedBy": {
                                      "description": "Username who last deleted the condition.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "deletedDate": {
                                      "description": "ISO 8601 timestamp indicating when the condition was last deleted.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "modifiedBy": {
                                      "description": "Username who last modified the condition.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "modifiedDate": {
                                      "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                                      "format": "date-time",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-condition-response.yaml"
                                  }
                                },
                                "createdBy": {
                                  "description": "Username who created the functional test case.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the functional test case was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the functional test case.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the functional test case was last deleted.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the functional test case.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the functional test case was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "testCaseId": {
                                  "description": "Unique identifier for each functional test case.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "testRequest": {
                                  "additionalProperties": false,
                                  "description": "Contains information about the included test request.",
                                  "type": "object",
                                  "required": [
                                    "testRequestId",
                                    "testRequestUrl",
                                    "createdBy",
                                    "createdDate",
                                    "modifiedBy",
                                    "modifiedDate"
                                  ],
                                  "properties": {
                                    "createdBy": {
                                      "description": "Username who created the test request.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "createdDate": {
                                      "description": "ISO 8601 timestamp indicating when the test request was created.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "deletedBy": {
                                      "description": "Username who last deleted the test request.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "deletedDate": {
                                      "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "modifiedBy": {
                                      "description": "Username who last modified the test request.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "modifiedDate": {
                                      "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "requestHeaders": {
                                      "description": "Contains information about request headers included in the functional test case.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "type": "object",
                                        "required": [
                                          "headerName",
                                          "headerValue",
                                          "headerAction"
                                        ],
                                        "properties": {
                                          "headerAction": {
                                            "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                                            "type": "string",
                                            "enum": [
                                              "add",
                                              "modify",
                                              "filter"
                                            ]
                                          },
                                          "headerName": {
                                            "description": "Name of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "headerValue": {
                                            "description": "Value of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "tags": {
                                      "description": "Keywords associated with the test request.",
                                      "maxItems": 50,
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "testRequestId": {
                                      "description": "Unique identifier for each test request.",
                                      "minimum": 1,
                                      "type": "integer"
                                    },
                                    "testRequestUrl": {
                                      "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                                      "format": "uri",
                                      "maxLength": 2048,
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-test-request-response.yaml"
                                  }
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-functional-test-case-response.yaml"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-functional-test-cases-response.yaml"
                            }
                          }
                        }
                      }
                    },
                    "testRequests": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "description": "Contains test requests created in your organization.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about a test request.",
                              "type": "object",
                              "required": [
                                "testRequestId",
                                "testRequestUrl",
                                "createdBy",
                                "createdDate",
                                "modifiedBy",
                                "modifiedDate"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "Username who created the test request.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the test request was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the test request.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the test request.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "requestHeaders": {
                                  "description": "Contains information about request headers included in the functional test case.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                      "headerName",
                                      "headerValue",
                                      "headerAction"
                                    ],
                                    "properties": {
                                      "headerAction": {
                                        "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                                        "type": "string",
                                        "enum": [
                                          "add",
                                          "modify",
                                          "filter"
                                        ]
                                      },
                                      "headerName": {
                                        "description": "Name of the request header.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "headerValue": {
                                        "description": "Value of the request header.",
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "tags": {
                                  "description": "Keywords associated with the test request.",
                                  "maxItems": 50,
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                },
                                "testRequestId": {
                                  "description": "Unique identifier for each test request.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "testRequestUrl": {
                                  "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                                  "format": "uri",
                                  "maxLength": 2048,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-test-request-response.yaml"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-test-requests-response.yaml"
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getFunctionalRestoredTestCasesResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Whether to restore the test suite with included functional test cases, test requests, and conditions. It's `false` by default.",
            "example": "{{restoreChildResources}}",
            "in": "query",
            "name": "restoreChildResources",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/restoreChildResources-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each functional test case.",
          "example": "{{testCaseId}}",
          "in": "path",
          "name": "testCaseId",
          "required": true,
          "schema": {
            "example": 301,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testCaseId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-catalog/conditions": {
      "post": {
        "description": "Creates a new condition.",
        "operationId": "post-test-catalog-conditions",
        "summary": "Create a condition",
        "tags": [
          "Conditions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-catalog-conditions"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "condition": {
                  "conditionNodeId": 1,
                  "values": [
                    "response_code"
                  ],
                  "conditionNode": {
                    "conditionNodeId": 2,
                    "values": [
                      "is_one_of"
                    ],
                    "conditionNode": {
                      "conditionNodeId": 3,
                      "values": [
                        200,
                        201
                      ]
                    }
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "Contains information about a condition.",
                "type": "object",
                "required": [
                  "condition"
                ],
                "properties": {
                  "condition": {
                    "additionalProperties": false,
                    "description": "A condition object details.",
                    "type": "object",
                    "required": [
                      "conditionNodeId",
                      "values"
                    ],
                    "properties": {
                      "conditionNode": {
                        "additionalProperties": false,
                        "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                        "type": "object",
                        "required": [
                          "conditionNodeId",
                          "values"
                        ],
                        "properties": {
                          "conditionNode": {
                            "type": "object"
                          },
                          "conditionNodeId": {
                            "minimum": 0,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "values": {
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/condition-node-nested.yaml"
                        }
                      },
                      "conditionNodeId": {
                        "description": "Unique identifier for each condition node taken from the test catalog template.",
                        "minimum": 0,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "values": {
                        "description": "List of values selected from the condition node or input supported by the node.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/condition-node.yaml"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/createConditionRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created new condition.",
            "content": {
              "application/json": {
                "example": {
                  "conditionId": 47,
                  "createdBy": "tyamada",
                  "createdDate": "2019-12-15T04:30:46+0000",
                  "modifiedBy": "tyamada",
                  "modifiedDate": "2019-12-15T04:30:46+0000",
                  "condition": {
                    "conditionNodeId": 1,
                    "values": [
                      "response_code"
                    ],
                    "conditionNode": {
                      "conditionNodeId": 2,
                      "values": [
                        "is_one_of"
                      ],
                      "conditionNode": {
                        "conditionNodeId": 3,
                        "values": [
                          200,
                          201
                        ]
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about the condition.",
                  "type": "object",
                  "required": [
                    "conditionId",
                    "condition",
                    "createdBy",
                    "createdDate",
                    "modifiedBy",
                    "modifiedDate"
                  ],
                  "properties": {
                    "condition": {
                      "additionalProperties": false,
                      "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                      "type": "object",
                      "required": [
                        "conditionNodeId",
                        "values"
                      ],
                      "properties": {
                        "conditionNode": {
                          "additionalProperties": false,
                          "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                          "type": "object",
                          "required": [
                            "conditionNodeId",
                            "values"
                          ],
                          "properties": {
                            "conditionNode": {
                              "type": "object"
                            },
                            "conditionNodeId": {
                              "minimum": 0,
                              "readOnly": true,
                              "type": "integer"
                            },
                            "values": {
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/condition-node-nested.yaml"
                          }
                        },
                        "conditionNodeId": {
                          "description": "Unique identifier for each condition node taken from the test catalog template.",
                          "minimum": 0,
                          "readOnly": true,
                          "type": "integer"
                        },
                        "values": {
                          "description": "List of values selected from the condition node or input supported by the node.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/condition-node.yaml"
                      }
                    },
                    "conditionId": {
                      "description": "Unique identifier for each condition.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "createdBy": {
                      "description": "Username who created the condition.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the condition was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the condition.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the condition was last deleted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the condition.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-condition-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists conditions created in your organization. The list can also include deleted conditions that you can restore. The response is an array of objects, each keyed by `conditionId`.",
        "operationId": "get-test-catalog-conditions",
        "summary": "List conditions",
        "tags": [
          "Conditions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-conditions"
        },
        "responses": {
          "200": {
            "description": "The response lists conditions.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Contains conditions available for your organization.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Contains information about the condition.",
                    "type": "object",
                    "required": [
                      "conditionId",
                      "condition",
                      "createdBy",
                      "createdDate",
                      "modifiedBy",
                      "modifiedDate"
                    ],
                    "properties": {
                      "condition": {
                        "additionalProperties": false,
                        "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                        "type": "object",
                        "required": [
                          "conditionNodeId",
                          "values"
                        ],
                        "properties": {
                          "conditionNode": {
                            "additionalProperties": false,
                            "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                            "type": "object",
                            "required": [
                              "conditionNodeId",
                              "values"
                            ],
                            "properties": {
                              "conditionNode": {
                                "type": "object"
                              },
                              "conditionNodeId": {
                                "minimum": 0,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "values": {
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/condition-node-nested.yaml"
                            }
                          },
                          "conditionNodeId": {
                            "description": "Unique identifier for each condition node taken from the test catalog template.",
                            "minimum": 0,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "values": {
                            "description": "List of values selected from the condition node or input supported by the node.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/condition-node.yaml"
                        }
                      },
                      "conditionId": {
                        "description": "Unique identifier for each condition.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "createdBy": {
                        "description": "Username who created the condition.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 timestamp indicating when the condition was created.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "deletedBy": {
                        "description": "Username who last deleted the condition.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "deletedDate": {
                        "description": "ISO 8601 timestamp indicating when the condition was last deleted.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "modifiedBy": {
                        "description": "Username who last modified the condition.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/get-condition-response.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getConditionsResponse.yaml"
                  }
                },
                "example": [
                  {
                    "conditionId": 47,
                    "createdBy": "mrossi",
                    "createdDate": "2019-12-15T04:30:46+0000",
                    "modifiedBy": "adevi",
                    "modifiedDate": "2019-12-15T04:30:46+0000",
                    "condition": {
                      "conditionNodeId": 1,
                      "values": [
                        "response_code"
                      ],
                      "conditionNode": {
                        "conditionNodeId": 2,
                        "values": [
                          "is_one_of"
                        ],
                        "conditionNode": {
                          "conditionNodeId": 3,
                          "values": [
                            200,
                            201
                          ]
                        }
                      }
                    }
                  },
                  {
                    "conditionId": 49,
                    "createdBy": "mrossi",
                    "createdDate": "2019-12-15T04:30:46+0000",
                    "modifiedBy": "adevi",
                    "modifiedDate": "2020-01-06T19:58:52+0000",
                    "condition": {
                      "conditionNodeId": 1,
                      "values": [
                        "response_header"
                      ],
                      "conditionNode": {
                        "conditionNodeId": 4,
                        "values": [
                          "Content-Type"
                        ],
                        "conditionNode": {
                          "conditionNodeId": 5,
                          "values": [
                            "has_a_value"
                          ],
                          "conditionNode": {
                            "conditionNodeId": 7,
                            "values": [
                              "ends_with"
                            ],
                            "conditionNode": {
                              "conditionNodeId": 4,
                              "values": [
                                "json"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Whether to list any items deleted within the last 30 days that you can restore. It's `false` by default.",
            "example": "{{includeRecentlyDeleted}}",
            "in": "query",
            "name": "includeRecentlyDeleted",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/includeRecentlyDeleted-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/functional/test-catalog/conditions/{conditionId}": {
      "get": {
        "description": "Returns details of a condition.",
        "operationId": "get-test-catalog-condition",
        "summary": "Get a condition",
        "tags": [
          "Conditions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-condition"
        },
        "responses": {
          "200": {
            "description": "The response returns condition details.",
            "content": {
              "application/json": {
                "example": {
                  "conditionId": 47,
                  "createdBy": "jkowalski",
                  "createdDate": "2019-12-15T04:30:46+0000",
                  "modifiedBy": "szhang",
                  "modifiedDate": "2019-12-15T04:30:46+0000",
                  "condition": {
                    "conditionNodeId": 1,
                    "values": [
                      "response_code"
                    ],
                    "conditionNode": {
                      "conditionNodeId": 2,
                      "values": [
                        "is_one_of"
                      ],
                      "conditionNode": {
                        "conditionNodeId": 3,
                        "values": [
                          200,
                          201
                        ]
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about the condition.",
                  "type": "object",
                  "required": [
                    "conditionId",
                    "condition",
                    "createdBy",
                    "createdDate",
                    "modifiedBy",
                    "modifiedDate"
                  ],
                  "properties": {
                    "condition": {
                      "additionalProperties": false,
                      "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                      "type": "object",
                      "required": [
                        "conditionNodeId",
                        "values"
                      ],
                      "properties": {
                        "conditionNode": {
                          "additionalProperties": false,
                          "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                          "type": "object",
                          "required": [
                            "conditionNodeId",
                            "values"
                          ],
                          "properties": {
                            "conditionNode": {
                              "type": "object"
                            },
                            "conditionNodeId": {
                              "minimum": 0,
                              "readOnly": true,
                              "type": "integer"
                            },
                            "values": {
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/condition-node-nested.yaml"
                          }
                        },
                        "conditionNodeId": {
                          "description": "Unique identifier for each condition node taken from the test catalog template.",
                          "minimum": 0,
                          "readOnly": true,
                          "type": "integer"
                        },
                        "values": {
                          "description": "List of values selected from the condition node or input supported by the node.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/condition-node.yaml"
                      }
                    },
                    "conditionId": {
                      "description": "Unique identifier for each condition.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "createdBy": {
                      "description": "Username who created the condition.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the condition was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the condition.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the condition was last deleted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the condition.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-condition-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates a condition. For optional, modifiable request members that you don't include in the request Test Center uses default values.",
        "operationId": "put-test-catalog-condition",
        "summary": "Update a condition",
        "tags": [
          "Conditions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/put-test-catalog-condition"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "condition": {
                  "conditionNodeId": 1,
                  "values": [
                    "response_header"
                  ],
                  "conditionNode": {
                    "conditionNodeId": 4,
                    "values": [
                      "Content-Type"
                    ],
                    "conditionNode": {
                      "conditionNodeId": 5,
                      "values": [
                        "has_a_value"
                      ],
                      "conditionNode": {
                        "conditionNodeId": 7,
                        "values": [
                          "ends_with"
                        ],
                        "conditionNode": {
                          "conditionNodeId": 4,
                          "values": [
                            "json"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "Contains information about the condition. Conditions are the criteria you want to evaluate on the HTTP response. They correspond to the test request or a specific config setting applied to the test request. They have a sentence-like structure and each element of the sentence is a value taken from a condition node.",
                "type": "object",
                "required": [
                  "condition"
                ],
                "properties": {
                  "condition": {
                    "additionalProperties": false,
                    "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                    "type": "object",
                    "required": [
                      "conditionNodeId",
                      "values"
                    ],
                    "properties": {
                      "conditionNode": {
                        "additionalProperties": false,
                        "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                        "type": "object",
                        "required": [
                          "conditionNodeId",
                          "values"
                        ],
                        "properties": {
                          "conditionNode": {
                            "type": "object"
                          },
                          "conditionNodeId": {
                            "minimum": 0,
                            "readOnly": true,
                            "type": "integer"
                          },
                          "values": {
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/condition-node-nested.yaml"
                        }
                      },
                      "conditionNodeId": {
                        "description": "Unique identifier for each condition node taken from the test catalog template.",
                        "minimum": 0,
                        "readOnly": true,
                        "type": "integer"
                      },
                      "values": {
                        "description": "List of values selected from the condition node or input supported by the node.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/condition-node.yaml"
                    }
                  },
                  "conditionId": {
                    "description": "Unique identifier for each condition.",
                    "example": "{{conditionId}}",
                    "minimum": 1,
                    "readOnly": true,
                    "type": "integer"
                  },
                  "createdBy": {
                    "description": "Username who created the condition.",
                    "example": "{{createdBy}}",
                    "minLength": 1,
                    "readOnly": true,
                    "type": "string"
                  },
                  "createdDate": {
                    "description": "ISO 8601 timestamp indicating when the condition was created.",
                    "example": "{{createdDate}}",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "modifiedBy": {
                    "description": "Username who last modified the condition.",
                    "example": "{{modifiedBy}}",
                    "minLength": 0,
                    "readOnly": true,
                    "type": "string"
                  },
                  "modifiedDate": {
                    "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                    "example": "{{modifiedDate}}",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/updateConditionRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response returns the updated condition.",
            "content": {
              "application/json": {
                "example": {
                  "conditionId": 47,
                  "createdBy": "jkowalski",
                  "createdDate": "2019-12-15T04:30:46+0000",
                  "modifiedBy": "tyamada",
                  "modifiedDate": "2020-01-06T19:58:52+0000",
                  "condition": {
                    "conditionNodeId": 1,
                    "values": [
                      "response_header"
                    ],
                    "conditionNode": {
                      "conditionNodeId": 4,
                      "values": [
                        "Content-Type"
                      ],
                      "conditionNode": {
                        "conditionNodeId": 5,
                        "values": [
                          "has_a_value"
                        ],
                        "conditionNode": {
                          "conditionNodeId": 7,
                          "values": [
                            "ends_with"
                          ],
                          "conditionNode": {
                            "conditionNodeId": 4,
                            "values": [
                              "json"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about the condition.",
                  "type": "object",
                  "required": [
                    "conditionId",
                    "condition",
                    "createdBy",
                    "createdDate",
                    "modifiedBy",
                    "modifiedDate"
                  ],
                  "properties": {
                    "condition": {
                      "additionalProperties": false,
                      "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                      "type": "object",
                      "required": [
                        "conditionNodeId",
                        "values"
                      ],
                      "properties": {
                        "conditionNode": {
                          "additionalProperties": false,
                          "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                          "type": "object",
                          "required": [
                            "conditionNodeId",
                            "values"
                          ],
                          "properties": {
                            "conditionNode": {
                              "type": "object"
                            },
                            "conditionNodeId": {
                              "minimum": 0,
                              "readOnly": true,
                              "type": "integer"
                            },
                            "values": {
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/condition-node-nested.yaml"
                          }
                        },
                        "conditionNodeId": {
                          "description": "Unique identifier for each condition node taken from the test catalog template.",
                          "minimum": 0,
                          "readOnly": true,
                          "type": "integer"
                        },
                        "values": {
                          "description": "List of values selected from the condition node or input supported by the node.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/condition-node.yaml"
                      }
                    },
                    "conditionId": {
                      "description": "Unique identifier for each condition.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "createdBy": {
                      "description": "Username who created the condition.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the condition was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the condition.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the condition was last deleted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the condition.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-condition-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Unique identifier for each condition.",
            "example": "{{conditionId}}",
            "in": "path",
            "name": "conditionId",
            "required": true,
            "schema": {
              "example": 47,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/conditionId-path.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Deletes a condition. You can [restore](https://techdocs.akamai.com/test-ctr/reference/post-test-catalog-condition-restore) conditions within 30 days of deleting them.",
        "operationId": "delete-test-catalog-condition",
        "summary": "Delete a condition",
        "tags": [
          "Conditions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/delete-test-catalog-condition"
        },
        "responses": {
          "204": {
            "description": "Successfully deleted condition.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each condition.",
          "example": "{{conditionId}}",
          "in": "path",
          "name": "conditionId",
          "required": true,
          "schema": {
            "example": 47,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/conditionId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-catalog/conditions/{conditionId}/associations/test-cases": {
      "get": {
        "description": "Lists all functional test cases that use a condition. The response is an array of objects, each keyed by `testCaseId`.",
        "operationId": "get-test-catalog-condition-test-cases",
        "summary": "List functional test cases that use a condition",
        "tags": [
          "Conditions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-condition-test-cases"
        },
        "responses": {
          "200": {
            "description": "The response lists test cases.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Contains functional test cases created in your organization.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Contains information about the functional test cases and included objects: conditions, test requests, and client profiles.",
                    "type": "object",
                    "required": [
                      "testCaseId",
                      "clientProfile",
                      "testRequest",
                      "condition",
                      "createdBy",
                      "createdDate",
                      "modifiedBy",
                      "modifiedDate"
                    ],
                    "properties": {
                      "clientProfile": {
                        "additionalProperties": false,
                        "description": "Contains information about the included client profile.",
                        "type": "object",
                        "required": [
                          "clientProfileId",
                          "browser",
                          "geoLocation",
                          "ipVersion"
                        ],
                        "properties": {
                          "browser": {
                            "additionalProperties": false,
                            "description": "Contains information about the real browser used to execute the functional test case.",
                            "type": "object",
                            "required": [
                              "name",
                              "version"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name of the browser used to run functional test cases.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "version": {
                                "description": "Version of the browser used to run functional test cases.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "clientProfileId": {
                            "description": "Unique identifier of the client profile.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "geoLocation": {
                            "description": "Geographic region for which the functional test cases using this client profile would execute. The only currently available value is `us` for United States.",
                            "type": "string",
                            "enum": [
                              "us"
                            ]
                          },
                          "ipVersion": {
                            "description": "IP versions for which the functional test cases using this client profile are run, either `ipv4` or `ipv6`.",
                            "type": "string",
                            "enum": [
                              "ipv4",
                              "ipv6"
                            ]
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/get-client-profile-response.yaml"
                        }
                      },
                      "condition": {
                        "additionalProperties": false,
                        "description": "Contains information about the included condition.",
                        "type": "object",
                        "required": [
                          "conditionId",
                          "condition",
                          "createdBy",
                          "createdDate",
                          "modifiedBy",
                          "modifiedDate"
                        ],
                        "properties": {
                          "condition": {
                            "additionalProperties": false,
                            "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                            "type": "object",
                            "required": [
                              "conditionNodeId",
                              "values"
                            ],
                            "properties": {
                              "conditionNode": {
                                "additionalProperties": false,
                                "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                                "type": "object",
                                "required": [
                                  "conditionNodeId",
                                  "values"
                                ],
                                "properties": {
                                  "conditionNode": {
                                    "type": "object"
                                  },
                                  "conditionNodeId": {
                                    "minimum": 0,
                                    "readOnly": true,
                                    "type": "integer"
                                  },
                                  "values": {
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/condition-node-nested.yaml"
                                }
                              },
                              "conditionNodeId": {
                                "description": "Unique identifier for each condition node taken from the test catalog template.",
                                "minimum": 0,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "values": {
                                "description": "List of values selected from the condition node or input supported by the node.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/condition-node.yaml"
                            }
                          },
                          "conditionId": {
                            "description": "Unique identifier for each condition.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "createdBy": {
                            "description": "Username who created the condition.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the condition was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "deletedBy": {
                            "description": "Username who last deleted the condition.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "deletedDate": {
                            "description": "ISO 8601 timestamp indicating when the condition was last deleted.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "modifiedBy": {
                            "description": "Username who last modified the condition.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "modifiedDate": {
                            "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/get-condition-response.yaml"
                        }
                      },
                      "createdBy": {
                        "description": "Username who created the functional test case.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 timestamp indicating when the functional test case was created.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "deletedBy": {
                        "description": "Username who last deleted the functional test case.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "deletedDate": {
                        "description": "ISO 8601 timestamp indicating when the functional test case was last deleted.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "modifiedBy": {
                        "description": "Username who last modified the functional test case.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "ISO 8601 timestamp indicating when the functional test case was last modified.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "testCaseId": {
                        "description": "Unique identifier for each functional test case.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "testRequest": {
                        "additionalProperties": false,
                        "description": "Contains information about the included test request.",
                        "type": "object",
                        "required": [
                          "testRequestId",
                          "testRequestUrl",
                          "createdBy",
                          "createdDate",
                          "modifiedBy",
                          "modifiedDate"
                        ],
                        "properties": {
                          "createdBy": {
                            "description": "Username who created the test request.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the test request was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "deletedBy": {
                            "description": "Username who last deleted the test request.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "deletedDate": {
                            "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "modifiedBy": {
                            "description": "Username who last modified the test request.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "modifiedDate": {
                            "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "requestHeaders": {
                            "description": "Contains information about request headers included in the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "headerName",
                                "headerValue",
                                "headerAction"
                              ],
                              "properties": {
                                "headerAction": {
                                  "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                                  "type": "string",
                                  "enum": [
                                    "add",
                                    "modify",
                                    "filter"
                                  ]
                                },
                                "headerName": {
                                  "description": "Name of the request header.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "headerValue": {
                                  "description": "Value of the request header.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "tags": {
                            "description": "Keywords associated with the test request.",
                            "maxItems": 50,
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "testRequestId": {
                            "description": "Unique identifier for each test request.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "testRequestUrl": {
                            "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                            "format": "uri",
                            "maxLength": 2048,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/get-test-request-response.yaml"
                        }
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/get-functional-test-case-response.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestCasesResponse.yaml"
                  }
                },
                "example": [
                  {
                    "createdBy": "jkowalski",
                    "createdDate": "2020-01-07T06:25:07+0000",
                    "modifiedBy": "adevi",
                    "modifiedDate": "2020-01-07T06:25:07+0000",
                    "testCaseId": 304,
                    "clientProfile": {
                      "clientProfileId": 2,
                      "geoLocation": "us",
                      "ipVersion": "ipv4",
                      "browser": {
                        "name": "chrome",
                        "version": "72"
                      }
                    },
                    "condition": {
                      "conditionId": 47,
                      "createdBy": "jperez",
                      "createdDate": "2019-12-15T04:30:46+0000",
                      "modifiedBy": "hgildong",
                      "modifiedDate": "2019-12-15T04:30:46+0000",
                      "condition": {
                        "conditionNodeId": 1,
                        "values": [
                          "response_code"
                        ],
                        "conditionNode": {
                          "conditionNodeId": 2,
                          "values": [
                            "is_one_of"
                          ],
                          "conditionNode": {
                            "conditionNodeId": 3,
                            "values": [
                              200,
                              201
                            ]
                          }
                        }
                      }
                    },
                    "testRequest": {
                      "createdBy": "adevi",
                      "createdDate": "2019-12-31T08:52:57+0000",
                      "modifiedBy": "jsmith",
                      "modifiedDate": "2020-01-03T09:26:09+0000",
                      "testRequestId": 59,
                      "testRequestUrl": "https://www.atcuser8.akamaiu.com/?abc=1234555",
                      "requestHeaders": [
                        {
                          "headerAction": "add",
                          "headerName": "Accept",
                          "headerValues": "v1"
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each condition.",
          "example": "{{conditionId}}",
          "in": "path",
          "name": "conditionId",
          "required": true,
          "schema": {
            "example": 47,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/conditionId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-catalog/conditions/{conditionId}/restore": {
      "post": {
        "description": "Restores a deleted condition. A successful operation responds with the 200 status and the restored object in the `successes` array.",
        "operationId": "post-test-catalog-condition-restore",
        "summary": "Restore a condition",
        "tags": [
          "Conditions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-catalog-condition-restore"
        },
        "responses": {
          "200": {
            "description": "The response returns the restored condition.",
            "content": {
              "application/json": {
                "example": {
                  "conditions": {
                    "failures": [],
                    "successes": [
                      {
                        "conditionId": 47,
                        "createdBy": "jperez",
                        "createdDate": "2020-09-18T06:00:55+0000",
                        "modifiedBy": "adevi",
                        "modifiedDate": "2020-09-18T07:48:38+0000",
                        "condition": {
                          "conditionNodeId": 1,
                          "values": [
                            "response_header"
                          ],
                          "conditionNode": {
                            "conditionNodeId": 4,
                            "values": [
                              "atcuser"
                            ],
                            "conditionNode": {
                              "conditionNodeId": 5,
                              "values": [
                                "has_a_value"
                              ]
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains the restored condition or details about failure of the operation.",
                  "type": "object",
                  "required": [
                    "conditions"
                  ],
                  "properties": {
                    "conditions": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "description": "Contains conditions available for your organization.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about the condition.",
                              "type": "object",
                              "required": [
                                "conditionId",
                                "condition",
                                "createdBy",
                                "createdDate",
                                "modifiedBy",
                                "modifiedDate"
                              ],
                              "properties": {
                                "condition": {
                                  "additionalProperties": false,
                                  "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                                  "type": "object",
                                  "required": [
                                    "conditionNodeId",
                                    "values"
                                  ],
                                  "properties": {
                                    "conditionNode": {
                                      "additionalProperties": false,
                                      "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                                      "type": "object",
                                      "required": [
                                        "conditionNodeId",
                                        "values"
                                      ],
                                      "properties": {
                                        "conditionNode": {
                                          "type": "object"
                                        },
                                        "conditionNodeId": {
                                          "minimum": 0,
                                          "readOnly": true,
                                          "type": "integer"
                                        },
                                        "values": {
                                          "minItems": 0,
                                          "type": "array",
                                          "items": {
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/condition-node-nested.yaml"
                                      }
                                    },
                                    "conditionNodeId": {
                                      "description": "Unique identifier for each condition node taken from the test catalog template.",
                                      "minimum": 0,
                                      "readOnly": true,
                                      "type": "integer"
                                    },
                                    "values": {
                                      "description": "List of values selected from the condition node or input supported by the node.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/condition-node.yaml"
                                  }
                                },
                                "conditionId": {
                                  "description": "Unique identifier for each condition.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "createdBy": {
                                  "description": "Username who created the condition.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the condition was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the condition.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the condition was last deleted.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the condition.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-condition-response.yaml"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-conditions-response.yaml"
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-restored-condition-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each condition.",
          "example": "{{conditionId}}",
          "in": "path",
          "name": "conditionId",
          "required": true,
          "schema": {
            "example": 47,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/conditionId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-catalog/template": {
      "get": {
        "description": "Returns the test catalog template used for creating conditions. See [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts).",
        "operationId": "get-test-catalog-template",
        "summary": "Get the test catalog template",
        "tags": [
          "Conditions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template"
        },
        "responses": {
          "200": {
            "description": "The response provides the test catalog template.",
            "content": {
              "application/json": {
                "example": {
                  "triggerMappings": {
                    "conditionNodeId": 1,
                    "triggers": [
                      {
                        "triggerValue": "response_header",
                        "validPath": false,
                        "conditionNode": {
                          "conditionNodeId": 4,
                          "triggers": [
                            {
                              "triggerValue": null,
                              "validPath": false,
                              "conditionNode": {
                                "conditionNodeId": 5,
                                "triggers": [
                                  {
                                    "triggerValue": "has_a_value",
                                    "validPath": true,
                                    "conditionNode": {
                                      "conditionNodeId": 7,
                                      "triggers": [
                                        {
                                          "triggerValue": "does_not_end_with",
                                          "validPath": false,
                                          "conditionNode": {
                                            "conditionNodeId": 4,
                                            "triggers": [
                                              {
                                                "triggerValue": null,
                                                "validPath": true,
                                                "conditionNode": {
                                                  "conditionNodeId": 8,
                                                  "triggers": [
                                                    {
                                                      "triggerValue": "ignore_case",
                                                      "validPath": true
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "triggerValue": "begins_with",
                                          "validPath": false,
                                          "conditionNode": {
                                            "conditionNodeId": 4,
                                            "triggers": [
                                              {
                                                "triggerValue": null,
                                                "validPath": true,
                                                "conditionNode": {
                                                  "conditionNodeId": 8,
                                                  "triggers": [
                                                    {
                                                      "triggerValue": "ignore_case",
                                                      "validPath": true
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "triggerValue": "does_not_equal",
                                          "validPath": false,
                                          "conditionNode": {
                                            "conditionNodeId": 4,
                                            "triggers": [
                                              {
                                                "triggerValue": null,
                                                "validPath": true,
                                                "conditionNode": {
                                                  "conditionNodeId": 8,
                                                  "triggers": [
                                                    {
                                                      "triggerValue": "ignore_case",
                                                      "validPath": true
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "triggerValue": "does_not_contain",
                                          "validPath": false,
                                          "conditionNode": {
                                            "conditionNodeId": 4,
                                            "triggers": [
                                              {
                                                "triggerValue": null,
                                                "validPath": true,
                                                "conditionNode": {
                                                  "conditionNodeId": 8,
                                                  "triggers": [
                                                    {
                                                      "triggerValue": "ignore_case",
                                                      "validPath": true
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "triggerValue": "does_not_begin_with",
                                          "validPath": false,
                                          "conditionNode": {
                                            "conditionNodeId": 4,
                                            "triggers": [
                                              {
                                                "triggerValue": null,
                                                "validPath": true,
                                                "conditionNode": {
                                                  "conditionNodeId": 8,
                                                  "triggers": [
                                                    {
                                                      "triggerValue": "ignore_case",
                                                      "validPath": true
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "triggerValue": "matches_regex",
                                          "validPath": false,
                                          "conditionNode": {
                                            "conditionNodeId": 4,
                                            "triggers": [
                                              {
                                                "triggerValue": null,
                                                "validPath": true,
                                                "conditionNode": {
                                                  "conditionNodeId": 8,
                                                  "triggers": [
                                                    {
                                                      "triggerValue": "ignore_case",
                                                      "validPath": true
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "triggerValue": "does_not_match_regex",
                                          "validPath": false,
                                          "conditionNode": {
                                            "conditionNodeId": 4,
                                            "triggers": [
                                              {
                                                "triggerValue": null,
                                                "validPath": true,
                                                "conditionNode": {
                                                  "conditionNodeId": 8,
                                                  "triggers": [
                                                    {
                                                      "triggerValue": "ignore_case",
                                                      "validPath": true
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "triggerValue": "contains",
                                          "validPath": false,
                                          "conditionNode": {
                                            "conditionNodeId": 4,
                                            "triggers": [
                                              {
                                                "triggerValue": null,
                                                "validPath": true,
                                                "conditionNode": {
                                                  "conditionNodeId": 8,
                                                  "triggers": [
                                                    {
                                                      "triggerValue": "ignore_case",
                                                      "validPath": true
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "triggerValue": "ends_with",
                                          "validPath": false,
                                          "conditionNode": {
                                            "conditionNodeId": 4,
                                            "triggers": [
                                              {
                                                "triggerValue": null,
                                                "validPath": true,
                                                "conditionNode": {
                                                  "conditionNodeId": 8,
                                                  "triggers": [
                                                    {
                                                      "triggerValue": "ignore_case",
                                                      "validPath": true
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "triggerValue": "equals",
                                          "validPath": false,
                                          "conditionNode": {
                                            "conditionNodeId": 4,
                                            "triggers": [
                                              {
                                                "triggerValue": null,
                                                "validPath": true,
                                                "conditionNode": {
                                                  "conditionNodeId": 8,
                                                  "triggers": [
                                                    {
                                                      "triggerValue": "ignore_case",
                                                      "validPath": true
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "triggerValue": "has_no_value",
                                    "validPath": true
                                  },
                                  {
                                    "triggerValue": "does_not_exist",
                                    "validPath": true
                                  },
                                  {
                                    "triggerValue": "exists",
                                    "validPath": true
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "triggerValue": "sure_route",
                        "validPath": false,
                        "conditionNode": {
                          "conditionNodeId": 14,
                          "triggers": [
                            {
                              "triggerValue": "is_enabled",
                              "validPath": true
                            },
                            {
                              "triggerValue": "is_not_enabled",
                              "validPath": true
                            }
                          ]
                        }
                      },
                      {
                        "triggerValue": "response_code",
                        "validPath": false,
                        "conditionNode": {
                          "conditionNodeId": 2,
                          "triggers": [
                            {
                              "triggerValue": "is_one_of",
                              "validPath": false,
                              "conditionNode": {
                                "conditionNodeId": 3,
                                "triggers": [
                                  {
                                    "triggerValue": null,
                                    "validPath": true
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "triggerValue": "cache_key_query_parameters",
                        "validPath": false,
                        "conditionNode": {
                          "conditionNodeId": 19,
                          "triggers": [
                            {
                              "triggerValue": "included",
                              "validPath": false,
                              "conditionNode": {
                                "conditionNodeId": 25,
                                "triggers": [
                                  {
                                    "triggerValue": null,
                                    "validPath": true
                                  }
                                ]
                              }
                            },
                            {
                              "triggerValue": "not_included",
                              "validPath": true
                            }
                          ]
                        }
                      },
                      {
                        "triggerValue": "log_request_details",
                        "validPath": false,
                        "conditionNode": {
                          "conditionNodeId": 15,
                          "triggers": [
                            {
                              "triggerValue": "custom_data",
                              "validPath": false,
                              "conditionNode": {
                                "conditionNodeId": 16,
                                "triggers": [
                                  {
                                    "triggerValue": "is_logged",
                                    "validPath": true,
                                    "conditionNode": {
                                      "conditionNodeId": 6,
                                      "triggers": [
                                        {
                                          "triggerValue": "value",
                                          "validPath": false,
                                          "conditionNode": {
                                            "conditionNodeId": 23,
                                            "triggers": [
                                              {
                                                "triggerValue": "is",
                                                "validPath": false,
                                                "conditionNode": {
                                                  "conditionNodeId": 4,
                                                  "triggers": [
                                                    {
                                                      "triggerValue": null,
                                                      "validPath": true
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "triggerValue": "is_not_logged",
                                    "validPath": true
                                  }
                                ]
                              }
                            },
                            {
                              "triggerValue": "referrer_header",
                              "validPath": false,
                              "conditionNode": {
                                "conditionNodeId": 16,
                                "triggers": [
                                  {
                                    "triggerValue": "is_logged",
                                    "validPath": true
                                  },
                                  {
                                    "triggerValue": "is_not_logged",
                                    "validPath": true
                                  }
                                ]
                              }
                            },
                            {
                              "triggerValue": "accept_language_header",
                              "validPath": false,
                              "conditionNode": {
                                "conditionNodeId": 16,
                                "triggers": [
                                  {
                                    "triggerValue": "is_logged",
                                    "validPath": true
                                  },
                                  {
                                    "triggerValue": "is_not_logged",
                                    "validPath": true
                                  }
                                ]
                              }
                            },
                            {
                              "triggerValue": "user_agent_header",
                              "validPath": false,
                              "conditionNode": {
                                "conditionNodeId": 16,
                                "triggers": [
                                  {
                                    "triggerValue": "is_logged",
                                    "validPath": true
                                  },
                                  {
                                    "triggerValue": "is_not_logged",
                                    "validPath": true
                                  }
                                ]
                              }
                            },
                            {
                              "triggerValue": "host_header",
                              "validPath": false,
                              "conditionNode": {
                                "conditionNodeId": 16,
                                "triggers": [
                                  {
                                    "triggerValue": "is_logged",
                                    "validPath": true
                                  },
                                  {
                                    "triggerValue": "is_not_logged",
                                    "validPath": true
                                  }
                                ]
                              }
                            },
                            {
                              "triggerValue": "cookies",
                              "validPath": false,
                              "conditionNode": {
                                "conditionNodeId": 24,
                                "triggers": [
                                  {
                                    "triggerValue": "logged",
                                    "validPath": false,
                                    "conditionNode": {
                                      "conditionNodeId": 17,
                                      "triggers": [
                                        {
                                          "triggerValue": null,
                                          "validPath": true
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "triggerValue": "not_logged",
                                    "validPath": true
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "triggerValue": "origin_server_cache_key_hostname",
                        "validPath": false,
                        "conditionNode": {
                          "conditionNodeId": 23,
                          "triggers": [
                            {
                              "triggerValue": "is",
                              "validPath": false,
                              "conditionNode": {
                                "conditionNodeId": 4,
                                "triggers": [
                                  {
                                    "triggerValue": null,
                                    "validPath": true
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "triggerValue": "last_mile_acceleration",
                        "validPath": false,
                        "conditionNode": {
                          "conditionNodeId": 22,
                          "triggers": [
                            {
                              "triggerValue": "is_gzipped",
                              "validPath": true
                            },
                            {
                              "triggerValue": "is_not_gzipped",
                              "validPath": true
                            }
                          ]
                        }
                      },
                      {
                        "triggerValue": "cp_code",
                        "validPath": false,
                        "conditionNode": {
                          "conditionNodeId": 23,
                          "triggers": [
                            {
                              "triggerValue": "is",
                              "validPath": false,
                              "conditionNode": {
                                "conditionNodeId": 9,
                                "triggers": [
                                  {
                                    "triggerValue": null,
                                    "validPath": true
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "triggerValue": "ignore_case_in_cache_key",
                        "validPath": false,
                        "conditionNode": {
                          "conditionNodeId": 14,
                          "triggers": [
                            {
                              "triggerValue": "is_enabled",
                              "validPath": true
                            },
                            {
                              "triggerValue": "is_not_enabled",
                              "validPath": true
                            }
                          ]
                        }
                      },
                      {
                        "triggerValue": "redirect",
                        "validPath": false,
                        "conditionNode": {
                          "conditionNodeId": 2,
                          "triggers": [
                            {
                              "triggerValue": "is_one_of",
                              "validPath": false,
                              "conditionNode": {
                                "conditionNodeId": 13,
                                "triggers": [
                                  {
                                    "triggerValue": null,
                                    "validPath": true,
                                    "conditionNode": {
                                      "conditionNodeId": 18,
                                      "triggers": [
                                        {
                                          "triggerValue": "location",
                                          "validPath": false,
                                          "conditionNode": {
                                            "conditionNodeId": 23,
                                            "triggers": [
                                              {
                                                "triggerValue": "is",
                                                "validPath": false,
                                                "conditionNode": {
                                                  "conditionNodeId": 4,
                                                  "triggers": [
                                                    {
                                                      "triggerValue": null,
                                                      "validPath": true
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "triggerValue": "prefetch_objects",
                        "validPath": false,
                        "conditionNode": {
                          "conditionNodeId": 20,
                          "triggers": [
                            {
                              "triggerValue": "is_not_triggered",
                              "validPath": true
                            },
                            {
                              "triggerValue": "is_triggered",
                              "validPath": true
                            }
                          ]
                        }
                      },
                      {
                        "triggerValue": "tiered_distribution",
                        "validPath": false,
                        "conditionNode": {
                          "conditionNodeId": 14,
                          "triggers": [
                            {
                              "triggerValue": "is_enabled",
                              "validPath": true
                            },
                            {
                              "triggerValue": "is_not_enabled",
                              "validPath": true
                            }
                          ]
                        }
                      },
                      {
                        "triggerValue": "caching_option",
                        "validPath": false,
                        "conditionNode": {
                          "conditionNodeId": 23,
                          "triggers": [
                            {
                              "triggerValue": "is",
                              "validPath": false,
                              "conditionNode": {
                                "conditionNodeId": 10,
                                "triggers": [
                                  {
                                    "triggerValue": "cache",
                                    "validPath": false,
                                    "conditionNode": {
                                      "conditionNodeId": 11,
                                      "triggers": [
                                        {
                                          "triggerValue": "seconds",
                                          "validPath": false,
                                          "conditionNode": {
                                            "conditionNodeId": 9,
                                            "triggers": [
                                              {
                                                "triggerValue": null,
                                                "validPath": true
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "triggerValue": "minutes",
                                          "validPath": false,
                                          "conditionNode": {
                                            "conditionNodeId": 9,
                                            "triggers": [
                                              {
                                                "triggerValue": null,
                                                "validPath": true
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "triggerValue": "hours",
                                          "validPath": false,
                                          "conditionNode": {
                                            "conditionNodeId": 9,
                                            "triggers": [
                                              {
                                                "triggerValue": null,
                                                "validPath": true
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "triggerValue": "days",
                                          "validPath": false,
                                          "conditionNode": {
                                            "conditionNodeId": 9,
                                            "triggers": [
                                              {
                                                "triggerValue": null,
                                                "validPath": true
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "triggerValue": "no-store",
                                    "validPath": true
                                  },
                                  {
                                    "triggerValue": "bypass-cache",
                                    "validPath": true
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "triggerValue": "variable",
                        "validPath": false,
                        "conditionNode": {
                          "conditionNodeId": 4,
                          "triggers": [
                            {
                              "triggerValue": null,
                              "validPath": false,
                              "conditionNode": {
                                "conditionNodeId": 5,
                                "triggers": [
                                  {
                                    "triggerValue": "has_a_value",
                                    "validPath": true,
                                    "conditionNode": {
                                      "conditionNodeId": 7,
                                      "triggers": [
                                        {
                                          "triggerValue": "does_not_end_with",
                                          "validPath": false,
                                          "conditionNode": {
                                            "conditionNodeId": 4,
                                            "triggers": [
                                              {
                                                "triggerValue": null,
                                                "validPath": true,
                                                "conditionNode": {
                                                  "conditionNodeId": 8,
                                                  "triggers": [
                                                    {
                                                      "triggerValue": "ignore_case",
                                                      "validPath": true
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "triggerValue": "begins_with",
                                          "validPath": false,
                                          "conditionNode": {
                                            "conditionNodeId": 4,
                                            "triggers": [
                                              {
                                                "triggerValue": null,
                                                "validPath": true,
                                                "conditionNode": {
                                                  "conditionNodeId": 8,
                                                  "triggers": [
                                                    {
                                                      "triggerValue": "ignore_case",
                                                      "validPath": true
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "triggerValue": "does_not_equal",
                                          "validPath": false,
                                          "conditionNode": {
                                            "conditionNodeId": 4,
                                            "triggers": [
                                              {
                                                "triggerValue": null,
                                                "validPath": true,
                                                "conditionNode": {
                                                  "conditionNodeId": 8,
                                                  "triggers": [
                                                    {
                                                      "triggerValue": "ignore_case",
                                                      "validPath": true
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "triggerValue": "does_not_contain",
                                          "validPath": false,
                                          "conditionNode": {
                                            "conditionNodeId": 4,
                                            "triggers": [
                                              {
                                                "triggerValue": null,
                                                "validPath": true,
                                                "conditionNode": {
                                                  "conditionNodeId": 8,
                                                  "triggers": [
                                                    {
                                                      "triggerValue": "ignore_case",
                                                      "validPath": true
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "triggerValue": "does_not_begin_with",
                                          "validPath": false,
                                          "conditionNode": {
                                            "conditionNodeId": 4,
                                            "triggers": [
                                              {
                                                "triggerValue": null,
                                                "validPath": true,
                                                "conditionNode": {
                                                  "conditionNodeId": 8,
                                                  "triggers": [
                                                    {
                                                      "triggerValue": "ignore_case",
                                                      "validPath": true
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "triggerValue": "matches_regex",
                                          "validPath": false,
                                          "conditionNode": {
                                            "conditionNodeId": 4,
                                            "triggers": [
                                              {
                                                "triggerValue": null,
                                                "validPath": true,
                                                "conditionNode": {
                                                  "conditionNodeId": 8,
                                                  "triggers": [
                                                    {
                                                      "triggerValue": "ignore_case",
                                                      "validPath": true
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "triggerValue": "does_not_match_regex",
                                          "validPath": false,
                                          "conditionNode": {
                                            "conditionNodeId": 4,
                                            "triggers": [
                                              {
                                                "triggerValue": null,
                                                "validPath": true,
                                                "conditionNode": {
                                                  "conditionNodeId": 8,
                                                  "triggers": [
                                                    {
                                                      "triggerValue": "ignore_case",
                                                      "validPath": true
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "triggerValue": "contains",
                                          "validPath": false,
                                          "conditionNode": {
                                            "conditionNodeId": 4,
                                            "triggers": [
                                              {
                                                "triggerValue": null,
                                                "validPath": true,
                                                "conditionNode": {
                                                  "conditionNodeId": 8,
                                                  "triggers": [
                                                    {
                                                      "triggerValue": "ignore_case",
                                                      "validPath": true
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "triggerValue": "ends_with",
                                          "validPath": false,
                                          "conditionNode": {
                                            "conditionNodeId": 4,
                                            "triggers": [
                                              {
                                                "triggerValue": null,
                                                "validPath": true,
                                                "conditionNode": {
                                                  "conditionNodeId": 8,
                                                  "triggers": [
                                                    {
                                                      "triggerValue": "ignore_case",
                                                      "validPath": true
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "triggerValue": "equals",
                                          "validPath": false,
                                          "conditionNode": {
                                            "conditionNodeId": 4,
                                            "triggers": [
                                              {
                                                "triggerValue": null,
                                                "validPath": true,
                                                "conditionNode": {
                                                  "conditionNodeId": 8,
                                                  "triggers": [
                                                    {
                                                      "triggerValue": "ignore_case",
                                                      "validPath": true
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "triggerValue": "has_no_value",
                                    "validPath": true
                                  },
                                  {
                                    "triggerValue": "does_not_exist",
                                    "validPath": true
                                  },
                                  {
                                    "triggerValue": "exists",
                                    "validPath": true
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "conditionNodes": [
                    {
                      "conditionNodeDescription": "Multiple string test",
                      "conditionNodeId": 7,
                      "valueControls": {
                        "newValueSupported": false,
                        "valueDataType": "string",
                        "valueInputType": "single_choice",
                        "availableValues": [
                          "does_not_begin_with",
                          "ends_with",
                          "does_not_equal",
                          "does_not_contain",
                          "does_not_end_with",
                          "matches_regex",
                          "contains",
                          "does_not_match_regex",
                          "begins_with",
                          "equals"
                        ]
                      }
                    },
                    {
                      "conditionNodeDescription": "Root condition nodes",
                      "conditionNodeId": 1,
                      "valueControls": {
                        "newValueSupported": false,
                        "valueDataType": "string",
                        "valueInputType": "single_choice",
                        "availableValues": [
                          "last_mile_acceleration",
                          "ignore_case_in_cache_key",
                          "origin_server_cache_key_hostname",
                          "sure_route",
                          "tiered_distribution",
                          "response_code",
                          "log_request_details",
                          "caching_option",
                          "variable",
                          "cp_code",
                          "redirect",
                          "prefetch_objects",
                          "response_header",
                          "cache_key_query_parameters"
                        ]
                      }
                    },
                    {
                      "conditionNodeDescription": "Is and is not logged test",
                      "conditionNodeId": 16,
                      "valueControls": {
                        "newValueSupported": false,
                        "valueDataType": "string",
                        "valueInputType": "single_choice",
                        "availableValues": [
                          "is_logged",
                          "is_not_logged"
                        ]
                      }
                    },
                    {
                      "conditionNodeDescription": "Log request values",
                      "conditionNodeId": 15,
                      "valueControls": {
                        "newValueSupported": false,
                        "valueDataType": "string",
                        "valueInputType": "single_choice",
                        "availableValues": [
                          "custom_data",
                          "referrer_header",
                          "host_header",
                          "accept_language_header",
                          "user_agent_header",
                          "cookies"
                        ]
                      }
                    },
                    {
                      "conditionNodeDescription": "Time units",
                      "conditionNodeId": 11,
                      "valueControls": {
                        "newValueSupported": false,
                        "valueDataType": "string",
                        "valueInputType": "single_choice",
                        "availableValues": [
                          "seconds",
                          "days",
                          "hours",
                          "minutes"
                        ]
                      }
                    },
                    {
                      "conditionNodeDescription": "Logged/not logged test",
                      "conditionNodeId": 24,
                      "valueControls": {
                        "newValueSupported": false,
                        "valueDataType": "string",
                        "valueInputType": "single_choice",
                        "availableValues": [
                          "not_logged",
                          "logged"
                        ]
                      }
                    },
                    {
                      "conditionNodeDescription": "Caching options",
                      "conditionNodeId": 10,
                      "valueControls": {
                        "newValueSupported": false,
                        "valueDataType": "string",
                        "valueInputType": "single_choice",
                        "availableValues": [
                          "no-store",
                          "cache",
                          "bypass-cache"
                        ]
                      }
                    },
                    {
                      "conditionNodeDescription": "Is and is not triggered test",
                      "conditionNodeId": 20,
                      "valueControls": {
                        "newValueSupported": false,
                        "valueDataType": "string",
                        "valueInputType": "single_choice",
                        "availableValues": [
                          "is_triggered",
                          "is_not_triggered"
                        ]
                      }
                    },
                    {
                      "conditionNodeDescription": "Is test",
                      "conditionNodeId": 23,
                      "valueControls": {
                        "newValueSupported": false,
                        "valueDataType": "string",
                        "valueInputType": "single_choice",
                        "availableValues": [
                          "is"
                        ]
                      }
                    },
                    {
                      "conditionNodeDescription": "Exists or does not exists test",
                      "conditionNodeId": 5,
                      "valueControls": {
                        "newValueSupported": false,
                        "valueDataType": "string",
                        "valueInputType": "single_choice",
                        "availableValues": [
                          "does_not_exist",
                          "has_no_value",
                          "has_a_value",
                          "exists"
                        ]
                      }
                    },
                    {
                      "conditionNodeDescription": "User input to select multiple response codes",
                      "conditionNodeId": 3,
                      "valueControls": {
                        "newValueSupported": true,
                        "valueDataType": "integer",
                        "valueInputType": "multiple_choice",
                        "availableValues": [
                          400,
                          300,
                          500,
                          200
                        ]
                      }
                    },
                    {
                      "conditionNodeDescription": "Is and is not enabled test",
                      "conditionNodeId": 14,
                      "valueControls": {
                        "newValueSupported": false,
                        "valueDataType": "string",
                        "valueInputType": "single_choice",
                        "availableValues": [
                          "is_enabled",
                          "is_not_enabled"
                        ]
                      }
                    },
                    {
                      "conditionNodeDescription": "Is and is not gzipped test",
                      "conditionNodeId": 22,
                      "valueControls": {
                        "newValueSupported": false,
                        "valueDataType": "string",
                        "valueInputType": "single_choice",
                        "availableValues": [
                          "is_not_gzipped",
                          "is_gzipped"
                        ]
                      }
                    },
                    {
                      "conditionNodeDescription": "String ignore case test",
                      "conditionNodeId": 8,
                      "valueControls": {
                        "newValueSupported": false,
                        "valueDataType": "string",
                        "valueInputType": "single_choice",
                        "availableValues": [
                          "ignore_case"
                        ]
                      }
                    },
                    {
                      "conditionNodeDescription": "Input value select",
                      "conditionNodeId": 6,
                      "valueControls": {
                        "newValueSupported": false,
                        "valueDataType": "string",
                        "valueInputType": "single_choice",
                        "availableValues": [
                          "value"
                        ]
                      }
                    },
                    {
                      "conditionNodeDescription": "Included/not included test",
                      "conditionNodeId": 19,
                      "valueControls": {
                        "newValueSupported": false,
                        "valueDataType": "string",
                        "valueInputType": "single_choice",
                        "availableValues": [
                          "included",
                          "not_included"
                        ]
                      }
                    },
                    {
                      "conditionNodeDescription": "Is one of test",
                      "conditionNodeId": 2,
                      "valueControls": {
                        "newValueSupported": false,
                        "valueDataType": "string",
                        "valueInputType": "single_choice",
                        "availableValues": [
                          "is_one_of"
                        ]
                      }
                    },
                    {
                      "conditionNodeDescription": "User input to select multiple redirect(3xx) response codes",
                      "conditionNodeId": 13,
                      "valueControls": {
                        "newValueSupported": true,
                        "valueDataType": "integer",
                        "valueInputType": "multiple_choice",
                        "availableValues": [
                          302,
                          301
                        ]
                      }
                    },
                    {
                      "conditionNodeDescription": "String equals test",
                      "conditionNodeId": 12,
                      "valueControls": {
                        "newValueSupported": false,
                        "valueDataType": "string",
                        "valueInputType": "single_choice",
                        "availableValues": [
                          "equals"
                        ]
                      }
                    },
                    {
                      "conditionNodeDescription": "Redirect url(location) test",
                      "conditionNodeId": 18,
                      "valueControls": {
                        "newValueSupported": false,
                        "valueDataType": "string",
                        "valueInputType": "single_choice",
                        "availableValues": [
                          "location"
                        ]
                      }
                    },
                    {
                      "conditionNodeDescription": "User input to enter multiple string in order",
                      "conditionNodeId": 25,
                      "valueControls": {
                        "newValueSupported": true,
                        "valueDataType": "string",
                        "valueInputType": "multiple_choice",
                        "availableValues": []
                      }
                    },
                    {
                      "conditionNodeDescription": "User input to enter multiple string",
                      "conditionNodeId": 17,
                      "valueControls": {
                        "newValueSupported": true,
                        "valueDataType": "string",
                        "valueInputType": "multiple_choice",
                        "availableValues": []
                      }
                    },
                    {
                      "conditionNodeDescription": "User input to enter a integer",
                      "conditionNodeId": 9,
                      "valueControls": {
                        "newValueSupported": true,
                        "valueDataType": "integer",
                        "valueInputType": "free_text",
                        "availableValues": []
                      }
                    },
                    {
                      "conditionNodeDescription": "User input to enter a string",
                      "conditionNodeId": 4,
                      "valueControls": {
                        "newValueSupported": true,
                        "valueDataType": "string",
                        "valueInputType": "free_text",
                        "availableValues": []
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains the test catalog template used for creating conditions. Conditions have a sentence-like structure. The template provides the list of available building blocks, `conditionNodes`, and combinations in which you can combine them, `triggerMappings`. See detailed descriptions of Conditions and Test catalog template in the [Test Center concepts](https://techdocs.akamai.com/test-ctr/reference/test-center-concepts) section.",
                  "type": "object",
                  "required": [
                    "conditionNodes",
                    "triggerMappings"
                  ],
                  "properties": {
                    "conditionNodes": {
                      "description": "Contains the Akamai-provided list of available nodes which are the building blocks of the conditions together with their descriptions.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "conditionNodeId",
                          "conditionNodeDescription",
                          "valueControls"
                        ],
                        "properties": {
                          "conditionNodeDescription": {
                            "description": "Summarizes the purpose of each condition node.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "conditionNodeId": {
                            "description": "Identifier of each condition node.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "valueControls": {
                            "additionalProperties": false,
                            "description": "Contains information about values supported by the condition node. It can be either a fixed list of values for you to choose from or information about supported input.",
                            "type": "object",
                            "required": [
                              "valueDataType",
                              "valueInputType",
                              "newValueSupported",
                              "availableValues"
                            ],
                            "properties": {
                              "availableValues": {
                                "description": "Contains predefined values available in the condition node. Depending on the node it can be either an array of strings or integers.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "oneOf": [
                                    {
                                      "title": "String",
                                      "type": "string"
                                    },
                                    {
                                      "title": "Integer",
                                      "type": "integer"
                                    }
                                  ]
                                }
                              },
                              "newValueSupported": {
                                "description": "Whether you can provide your own values, or if you need to select them from `availableValues`.",
                                "type": "boolean"
                              },
                              "valueDataType": {
                                "description": "Specifies whether `availableValues` are `string` or `integer` type.",
                                "type": "string",
                                "enum": [
                                  "string",
                                  "integer"
                                ]
                              },
                              "valueInputType": {
                                "description": "Specifies whether the set of values you provide are `single_choice`, `multiple_choice`, or `free_text` that adheres to the condition's `valueDataType`.",
                                "type": "string",
                                "enum": [
                                  "single_choice",
                                  "multiple_choice",
                                  "free_text"
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "triggerMappings": {
                      "additionalProperties": false,
                      "description": "Contains the sequence of subsequently triggered condition nodes that you need to follow to create a valid condition.",
                      "type": "object",
                      "required": [
                        "conditionNodeId",
                        "triggers"
                      ],
                      "properties": {
                        "conditionNodeId": {
                          "description": "Identifier of the condition node from which the construction of the condition starts.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "triggers": {
                          "description": "Contains the sequence of subsequently triggered condition nodes that you need to follow to create a valid condition. Each value selected from the `conditionNodeId` of `1` in the `conditionNodes` array, triggers different order of combining the condition nodes. You need to follow the `triggerMappings` flow, until you construct the needed condition and the `validPath` for the last triggered conditionNode is `true`.",
                          "minItems": 1,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "Contains the sequence of subsequently triggered condition nodes.",
                            "type": "object",
                            "required": [
                              "triggerValue",
                              "validPath"
                            ],
                            "properties": {
                              "conditionNode": {
                                "additionalProperties": false,
                                "description": "Contains details of subsequently triggered condition nodes. Absence of this object member indicates the final node that completes the condition.",
                                "type": "object",
                                "required": [
                                  "conditionNodeId",
                                  "triggers"
                                ],
                                "properties": {
                                  "conditionNodeId": {
                                    "description": "Identifier of the triggered condition node. Depending on its `validPath`, it's either the identifier of the condition node triggering subsequent value or the condition node ending the condition.",
                                    "minimum": 1,
                                    "type": "integer"
                                  },
                                  "triggers": {
                                    "description": "List of triggers for each available values of the condition node.",
                                    "minItems": 1,
                                    "type": "array",
                                    "items": {
                                      "description": "A further-nested condition trigger.",
                                      "type": "object",
                                      "x-akamai": {
                                        "file-path": "schemas/catalog-template-trigger-nested.yaml"
                                      }
                                    }
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/catalog-template-trigger-condition-node.yaml"
                                }
                              },
                              "triggerValue": {
                                "description": "Value selected from the condition node. Each value from the array of `availableValues` in the `conditionNodes` array becomes a `triggerValue`.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "validPath": {
                                "description": "Whether the condition is valid at this stage of the flow. Otherwise you need to continue constructing the condition.",
                                "type": "boolean"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/catalog-template-trigger.yaml"
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-test-catalog-template-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/functional/test-requests": {
      "post": {
        "description": "Creates a list of new test request. The operation responds with a [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses) that consists of two arrays, `successes` and `failures`. The `successes` array lists all successfully created objects , whereas the `failures` array provides details on any remainders that failed.",
        "operationId": "post-test-requests",
        "summary": "Create test requests",
        "tags": [
          "Test requests"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-requests"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Test request contains information about the test request executed during the test.",
                "minItems": 1,
                "type": "array",
                "items": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "testRequestUrl"
                  ],
                  "properties": {
                    "requestHeaders": {
                      "description": "Request headers included in the functional test case.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "headerName",
                          "headerValue",
                          "headerAction"
                        ],
                        "properties": {
                          "headerAction": {
                            "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                            "type": "string",
                            "enum": [
                              "add",
                              "modify",
                              "filter"
                            ]
                          },
                          "headerName": {
                            "description": "Name of the request header.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "headerValue": {
                            "description": "Value of the request header.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "tags": {
                      "description": "Keywords for the test request.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "testRequestUrl": {
                      "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                      "format": "uri",
                      "maxLength": 2048,
                      "type": "string"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/createTestRequestRequest.yaml"
                }
              },
              "example": [
                {
                  "testRequestUrl": "http://www.atcuser8.akamaiu.com/images/logo.png",
                  "tags": [
                    "images"
                  ],
                  "requestHeaders": [
                    {
                      "headerAction": "modify",
                      "headerName": "Accept",
                      "headerValue": "image/png"
                    }
                  ]
                }
              ]
            }
          }
        },
        "responses": {
          "207": {
            "description": "[Partial success responses](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "failures": [],
                  "successes": [
                    {
                      "createdBy": "mrossi",
                      "createdDate": "2019-11-15T15:42:50+0000",
                      "modifiedBy": "hgildong",
                      "modifiedDate": "2019-11-15T15:42:50+0000",
                      "testRequestId": 11,
                      "testRequestUrl": "http://www.atcuser8.akamaiu.com/images/logo.png",
                      "tags": [
                        "images"
                      ],
                      "requestHeaders": [
                        {
                          "headerAction": "modify",
                          "headerName": "Accept",
                          "headerValue": "image/png"
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Response for creating the test requests.",
                  "type": "object",
                  "required": [
                    "failures",
                    "successes"
                  ],
                  "properties": {
                    "failures": {
                      "description": "Contains a list of unique identifiers of test requests that failed to be created and details about errors.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Test request objects that already exist.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about a test request.",
                              "type": "object",
                              "required": [
                                "testRequestId",
                                "testRequestUrl",
                                "createdBy",
                                "createdDate",
                                "modifiedBy",
                                "modifiedDate"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "Username who created the test request.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the test request was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the test request.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the test request.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "requestHeaders": {
                                  "description": "Contains information about request headers included in the functional test case.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                      "headerName",
                                      "headerValue",
                                      "headerAction"
                                    ],
                                    "properties": {
                                      "headerAction": {
                                        "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                                        "type": "string",
                                        "enum": [
                                          "add",
                                          "modify",
                                          "filter"
                                        ]
                                      },
                                      "headerName": {
                                        "description": "Name of the request header.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "headerValue": {
                                        "description": "Value of the request header.",
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "tags": {
                                  "description": "Keywords associated with the test request.",
                                  "maxItems": 50,
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                },
                                "testRequestId": {
                                  "description": "Unique identifier for each test request.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "testRequestUrl": {
                                  "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                                  "format": "uri",
                                  "maxLength": 2048,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-test-request-response.yaml"
                              }
                            }
                          },
                          "requestField": {
                            "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestValues": {
                            "description": "Request field values.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "successes": {
                      "description": "Contains a list of unique identifiers of test requests created successfully.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information about a test request.",
                        "type": "object",
                        "required": [
                          "testRequestId",
                          "testRequestUrl",
                          "createdBy",
                          "createdDate",
                          "modifiedBy",
                          "modifiedDate"
                        ],
                        "properties": {
                          "createdBy": {
                            "description": "Username who created the test request.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the test request was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "deletedBy": {
                            "description": "Username who last deleted the test request.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "deletedDate": {
                            "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "modifiedBy": {
                            "description": "Username who last modified the test request.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "modifiedDate": {
                            "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "requestHeaders": {
                            "description": "Contains information about request headers included in the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "headerName",
                                "headerValue",
                                "headerAction"
                              ],
                              "properties": {
                                "headerAction": {
                                  "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                                  "type": "string",
                                  "enum": [
                                    "add",
                                    "modify",
                                    "filter"
                                  ]
                                },
                                "headerName": {
                                  "description": "Name of the request header.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "headerValue": {
                                  "description": "Value of the request header.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "tags": {
                            "description": "Keywords associated with the test request.",
                            "maxItems": 50,
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "testRequestId": {
                            "description": "Unique identifier for each test request.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "testRequestUrl": {
                            "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                            "format": "uri",
                            "maxLength": 2048,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/get-test-request-response.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/createTestRequestResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists test requests created in your organization. The list can also include deleted test requests that you can restore. The response is an array of objects, each keyed by `testRequestId`.",
        "operationId": "get-test-requests",
        "summary": "List test requests",
        "tags": [
          "Test requests"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-requests"
        },
        "responses": {
          "200": {
            "description": "The response lists test requests.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Contains test requests created in your organization.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Contains information about a test request.",
                    "type": "object",
                    "required": [
                      "testRequestId",
                      "testRequestUrl",
                      "createdBy",
                      "createdDate",
                      "modifiedBy",
                      "modifiedDate"
                    ],
                    "properties": {
                      "createdBy": {
                        "description": "Username who created the test request.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 timestamp indicating when the test request was created.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "deletedBy": {
                        "description": "Username who last deleted the test request.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "deletedDate": {
                        "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "modifiedBy": {
                        "description": "Username who last modified the test request.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "requestHeaders": {
                        "description": "Contains information about request headers included in the functional test case.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "headerName",
                            "headerValue",
                            "headerAction"
                          ],
                          "properties": {
                            "headerAction": {
                              "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                              "type": "string",
                              "enum": [
                                "add",
                                "modify",
                                "filter"
                              ]
                            },
                            "headerName": {
                              "description": "Name of the request header.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "headerValue": {
                              "description": "Value of the request header.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        }
                      },
                      "tags": {
                        "description": "Keywords associated with the test request.",
                        "maxItems": 50,
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "testRequestId": {
                        "description": "Unique identifier for each test request.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "testRequestUrl": {
                        "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                        "format": "uri",
                        "maxLength": 2048,
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/get-test-request-response.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestRequestsResponse.yaml"
                  }
                },
                "example": [
                  {
                    "createdBy": "adevi",
                    "createdDate": "2022-11-15T15:42:50+0000",
                    "modifiedBy": "adevi",
                    "modifiedDate": "2022-11-15T15:42:50+0000",
                    "testRequestId": 11,
                    "testRequestUrl": "http://www.atcuser8.akamaiu.com/images/logo.png",
                    "tags": [
                      "images"
                    ],
                    "requestHeaders": [
                      {
                        "headerAction": "modify",
                        "headerName": "Accept",
                        "headerValue": "image/png"
                      }
                    ]
                  },
                  {
                    "createdBy": "tyamada",
                    "createdDate": "2022-11-15T16:42:50+0000",
                    "modifiedBy": "tyamada",
                    "modifiedDate": "2022-11-15T16:42:50+0000",
                    "testRequestId": 12,
                    "testRequestUrl": "http://www.atcuser8.akamaiu.com/images/diagram.png",
                    "tags": [
                      "images"
                    ],
                    "requestHeaders": [
                      {
                        "headerName": "Accept"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Whether to list any items deleted within the last 30 days that you can restore. It's `false` by default.",
            "example": "{{includeRecentlyDeleted}}",
            "in": "query",
            "name": "includeRecentlyDeleted",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/includeRecentlyDeleted-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/functional/test-requests/{testRequestId}": {
      "get": {
        "description": "Returns details of a test request.",
        "operationId": "get-test-request",
        "summary": "Get a test request",
        "tags": [
          "Test requests"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-request"
        },
        "responses": {
          "200": {
            "description": "The response provides test request details.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "szhang",
                  "createdDate": "2019-11-15T15:42:50+0000",
                  "modifiedBy": "szhang",
                  "modifiedDate": "2019-11-15T15:42:50+0000",
                  "testRequestId": 11,
                  "testRequestUrl": "http://www.atcuser8.akamaiu.com/images/logo.png",
                  "tags": [
                    "images"
                  ],
                  "requestHeaders": [
                    {
                      "headerAction": "modify",
                      "headerName": "Accept",
                      "headerValue": "image/png"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about a test request.",
                  "type": "object",
                  "required": [
                    "testRequestId",
                    "testRequestUrl",
                    "createdBy",
                    "createdDate",
                    "modifiedBy",
                    "modifiedDate"
                  ],
                  "properties": {
                    "createdBy": {
                      "description": "Username who created the test request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the test request was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the test request.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the test request.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "requestHeaders": {
                      "description": "Contains information about request headers included in the functional test case.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "headerName",
                          "headerValue",
                          "headerAction"
                        ],
                        "properties": {
                          "headerAction": {
                            "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                            "type": "string",
                            "enum": [
                              "add",
                              "modify",
                              "filter"
                            ]
                          },
                          "headerName": {
                            "description": "Name of the request header.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "headerValue": {
                            "description": "Value of the request header.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "tags": {
                      "description": "Keywords associated with the test request.",
                      "maxItems": 50,
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "testRequestId": {
                      "description": "Unique identifier for each test request.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "testRequestUrl": {
                      "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                      "format": "uri",
                      "maxLength": 2048,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-test-request-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates a test request. For optional, modifiable request members that you don't include in the request Test Center uses default values.",
        "operationId": "put-test-request",
        "summary": "Update a test request",
        "tags": [
          "Test requests"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/put-test-request"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "testRequestId": 11,
                "testRequestUrl": "http://www.atcuser8.akamaiu.com/assets/images/logo.png",
                "tags": [
                  "images",
                  "homepage"
                ],
                "requestHeaders": [
                  {
                    "headerAction": "modify",
                    "headerName": "Accept",
                    "headerValue": "image/png"
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Contains information about a test request. When sending the PUT request you need to provide only required members. For optional, missing ones Test Center uses default values.",
                "type": "object",
                "required": [
                  "testRequestUrl"
                ],
                "properties": {
                  "createdBy": {
                    "description": "Username who created the test request.",
                    "example": "{{createdBy}}",
                    "minLength": 1,
                    "readOnly": true,
                    "type": "string"
                  },
                  "createdDate": {
                    "description": "ISO 8601 timestamp indicating when the test request was created.",
                    "example": "{{createdDate}}",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "modifiedBy": {
                    "description": "Username who last modified the test request.",
                    "example": "{{modifiedBy}}",
                    "minLength": 0,
                    "readOnly": true,
                    "type": "string"
                  },
                  "modifiedDate": {
                    "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                    "example": "{{modifiedDate}}",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "requestHeaders": {
                    "minItems": 0,
                    "type": "array",
                    "default": [],
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "headerName",
                        "headerValue",
                        "headerAction"
                      ],
                      "properties": {
                        "headerAction": {
                          "description": "Your request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                          "type": "string",
                          "enum": [
                            "add",
                            "modify",
                            "filter"
                          ]
                        },
                        "headerName": {
                          "description": "Name of the request header that you provide.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "headerValue": {
                          "description": "Value of the request header that you provide.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "tags": {
                    "description": "Keywords you assign to the test request. The [default value](https://techdocs.akamai.com/test-ctr/reference/default-values) for the PUT request is an empty array.",
                    "minItems": 0,
                    "type": "array",
                    "default": [],
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "testRequestId": {
                    "description": "Unique identifier for each test request.",
                    "example": "{{testRequestId}}",
                    "minimum": 1,
                    "readOnly": true,
                    "type": "integer"
                  },
                  "testRequestUrl": {
                    "description": "Fully qualified URL of the page or object you want to test. It needs to contain a protocol, a hostname, and a path, as well as query string parameters, if present. Test Center requests this URL from a browser, as well as any requests triggered by it.",
                    "example": "{{testRequestUrl}}",
                    "format": "uri",
                    "maxLength": 2048,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/updateTestRequestRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response returns the updated test request.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "adevi",
                  "createdDate": "2019-11-15T15:42:50+0000",
                  "modifiedBy": "jperez",
                  "modifiedDate": "2019-11-15T15:48:14+0000",
                  "testRequestId": 11,
                  "testRequestUrl": "http://www.atcuser8.akamaiu.com/assets/images/logo.png",
                  "tags": [
                    "images",
                    "homepage"
                  ],
                  "requestHeaders": [
                    {
                      "headerAction": "modify",
                      "headerName": "Accept",
                      "headerValue": "image/png"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about a test request.",
                  "type": "object",
                  "required": [
                    "testRequestId",
                    "testRequestUrl",
                    "createdBy",
                    "createdDate",
                    "modifiedBy",
                    "modifiedDate"
                  ],
                  "properties": {
                    "createdBy": {
                      "description": "Username who created the test request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the test request was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the test request.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the test request.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "requestHeaders": {
                      "description": "Contains information about request headers included in the functional test case.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "headerName",
                          "headerValue",
                          "headerAction"
                        ],
                        "properties": {
                          "headerAction": {
                            "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                            "type": "string",
                            "enum": [
                              "add",
                              "modify",
                              "filter"
                            ]
                          },
                          "headerName": {
                            "description": "Name of the request header.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "headerValue": {
                            "description": "Value of the request header.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "tags": {
                      "description": "Keywords associated with the test request.",
                      "maxItems": 50,
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "testRequestId": {
                      "description": "Unique identifier for each test request.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "testRequestUrl": {
                      "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                      "format": "uri",
                      "maxLength": 2048,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-test-request-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Deletes a test request. You can [restore](https://techdocs.akamai.com/test-ctr/reference/post-test-request-restore) test requests within 30 days of deleting them.",
        "operationId": "delete-test-request",
        "summary": "Delete a test request",
        "tags": [
          "Test requests"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/delete-test-request"
        },
        "responses": {
          "204": {
            "description": "Successfully deleted test request.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each test request.",
          "example": "{{testRequestId}}",
          "in": "path",
          "name": "testRequestId",
          "required": true,
          "schema": {
            "example": 59,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testRequestId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-requests/{testRequestId}/associations/test-cases": {
      "get": {
        "description": "Lists all functional test cases that use a test request. The response is an array of objects, each keyed by `testCaseId`.",
        "operationId": "get-test-request-associations-test-cases",
        "summary": "List functional test cases that use a test request",
        "tags": [
          "Test requests"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-request-associations-test-cases"
        },
        "responses": {
          "200": {
            "description": "The response list test cases.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Contains functional test cases created in your organization.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Contains information about the functional test cases and included objects: conditions, test requests, and client profiles.",
                    "type": "object",
                    "required": [
                      "testCaseId",
                      "clientProfile",
                      "testRequest",
                      "condition",
                      "createdBy",
                      "createdDate",
                      "modifiedBy",
                      "modifiedDate"
                    ],
                    "properties": {
                      "clientProfile": {
                        "additionalProperties": false,
                        "description": "Contains information about the included client profile.",
                        "type": "object",
                        "required": [
                          "clientProfileId",
                          "browser",
                          "geoLocation",
                          "ipVersion"
                        ],
                        "properties": {
                          "browser": {
                            "additionalProperties": false,
                            "description": "Contains information about the real browser used to execute the functional test case.",
                            "type": "object",
                            "required": [
                              "name",
                              "version"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name of the browser used to run functional test cases.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "version": {
                                "description": "Version of the browser used to run functional test cases.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "clientProfileId": {
                            "description": "Unique identifier of the client profile.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "geoLocation": {
                            "description": "Geographic region for which the functional test cases using this client profile would execute. The only currently available value is `us` for United States.",
                            "type": "string",
                            "enum": [
                              "us"
                            ]
                          },
                          "ipVersion": {
                            "description": "IP versions for which the functional test cases using this client profile are run, either `ipv4` or `ipv6`.",
                            "type": "string",
                            "enum": [
                              "ipv4",
                              "ipv6"
                            ]
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/get-client-profile-response.yaml"
                        }
                      },
                      "condition": {
                        "additionalProperties": false,
                        "description": "Contains information about the included condition.",
                        "type": "object",
                        "required": [
                          "conditionId",
                          "condition",
                          "createdBy",
                          "createdDate",
                          "modifiedBy",
                          "modifiedDate"
                        ],
                        "properties": {
                          "condition": {
                            "additionalProperties": false,
                            "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                            "type": "object",
                            "required": [
                              "conditionNodeId",
                              "values"
                            ],
                            "properties": {
                              "conditionNode": {
                                "additionalProperties": false,
                                "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                                "type": "object",
                                "required": [
                                  "conditionNodeId",
                                  "values"
                                ],
                                "properties": {
                                  "conditionNode": {
                                    "type": "object"
                                  },
                                  "conditionNodeId": {
                                    "minimum": 0,
                                    "readOnly": true,
                                    "type": "integer"
                                  },
                                  "values": {
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/condition-node-nested.yaml"
                                }
                              },
                              "conditionNodeId": {
                                "description": "Unique identifier for each condition node taken from the test catalog template.",
                                "minimum": 0,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "values": {
                                "description": "List of values selected from the condition node or input supported by the node.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/condition-node.yaml"
                            }
                          },
                          "conditionId": {
                            "description": "Unique identifier for each condition.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "createdBy": {
                            "description": "Username who created the condition.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the condition was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "deletedBy": {
                            "description": "Username who last deleted the condition.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "deletedDate": {
                            "description": "ISO 8601 timestamp indicating when the condition was last deleted.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "modifiedBy": {
                            "description": "Username who last modified the condition.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "modifiedDate": {
                            "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/get-condition-response.yaml"
                        }
                      },
                      "createdBy": {
                        "description": "Username who created the functional test case.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 timestamp indicating when the functional test case was created.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "deletedBy": {
                        "description": "Username who last deleted the functional test case.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "deletedDate": {
                        "description": "ISO 8601 timestamp indicating when the functional test case was last deleted.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "modifiedBy": {
                        "description": "Username who last modified the functional test case.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "ISO 8601 timestamp indicating when the functional test case was last modified.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "testCaseId": {
                        "description": "Unique identifier for each functional test case.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "testRequest": {
                        "additionalProperties": false,
                        "description": "Contains information about the included test request.",
                        "type": "object",
                        "required": [
                          "testRequestId",
                          "testRequestUrl",
                          "createdBy",
                          "createdDate",
                          "modifiedBy",
                          "modifiedDate"
                        ],
                        "properties": {
                          "createdBy": {
                            "description": "Username who created the test request.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the test request was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "deletedBy": {
                            "description": "Username who last deleted the test request.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "deletedDate": {
                            "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "modifiedBy": {
                            "description": "Username who last modified the test request.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "modifiedDate": {
                            "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "requestHeaders": {
                            "description": "Contains information about request headers included in the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "headerName",
                                "headerValue",
                                "headerAction"
                              ],
                              "properties": {
                                "headerAction": {
                                  "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                                  "type": "string",
                                  "enum": [
                                    "add",
                                    "modify",
                                    "filter"
                                  ]
                                },
                                "headerName": {
                                  "description": "Name of the request header.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "headerValue": {
                                  "description": "Value of the request header.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "tags": {
                            "description": "Keywords associated with the test request.",
                            "maxItems": 50,
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "testRequestId": {
                            "description": "Unique identifier for each test request.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "testRequestUrl": {
                            "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                            "format": "uri",
                            "maxLength": 2048,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/get-test-request-response.yaml"
                        }
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/get-functional-test-case-response.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestCasesResponse.yaml"
                  }
                },
                "example": [
                  {
                    "createdBy": "alfulani",
                    "createdDate": "2020-01-07T06:25:07+0000",
                    "modifiedBy": "adevi",
                    "modifiedDate": "2020-01-07T06:25:07+0000",
                    "testCaseId": 309,
                    "clientProfile": {
                      "clientProfileId": 2,
                      "geoLocation": "us",
                      "ipVersion": "ipv4",
                      "browser": {
                        "name": "chrome",
                        "version": "72"
                      }
                    },
                    "condition": {
                      "conditionId": 47,
                      "createdBy": "mrossi",
                      "createdDate": "2019-12-15T04:30:46+0000",
                      "modifiedBy": "szhang",
                      "modifiedDate": "2020-01-06T19:58:52+0000",
                      "condition": {
                        "conditionNodeId": 1,
                        "values": [
                          "response_header"
                        ],
                        "conditionNode": {
                          "conditionNodeId": 4,
                          "values": [
                            "Content-Type"
                          ],
                          "conditionNode": {
                            "conditionNodeId": 5,
                            "values": [
                              "has_a_value"
                            ],
                            "conditionNode": {
                              "conditionNodeId": 7,
                              "values": [
                                "ends_with"
                              ],
                              "conditionNode": {
                                "conditionNodeId": 4,
                                "values": [
                                  "json"
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "testRequest": {
                      "createdBy": "adevi",
                      "createdDate": "2019-11-15T15:42:50+0000",
                      "modifiedBy": "jsmith",
                      "modifiedDate": "2019-11-15T15:42:50+0000",
                      "testRequestId": 11,
                      "testRequestUrl": "http://www.atcuser8.akamaiu.com/images/logo.png",
                      "tags": [
                        "images"
                      ],
                      "requestHeaders": [
                        {
                          "headerAction": "modify",
                          "headerName": "Accept",
                          "headerValue": "image/png"
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each test request.",
          "example": "{{testRequestId}}",
          "in": "path",
          "name": "testRequestId",
          "required": true,
          "schema": {
            "example": 59,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testRequestId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-requests/{testRequestId}/restore": {
      "post": {
        "description": "Restores a deleted test request. A successful operation responds with the 200 status and the restored object in the `successes` array.",
        "operationId": "post-test-request-restore",
        "summary": "Restore a test request",
        "tags": [
          "Test requests"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-request-restore"
        },
        "responses": {
          "200": {
            "description": "The response returns the restored test request.",
            "content": {
              "application/json": {
                "example": {
                  "testRequests": {
                    "failures": [],
                    "successes": [
                      {
                        "createdBy": "alfulani",
                        "createdDate": "2020-09-18T01:52:30+0000",
                        "modifiedBy": "jkowalski",
                        "modifiedDate": "2020-09-18T09:34:32+0000",
                        "testRequestId": 11,
                        "testRequestUrl": "http://www.atcuser8.akamaiu.com/images/logo.png",
                        "tags": [
                          "ATC_Automation-1600393945474-Tag"
                        ],
                        "requestHeaders": [
                          {
                            "headerAction": "add",
                            "headerName": "Accept-ATC_Automation-1600393945474",
                            "headerValue": "Application/html"
                          }
                        ]
                      }
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains the restored test request or details about failure of the operation.",
                  "type": "object",
                  "required": [
                    "testRequests"
                  ],
                  "properties": {
                    "testRequests": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "description": "Contains test requests created in your organization.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about a test request.",
                              "type": "object",
                              "required": [
                                "testRequestId",
                                "testRequestUrl",
                                "createdBy",
                                "createdDate",
                                "modifiedBy",
                                "modifiedDate"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "Username who created the test request.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the test request was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the test request.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the test request.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "requestHeaders": {
                                  "description": "Contains information about request headers included in the functional test case.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                      "headerName",
                                      "headerValue",
                                      "headerAction"
                                    ],
                                    "properties": {
                                      "headerAction": {
                                        "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                                        "type": "string",
                                        "enum": [
                                          "add",
                                          "modify",
                                          "filter"
                                        ]
                                      },
                                      "headerName": {
                                        "description": "Name of the request header.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "headerValue": {
                                        "description": "Value of the request header.",
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "tags": {
                                  "description": "Keywords associated with the test request.",
                                  "maxItems": 50,
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                },
                                "testRequestId": {
                                  "description": "Unique identifier for each test request.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "testRequestUrl": {
                                  "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                                  "format": "uri",
                                  "maxLength": 2048,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-test-request-response.yaml"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-test-requests-response.yaml"
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getRestoredTestRequestResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each test request.",
          "example": "{{testRequestId}}",
          "in": "path",
          "name": "testRequestId",
          "required": true,
          "schema": {
            "example": 59,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testRequestId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-suites": {
      "post": {
        "description": "Creates a new test suite.",
        "operationId": "post-test-suites",
        "summary": "Create a test suite",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-suites"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "locked": false,
                "stateful": false,
                "testSuiteDescription": "This test suite performs basic check of www.atcuser8.akamaiu.com",
                "testSuiteName": "www.atcuser8.akamaiu.com test suite"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Contains information about a test suite.",
                "type": "object",
                "required": [
                  "testSuiteName",
                  "locked",
                  "stateful"
                ],
                "properties": {
                  "locked": {
                    "description": "Whether the test suite is locked. If it's locked, only designated owners or editors can modify it.",
                    "example": "{{locked}}",
                    "type": "boolean"
                  },
                  "stateful": {
                    "description": "Whether cookies and session information are retained for subsequent test cases within the test suite.",
                    "example": "{{stateful}}",
                    "type": "boolean"
                  },
                  "testSuiteDescription": {
                    "description": "Description of the test suite.",
                    "example": "{{testSuiteDescription}}",
                    "maxLength": 4000,
                    "minLength": 0,
                    "type": "string"
                  },
                  "testSuiteName": {
                    "description": "Unique name of the test suite.",
                    "example": "{{testSuiteName}}",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/createTestSuiteRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created new test suite.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "hgildong",
                  "createdDate": "2019-10-30T12:09:37+0000",
                  "locked": false,
                  "modifiedBy": "alfulani",
                  "modifiedDate": "2019-10-30T12:09:37+0000",
                  "stateful": false,
                  "testSuiteDescription": "This test suite performs basic check of www.atcuser8.akamaiu.com",
                  "testSuiteId": 284,
                  "testSuiteName": "www.atcuser8.akamaiu.com test suite"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about a test suite.",
                  "type": "object",
                  "required": [
                    "testSuiteId",
                    "testSuiteName",
                    "locked",
                    "stateful",
                    "createdBy",
                    "createdDate",
                    "modifiedBy",
                    "modifiedDate"
                  ],
                  "properties": {
                    "createdBy": {
                      "description": "Username who created the test suite.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the test suite was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the test suite.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the test suite was last deleted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "locked": {
                      "description": "Whether the test suite is locked. If it's locked, only designated owners or editors can modify it.",
                      "type": "boolean"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the test suite.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the test suite was last modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "stateful": {
                      "description": "Whether the test suite is run statefully. If a test suite is run statefully, cookies and session information are retained for subsequent test cases within the test suite.",
                      "type": "boolean"
                    },
                    "testSuiteDescription": {
                      "description": "Description of the test suite.",
                      "maxLength": 4000,
                      "minLength": 0,
                      "type": "string"
                    },
                    "testSuiteId": {
                      "description": "Unique identifier for each test suite.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "testSuiteName": {
                      "description": "Unique name of the test suite.",
                      "maxLength": 100,
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-test-suite-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists all test suites created in your organization. The list can also include deleted test suites that you can restore. The response is an array of objects, each keyed by `testSuiteId`.",
        "operationId": "get-test-suites",
        "summary": "List test suites",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-suites"
        },
        "responses": {
          "200": {
            "description": "The response lists test suites.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Contains test suites created in your organization.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Contains information about a test suite.",
                    "type": "object",
                    "required": [
                      "testSuiteId",
                      "testSuiteName",
                      "locked",
                      "stateful",
                      "createdBy",
                      "createdDate",
                      "modifiedBy",
                      "modifiedDate"
                    ],
                    "properties": {
                      "createdBy": {
                        "description": "Username who created the test suite.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 timestamp indicating when the test suite was created.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "deletedBy": {
                        "description": "Username who last deleted the test suite.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "deletedDate": {
                        "description": "ISO 8601 timestamp indicating when the test suite was last deleted.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "locked": {
                        "description": "Whether the test suite is locked. If it's locked, only designated owners or editors can modify it.",
                        "type": "boolean"
                      },
                      "modifiedBy": {
                        "description": "Username who last modified the test suite.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "ISO 8601 timestamp indicating when the test suite was last modified.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "stateful": {
                        "description": "Whether the test suite is run statefully. If a test suite is run statefully, cookies and session information are retained for subsequent test cases within the test suite.",
                        "type": "boolean"
                      },
                      "testSuiteDescription": {
                        "description": "Description of the test suite.",
                        "maxLength": 4000,
                        "minLength": 0,
                        "type": "string"
                      },
                      "testSuiteId": {
                        "description": "Unique identifier for each test suite.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "testSuiteName": {
                        "description": "Unique name of the test suite.",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/get-test-suite-response.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestSuitesResponse.yaml"
                  }
                },
                "example": [
                  {
                    "createdBy": "mrossi",
                    "createdDate": "2019-10-30T12:09:37+0000",
                    "locked": false,
                    "modifiedBy": "szhang",
                    "modifiedDate": "2019-10-30T12:09:37+0000",
                    "stateful": false,
                    "testSuiteDescription": "This test suite performs basic check of www.atcuser8.akamaiu.com",
                    "testSuiteId": 284,
                    "testSuiteName": "www.atcuser8.akamaiu.com test suite"
                  },
                  {
                    "createdBy": "jsmith",
                    "createdDate": "2019-11-06T23:37:23+0000",
                    "locked": false,
                    "modifiedBy": "jkowalski",
                    "modifiedDate": "2019-11-11T09:55:05+0000",
                    "stateful": false,
                    "testSuiteDescription": "This test suite validates caching of images used in www.atcuser8.akamaiu.com",
                    "testSuiteId": 317,
                    "testSuiteName": "www.atcuser8.akamaiu.com images test suite"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Whether to list any items deleted within the last 30 days that you can restore. It's `false` by default.",
            "example": "{{includeRecentlyDeleted}}",
            "in": "query",
            "name": "includeRecentlyDeleted",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/includeRecentlyDeleted-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/functional/test-suites/clone": {
      "post": {
        "description": "Clones a list of test suites. If an optional request member of the request is missing, Test Center uses the value from the source test suite. See [Default values](https://techdocs.akamai.com/test-ctr/reference/default-values). The operation responds with a [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses) that consists of two arrays, `successes` and `failures`. The `successes` array consists of successfully cloned objects, whereas the `failures` array provides details on any remainders that failed.",
        "operationId": "post-test-suites-clone",
        "summary": "Clone test suites",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-suites-clone"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Contains unique identifiers of test suites you want to clone. Includes settings you want to override while cloning.",
                "minItems": 0,
                "type": "array",
                "items": {
                  "additionalProperties": false,
                  "description": "Contains information about a cloned test suite. The cloned test suite inherits the source test suite's functional test cases. See [Default values](https://techdocs.akamai.com/test-ctr/reference/default-values).",
                  "type": "object",
                  "required": [
                    "testSuiteId"
                  ],
                  "properties": {
                    "locked": {
                      "description": "Whether the test suite is locked. If it's locked, only designated owners or editors can modify it.",
                      "type": "boolean"
                    },
                    "stateful": {
                      "description": "Whether the test suite is run statefully. If a test suite is run statefully, cookies and session information are retained for subsequent test cases within the test suite. If not provided, then the cloned test suite uses the original settings.",
                      "type": "boolean"
                    },
                    "testSuiteDescription": {
                      "description": "Description of the test suite. The default value is an empty string. If not provided, the cloned test suite uses the original description.",
                      "maxLength": 4000,
                      "minLength": 1,
                      "type": "string"
                    },
                    "testSuiteId": {
                      "description": "Unique identifier for the test suite.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "testSuiteName": {
                      "description": "Unique name of the test suite. If not provided, then the name of the clone is `Copy of <original name>`.",
                      "maxLength": 100,
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/clone-test-suite-request-object.yaml"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/cloneTestSuiteRequest.yaml"
                }
              },
              "example": [
                {
                  "locked": true,
                  "testSuiteDescription": "cloned test suite",
                  "testSuiteId": 284
                },
                {
                  "stateful": true,
                  "testSuiteDescription": "cloned test suite 2",
                  "testSuiteId": 300
                }
              ]
            }
          }
        },
        "responses": {
          "207": {
            "description": "[Partial success responses](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "failures": [
                    {
                      "requestField": "testSuiteId",
                      "title": "Resource not found",
                      "type": "resource.not.found",
                      "requestValues": [
                        300
                      ]
                    }
                  ],
                  "successes": [
                    {
                      "createdBy": "tyamada",
                      "createdDate": "2019-10-30T12:09:37+0000",
                      "locked": true,
                      "modifiedBy": "jkowalski",
                      "modifiedDate": "2019-10-30T12:09:37+0000",
                      "stateful": false,
                      "testSuiteDescription": "cloned test suite",
                      "testSuiteId": 285,
                      "testSuiteName": "Copy of www.atcuser8.akamaiu.com test suite"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Test suites clone response.",
                  "type": "object",
                  "required": [
                    "failures",
                    "successes"
                  ],
                  "properties": {
                    "failures": {
                      "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items that weren't cloned.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Functional test case objects that already exist.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about a test suite.",
                              "type": "object",
                              "required": [
                                "testSuiteId",
                                "testSuiteName",
                                "locked",
                                "stateful",
                                "createdBy",
                                "createdDate",
                                "modifiedBy",
                                "modifiedDate"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "Username who created the test suite.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the test suite was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the test suite.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the test suite was last deleted.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "locked": {
                                  "description": "Whether the test suite is locked. If it's locked, only designated owners or editors can modify it.",
                                  "type": "boolean"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the test suite.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the test suite was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "stateful": {
                                  "description": "Whether the test suite is run statefully. If a test suite is run statefully, cookies and session information are retained for subsequent test cases within the test suite.",
                                  "type": "boolean"
                                },
                                "testSuiteDescription": {
                                  "description": "Description of the test suite.",
                                  "maxLength": 4000,
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "testSuiteId": {
                                  "description": "Unique identifier for each test suite.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "testSuiteName": {
                                  "description": "Unique name of the test suite.",
                                  "maxLength": 100,
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-test-suite-response.yaml"
                              }
                            }
                          },
                          "requestField": {
                            "description": "Name of the request field to which the problem refers to. It can be a URL or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestValues": {
                            "description": "Value of `requestField`.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "successes": {
                      "description": "Contains unique identifiers of successfully cloned test suites. Includes objects within them and their details.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information about a test suite.",
                        "type": "object",
                        "required": [
                          "testSuiteId",
                          "testSuiteName",
                          "locked",
                          "stateful",
                          "createdBy",
                          "createdDate",
                          "modifiedBy",
                          "modifiedDate"
                        ],
                        "properties": {
                          "createdBy": {
                            "description": "Username who created the test suite.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the test suite was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "deletedBy": {
                            "description": "Username who last deleted the test suite.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "deletedDate": {
                            "description": "ISO 8601 timestamp indicating when the test suite was last deleted.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "locked": {
                            "description": "Whether the test suite is locked. If it's locked, only designated owners or editors can modify it.",
                            "type": "boolean"
                          },
                          "modifiedBy": {
                            "description": "Username who last modified the test suite.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "modifiedDate": {
                            "description": "ISO 8601 timestamp indicating when the test suite was last modified.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "stateful": {
                            "description": "Whether the test suite is run statefully. If a test suite is run statefully, cookies and session information are retained for subsequent test cases within the test suite.",
                            "type": "boolean"
                          },
                          "testSuiteDescription": {
                            "description": "Description of the test suite.",
                            "maxLength": 4000,
                            "minLength": 0,
                            "type": "string"
                          },
                          "testSuiteId": {
                            "description": "Unique identifier for each test suite.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "testSuiteName": {
                            "description": "Unique name of the test suite.",
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/get-test-suite-response.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/cloneTestSuiteResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/functional/test-suites/{testSuiteId}": {
      "get": {
        "description": "Returns details of a test suite.",
        "operationId": "get-test-suite",
        "summary": "Get a test suite",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-suite"
        },
        "responses": {
          "200": {
            "description": "The response returns test suite details.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "jperez",
                  "createdDate": "2019-10-30T12:09:37+0000",
                  "locked": false,
                  "modifiedBy": "mrossi",
                  "modifiedDate": "2019-10-30T12:09:37+0000",
                  "stateful": false,
                  "testSuiteDescription": "This test suite performs basic check of www.atcuser8.akamaiu.com",
                  "testSuiteId": 284,
                  "testSuiteName": "www.atcuser8.akamaiu.com test suite"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about a test suite.",
                  "type": "object",
                  "required": [
                    "testSuiteId",
                    "testSuiteName",
                    "locked",
                    "stateful",
                    "createdBy",
                    "createdDate",
                    "modifiedBy",
                    "modifiedDate"
                  ],
                  "properties": {
                    "createdBy": {
                      "description": "Username who created the test suite.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the test suite was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the test suite.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the test suite was last deleted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "locked": {
                      "description": "Whether the test suite is locked. If it's locked, only designated owners or editors can modify it.",
                      "type": "boolean"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the test suite.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the test suite was last modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "stateful": {
                      "description": "Whether the test suite is run statefully. If a test suite is run statefully, cookies and session information are retained for subsequent test cases within the test suite.",
                      "type": "boolean"
                    },
                    "testSuiteDescription": {
                      "description": "Description of the test suite.",
                      "maxLength": 4000,
                      "minLength": 0,
                      "type": "string"
                    },
                    "testSuiteId": {
                      "description": "Unique identifier for each test suite.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "testSuiteName": {
                      "description": "Unique name of the test suite.",
                      "maxLength": 100,
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-test-suite-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates a test suite. For optional, modifiable request members that you don't include in the request Test Center uses default values.",
        "operationId": "put-test-suite",
        "summary": "Update a test suite",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/put-test-suite"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "locked": true,
                "stateful": false,
                "testSuiteDescription": "This test suite performs basic check of www.atcuser8.akamaiu.com",
                "testSuiteId": 284,
                "testSuiteName": "Updated sanity suite"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Contains information about a test suite. When sending the PUT request you need to provide only required members. For optional, missing ones Test Center uses default values.",
                "type": "object",
                "required": [
                  "testSuiteName",
                  "locked",
                  "stateful"
                ],
                "properties": {
                  "createdBy": {
                    "description": "Username who created the test suite.",
                    "example": "{{createdBy}}",
                    "minLength": 1,
                    "readOnly": true,
                    "type": "string"
                  },
                  "createdDate": {
                    "description": "ISO 8601 timestamp indicating when the test suite was created.",
                    "example": "{{createdDate}}",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "locked": {
                    "description": "Whether the test suite is locked. If it's locked, only designated owners or editors can modify it.",
                    "example": "{{locked}}",
                    "type": "boolean"
                  },
                  "modifiedBy": {
                    "description": "Username who last modified the test suite.",
                    "example": "{{modifiedBy}}",
                    "minLength": 0,
                    "readOnly": true,
                    "type": "string"
                  },
                  "modifiedDate": {
                    "description": "ISO 8601 timestamp indicating when the test suite was last modified.",
                    "example": "{{modifiedDate}}",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "stateful": {
                    "description": "Whether cookies and session information are retained for subsequent test cases within the test suite.",
                    "example": "{{stateful}}",
                    "type": "boolean"
                  },
                  "testSuiteDescription": {
                    "default": "",
                    "description": "Description you provide for the test suite. The [default value](https://techdocs.akamai.com/test-ctr/reference/default-values) for the PUT request is an empty string.",
                    "example": "{{testSuiteDescription}}",
                    "maxLength": 4000,
                    "minLength": 0,
                    "type": "string"
                  },
                  "testSuiteId": {
                    "description": "Unique identifier for each test suite.",
                    "example": "{{testSuiteId}}",
                    "minimum": 1,
                    "readOnly": true,
                    "type": "integer"
                  },
                  "testSuiteName": {
                    "description": "Name you provide for the test suite.",
                    "example": "{{testSuiteName}}",
                    "maxLength": 100,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/updateTestSuiteRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response returns the updated test suite.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "hgildong",
                  "createdDate": "2019-10-30T12:09:37+0000",
                  "locked": true,
                  "modifiedBy": "alfulani",
                  "modifiedDate": "2019-10-30T12:10:03+0000",
                  "stateful": false,
                  "testSuiteDescription": "This test suite performs basic check of www.atcuser8.akamaiu.com",
                  "testSuiteId": 284,
                  "testSuiteName": "Updated sanity suite"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about a test suite.",
                  "type": "object",
                  "required": [
                    "testSuiteId",
                    "testSuiteName",
                    "locked",
                    "stateful",
                    "createdBy",
                    "createdDate",
                    "modifiedBy",
                    "modifiedDate"
                  ],
                  "properties": {
                    "createdBy": {
                      "description": "Username who created the test suite.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the test suite was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the test suite.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the test suite was last deleted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "locked": {
                      "description": "Whether the test suite is locked. If it's locked, only designated owners or editors can modify it.",
                      "type": "boolean"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the test suite.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the test suite was last modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "stateful": {
                      "description": "Whether the test suite is run statefully. If a test suite is run statefully, cookies and session information are retained for subsequent test cases within the test suite.",
                      "type": "boolean"
                    },
                    "testSuiteDescription": {
                      "description": "Description of the test suite.",
                      "maxLength": 4000,
                      "minLength": 0,
                      "type": "string"
                    },
                    "testSuiteId": {
                      "description": "Unique identifier for each test suite.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "testSuiteName": {
                      "description": "Unique name of the test suite.",
                      "maxLength": 100,
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-test-suite-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Deletes a test suite. You can delete either just a test suite or a test suite with all included objects. The operation has three possible outcomes. When `deleteChildResources` is `false`, the operation responds with the 200 status. When `deleteChildResources` is `true`, the operation responds with the [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses). Regardless of the `deleteChildResources` value, the operation responds with a 4xx status if the deletion can't be processed. You can [restore](https://techdocs.akamai.com/test-ctr/reference/post-test-suite-restore) test suites within 30 days of deleting them.",
        "operationId": "delete-test-suite",
        "summary": "Delete a test suite",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/delete-test-suite"
        },
        "responses": {
          "200": {
            "description": "The response returns details of the deleted test suite.",
            "content": {
              "application/json": {
                "example": {
                  "testSuites": {
                    "failures": [],
                    "successes": [
                      284
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains a unique identifier of the requirement deleted successfully or details about failure of the operation.",
                  "type": "object",
                  "required": [
                    "testSuites"
                  ],
                  "properties": {
                    "testSuites": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minimum": 0,
                            "type": "integer"
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getDeletedTestSuiteResponse.yaml"
                  }
                }
              }
            }
          },
          "207": {
            "description": "[Partial success responses](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "conditions": {
                    "failures": [],
                    "successes": [
                      3566
                    ]
                  },
                  "testCases": {
                    "failures": [],
                    "successes": [
                      6593
                    ]
                  },
                  "testRequests": {
                    "failures": [],
                    "successes": [
                      4853
                    ]
                  },
                  "testSuites": {
                    "failures": [],
                    "successes": [
                      284
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Lists unique identifiers of the test suite and included objects, functional test cases, conditions, and test requests, deleted successfully or details about failed operations.",
                  "type": "object",
                  "required": [
                    "testSuites",
                    "testCases",
                    "testRequests",
                    "conditions"
                  ],
                  "properties": {
                    "conditions": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minimum": 0,
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "testCases": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minimum": 0,
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "testRequests": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minimum": 0,
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "testSuites": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "minimum": 0,
                            "type": "integer"
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getDeletedTestSuitesResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Whether to delete the test suite with included functional test cases, test requests, and conditions. It's `false` by default.",
            "example": "{{deleteChildResources}}",
            "in": "query",
            "name": "deleteChildResources",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/deleteChildResources-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each test suite.",
          "example": "{{testSuiteId}}",
          "in": "path",
          "name": "testSuiteId",
          "required": true,
          "schema": {
            "example": "testSuiteId",
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testSuiteId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-suites/{testSuiteId}/access-control": {
      "post": {
        "description": "Gives the owner or edit access to a locked test suite. You can call this operation only if you're a test suite's owner. The operation responds with a [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses) that consists of two arrays, `successes` and `failures`. The `successes` array contains successfully created objects, whereas the `failures` array provides details on any remainders that failed.",
        "operationId": "post-test-suite-access-control",
        "summary": "Give access to a locked test suite",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-suite-access-control"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "description": "Contains details about a Test Center user or a group you want to grant the edit access to a locked test suite and range of actions you want to allow.",
                "type": "object",
                "required": [
                  "accessorId",
                  "type",
                  "role"
                ],
                "properties": {
                  "accessorId": {
                    "description": "Depending on the `type` value, the `accessorId` value can be either a unique identifier for a user or a group of users. The two groups available are: `users_in_this_account` and `internal_users` for all Akamai users who have access to the account.",
                    "example": "{{accessorId}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "role": {
                    "description": "User's or group's test suite role, either `owner` or `editor`. The `editor` can only include new functional test cases and remove those already included. The `owner` can also edit the test cases and remove them.",
                    "example": "{{role}}",
                    "type": "string",
                    "enum": [
                      "owner",
                      "editor"
                    ]
                  },
                  "type": {
                    "description": "Whether the access list refers to a single `user` or a `group` of users.",
                    "example": "{{type}}",
                    "type": "string",
                    "enum": [
                      "group",
                      "user"
                    ]
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/grant-Access-Control-Request.yaml"
                }
              },
              "example": [
                {
                  "accessorId": "atcuser",
                  "role": "owner",
                  "type": "user"
                },
                {
                  "accessorId": "users_in_this_account",
                  "role": "editor",
                  "type": "group"
                },
                {
                  "accessorId": "user1",
                  "role": "owner",
                  "type": "user"
                }
              ]
            }
          }
        },
        "responses": {
          "207": {
            "description": "[Partial success responses](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "failures": [
                    {
                      "requestField": "user",
                      "title": "Resource not found",
                      "type": "resource.not.found",
                      "requestValues": [
                        "user1"
                      ]
                    }
                  ],
                  "successes": [
                    {
                      "accessControlId": 111,
                      "accessorId": "atcuser",
                      "createdBy": "jperez",
                      "createdDate": "2019-11-15T15:42:50+0000",
                      "modifiedBy": "adevi",
                      "modifiedDate": "2019-11-15T15:42:50+0000",
                      "role": "owner",
                      "status": "active",
                      "type": "user"
                    },
                    {
                      "accessControlId": 112,
                      "accessorId": "users_in_this_account",
                      "createdBy": "adevi",
                      "createdDate": "2019-11-15T15:44:50+0000",
                      "modifiedBy": "szhang",
                      "modifiedDate": "2019-11-15T15:44:50+0000",
                      "role": "editor",
                      "status": "active",
                      "type": "group"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Response for creating the access controls.",
                  "type": "object",
                  "required": [
                    "failures",
                    "successes"
                  ],
                  "properties": {
                    "failures": {
                      "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the access list couldn't be created.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Contains information about access list objects that already exist.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains an access list. Access lists provide details about Test Center users who have the edit access to a locked test suite, range of allowed actions, and test suite's owner who granted the access.",
                              "type": "object",
                              "required": [
                                "accessControlId",
                                "accessorId",
                                "type",
                                "role",
                                "status",
                                "createdBy",
                                "createdDate",
                                "modifiedBy",
                                "modifiedDate"
                              ],
                              "properties": {
                                "accessControlId": {
                                  "description": "Unique identifier for each access list.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "accessorId": {
                                  "description": "Depending on the `type` value, the `accessorId` value can be either a unique identifier for a user or a group of users. The two groups available are: `users_in_this_account` and `internal_users` for all Akamai users who have access to the account.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdBy": {
                                  "description": "Username who created the access control.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the access list was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the access control.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the access control was last deleted.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the access list.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the access list was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "role": {
                                  "description": "User's or group's test suite role, either `owner` or `editor`. The `editor` can only include new functional test cases and remove those already included. The `owner` can also edit the test cases and remove them.",
                                  "type": "string",
                                  "enum": [
                                    "owner",
                                    "editor"
                                  ]
                                },
                                "status": {
                                  "description": "Access list's status, either `pending` or `active`. The `pending` status means the user's edit access request waits for the owners' decision. The `active` status means the user can work on the test suite.",
                                  "type": "string",
                                  "enum": [
                                    "pending",
                                    "active"
                                  ]
                                },
                                "type": {
                                  "description": "Whether the access list refers to a single `user` or a `group` of users.",
                                  "type": "string",
                                  "enum": [
                                    "group",
                                    "user"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-access-control-response.yaml"
                              }
                            }
                          },
                          "requestField": {
                            "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestValues": {
                            "description": "Request field values.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "successes": {
                      "description": "Contains information about access list objects created successfully.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains an access list. Access lists provide details about Test Center users who have the edit access to a locked test suite, range of allowed actions, and test suite's owner who granted the access.",
                        "type": "object",
                        "required": [
                          "accessControlId",
                          "accessorId",
                          "type",
                          "role",
                          "status",
                          "createdBy",
                          "createdDate",
                          "modifiedBy",
                          "modifiedDate"
                        ],
                        "properties": {
                          "accessControlId": {
                            "description": "Unique identifier for each access list.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "accessorId": {
                            "description": "Depending on the `type` value, the `accessorId` value can be either a unique identifier for a user or a group of users. The two groups available are: `users_in_this_account` and `internal_users` for all Akamai users who have access to the account.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdBy": {
                            "description": "Username who created the access control.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the access list was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "deletedBy": {
                            "description": "Username who last deleted the access control.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "deletedDate": {
                            "description": "ISO 8601 timestamp indicating when the access control was last deleted.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "modifiedBy": {
                            "description": "Username who last modified the access list.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "modifiedDate": {
                            "description": "ISO 8601 timestamp indicating when the access list was last modified.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "role": {
                            "description": "User's or group's test suite role, either `owner` or `editor`. The `editor` can only include new functional test cases and remove those already included. The `owner` can also edit the test cases and remove them.",
                            "type": "string",
                            "enum": [
                              "owner",
                              "editor"
                            ]
                          },
                          "status": {
                            "description": "Access list's status, either `pending` or `active`. The `pending` status means the user's edit access request waits for the owners' decision. The `active` status means the user can work on the test suite.",
                            "type": "string",
                            "enum": [
                              "pending",
                              "active"
                            ]
                          },
                          "type": {
                            "description": "Whether the access list refers to a single `user` or a `group` of users.",
                            "type": "string",
                            "enum": [
                              "group",
                              "user"
                            ]
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/get-access-control-response.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/grantAccessControlsResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists Test Center users or groups of users with the owner or edit access to a locked test suite.",
        "operationId": "get-test-suite-access-control",
        "summary": "Get access lists of a locked test suite",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-suite-access-control"
        },
        "responses": {
          "200": {
            "description": "The response lists access groups.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Contains access lists.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Contains an access list. Access lists provide details about Test Center users who have the edit access to a locked test suite, range of allowed actions, and test suite's owner who granted the access.",
                    "type": "object",
                    "required": [
                      "accessControlId",
                      "accessorId",
                      "type",
                      "role",
                      "status",
                      "createdBy",
                      "createdDate",
                      "modifiedBy",
                      "modifiedDate"
                    ],
                    "properties": {
                      "accessControlId": {
                        "description": "Unique identifier for each access list.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "accessorId": {
                        "description": "Depending on the `type` value, the `accessorId` value can be either a unique identifier for a user or a group of users. The two groups available are: `users_in_this_account` and `internal_users` for all Akamai users who have access to the account.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdBy": {
                        "description": "Username who created the access control.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 timestamp indicating when the access list was created.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "deletedBy": {
                        "description": "Username who last deleted the access control.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "deletedDate": {
                        "description": "ISO 8601 timestamp indicating when the access control was last deleted.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "modifiedBy": {
                        "description": "Username who last modified the access list.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "ISO 8601 timestamp indicating when the access list was last modified.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "role": {
                        "description": "User's or group's test suite role, either `owner` or `editor`. The `editor` can only include new functional test cases and remove those already included. The `owner` can also edit the test cases and remove them.",
                        "type": "string",
                        "enum": [
                          "owner",
                          "editor"
                        ]
                      },
                      "status": {
                        "description": "Access list's status, either `pending` or `active`. The `pending` status means the user's edit access request waits for the owners' decision. The `active` status means the user can work on the test suite.",
                        "type": "string",
                        "enum": [
                          "pending",
                          "active"
                        ]
                      },
                      "type": {
                        "description": "Whether the access list refers to a single `user` or a `group` of users.",
                        "type": "string",
                        "enum": [
                          "group",
                          "user"
                        ]
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/get-access-control-response.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getAccesControlsResponse.yaml"
                  }
                },
                "example": [
                  {
                    "accessControlId": 111,
                    "accessorId": "atcuser",
                    "createdBy": "tyamada",
                    "createdDate": "2019-11-15T15:42:50+0000",
                    "modifiedBy": "mrossi",
                    "modifiedDate": "2019-11-15T15:42:50+0000",
                    "role": "owner",
                    "status": "active",
                    "type": "user"
                  },
                  {
                    "accessControlId": 112,
                    "accessorId": "users_in_this_account",
                    "createdBy": "hgildong",
                    "createdDate": "2019-11-15T15:44:50+0000",
                    "modifiedBy": "adevi",
                    "modifiedDate": "2019-11-15T15:44:50+0000",
                    "role": "editor",
                    "status": "active",
                    "type": "group"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each test suite.",
          "example": "{{testSuiteId}}",
          "in": "path",
          "name": "testSuiteId",
          "required": true,
          "schema": {
            "example": "testSuiteId",
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testSuiteId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-suites/{testSuiteId}/access-control/request": {
      "post": {
        "description": "Sends a request for the edit access to a locked test suite to its owners.",
        "operationId": "post-test-suite-access-control-request",
        "summary": "Request edit access",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-suite-access-control-request"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each test suite.",
          "example": "{{testSuiteId}}",
          "in": "path",
          "name": "testSuiteId",
          "required": true,
          "schema": {
            "example": "testSuiteId",
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testSuiteId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-suites/{testSuiteId}/access-control/{accessControlId}": {
      "put": {
        "description": "Updates a role assigned to a user or a group in an access list. You can call this operation only if you're a test suite's owner.",
        "operationId": "put-test-suite-access-control",
        "summary": "Update an access list",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/put-test-suite-access-control"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "role": "owner"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Contains details about a Test Center user or a group to which you want to change the range of actions you want to allow. When sending the PUT request you need to provide only required members. For optional, missing ones Test Center uses default values.",
                "type": "object",
                "required": [
                  "role"
                ],
                "properties": {
                  "accessControlId": {
                    "description": "Unique identifier for each access list.",
                    "example": "{{accessControlId}}",
                    "minimum": 1,
                    "readOnly": true,
                    "type": "integer"
                  },
                  "accessorId": {
                    "description": "Depending on the `type` value, the `accessorId` value can be either a unique identifier for a user or a group of users. The two groups available are: `users_in_this_account` and `internal_users` for all Akamai users who have access to the account.",
                    "example": "{{accessorId}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "createdBy": {
                    "description": "Username who created the access list.",
                    "example": "{{createdBy}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "createdDate": {
                    "description": "ISO 8601 timestamp indicating when the access list was created.",
                    "example": "{{createdDate}}",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "modifiedBy": {
                    "description": "Username who last modified the access list.",
                    "example": "{{modifiedBy}}",
                    "minLength": 0,
                    "readOnly": true,
                    "type": "string"
                  },
                  "modifiedDate": {
                    "description": "ISO 8601 timestamp indicating when the access list was last modified.",
                    "example": "{{modifiedDate}}",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "role": {
                    "description": "User's or group's test suite role, either `owner` or `editor`. The `editor` can only include new functional test cases and remove those already included. The `owner` can also edit the test cases and remove them.",
                    "example": "{{role}}",
                    "type": "string",
                    "enum": [
                      "owner",
                      "editor"
                    ]
                  },
                  "status": {
                    "description": "Access list's status, either `pending` or `active`. The `pending` status means the user's edit access request waits for the owners' decision. The `active` status means the user can work on the test suite.",
                    "example": "{{status}}",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "pending",
                      "active"
                    ]
                  },
                  "type": {
                    "description": "Whether the access list refers to a single `user` or a `group` of users.",
                    "example": "{{type}}",
                    "type": "string",
                    "enum": [
                      "group",
                      "user"
                    ]
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/updateAccessControlRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response returns the updated access list.",
            "content": {
              "application/json": {
                "example": {
                  "accessControlId": 111,
                  "accessorId": "atcuser",
                  "createdBy": "szhang",
                  "createdDate": "2019-11-15T15:42:50+0000",
                  "modifiedBy": "tyamada",
                  "modifiedDate": "2019-11-15T15:44:50+0000",
                  "role": "owner",
                  "status": "active",
                  "type": "user"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains an access list. Access lists provide details about Test Center users who have the edit access to a locked test suite, range of allowed actions, and test suite's owner who granted the access.",
                  "type": "object",
                  "required": [
                    "accessControlId",
                    "accessorId",
                    "type",
                    "role",
                    "status",
                    "createdBy",
                    "createdDate",
                    "modifiedBy",
                    "modifiedDate"
                  ],
                  "properties": {
                    "accessControlId": {
                      "description": "Unique identifier for each access list.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "accessorId": {
                      "description": "Depending on the `type` value, the `accessorId` value can be either a unique identifier for a user or a group of users. The two groups available are: `users_in_this_account` and `internal_users` for all Akamai users who have access to the account.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdBy": {
                      "description": "Username who created the access control.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the access list was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the access control.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the access control was last deleted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the access list.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the access list was last modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "role": {
                      "description": "User's or group's test suite role, either `owner` or `editor`. The `editor` can only include new functional test cases and remove those already included. The `owner` can also edit the test cases and remove them.",
                      "type": "string",
                      "enum": [
                        "owner",
                        "editor"
                      ]
                    },
                    "status": {
                      "description": "Access list's status, either `pending` or `active`. The `pending` status means the user's edit access request waits for the owners' decision. The `active` status means the user can work on the test suite.",
                      "type": "string",
                      "enum": [
                        "pending",
                        "active"
                      ]
                    },
                    "type": {
                      "description": "Whether the access list refers to a single `user` or a `group` of users.",
                      "type": "string",
                      "enum": [
                        "group",
                        "user"
                      ]
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-access-control-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Deletes an access list. The user or the group of users from the list will no longer be able to edit the locked test suite. You can call this operation only if you're a test suite's owner.",
        "operationId": "delete-test-suite-access-control",
        "summary": "Delete an access list",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/delete-test-suite-access-control"
        },
        "responses": {
          "204": {
            "description": "Successfully deleted access list.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier of each access control list.",
          "example": "{{accessControlId}}",
          "in": "path",
          "name": "accessControlId",
          "required": true,
          "schema": {
            "example": 111,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/accessControlId-path.yaml"
          }
        },
        {
          "description": "Unique identifier for each test suite.",
          "example": "{{testSuiteId}}",
          "in": "path",
          "name": "testSuiteId",
          "required": true,
          "schema": {
            "example": "testSuiteId",
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testSuiteId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-suites/{testSuiteId}/access-control/{accessControlId}/approve": {
      "post": {
        "description": "Approves a Test Center user's edit access request to a locked test suite. You can call this operation only if you're a test suite's owner.",
        "operationId": "post-test-suite-access-control-approve",
        "summary": "Approve an edit access request",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-suite-access-control-approve"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier of each access control list.",
          "example": "{{accessControlId}}",
          "in": "path",
          "name": "accessControlId",
          "required": true,
          "schema": {
            "example": 111,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/accessControlId-path.yaml"
          }
        },
        {
          "description": "Unique identifier for each test suite.",
          "example": "{{testSuiteId}}",
          "in": "path",
          "name": "testSuiteId",
          "required": true,
          "schema": {
            "example": "testSuiteId",
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testSuiteId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-suites/{testSuiteId}/access-control/{accessControlId}/reject": {
      "post": {
        "description": "Rejects a Test Center user's edit access request to a locked test suite. You can call this operation only if you're a test suite's owner.",
        "operationId": "post-test-suite-access-control-reject",
        "summary": "Reject an edit access request",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-suite-access-control-reject"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier of each access control list.",
          "example": "{{accessControlId}}",
          "in": "path",
          "name": "accessControlId",
          "required": true,
          "schema": {
            "example": 111,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/accessControlId-path.yaml"
          }
        },
        {
          "description": "Unique identifier for each test suite.",
          "example": "{{testSuiteId}}",
          "in": "path",
          "name": "testSuiteId",
          "required": true,
          "schema": {
            "example": "testSuiteId",
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testSuiteId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-suites/{testSuiteId}/associations/config-versions": {
      "get": {
        "description": "Lists all config versions associated with a test suite. The response is an array of objects, each keyed by `configVersionId`.",
        "operationId": "get-test-suite-associations-config-versions",
        "summary": "List config versions associated with a test suite",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-suite-associations-config-versions"
        },
        "responses": {
          "200": {
            "description": "The response lists config versions.",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about a config version. Config versions refer to Property Manager property versions. All operations performed on config versions are saved only in Test Center and they don't affect properties in Property Manager.",
                  "type": "object",
                  "required": [
                    "configVersionId",
                    "lastSync",
                    "arlFileId"
                  ],
                  "properties": {
                    "arlFileId": {
                      "description": "Unique identifier of a property that corresponds to the config version.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "configVersionId": {
                      "description": "Unique identifier for each config version.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "deletedBy": {
                      "description": "Username who last deleted the config version from Test Center.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "deletedDate": {
                      "description": "ISO 8601 timestamp indicating when the config version was last deleted from Test Center.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "lastSync": {
                      "description": "ISO 8601 timestamp indicating when the config version was last synchronized with Property Manager. This is also the date when the config version was added to Test Center.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "Username who last modified the config version.",
                      "minLength": 0,
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the config version was last modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "propertyName": {
                      "description": "Name of the imported property that corresponds to this config version.",
                      "maxLength": 255,
                      "minLength": 1,
                      "readOnly": true,
                      "type": "string"
                    },
                    "propertyVersion": {
                      "description": "Version of the imported property that corresponds to this config version.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "propertyVersionNote": {
                      "description": "Notes about the property version that corresponds to this config version imported from Property Manager.",
                      "minLength": 0,
                      "readOnly": true,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-config-version-response.yaml"
                  }
                },
                "example": [
                  {
                    "arlFileId": 424809,
                    "configVersionId": 919,
                    "lastSync": "2020-01-04T11:35:30+0000",
                    "modifiedBy": "mrossi",
                    "modifiedDate": "2022-01-04T11:50:00+0000",
                    "propertyName": "atc_test_config",
                    "propertyVersion": 6,
                    "propertyVersionNote": "Test asset v1"
                  },
                  {
                    "arlFileId": 424820,
                    "configVersionId": 920,
                    "lastSync": "2020-01-04T11:45:30+0000",
                    "modifiedBy": "mrossi",
                    "modifiedDate": "2020-01-04T11:50:00+0000",
                    "propertyName": "atc_test_config2",
                    "propertyVersion": 2
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each test suite.",
          "example": "{{testSuiteId}}",
          "in": "path",
          "name": "testSuiteId",
          "required": true,
          "schema": {
            "example": "testSuiteId",
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testSuiteId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-suites/{testSuiteId}/associations/requirements": {
      "get": {
        "description": "Lists all requirements associated with a test suite. The response is an array of objects, each keyed by `requirementId`.",
        "operationId": "get-test-suite-associations-requirements",
        "summary": "List requirements associated with a test suite",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-suite-associations-requirements"
        },
        "responses": {
          "200": {
            "description": "The response lists requirements.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Contains requirements created in your organization.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Contains information about a requirement.",
                    "type": "object",
                    "required": [
                      "requirementId",
                      "requirementName",
                      "createdBy",
                      "createdDate",
                      "modifiedBy",
                      "modifiedDate"
                    ],
                    "properties": {
                      "createdBy": {
                        "description": "Username who created the requirement.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 timestamp indicating when the requirement was created.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "deletedBy": {
                        "description": "Username who last deleted the requirement.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "deletedDate": {
                        "description": "ISO 8601 timestamp indicating when the requirement was last deleted.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "modifiedBy": {
                        "description": "Username who last modified the requirement.",
                        "minLength": 0,
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "ISO 8601 timestamp indicating when the requirement was last modified.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "references": {
                        "description": "Contains information about external reference providing more details about the requirement.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "referenceTitle"
                          ],
                          "properties": {
                            "referenceTitle": {
                              "description": "Title of the external reference.",
                              "maxLength": 100,
                              "minLength": 0,
                              "type": "string"
                            },
                            "referenceUrl": {
                              "description": "URL of the reference. For example, a ticket in your ticketing system with the request for the config changes.",
                              "maxLength": 2048,
                              "minLength": 0,
                              "type": "string"
                            }
                          }
                        }
                      },
                      "requirementDescription": {
                        "description": "Description of the requirement.",
                        "maxLength": 4000,
                        "minLength": 0,
                        "type": "string"
                      },
                      "requirementId": {
                        "description": "Unique identifier for each requirement.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "requirementName": {
                        "description": "Name of the requirement.",
                        "maxLength": 100,
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/get-requirement-response.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getRequirementsResponse.yaml"
                  }
                },
                "example": [
                  {
                    "createdBy": "szhang",
                    "createdDate": "2019-10-30T12:09:37+0000",
                    "modifiedBy": "jsmith",
                    "modifiedDate": "2019-10-30T12:09:37+0000",
                    "requirementDescription": "The basic requirement to test the config changes",
                    "requirementId": 7,
                    "requirementName": "Example.com sanity requirement",
                    "references": [
                      {
                        "referenceTitle": "Basic",
                        "referenceUrl": "http://www.atcuser8.akamaiu.com/reference"
                      }
                    ]
                  },
                  {
                    "createdBy": "jkowalski",
                    "createdDate": "2019-11-30T12:09:37+0000",
                    "modifiedBy": "tyamada",
                    "modifiedDate": "2019-11-30T12:09:37+0000",
                    "requirementId": 8,
                    "requirementName": "www.atcuser8.akamaiu.com sanity requirement",
                    "references": [
                      {
                        "referenceTitle": "TTL"
                      }
                    ]
                  },
                  {
                    "createdBy": "szhang",
                    "createdDate": "2019-11-30T12:09:37+0000",
                    "modifiedBy": "szhang",
                    "modifiedDate": "2019-11-30T12:09:37+0000",
                    "requirementId": 9,
                    "requirementName": "www.atcuser8.akamaiu.com sanity requirement2"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each test suite.",
          "example": "{{testSuiteId}}",
          "in": "path",
          "name": "testSuiteId",
          "required": true,
          "schema": {
            "example": "testSuiteId",
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testSuiteId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-suites/{testSuiteId}/associations/test-cases": {
      "get": {
        "description": "Lists all functional test cases included in a test suite. The response is an array of objects, each keyed by `testCaseId`.",
        "operationId": "get-test-suite-associations-test-cases",
        "summary": "List functional test cases included in a test suite",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-suite-associations-test-cases"
        },
        "responses": {
          "200": {
            "description": "The response lists test cases.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Contains functional test cases created in your organization.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Contains information about the functional test cases and included objects: conditions, test requests, and client profiles.",
                    "type": "object",
                    "required": [
                      "testCaseId",
                      "clientProfile",
                      "testRequest",
                      "condition",
                      "createdBy",
                      "createdDate",
                      "modifiedBy",
                      "modifiedDate"
                    ],
                    "properties": {
                      "clientProfile": {
                        "additionalProperties": false,
                        "description": "Contains information about the included client profile.",
                        "type": "object",
                        "required": [
                          "clientProfileId",
                          "browser",
                          "geoLocation",
                          "ipVersion"
                        ],
                        "properties": {
                          "browser": {
                            "additionalProperties": false,
                            "description": "Contains information about the real browser used to execute the functional test case.",
                            "type": "object",
                            "required": [
                              "name",
                              "version"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name of the browser used to run functional test cases.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "version": {
                                "description": "Version of the browser used to run functional test cases.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "clientProfileId": {
                            "description": "Unique identifier of the client profile.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "geoLocation": {
                            "description": "Geographic region for which the functional test cases using this client profile would execute. The only currently available value is `us` for United States.",
                            "type": "string",
                            "enum": [
                              "us"
                            ]
                          },
                          "ipVersion": {
                            "description": "IP versions for which the functional test cases using this client profile are run, either `ipv4` or `ipv6`.",
                            "type": "string",
                            "enum": [
                              "ipv4",
                              "ipv6"
                            ]
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/get-client-profile-response.yaml"
                        }
                      },
                      "condition": {
                        "additionalProperties": false,
                        "description": "Contains information about the included condition.",
                        "type": "object",
                        "required": [
                          "conditionId",
                          "condition",
                          "createdBy",
                          "createdDate",
                          "modifiedBy",
                          "modifiedDate"
                        ],
                        "properties": {
                          "condition": {
                            "additionalProperties": false,
                            "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                            "type": "object",
                            "required": [
                              "conditionNodeId",
                              "values"
                            ],
                            "properties": {
                              "conditionNode": {
                                "additionalProperties": false,
                                "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                                "type": "object",
                                "required": [
                                  "conditionNodeId",
                                  "values"
                                ],
                                "properties": {
                                  "conditionNode": {
                                    "type": "object"
                                  },
                                  "conditionNodeId": {
                                    "minimum": 0,
                                    "readOnly": true,
                                    "type": "integer"
                                  },
                                  "values": {
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/condition-node-nested.yaml"
                                }
                              },
                              "conditionNodeId": {
                                "description": "Unique identifier for each condition node taken from the test catalog template.",
                                "minimum": 0,
                                "readOnly": true,
                                "type": "integer"
                              },
                              "values": {
                                "description": "List of values selected from the condition node or input supported by the node.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/condition-node.yaml"
                            }
                          },
                          "conditionId": {
                            "description": "Unique identifier for each condition.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "createdBy": {
                            "description": "Username who created the condition.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the condition was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "deletedBy": {
                            "description": "Username who last deleted the condition.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "deletedDate": {
                            "description": "ISO 8601 timestamp indicating when the condition was last deleted.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "modifiedBy": {
                            "description": "Username who last modified the condition.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "modifiedDate": {
                            "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/get-condition-response.yaml"
                        }
                      },
                      "createdBy": {
                        "description": "Username who created the functional test case.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 timestamp indicating when the functional test case was created.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "deletedBy": {
                        "description": "Username who last deleted the functional test case.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "deletedDate": {
                        "description": "ISO 8601 timestamp indicating when the functional test case was last deleted.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "modifiedBy": {
                        "description": "Username who last modified the functional test case.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "ISO 8601 timestamp indicating when the functional test case was last modified.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "testCaseId": {
                        "description": "Unique identifier for each functional test case.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "testRequest": {
                        "additionalProperties": false,
                        "description": "Contains information about the included test request.",
                        "type": "object",
                        "required": [
                          "testRequestId",
                          "testRequestUrl",
                          "createdBy",
                          "createdDate",
                          "modifiedBy",
                          "modifiedDate"
                        ],
                        "properties": {
                          "createdBy": {
                            "description": "Username who created the test request.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the test request was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "deletedBy": {
                            "description": "Username who last deleted the test request.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "deletedDate": {
                            "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "modifiedBy": {
                            "description": "Username who last modified the test request.",
                            "minLength": 0,
                            "type": "string"
                          },
                          "modifiedDate": {
                            "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "requestHeaders": {
                            "description": "Contains information about request headers included in the functional test case.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "headerName",
                                "headerValue",
                                "headerAction"
                              ],
                              "properties": {
                                "headerAction": {
                                  "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                                  "type": "string",
                                  "enum": [
                                    "add",
                                    "modify",
                                    "filter"
                                  ]
                                },
                                "headerName": {
                                  "description": "Name of the request header.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "headerValue": {
                                  "description": "Value of the request header.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "tags": {
                            "description": "Keywords associated with the test request.",
                            "maxItems": 50,
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "testRequestId": {
                            "description": "Unique identifier for each test request.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "testRequestUrl": {
                            "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                            "format": "uri",
                            "maxLength": 2048,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/get-test-request-response.yaml"
                        }
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/get-functional-test-case-response.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestCasesResponse.yaml"
                  }
                },
                "example": [
                  {
                    "createdBy": "alfulani",
                    "createdDate": "2020-01-07T06:25:07+0000",
                    "modifiedBy": "alfulani",
                    "modifiedDate": "2020-01-07T06:25:07+0000",
                    "testCaseId": 301,
                    "clientProfile": {
                      "clientProfileId": 2,
                      "geoLocation": "us",
                      "ipVersion": "ipv4",
                      "browser": {
                        "name": "chrome",
                        "version": "72"
                      }
                    },
                    "condition": {
                      "conditionId": 47,
                      "createdBy": "jkowalski",
                      "createdDate": "2019-12-15T04:30:46+0000",
                      "modifiedBy": "jperez",
                      "modifiedDate": "2020-01-06T19:58:52+0000",
                      "condition": {
                        "conditionNodeId": 1,
                        "values": [
                          "response_header"
                        ],
                        "conditionNode": {
                          "conditionNodeId": 4,
                          "values": [
                            "Content-Type"
                          ],
                          "conditionNode": {
                            "conditionNodeId": 5,
                            "values": [
                              "has_a_value"
                            ],
                            "conditionNode": {
                              "conditionNodeId": 7,
                              "values": [
                                "ends_with"
                              ],
                              "conditionNode": {
                                "conditionNodeId": 4,
                                "values": [
                                  "json"
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "testRequest": {
                      "createdBy": "adevi",
                      "createdDate": "2019-12-31T08:52:57+0000",
                      "modifiedBy": "jsmith",
                      "modifiedDate": "2020-01-03T09:26:09+0000",
                      "testRequestId": 59,
                      "testRequestUrl": "https://www.atcuser8.akamaiu.com/?abc=1234555",
                      "requestHeaders": [
                        {
                          "headerAction": "add",
                          "headerName": "Accept",
                          "headerValues": "v1"
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each test suite.",
          "example": "{{testSuiteId}}",
          "in": "path",
          "name": "testSuiteId",
          "required": true,
          "schema": {
            "example": "testSuiteId",
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testSuiteId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-suites/{testSuiteId}/associations/test-cases/associate": {
      "post": {
        "description": "Includes a list of functional test cases in a test suite. If the test suite is locked, you can call this operation only if you have the owner or edit access. Because test cases can't be shared between test suites, you can't use functional test cases that are already part of other test suites. If you do that, the operation fails, and you need to [create](https://techdocs.akamai.com/test-ctr/reference/post-test-cases) the test cases again and rerun this operation. The operation responds with a [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses) that consists of two arrays, `successes` and `failures`. The `successes` array lists unique identifiers of functional test cases included successfully, whereas the `failures` array provides details on any remainders that failed.",
        "operationId": "post-test-suite-associations-test-cases-associate",
        "summary": "Include functional test cases in a test suite",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-suite-associations-test-cases-associate"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": [
                301,
                122
              ],
              "schema": {
                "description": "Contains unique identifiers of functional test case you want to associate or dissociate.",
                "minItems": 0,
                "type": "array",
                "items": {
                  "minimum": 1,
                  "type": "integer"
                },
                "x-akamai": {
                  "file-path": "schemas/testCaseAssociationRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "[Partial success responses](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "successes": [
                    301
                  ],
                  "failures": [
                    {
                      "requestField": "testCaseId",
                      "title": "Resource not found",
                      "type": "resource.not.found",
                      "requestValues": [
                        122
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains a list of unique identifiers of associated or dissociated functional test cases.",
                  "type": "object",
                  "required": [
                    "failures",
                    "successes"
                  ],
                  "properties": {
                    "failures": {
                      "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "requestField": {
                            "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestValues": {
                            "description": "Request field values.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "successes": {
                      "description": "List of unique identifiers of successfully associated or dissociated functional test cases.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minimum": 0,
                        "type": "integer"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/testCaseAssociationResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each test suite.",
          "example": "{{testSuiteId}}",
          "in": "path",
          "name": "testSuiteId",
          "required": true,
          "schema": {
            "example": "testSuiteId",
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testSuiteId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-suites/{testSuiteId}/associations/test-cases/dissociate": {
      "post": {
        "description": "Removes a list of functional test cases from a test suite. If the test suite is locked, you can call this operation only if you have the owner or edit access. The operation responds with a [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses) that consists of two arrays, `successes` and `failures`. The `successes` array lists unique identifiers of functional test cases removed successfully, whereas the `failures` array provides details on any remainders that failed.",
        "operationId": "post-test-suite-associations-test-cases-dissociate",
        "summary": "Remove functional test cases from a test suite",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-suite-associations-test-cases-dissociate"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": [
                301,
                122
              ],
              "schema": {
                "description": "Contains unique identifiers of functional test case you want to associate or dissociate.",
                "minItems": 0,
                "type": "array",
                "items": {
                  "minimum": 1,
                  "type": "integer"
                },
                "x-akamai": {
                  "file-path": "schemas/testCaseAssociationRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "[Partial success responses](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "successes": [
                    301
                  ],
                  "failures": [
                    {
                      "requestField": "testCaseId",
                      "title": "Resource not found",
                      "type": "resource.not.found",
                      "requestValues": [
                        122
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains a list of unique identifiers of associated or dissociated functional test cases.",
                  "type": "object",
                  "required": [
                    "failures",
                    "successes"
                  ],
                  "properties": {
                    "failures": {
                      "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "requestField": {
                            "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestValues": {
                            "description": "Request field values.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "successes": {
                      "description": "List of unique identifiers of successfully associated or dissociated functional test cases.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minimum": 0,
                        "type": "integer"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/testCaseAssociationResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each test suite.",
          "example": "{{testSuiteId}}",
          "in": "path",
          "name": "testSuiteId",
          "required": true,
          "schema": {
            "example": "testSuiteId",
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testSuiteId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-suites/{testSuiteId}/associations/test-cases/order": {
      "post": {
        "description": "Includes a list of functional test cases with a set order in a test suite. A test run executes the functional test cases in the set order only if you include them in a stateful test suite.",
        "operationId": "post-test-suite-associations-test-cases-order",
        "summary": "Include ordered functional test cases in a test suite",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-suite-associations-test-cases-order"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Functional test cases listed in a stateful test suite's set order. The request needs to include all functional test cases of the test suite, otherwise you get a 400 error response.",
                "minItems": 0,
                "type": "array",
                "items": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "testCaseId",
                    "order"
                  ],
                  "properties": {
                    "order": {
                      "description": "Order of the functional test case in the stateful test suite.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "testCaseId": {
                      "description": "Unique identifier for each functional test case.",
                      "minimum": 0,
                      "type": "integer"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/testCasesOrderRequestResponse.yaml"
                }
              },
              "example": [
                {
                  "order": 1,
                  "testCaseId": 301
                },
                {
                  "order": 2,
                  "testCaseId": 302
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response provides test cases with new order.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Functional test cases listed in a stateful test suite's set order. The request needs to include all functional test cases of the test suite, otherwise you get a 400 error response.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "testCaseId",
                      "order"
                    ],
                    "properties": {
                      "order": {
                        "description": "Order of the functional test case in the stateful test suite.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "testCaseId": {
                        "description": "Unique identifier for each functional test case.",
                        "minimum": 0,
                        "type": "integer"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/testCasesOrderRequestResponse.yaml"
                  }
                },
                "example": [
                  {
                    "order": 1,
                    "testCaseId": 301
                  },
                  {
                    "order": 2,
                    "testCaseId": 302
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists all functional test cases included in a stateful test suite with the set order.",
        "operationId": "get-test-suite-associations-test-cases-order",
        "summary": "List order of functional test cases in a stateful test suite",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-suite-associations-test-cases-order"
        },
        "responses": {
          "200": {
            "description": "The response list test cases and their order.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Functional test cases listed in a stateful test suite's set order. The request needs to include all functional test cases of the test suite, otherwise you get a 400 error response.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "testCaseId",
                      "order"
                    ],
                    "properties": {
                      "order": {
                        "description": "Order of the functional test case in the stateful test suite.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "testCaseId": {
                        "description": "Unique identifier for each functional test case.",
                        "minimum": 0,
                        "type": "integer"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/testCasesOrderRequestResponse.yaml"
                  }
                },
                "example": [
                  {
                    "order": 1,
                    "testCaseId": 301
                  },
                  {
                    "order": 2,
                    "testCaseId": 302
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each test suite.",
          "example": "{{testSuiteId}}",
          "in": "path",
          "name": "testSuiteId",
          "required": true,
          "schema": {
            "example": "testSuiteId",
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testSuiteId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-suites/{testSuiteId}/restore": {
      "post": {
        "description": "Restores a deleted test suite. You can restore either an empty test suite or a test suite together with all the included objects, functional test cases, test requests, and conditions. The operation has three possible outcomes. When `restoreChildResources` is `false`, a 200 response provides the restored object in the `successes` array. When `restoreChildResources` is `true`, the operation responds with the [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses) and various objects in the appropriate `successes` or `failures` arrays. Regardless of the `restoreChildResources` value, if there's a problem with restoring the test suite object, the operation responds with a 4xx status.",
        "operationId": "post-test-suite-restore",
        "summary": "Restore a test suite",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-suite-restore"
        },
        "responses": {
          "200": {
            "description": "The response returns the restored test suite.",
            "content": {
              "application/json": {
                "example": {
                  "testSuites": {
                    "failures": [],
                    "successes": [
                      {
                        "createdBy": "jkowalski",
                        "createdDate": "2020-09-18T06:03:40+0000",
                        "locked": false,
                        "modifiedBy": "jsmith",
                        "modifiedDate": "2020-09-18T07:46:54+0000",
                        "stateful": false,
                        "testSuiteDescription": "Test suite for requirement June.2022",
                        "testSuiteId": 284,
                        "testSuiteName": "Sanity requirement"
                      }
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains the restored test suite or details about failure of the operation.",
                  "type": "object",
                  "required": [
                    "testSuites"
                  ],
                  "properties": {
                    "testSuites": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "description": "Contains test suites created in your organization.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about a test suite.",
                              "type": "object",
                              "required": [
                                "testSuiteId",
                                "testSuiteName",
                                "locked",
                                "stateful",
                                "createdBy",
                                "createdDate",
                                "modifiedBy",
                                "modifiedDate"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "Username who created the test suite.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the test suite was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the test suite.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the test suite was last deleted.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "locked": {
                                  "description": "Whether the test suite is locked. If it's locked, only designated owners or editors can modify it.",
                                  "type": "boolean"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the test suite.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the test suite was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "stateful": {
                                  "description": "Whether the test suite is run statefully. If a test suite is run statefully, cookies and session information are retained for subsequent test cases within the test suite.",
                                  "type": "boolean"
                                },
                                "testSuiteDescription": {
                                  "description": "Description of the test suite.",
                                  "maxLength": 4000,
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "testSuiteId": {
                                  "description": "Unique identifier for each test suite.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "testSuiteName": {
                                  "description": "Unique name of the test suite.",
                                  "maxLength": 100,
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-test-suite-response.yaml"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-test-suites-response.yaml"
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getRestoredTestSuiteResponse.yaml"
                  }
                }
              }
            }
          },
          "207": {
            "description": "[Partial success responses](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "conditions": {
                    "failures": [],
                    "successes": [
                      {
                        "conditionId": 3566,
                        "createdBy": "jsmith",
                        "createdDate": "2020-09-18T06:00:55+0000",
                        "modifiedBy": "adevi",
                        "modifiedDate": "2020-09-18T07:48:38+0000",
                        "condition": {
                          "conditionNodeId": 1,
                          "values": [
                            "response_header"
                          ],
                          "conditionNode": {
                            "conditionNodeId": 4,
                            "values": [
                              "atcuser"
                            ],
                            "conditionNode": {
                              "conditionNodeId": 5,
                              "values": [
                                "has_a_value"
                              ]
                            }
                          }
                        }
                      }
                    ]
                  },
                  "testCases": {
                    "failures": [],
                    "successes": [
                      {
                        "createdBy": "mrossi",
                        "createdDate": "2020-09-18T06:02:54+0000",
                        "modifiedBy": "szhang",
                        "modifiedDate": "2020-09-18T07:48:38+0000",
                        "testCaseId": 6593,
                        "clientProfile": {
                          "clientProfileId": 2,
                          "geoLocation": "us",
                          "ipVersion": "ipv4",
                          "browser": {
                            "name": "chrome",
                            "version": "65.0"
                          }
                        },
                        "condition": {
                          "conditionId": 3566,
                          "createdBy": "mrossi",
                          "createdDate": "2020-09-18T06:00:55+0000",
                          "modifiedBy": "szhang",
                          "modifiedDate": "2020-09-18T07:48:38+0000",
                          "condition": {
                            "conditionNodeId": 1,
                            "values": [
                              "response_header"
                            ],
                            "conditionNode": {
                              "conditionNodeId": 4,
                              "values": [
                                "atcuser"
                              ],
                              "conditionNode": {
                                "conditionNodeId": 5,
                                "values": [
                                  "has_a_value"
                                ]
                              }
                            }
                          }
                        },
                        "testRequest": {
                          "createdBy": "adevi",
                          "createdDate": "2020-09-18T06:01:56+0000",
                          "modifiedBy": "jperez",
                          "modifiedDate": "2020-09-18T07:48:38+0000",
                          "testRequestId": 4853,
                          "testRequestUrl": "http://ab.fail.www.akamaiflowershop.com/atc-qa-1600393947647",
                          "tags": [
                            "akamaiflowershop"
                          ]
                        }
                      }
                    ]
                  },
                  "testRequests": {
                    "failures": [],
                    "successes": [
                      {
                        "createdBy": "jsmith",
                        "createdDate": "2020-09-18T06:01:56+0000",
                        "modifiedBy": "szhang",
                        "modifiedDate": "2020-09-18T07:48:38+0000",
                        "testRequestId": 4853,
                        "testRequestUrl": "http://ab.fail.www.akamaiflowershop.com/atc-qa-1600393947647",
                        "tags": [
                          "akamaiflowershop"
                        ]
                      }
                    ]
                  },
                  "testSuites": {
                    "failures": [],
                    "successes": [
                      {
                        "createdBy": "mrossi",
                        "createdDate": "2020-09-18T06:03:40+0000",
                        "locked": false,
                        "modifiedBy": "jsmith",
                        "modifiedDate": "2020-09-18T07:48:37+0000",
                        "stateful": false,
                        "testSuiteDescription": "Test suite for requirement June.2022",
                        "testSuiteId": 284,
                        "testSuiteName": "Example.com sanity requirement"
                      }
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains the restored test suite and included objects, functional test cases, conditions, and test requests, or details about any failures of the operation.",
                  "type": "object",
                  "required": [
                    "testSuites",
                    "testCases",
                    "testRequests",
                    "conditions"
                  ],
                  "properties": {
                    "conditions": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "description": "Contains conditions available for your organization.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about the condition.",
                              "type": "object",
                              "required": [
                                "conditionId",
                                "condition",
                                "createdBy",
                                "createdDate",
                                "modifiedBy",
                                "modifiedDate"
                              ],
                              "properties": {
                                "condition": {
                                  "additionalProperties": false,
                                  "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                                  "type": "object",
                                  "required": [
                                    "conditionNodeId",
                                    "values"
                                  ],
                                  "properties": {
                                    "conditionNode": {
                                      "additionalProperties": false,
                                      "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                                      "type": "object",
                                      "required": [
                                        "conditionNodeId",
                                        "values"
                                      ],
                                      "properties": {
                                        "conditionNode": {
                                          "type": "object"
                                        },
                                        "conditionNodeId": {
                                          "minimum": 0,
                                          "readOnly": true,
                                          "type": "integer"
                                        },
                                        "values": {
                                          "minItems": 0,
                                          "type": "array",
                                          "items": {
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/condition-node-nested.yaml"
                                      }
                                    },
                                    "conditionNodeId": {
                                      "description": "Unique identifier for each condition node taken from the test catalog template.",
                                      "minimum": 0,
                                      "readOnly": true,
                                      "type": "integer"
                                    },
                                    "values": {
                                      "description": "List of values selected from the condition node or input supported by the node.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/condition-node.yaml"
                                  }
                                },
                                "conditionId": {
                                  "description": "Unique identifier for each condition.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "createdBy": {
                                  "description": "Username who created the condition.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the condition was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the condition.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the condition was last deleted.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the condition.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-condition-response.yaml"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-conditions-response.yaml"
                            }
                          }
                        }
                      }
                    },
                    "testCases": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "description": "Contains functional test cases created in your organization.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about the functional test cases and included objects: conditions, test requests, and client profiles.",
                              "type": "object",
                              "required": [
                                "testCaseId",
                                "clientProfile",
                                "testRequest",
                                "condition",
                                "createdBy",
                                "createdDate",
                                "modifiedBy",
                                "modifiedDate"
                              ],
                              "properties": {
                                "clientProfile": {
                                  "additionalProperties": false,
                                  "description": "Contains information about the included client profile.",
                                  "type": "object",
                                  "required": [
                                    "clientProfileId",
                                    "browser",
                                    "geoLocation",
                                    "ipVersion"
                                  ],
                                  "properties": {
                                    "browser": {
                                      "additionalProperties": false,
                                      "description": "Contains information about the real browser used to execute the functional test case.",
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "version"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "Name of the browser used to run functional test cases.",
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "version": {
                                          "description": "Version of the browser used to run functional test cases.",
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "clientProfileId": {
                                      "description": "Unique identifier of the client profile.",
                                      "minimum": 0,
                                      "type": "integer"
                                    },
                                    "geoLocation": {
                                      "description": "Geographic region for which the functional test cases using this client profile would execute. The only currently available value is `us` for United States.",
                                      "type": "string",
                                      "enum": [
                                        "us"
                                      ]
                                    },
                                    "ipVersion": {
                                      "description": "IP versions for which the functional test cases using this client profile are run, either `ipv4` or `ipv6`.",
                                      "type": "string",
                                      "enum": [
                                        "ipv4",
                                        "ipv6"
                                      ]
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-client-profile-response.yaml"
                                  }
                                },
                                "condition": {
                                  "additionalProperties": false,
                                  "description": "Contains information about the included condition.",
                                  "type": "object",
                                  "required": [
                                    "conditionId",
                                    "condition",
                                    "createdBy",
                                    "createdDate",
                                    "modifiedBy",
                                    "modifiedDate"
                                  ],
                                  "properties": {
                                    "condition": {
                                      "additionalProperties": false,
                                      "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                                      "type": "object",
                                      "required": [
                                        "conditionNodeId",
                                        "values"
                                      ],
                                      "properties": {
                                        "conditionNode": {
                                          "additionalProperties": false,
                                          "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                                          "type": "object",
                                          "required": [
                                            "conditionNodeId",
                                            "values"
                                          ],
                                          "properties": {
                                            "conditionNode": {
                                              "type": "object"
                                            },
                                            "conditionNodeId": {
                                              "minimum": 0,
                                              "readOnly": true,
                                              "type": "integer"
                                            },
                                            "values": {
                                              "minItems": 0,
                                              "type": "array",
                                              "items": {
                                                "minLength": 1,
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/condition-node-nested.yaml"
                                          }
                                        },
                                        "conditionNodeId": {
                                          "description": "Unique identifier for each condition node taken from the test catalog template.",
                                          "minimum": 0,
                                          "readOnly": true,
                                          "type": "integer"
                                        },
                                        "values": {
                                          "description": "List of values selected from the condition node or input supported by the node.",
                                          "minItems": 0,
                                          "type": "array",
                                          "items": {
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/condition-node.yaml"
                                      }
                                    },
                                    "conditionId": {
                                      "description": "Unique identifier for each condition.",
                                      "minimum": 1,
                                      "type": "integer"
                                    },
                                    "createdBy": {
                                      "description": "Username who created the condition.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "createdDate": {
                                      "description": "ISO 8601 timestamp indicating when the condition was created.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "deletedBy": {
                                      "description": "Username who last deleted the condition.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "deletedDate": {
                                      "description": "ISO 8601 timestamp indicating when the condition was last deleted.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "modifiedBy": {
                                      "description": "Username who last modified the condition.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "modifiedDate": {
                                      "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                                      "format": "date-time",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-condition-response.yaml"
                                  }
                                },
                                "createdBy": {
                                  "description": "Username who created the functional test case.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the functional test case was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the functional test case.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the functional test case was last deleted.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the functional test case.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the functional test case was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "testCaseId": {
                                  "description": "Unique identifier for each functional test case.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "testRequest": {
                                  "additionalProperties": false,
                                  "description": "Contains information about the included test request.",
                                  "type": "object",
                                  "required": [
                                    "testRequestId",
                                    "testRequestUrl",
                                    "createdBy",
                                    "createdDate",
                                    "modifiedBy",
                                    "modifiedDate"
                                  ],
                                  "properties": {
                                    "createdBy": {
                                      "description": "Username who created the test request.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "createdDate": {
                                      "description": "ISO 8601 timestamp indicating when the test request was created.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "deletedBy": {
                                      "description": "Username who last deleted the test request.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "deletedDate": {
                                      "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "modifiedBy": {
                                      "description": "Username who last modified the test request.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "modifiedDate": {
                                      "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "requestHeaders": {
                                      "description": "Contains information about request headers included in the functional test case.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "type": "object",
                                        "required": [
                                          "headerName",
                                          "headerValue",
                                          "headerAction"
                                        ],
                                        "properties": {
                                          "headerAction": {
                                            "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                                            "type": "string",
                                            "enum": [
                                              "add",
                                              "modify",
                                              "filter"
                                            ]
                                          },
                                          "headerName": {
                                            "description": "Name of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "headerValue": {
                                            "description": "Value of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "tags": {
                                      "description": "Keywords associated with the test request.",
                                      "maxItems": 50,
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "testRequestId": {
                                      "description": "Unique identifier for each test request.",
                                      "minimum": 1,
                                      "type": "integer"
                                    },
                                    "testRequestUrl": {
                                      "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                                      "format": "uri",
                                      "maxLength": 2048,
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-test-request-response.yaml"
                                  }
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-functional-test-case-response.yaml"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-functional-test-cases-response.yaml"
                            }
                          }
                        }
                      }
                    },
                    "testRequests": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "description": "Contains test requests created in your organization.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about a test request.",
                              "type": "object",
                              "required": [
                                "testRequestId",
                                "testRequestUrl",
                                "createdBy",
                                "createdDate",
                                "modifiedBy",
                                "modifiedDate"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "Username who created the test request.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the test request was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the test request.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the test request.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "requestHeaders": {
                                  "description": "Contains information about request headers included in the functional test case.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                      "headerName",
                                      "headerValue",
                                      "headerAction"
                                    ],
                                    "properties": {
                                      "headerAction": {
                                        "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                                        "type": "string",
                                        "enum": [
                                          "add",
                                          "modify",
                                          "filter"
                                        ]
                                      },
                                      "headerName": {
                                        "description": "Name of the request header.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "headerValue": {
                                        "description": "Value of the request header.",
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "tags": {
                                  "description": "Keywords associated with the test request.",
                                  "maxItems": 50,
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                },
                                "testRequestId": {
                                  "description": "Unique identifier for each test request.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "testRequestUrl": {
                                  "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                                  "format": "uri",
                                  "maxLength": 2048,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-test-request-response.yaml"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-test-requests-response.yaml"
                            }
                          }
                        }
                      }
                    },
                    "testSuites": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "successes",
                        "failures"
                      ],
                      "properties": {
                        "failures": {
                          "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": true,
                            "type": "object",
                            "required": [
                              "type",
                              "title"
                            ],
                            "properties": {
                              "requestField": {
                                "description": "Request field name. It can be a URL or query parameter or any request payload field name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "requestValues": {
                                "description": "Request field values.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "title": {
                                "description": "Title of the error.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of error.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "successes": {
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "description": "Contains test suites created in your organization.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about a test suite.",
                              "type": "object",
                              "required": [
                                "testSuiteId",
                                "testSuiteName",
                                "locked",
                                "stateful",
                                "createdBy",
                                "createdDate",
                                "modifiedBy",
                                "modifiedDate"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "Username who created the test suite.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the test suite was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the test suite.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the test suite was last deleted.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "locked": {
                                  "description": "Whether the test suite is locked. If it's locked, only designated owners or editors can modify it.",
                                  "type": "boolean"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the test suite.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the test suite was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "stateful": {
                                  "description": "Whether the test suite is run statefully. If a test suite is run statefully, cookies and session information are retained for subsequent test cases within the test suite.",
                                  "type": "boolean"
                                },
                                "testSuiteDescription": {
                                  "description": "Description of the test suite.",
                                  "maxLength": 4000,
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "testSuiteId": {
                                  "description": "Unique identifier for each test suite.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "testSuiteName": {
                                  "description": "Unique name of the test suite.",
                                  "maxLength": 100,
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-test-suite-response.yaml"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-test-suites-response.yaml"
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getRestoredTestSuitesResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Whether to restore the test suite with included functional test cases, test requests, and conditions. It's `false` by default.",
            "example": "{{restoreChildResources}}",
            "in": "query",
            "name": "restoreChildResources",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/restoreChildResources-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each test suite.",
          "example": "{{testSuiteId}}",
          "in": "path",
          "name": "testSuiteId",
          "required": true,
          "schema": {
            "example": "testSuiteId",
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testSuiteId-path.yaml"
          }
        }
      ]
    },
    "/functional/test-suites/{testSuiteId}/test-cases": {
      "put": {
        "description": "Updates functional test cases in the context of a test suite. The operation responds with a [partial-success 207 response](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses) that consists of two arrays, `successes` and `failures`. The `successes` array lists all objects updated successfully, whereas the `failures` array provides details on any remainders that failed.",
        "operationId": "put-test-suite-test-cases",
        "summary": "Update test cases in a test suite",
        "tags": [
          "Test suites"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/put-test-suite-test-cases"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Contains unique identifiers of the functional test cases to update and objects, test requests, conditions, and client profiles, to include.",
                "minItems": 1,
                "type": "array",
                "items": {
                  "additionalProperties": false,
                  "description": "Contains unique identifiers of the functional test case to update and objects, test request, condition, and client profile, to include.",
                  "type": "object",
                  "uniqueItems": true,
                  "required": [
                    "testCaseId",
                    "testRequestId",
                    "conditionId",
                    "clientProfileId"
                  ],
                  "properties": {
                    "clientProfileId": {
                      "description": "Unique identifier for the client profile to include in the test case.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "conditionId": {
                      "description": "Unique identifier for the condition to include in the test case.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "testCaseId": {
                      "description": "Unique identifier for the functional test case to update.",
                      "minimum": 1,
                      "readOnly": true,
                      "type": "integer"
                    },
                    "testRequestId": {
                      "description": "Unique identifier for the test request to include in the test case.",
                      "minimum": 1,
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/update-functional-test-case-for-test-suite-request.yaml"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/updateTestCasesForTestSuiteRequest.yaml"
                }
              },
              "example": [
                {
                  "clientProfileId": 1,
                  "conditionId": 47,
                  "testCaseId": 301,
                  "testRequestId": 59
                },
                {
                  "clientProfileId": 1,
                  "conditionId": 47,
                  "testCaseId": 432,
                  "testRequestId": 59111
                }
              ]
            }
          }
        },
        "responses": {
          "207": {
            "description": "[Partial success responses](https://techdocs.akamai.com/test-ctr/reference/partial-success-responses)",
            "content": {
              "application/json": {
                "example": {
                  "failures": [
                    {
                      "requestField": "testRequestId",
                      "title": "Resource not found",
                      "type": "resource.not.found",
                      "requestValues": [
                        59111
                      ]
                    }
                  ],
                  "successes": [
                    {
                      "createdBy": "hgildong",
                      "createdDate": "2020-01-07T06:25:07+0000",
                      "modifiedBy": "hgildong",
                      "modifiedDate": "2020-01-14T22:12:43+0000",
                      "testCaseId": 301,
                      "clientProfile": {
                        "clientProfileId": 1,
                        "geoLocation": "US",
                        "ipVersion": "ipv4",
                        "browser": {
                          "name": "chrome",
                          "version": "72"
                        }
                      },
                      "condition": {
                        "conditionId": 47,
                        "createdBy": "jsmith",
                        "createdDate": "2019-12-15T04:30:46+0000",
                        "modifiedBy": "hgildong",
                        "modifiedDate": "2020-01-06T19:58:52+0000",
                        "condition": {
                          "conditionNodeId": 1,
                          "values": [
                            "response_header"
                          ],
                          "conditionNode": {
                            "conditionNodeId": 4,
                            "values": [
                              "Content-Type"
                            ],
                            "conditionNode": {
                              "conditionNodeId": 5,
                              "values": [
                                "has_a_value"
                              ],
                              "conditionNode": {
                                "conditionNodeId": 7,
                                "values": [
                                  "ends_with"
                                ],
                                "conditionNode": {
                                  "conditionNodeId": 4,
                                  "values": [
                                    "json"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      },
                      "testRequest": {
                        "createdBy": "hgildong",
                        "createdDate": "2019-12-31T08:52:57+0000",
                        "modifiedBy": "alfulani",
                        "modifiedDate": "2020-01-03T09:26:09+0000",
                        "testRequestId": 59,
                        "testRequestUrl": "https://www.atcuser8.akamaiu.com/?abc=1234555",
                        "requestHeaders": [
                          {
                            "headerAction": "add",
                            "headerName": "Accept",
                            "headerValues": "v1"
                          }
                        ]
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains updated functional test cases in a test suite and details about any failure of the operation.",
                  "type": "object",
                  "required": [
                    "failures",
                    "successes"
                  ],
                  "properties": {
                    "failures": {
                      "description": "Contains a list of [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects and indicates errors together with unique identifiers of items for which the operation failed.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "type",
                          "title"
                        ],
                        "properties": {
                          "existingEntities": {
                            "description": "Functional test cases that already existed.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about the functional test cases and included objects: conditions, test requests, and client profiles.",
                              "type": "object",
                              "required": [
                                "testCaseId",
                                "clientProfile",
                                "testRequest",
                                "condition",
                                "createdBy",
                                "createdDate",
                                "modifiedBy",
                                "modifiedDate"
                              ],
                              "properties": {
                                "clientProfile": {
                                  "additionalProperties": false,
                                  "description": "Contains information about the included client profile.",
                                  "type": "object",
                                  "required": [
                                    "clientProfileId",
                                    "browser",
                                    "geoLocation",
                                    "ipVersion"
                                  ],
                                  "properties": {
                                    "browser": {
                                      "additionalProperties": false,
                                      "description": "Contains information about the real browser used to execute the functional test case.",
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "version"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "Name of the browser used to run functional test cases.",
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "version": {
                                          "description": "Version of the browser used to run functional test cases.",
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "clientProfileId": {
                                      "description": "Unique identifier of the client profile.",
                                      "minimum": 0,
                                      "type": "integer"
                                    },
                                    "geoLocation": {
                                      "description": "Geographic region for which the functional test cases using this client profile would execute. The only currently available value is `us` for United States.",
                                      "type": "string",
                                      "enum": [
                                        "us"
                                      ]
                                    },
                                    "ipVersion": {
                                      "description": "IP versions for which the functional test cases using this client profile are run, either `ipv4` or `ipv6`.",
                                      "type": "string",
                                      "enum": [
                                        "ipv4",
                                        "ipv6"
                                      ]
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-client-profile-response.yaml"
                                  }
                                },
                                "condition": {
                                  "additionalProperties": false,
                                  "description": "Contains information about the included condition.",
                                  "type": "object",
                                  "required": [
                                    "conditionId",
                                    "condition",
                                    "createdBy",
                                    "createdDate",
                                    "modifiedBy",
                                    "modifiedDate"
                                  ],
                                  "properties": {
                                    "condition": {
                                      "additionalProperties": false,
                                      "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                                      "type": "object",
                                      "required": [
                                        "conditionNodeId",
                                        "values"
                                      ],
                                      "properties": {
                                        "conditionNode": {
                                          "additionalProperties": false,
                                          "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                                          "type": "object",
                                          "required": [
                                            "conditionNodeId",
                                            "values"
                                          ],
                                          "properties": {
                                            "conditionNode": {
                                              "type": "object"
                                            },
                                            "conditionNodeId": {
                                              "minimum": 0,
                                              "readOnly": true,
                                              "type": "integer"
                                            },
                                            "values": {
                                              "minItems": 0,
                                              "type": "array",
                                              "items": {
                                                "minLength": 1,
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/condition-node-nested.yaml"
                                          }
                                        },
                                        "conditionNodeId": {
                                          "description": "Unique identifier for each condition node taken from the test catalog template.",
                                          "minimum": 0,
                                          "readOnly": true,
                                          "type": "integer"
                                        },
                                        "values": {
                                          "description": "List of values selected from the condition node or input supported by the node.",
                                          "minItems": 0,
                                          "type": "array",
                                          "items": {
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-akamai": {
                                        "file-path": "schemas/condition-node.yaml"
                                      }
                                    },
                                    "conditionId": {
                                      "description": "Unique identifier for each condition.",
                                      "minimum": 1,
                                      "type": "integer"
                                    },
                                    "createdBy": {
                                      "description": "Username who created the condition.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "createdDate": {
                                      "description": "ISO 8601 timestamp indicating when the condition was created.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "deletedBy": {
                                      "description": "Username who last deleted the condition.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "deletedDate": {
                                      "description": "ISO 8601 timestamp indicating when the condition was last deleted.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "modifiedBy": {
                                      "description": "Username who last modified the condition.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "modifiedDate": {
                                      "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                                      "format": "date-time",
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-condition-response.yaml"
                                  }
                                },
                                "createdBy": {
                                  "description": "Username who created the functional test case.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the functional test case was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "deletedBy": {
                                  "description": "Username who last deleted the functional test case.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "deletedDate": {
                                  "description": "ISO 8601 timestamp indicating when the functional test case was last deleted.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "modifiedBy": {
                                  "description": "Username who last modified the functional test case.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "description": "ISO 8601 timestamp indicating when the functional test case was last modified.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "testCaseId": {
                                  "description": "Unique identifier for each functional test case.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "testRequest": {
                                  "additionalProperties": false,
                                  "description": "Contains information about the included test request.",
                                  "type": "object",
                                  "required": [
                                    "testRequestId",
                                    "testRequestUrl",
                                    "createdBy",
                                    "createdDate",
                                    "modifiedBy",
                                    "modifiedDate"
                                  ],
                                  "properties": {
                                    "createdBy": {
                                      "description": "Username who created the test request.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "createdDate": {
                                      "description": "ISO 8601 timestamp indicating when the test request was created.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "deletedBy": {
                                      "description": "Username who last deleted the test request.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "deletedDate": {
                                      "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "modifiedBy": {
                                      "description": "Username who last modified the test request.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "modifiedDate": {
                                      "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                                      "format": "date-time",
                                      "type": "string"
                                    },
                                    "requestHeaders": {
                                      "description": "Contains information about request headers included in the functional test case.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "type": "object",
                                        "required": [
                                          "headerName",
                                          "headerValue",
                                          "headerAction"
                                        ],
                                        "properties": {
                                          "headerAction": {
                                            "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                                            "type": "string",
                                            "enum": [
                                              "add",
                                              "modify",
                                              "filter"
                                            ]
                                          },
                                          "headerName": {
                                            "description": "Name of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "headerValue": {
                                            "description": "Value of the request header.",
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "tags": {
                                      "description": "Keywords associated with the test request.",
                                      "maxItems": 50,
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    },
                                    "testRequestId": {
                                      "description": "Unique identifier for each test request.",
                                      "minimum": 1,
                                      "type": "integer"
                                    },
                                    "testRequestUrl": {
                                      "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                                      "format": "uri",
                                      "maxLength": 2048,
                                      "type": "string"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-test-request-response.yaml"
                                  }
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-functional-test-case-response.yaml"
                              }
                            }
                          },
                          "requestField": {
                            "description": "Request field name. It can be a URL path or query parameter or any request payload field name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "requestObjects": {
                            "description": "Request objects that were invalid.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains unique identifiers of the functional test case to update and objects, test request, condition, and client profile, to include.",
                              "type": "object",
                              "required": [
                                "testCaseId",
                                "testRequestId",
                                "conditionId",
                                "clientProfileId"
                              ],
                              "properties": {
                                "clientProfileId": {
                                  "description": "Unique identifier for the client profile to include in the test case.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "conditionId": {
                                  "description": "Unique identifier for the condition to include in the test case.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "testCaseId": {
                                  "description": "Unique identifier for the functional test case to update.",
                                  "minimum": 1,
                                  "readOnly": true,
                                  "type": "integer"
                                },
                                "testRequestId": {
                                  "description": "Unique identifier for the test request to include in the test case.",
                                  "minimum": 1,
                                  "type": "integer"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/update-functional-test-case-for-test-suite-request.yaml"
                              }
                            }
                          },
                          "requestValues": {
                            "description": "Request field values.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            }
                          },
                          "title": {
                            "description": "Title of the error.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "Type of error.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "successes": {
                      "description": "Contains updated functional test cases.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information about the functional test cases and included objects: conditions, test requests, and client profiles.",
                        "type": "object",
                        "required": [
                          "testCaseId",
                          "clientProfile",
                          "testRequest",
                          "condition",
                          "createdBy",
                          "createdDate",
                          "modifiedBy",
                          "modifiedDate"
                        ],
                        "properties": {
                          "clientProfile": {
                            "additionalProperties": false,
                            "description": "Contains information about the included client profile.",
                            "type": "object",
                            "required": [
                              "clientProfileId",
                              "browser",
                              "geoLocation",
                              "ipVersion"
                            ],
                            "properties": {
                              "browser": {
                                "additionalProperties": false,
                                "description": "Contains information about the real browser used to execute the functional test case.",
                                "type": "object",
                                "required": [
                                  "name",
                                  "version"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name of the browser used to run functional test cases.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "version": {
                                    "description": "Version of the browser used to run functional test cases.",
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                }
                              },
                              "clientProfileId": {
                                "description": "Unique identifier of the client profile.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "geoLocation": {
                                "description": "Geographic region for which the functional test cases using this client profile would execute. The only currently available value is `us` for United States.",
                                "type": "string",
                                "enum": [
                                  "us"
                                ]
                              },
                              "ipVersion": {
                                "description": "IP versions for which the functional test cases using this client profile are run, either `ipv4` or `ipv6`.",
                                "type": "string",
                                "enum": [
                                  "ipv4",
                                  "ipv6"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-client-profile-response.yaml"
                            }
                          },
                          "condition": {
                            "additionalProperties": false,
                            "description": "Contains information about the included condition.",
                            "type": "object",
                            "required": [
                              "conditionId",
                              "condition",
                              "createdBy",
                              "createdDate",
                              "modifiedBy",
                              "modifiedDate"
                            ],
                            "properties": {
                              "condition": {
                                "additionalProperties": false,
                                "description": "Contains the condition. The condition has a sentence-like structure that you construct out of values of condition nodes. To get the Akamai-provided list of all condition nodes and the sequence in which they're triggered, run the [Get the test catalog template](https://techdocs.akamai.com/test-ctr/reference/get-test-catalog-template) operation.",
                                "type": "object",
                                "required": [
                                  "conditionNodeId",
                                  "values"
                                ],
                                "properties": {
                                  "conditionNode": {
                                    "additionalProperties": false,
                                    "description": "Specifies the nested condition node. Each `conditionNode` object may specify its own nested `conditionNode`, forming a nested tree structure.",
                                    "type": "object",
                                    "required": [
                                      "conditionNodeId",
                                      "values"
                                    ],
                                    "properties": {
                                      "conditionNode": {
                                        "type": "object"
                                      },
                                      "conditionNodeId": {
                                        "minimum": 0,
                                        "readOnly": true,
                                        "type": "integer"
                                      },
                                      "values": {
                                        "minItems": 0,
                                        "type": "array",
                                        "items": {
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-akamai": {
                                      "file-path": "schemas/condition-node-nested.yaml"
                                    }
                                  },
                                  "conditionNodeId": {
                                    "description": "Unique identifier for each condition node taken from the test catalog template.",
                                    "minimum": 0,
                                    "readOnly": true,
                                    "type": "integer"
                                  },
                                  "values": {
                                    "description": "List of values selected from the condition node or input supported by the node.",
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/condition-node.yaml"
                                }
                              },
                              "conditionId": {
                                "description": "Unique identifier for each condition.",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "createdBy": {
                                "description": "Username who created the condition.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "createdDate": {
                                "description": "ISO 8601 timestamp indicating when the condition was created.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "deletedBy": {
                                "description": "Username who last deleted the condition.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "deletedDate": {
                                "description": "ISO 8601 timestamp indicating when the condition was last deleted.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "modifiedBy": {
                                "description": "Username who last modified the condition.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "modifiedDate": {
                                "description": "ISO 8601 timestamp indicating when the condition was last modified.",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-condition-response.yaml"
                            }
                          },
                          "createdBy": {
                            "description": "Username who created the functional test case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the functional test case was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "deletedBy": {
                            "description": "Username who last deleted the functional test case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "deletedDate": {
                            "description": "ISO 8601 timestamp indicating when the functional test case was last deleted.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "modifiedBy": {
                            "description": "Username who last modified the functional test case.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "modifiedDate": {
                            "description": "ISO 8601 timestamp indicating when the functional test case was last modified.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "testCaseId": {
                            "description": "Unique identifier for each functional test case.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          "testRequest": {
                            "additionalProperties": false,
                            "description": "Contains information about the included test request.",
                            "type": "object",
                            "required": [
                              "testRequestId",
                              "testRequestUrl",
                              "createdBy",
                              "createdDate",
                              "modifiedBy",
                              "modifiedDate"
                            ],
                            "properties": {
                              "createdBy": {
                                "description": "Username who created the test request.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "createdDate": {
                                "description": "ISO 8601 timestamp indicating when the test request was created.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "deletedBy": {
                                "description": "Username who last deleted the test request.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "deletedDate": {
                                "description": "ISO 8601 timestamp indicating when the test request was last deleted.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "modifiedBy": {
                                "description": "Username who last modified the test request.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "modifiedDate": {
                                "description": "ISO 8601 timestamp indicating when the test request was last modified.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "requestHeaders": {
                                "description": "Contains information about request headers included in the functional test case.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "required": [
                                    "headerName",
                                    "headerValue",
                                    "headerAction"
                                  ],
                                  "properties": {
                                    "headerAction": {
                                      "description": "Request header settings. Possible values are: `add` to add the entered request headers, `modify` to modify the existing request headers, or `filter` to filter entered request headers from this functional test case.",
                                      "type": "string",
                                      "enum": [
                                        "add",
                                        "modify",
                                        "filter"
                                      ]
                                    },
                                    "headerName": {
                                      "description": "Name of the request header.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "headerValue": {
                                      "description": "Value of the request header.",
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "tags": {
                                "description": "Keywords associated with the test request.",
                                "maxItems": 50,
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "testRequestId": {
                                "description": "Unique identifier for each test request.",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "testRequestUrl": {
                                "description": "Fully scheme-qualified URL of the page or object you want to test, including any query string parameters. Test Center requests this URL from a browser, as well as any secondary requests it triggers.",
                                "format": "uri",
                                "maxLength": 2048,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-test-request-response.yaml"
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/get-functional-test-case-response.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/updateTestCasesForTestSuiteResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each test suite.",
          "example": "{{testSuiteId}}",
          "in": "path",
          "name": "testSuiteId",
          "required": true,
          "schema": {
            "example": "testSuiteId",
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testSuiteId-path.yaml"
          }
        }
      ]
    },
    "/http-headers": {
      "get": {
        "description": "Returns the list of standard HTTP request and response headers. You can use these values to prepopulate the request headers during the creation or modification of a test case.",
        "operationId": "get-http-headers",
        "summary": "List HTTP headers",
        "tags": [
          "HTTP headers"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-http-headers"
        },
        "responses": {
          "200": {
            "description": "The response provides standard HTTP request and response headers.",
            "content": {
              "application/json": {
                "example": {
                  "requestHeaders": [
                    {
                      "headerName": "A-IM",
                      "possibleValues": [
                        "vcdiff, gdiff",
                        "vcdiff, gdiff;q=0.3",
                        "vcdiff, diffe, gzip"
                      ]
                    },
                    {
                      "headerName": "Accept",
                      "possibleValues": [
                        "audio/*",
                        "text/html",
                        "text/plain",
                        "image/jpeg"
                      ]
                    },
                    {
                      "headerName": "Accept-Additions",
                      "possibleValues": []
                    },
                    {
                      "headerName": "Accept-Charset",
                      "possibleValues": [
                        "iso-8859-5",
                        "unicode-1-1"
                      ]
                    },
                    {
                      "headerName": "Accept-Datetime",
                      "possibleValues": []
                    },
                    {
                      "headerName": "Accept-Encoding",
                      "possibleValues": [
                        "compress",
                        "gzip",
                        "identity",
                        "deflate"
                      ]
                    },
                    {
                      "headerName": "Accept-Features",
                      "possibleValues": []
                    },
                    {
                      "headerName": "Accept-Language",
                      "possibleValues": [
                        "en-US",
                        "da",
                        "en-gb",
                        "en"
                      ]
                    }
                  ],
                  "responseHeaders": [
                    {
                      "headerName": "Access-Control",
                      "possibleValues": []
                    },
                    {
                      "headerName": "Access-Control-Allow-Credentials",
                      "possibleValues": []
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "HTTP request and response headers.",
                  "type": "object",
                  "required": [
                    "requestHeaders",
                    "responseHeaders"
                  ],
                  "properties": {
                    "requestHeaders": {
                      "description": "List of standard HTTP request headers.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "headerName",
                          "possibleValues"
                        ],
                        "properties": {
                          "headerName": {
                            "description": "The name of the request header.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "possibleValues": {
                            "description": "The value of the request header.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "responseHeaders": {
                      "description": "List of standard HTTP response headers.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "headerName",
                          "possibleValues"
                        ],
                        "properties": {
                          "headerName": {
                            "description": "The name of the response header.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "possibleValues": {
                            "description": "The value of the response header.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getHttpHeadersResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/test-runs": {
      "post": {
        "description": "Submits a test run for comparative or functional testing, or both. With one request you can run the test for one object type: a requirement, config versions, test suites, functional test cases, or test definitions. You can also combine a requirement with config versions, config versions with test definitions, a requirement with test definitions, or a requirement with both config versions and test definitions.",
        "operationId": "post-test-runs",
        "summary": "Submit a test run",
        "tags": [
          "Test runs"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-runs"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "note": "Config change test",
                "sendEmailOnCompletion": true,
                "targetEnvironment": "production",
                "comparative": {
                  "testDefinitionExecutions": [
                    {
                      "targetHostname": "www.atcuser8.akamaiu.com",
                      "testDefinitionId": 7225,
                      "ipVersions": [
                        "ipv4",
                        "ipv6"
                      ],
                      "testCaseIds": [
                        7832
                      ]
                    }
                  ]
                },
                "functional": {
                  "configVersionExecutions": [
                    {
                      "configVersionId": 919,
                      "testSuiteExecutions": [
                        {
                          "testSuiteId": 79,
                          "testCaseExecutions": [
                            {
                              "testCaseId": 293
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "requirementExecutions": [
                    {
                      "requirementId": 22,
                      "testSuiteExecutions": [
                        {
                          "testSuiteId": 33,
                          "testCaseExecutions": [
                            {
                              "testCaseId": 301
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "Contains information about objects you want a test run to execute against an environment. You can test each of these objects separately in a request: a requirement, a config version, a test suite, a functional test case, and a test definition. You can also combine objects in a request based on the these constrains: config versions with test definitions, a requirement with test definitions, or a requirement with config versions and test definitions. See [Run a functional test](https://techdocs.akamai.com/test-ctr/reference/run-a-functional-test) and [Run a comparative test](https://techdocs.akamai.com/test-ctr/reference/run-a-comparative-test).",
                "type": "object",
                "required": [
                  "targetEnvironment"
                ],
                "properties": {
                  "comparative": {
                    "additionalProperties": false,
                    "description": "Specifies comparative testing objects you want the test run to execute. Provide this or the `functional` object or both, depending on what kind of test you want to run.",
                    "type": "object",
                    "required": [
                      "testDefinitionExecutions"
                    ],
                    "properties": {
                      "testDefinitionExecutions": {
                        "description": "Contains information about test definitions you want to execute.",
                        "minItems": 1,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "testDefinitionId",
                            "targetHostname",
                            "ipVersions",
                            "testCaseIds"
                          ],
                          "properties": {
                            "ipVersions": {
                              "description": "IP versions you want to execute the test run for. Possible values are: `ipv4`, `ipv6`, or both.",
                              "maxItems": 2,
                              "minItems": 1,
                              "type": "array",
                              "uniqueItems": true,
                              "enum": [
                                "ipv4",
                                "ipv6"
                              ],
                              "items": {
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "targetHostname": {
                              "description": "Target environment hostname against which you want to execute the test definition.",
                              "format": "hostname",
                              "maxLength": 100,
                              "type": "string"
                            },
                            "testCaseIds": {
                              "description": "List of unique identifiers of comparative test cases included in the test definitions. To get details of a test case, run the [Get a comparative test case](https://techdocs.akamai.com/test-ctr/reference/get-test-definition-test-case) operation.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "minimum": 0,
                                "type": "integer"
                              }
                            },
                            "testDefinitionId": {
                              "description": "Unique identifier of each test definition you want to execute.",
                              "minimum": 0,
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  },
                  "functional": {
                    "additionalProperties": false,
                    "description": "Specifies functional testing objects you want the test run to execute. Depending on what you want to run the functional test for, it may include: `configVersionExecutions`, `requirementExecutions`, `testCaseExecutions`, or `testSuiteExecutions`. Provide this or the `comparative` object or both, depending on what kind of test you want to run.",
                    "type": "object",
                    "required": [
                      "testCaseExecutions"
                    ],
                    "properties": {
                      "configVersionExecutions": {
                        "description": "Contains information about config versions you want to execute.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "configVersionId",
                            "testSuiteExecutions"
                          ],
                          "properties": {
                            "configVersionId": {
                              "description": "Unique identifier of the config version you want to execute.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "testSuiteExecutions": {
                              "description": "Contains information about test suites associated with the config version.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "testSuiteId",
                                  "testCaseExecutions"
                                ],
                                "properties": {
                                  "testCaseExecutions": {
                                    "description": "Contains information about functional test cases included in the test suite you want to execute.",
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "required": [
                                        "testCaseId"
                                      ],
                                      "properties": {
                                        "testCaseId": {
                                          "description": "Unique identifier of the included functional test case.",
                                          "minimum": 0,
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  },
                                  "testSuiteId": {
                                    "description": "Unique identifier of the associated test suite you want to execute.",
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "requirementExecutions": {
                        "description": "Contains information about requirements you want to execute.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "requirementId",
                            "testSuiteExecutions"
                          ],
                          "properties": {
                            "requirementId": {
                              "description": "Unique identifier of the requirement you want to execute.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "testSuiteExecutions": {
                              "description": "Contains information about test suites associated with the requirement.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "testSuiteId",
                                  "testCaseExecutions"
                                ],
                                "properties": {
                                  "testCaseExecutions": {
                                    "description": "Contains information about functional test cases included in the test suite.",
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "required": [
                                        "testCaseId"
                                      ],
                                      "properties": {
                                        "testCaseId": {
                                          "description": "Unique identifier of the included functional test case you want to execute.",
                                          "minimum": 0,
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  },
                                  "testSuiteId": {
                                    "description": "Unique identifier of the associated test suite you want to execute.",
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "testCaseExecutions": {
                        "description": "Contains information about functional test cases you want to execute.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "testCaseId"
                          ],
                          "properties": {
                            "testCaseId": {
                              "description": "Unique identifier of the functional test case.",
                              "minimum": 0,
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "testSuiteExecutions": {
                        "description": "Contains information about test suites you want to execute.",
                        "minItems": 0,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "testSuiteId",
                            "testCaseExecutions"
                          ],
                          "properties": {
                            "testCaseExecutions": {
                              "description": "Contains information about functional test cases included in the test suite.",
                              "minItems": 0,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "testCaseId"
                                ],
                                "properties": {
                                  "testCaseId": {
                                    "description": "Unique identifier of the included functional test case.",
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "testSuiteId": {
                              "description": "Unique identifier of the test suite.",
                              "minimum": 0,
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  },
                  "note": {
                    "description": "Notes about the test run.",
                    "example": "{{note}}",
                    "maxLength": 200,
                    "minLength": 0,
                    "type": "string"
                  },
                  "sendEmailOnCompletion": {
                    "description": "Whether you get a notification email after the test run is complete.",
                    "example": "{{sendEmailOnCompletion}}",
                    "type": "boolean"
                  },
                  "targetEnvironment": {
                    "description": "Environment against which the test run executes the request, either `production` or `staging`.",
                    "example": "{{targetEnvironment}}",
                    "type": "string",
                    "enum": [
                      "production",
                      "staging"
                    ]
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/createTestRunRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Process successfully launched.",
            "content": {
              "application/json": {
                "example": {
                  "note": "Config change test",
                  "status": "in_progress",
                  "submittedBy": "jkowalski",
                  "submittedDate": "2020-01-08T17:19:19+0000",
                  "targetEnvironment": "production",
                  "testRunId": 13081,
                  "comparative": {
                    "status": "in_progress",
                    "testDefinitionExecutions": [
                      {
                        "status": "in_progress",
                        "targetEnvironment": "production",
                        "targetHostname": "www.atcuser8.akamaiu.com",
                        "testDefinitionExecutionId": 17125,
                        "testDefinitionId": 7225,
                        "ipVersions": [
                          "ipv4",
                          "ipv6"
                        ],
                        "testCaseIds": [
                          7832
                        ]
                      }
                    ]
                  },
                  "functional": {
                    "status": "in_progress",
                    "configVersionExecutions": [
                      {
                        "configVersionId": 919,
                        "status": "in_progress",
                        "testSuiteExecutions": [
                          {
                            "status": "in_progress",
                            "testSuiteExecutionId": 45,
                            "testSuiteId": 79,
                            "testCaseExecutions": [
                              {
                                "status": "in_progress",
                                "testCaseExecutionId": 263,
                                "testCaseId": 293
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "requirementExecutions": [
                      {
                        "requirementId": 22,
                        "status": "in_progress",
                        "testSuiteExecutions": [
                          {
                            "status": "in_progress",
                            "testSuiteExecutionId": 46,
                            "testSuiteId": 33,
                            "testCaseExecutions": [
                              {
                                "status": "in_progress",
                                "testCaseExecutionId": 264,
                                "testCaseId": 301
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about progress of a test run and its results. It also lists all objects executed during the test run.",
                  "type": "object",
                  "required": [
                    "testRunId",
                    "status",
                    "submittedBy",
                    "submittedDate",
                    "sendEmailOnCompletion"
                  ],
                  "properties": {
                    "comparative": {
                      "additionalProperties": false,
                      "description": "Contains information about comparative testing executed during the test run. It doesn't appear if the test was run only for functional testing.",
                      "type": "object",
                      "required": [
                        "testDefinitionExecutions",
                        "status"
                      ],
                      "properties": {
                        "status": {
                          "description": "Comparative objects' execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                          "type": "string",
                          "enum": [
                            "in_progress",
                            "completed",
                            "failed"
                          ]
                        },
                        "testDefinitionExecutions": {
                          "description": "Contains information about test definitions executed during the test run.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "Contains information about test definitions executed during a test run, including their results.",
                            "type": "object",
                            "required": [
                              "testDefinitionExecutionId",
                              "testDefinitionId",
                              "targetHostname",
                              "status",
                              "ipVersions",
                              "testCaseIds"
                            ],
                            "properties": {
                              "diffCount": {
                                "additionalProperties": false,
                                "description": "Contains information about diffs detected during the test run. It appears only when the execution's `status` is `completed`.",
                                "type": "object",
                                "required": [
                                  "total",
                                  "outstanding"
                                ],
                                "properties": {
                                  "outstanding": {
                                    "description": "Number of not accepted diffs .",
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  "total": {
                                    "description": "Total number of diffs detected.",
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                }
                              },
                              "errors": {
                                "description": "Contains [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating errors occurred during the test run. It appears only when the execution's `status` is `failed`.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "title",
                                    "ipVersion"
                                  ],
                                  "properties": {
                                    "ipVersion": {
                                      "description": "IP version for which the test definition execution failed.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "testCaseId": {
                                      "description": "Unique identifier for each comparative test case for which the test definition execution failed. If missing, the execution failed for all test cases for the corresponding IP version.",
                                      "minimum": 0,
                                      "type": "integer"
                                    },
                                    "title": {
                                      "description": "Summary of each error.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "Dot-notated identifier for each type of error.",
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "ipVersions": {
                                "description": "IP versions for which the test run executed. Possible values are: `ipv4`, `ipv6`, or both.",
                                "maxItems": 2,
                                "minItems": 1,
                                "type": "array",
                                "uniqueItems": true,
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "ipv4",
                                    "ipv6"
                                  ]
                                }
                              },
                              "note": {
                                "description": "Notes about the test definition execution.",
                                "maxLength": 500,
                                "minLength": 0,
                                "type": "string"
                              },
                              "status": {
                                "description": "Execution's status. Possible values are: `in_progress`, `completed`, `failed`, or `archived`. A value of `failed` means that the execution couldn't be run because of an error. You can check its details in the `errors` array. A value of `archived` means there have been at least five subsequent runs for this test definition.",
                                "type": "string",
                                "enum": [
                                  "in_progress",
                                  "completed",
                                  "failed",
                                  "archived"
                                ]
                              },
                              "supportedComparisonSettings": {
                                "description": "Contains attributes set for comparison between environments in the `comparisonSettings` array of each executed comparative test case. Possible values are: `responseCode`, `responseHeaders`, `cpcode`, `cachingOption`, `cacheKey`, `metadataVariables`, or `originServer`.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "responseCode",
                                    "responseHeaders",
                                    "cpcode",
                                    "cachingOption",
                                    "cacheKey",
                                    "metadataVariables",
                                    "originServer"
                                  ]
                                }
                              },
                              "targetEnvironment": {
                                "description": "Environment against which Test Center executed the test run, either `production` or `staging`.",
                                "maxLength": 100,
                                "type": "string",
                                "enum": [
                                  "production",
                                  "staging"
                                ]
                              },
                              "targetHostname": {
                                "description": "Target environment hostname against which the test definition was executed.",
                                "format": "hostname",
                                "maxLength": 100,
                                "type": "string"
                              },
                              "testCaseIds": {
                                "description": "List of unique identifiers of comparative test cases that executed. To get details of a test case, run the [Get a comparative test case](https://techdocs.akamai.com/test-ctr/reference/get-test-definition-test-case) operation.",
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "testDefinitionExecutionId": {
                                "description": "Unique identifier for each test definition execution.",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "testDefinitionId": {
                                "description": "Unique identifier for each test definition that executed.",
                                "minimum": 1,
                                "type": "integer"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-test-definition-execution-response.yaml"
                            }
                          }
                        }
                      }
                    },
                    "completedDate": {
                      "description": "ISO 8601 timestamp indicating when the test run was complete.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "functional": {
                      "additionalProperties": false,
                      "description": "Contains information about functional testing executed during the test run. Depending on what was the test run for, it may include: `configVersionExecutions`, `requirementExecutions`, `testCaseExecutions`, `testSuiteExecutions`. It doesn't appear if the test was run only for comparative testing.",
                      "type": "object",
                      "required": [
                        "status"
                      ],
                      "properties": {
                        "configVersionExecutions": {
                          "description": "Contains information about config versions executed during the test run.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                              "configVersionId",
                              "status",
                              "testSuiteExecutions"
                            ],
                            "properties": {
                              "configVersionId": {
                                "description": "Unique identifier for each config version.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "status": {
                                "description": "Config version's execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                                "type": "string",
                                "enum": [
                                  "in_progress",
                                  "completed",
                                  "failed"
                                ]
                              },
                              "testSuiteExecutions": {
                                "description": "Contains information about test suites executed during the test run.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "Contains information about test suites executed during the test run.",
                                  "type": "object",
                                  "required": [
                                    "testSuiteExecutionId",
                                    "status",
                                    "testSuiteId",
                                    "testCaseExecutions"
                                  ],
                                  "properties": {
                                    "status": {
                                      "description": "Test suite's execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                                      "type": "string",
                                      "enum": [
                                        "in_progress",
                                        "completed",
                                        "failed"
                                      ]
                                    },
                                    "testCaseExecutions": {
                                      "description": "Contains information about functional test cases executed during the test run.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "description": "Contains information about functional test cases executed during a test run.",
                                        "type": "object",
                                        "required": [
                                          "testCaseExecutionId",
                                          "status",
                                          "testCaseId"
                                        ],
                                        "properties": {
                                          "conditionEvaluationResult": {
                                            "additionalProperties": false,
                                            "description": "Contains information about evaluation of conditions. It appears only for executions of functional test cases with the `completed` status.",
                                            "type": "object",
                                            "required": [
                                              "result",
                                              "actualConditionData"
                                            ],
                                            "properties": {
                                              "actualConditionData": {
                                                "description": "Condition data collected when the functional test case URL executed.",
                                                "minItems": 1,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "required": [
                                                    "name",
                                                    "value"
                                                  ],
                                                  "properties": {
                                                    "name": {
                                                      "description": "Name of the condition data.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "description": "Value of the condition data.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              },
                                              "result": {
                                                "description": "Result of the evaluation of conditions. Possible values are: `passed` for conditions detected during the test run, `failed` for those not detected, or `error_occurred`, if the test run couldn't be executed due to a system error.",
                                                "type": "string",
                                                "enum": [
                                                  "passed",
                                                  "failed",
                                                  "error_occurred"
                                                ]
                                              }
                                            }
                                          },
                                          "errors": {
                                            "description": "Contains [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) object indicating occurred errors.",
                                            "minItems": 0,
                                            "type": "array",
                                            "items": {
                                              "additionalProperties": false,
                                              "type": "object",
                                              "required": [
                                                "type",
                                                "title"
                                              ],
                                              "properties": {
                                                "title": {
                                                  "description": "Summary of the error.",
                                                  "minLength": 1,
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "description": "Dot-notation explanation of the type of occurred error.",
                                                  "minLength": 1,
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "status": {
                                            "description": "Test case objects' execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                                            "type": "string",
                                            "enum": [
                                              "in_progress",
                                              "completed",
                                              "failed"
                                            ]
                                          },
                                          "testCaseExecutionId": {
                                            "description": "Unique identifier of the functional test case execution.",
                                            "minimum": 1,
                                            "type": "integer"
                                          },
                                          "testCaseId": {
                                            "description": "Unique identifier of the functional test case.",
                                            "minimum": 1,
                                            "type": "integer"
                                          }
                                        },
                                        "x-akamai": {
                                          "file-path": "schemas/get-functional-test-case-execution-response.yaml"
                                        }
                                      }
                                    },
                                    "testSuiteExecutionId": {
                                      "description": "Unique identifier for each test suite execution.",
                                      "minimum": 0,
                                      "type": "integer"
                                    },
                                    "testSuiteId": {
                                      "description": "Unique identifier for each test suite that executed.",
                                      "minimum": 0,
                                      "type": "integer"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-test-suite-execution-response.yaml"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "requirementExecutions": {
                          "description": "Contains information about requirements executed during the test run.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                              "requirementId",
                              "status",
                              "testSuiteExecutions"
                            ],
                            "properties": {
                              "requirementId": {
                                "description": "Unique identifier for each requirement.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "status": {
                                "description": "Requirement's execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                                "type": "string",
                                "enum": [
                                  "in_progress",
                                  "completed",
                                  "failed"
                                ]
                              },
                              "testSuiteExecutions": {
                                "description": "Contains information about test suites executed during the test run.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "Contains information about test suites executed during the test run.",
                                  "type": "object",
                                  "required": [
                                    "testSuiteExecutionId",
                                    "status",
                                    "testSuiteId",
                                    "testCaseExecutions"
                                  ],
                                  "properties": {
                                    "status": {
                                      "description": "Test suite's execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                                      "type": "string",
                                      "enum": [
                                        "in_progress",
                                        "completed",
                                        "failed"
                                      ]
                                    },
                                    "testCaseExecutions": {
                                      "description": "Contains information about functional test cases executed during the test run.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "description": "Contains information about functional test cases executed during a test run.",
                                        "type": "object",
                                        "required": [
                                          "testCaseExecutionId",
                                          "status",
                                          "testCaseId"
                                        ],
                                        "properties": {
                                          "conditionEvaluationResult": {
                                            "additionalProperties": false,
                                            "description": "Contains information about evaluation of conditions. It appears only for executions of functional test cases with the `completed` status.",
                                            "type": "object",
                                            "required": [
                                              "result",
                                              "actualConditionData"
                                            ],
                                            "properties": {
                                              "actualConditionData": {
                                                "description": "Condition data collected when the functional test case URL executed.",
                                                "minItems": 1,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "required": [
                                                    "name",
                                                    "value"
                                                  ],
                                                  "properties": {
                                                    "name": {
                                                      "description": "Name of the condition data.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "description": "Value of the condition data.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              },
                                              "result": {
                                                "description": "Result of the evaluation of conditions. Possible values are: `passed` for conditions detected during the test run, `failed` for those not detected, or `error_occurred`, if the test run couldn't be executed due to a system error.",
                                                "type": "string",
                                                "enum": [
                                                  "passed",
                                                  "failed",
                                                  "error_occurred"
                                                ]
                                              }
                                            }
                                          },
                                          "errors": {
                                            "description": "Contains [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) object indicating occurred errors.",
                                            "minItems": 0,
                                            "type": "array",
                                            "items": {
                                              "additionalProperties": false,
                                              "type": "object",
                                              "required": [
                                                "type",
                                                "title"
                                              ],
                                              "properties": {
                                                "title": {
                                                  "description": "Summary of the error.",
                                                  "minLength": 1,
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "description": "Dot-notation explanation of the type of occurred error.",
                                                  "minLength": 1,
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "status": {
                                            "description": "Test case objects' execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                                            "type": "string",
                                            "enum": [
                                              "in_progress",
                                              "completed",
                                              "failed"
                                            ]
                                          },
                                          "testCaseExecutionId": {
                                            "description": "Unique identifier of the functional test case execution.",
                                            "minimum": 1,
                                            "type": "integer"
                                          },
                                          "testCaseId": {
                                            "description": "Unique identifier of the functional test case.",
                                            "minimum": 1,
                                            "type": "integer"
                                          }
                                        },
                                        "x-akamai": {
                                          "file-path": "schemas/get-functional-test-case-execution-response.yaml"
                                        }
                                      }
                                    },
                                    "testSuiteExecutionId": {
                                      "description": "Unique identifier for each test suite execution.",
                                      "minimum": 0,
                                      "type": "integer"
                                    },
                                    "testSuiteId": {
                                      "description": "Unique identifier for each test suite that executed.",
                                      "minimum": 0,
                                      "type": "integer"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-test-suite-execution-response.yaml"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "status": {
                          "description": "Functional objects' execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                          "type": "string",
                          "enum": [
                            "in_progress",
                            "completed",
                            "failed"
                          ]
                        },
                        "testCaseExecutions": {
                          "description": "Contains information about functional test cases executed during the test run.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "Contains information about functional test cases executed during a test run.",
                            "type": "object",
                            "required": [
                              "testCaseExecutionId",
                              "status",
                              "testCaseId"
                            ],
                            "properties": {
                              "conditionEvaluationResult": {
                                "additionalProperties": false,
                                "description": "Contains information about evaluation of conditions. It appears only for executions of functional test cases with the `completed` status.",
                                "type": "object",
                                "required": [
                                  "result",
                                  "actualConditionData"
                                ],
                                "properties": {
                                  "actualConditionData": {
                                    "description": "Condition data collected when the functional test case URL executed.",
                                    "minItems": 1,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "Name of the condition data.",
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Value of the condition data.",
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "result": {
                                    "description": "Result of the evaluation of conditions. Possible values are: `passed` for conditions detected during the test run, `failed` for those not detected, or `error_occurred`, if the test run couldn't be executed due to a system error.",
                                    "type": "string",
                                    "enum": [
                                      "passed",
                                      "failed",
                                      "error_occurred"
                                    ]
                                  }
                                }
                              },
                              "errors": {
                                "description": "Contains [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) object indicating occurred errors.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "title"
                                  ],
                                  "properties": {
                                    "title": {
                                      "description": "Summary of the error.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "Dot-notation explanation of the type of occurred error.",
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "status": {
                                "description": "Test case objects' execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                                "type": "string",
                                "enum": [
                                  "in_progress",
                                  "completed",
                                  "failed"
                                ]
                              },
                              "testCaseExecutionId": {
                                "description": "Unique identifier of the functional test case execution.",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "testCaseId": {
                                "description": "Unique identifier of the functional test case.",
                                "minimum": 1,
                                "type": "integer"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-functional-test-case-execution-response.yaml"
                            }
                          }
                        },
                        "testSuiteExecutions": {
                          "description": "Contains information about test suites executed during the test run.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "Contains information about test suites executed during the test run.",
                            "type": "object",
                            "required": [
                              "testSuiteExecutionId",
                              "status",
                              "testSuiteId",
                              "testCaseExecutions"
                            ],
                            "properties": {
                              "status": {
                                "description": "Test suite's execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                                "type": "string",
                                "enum": [
                                  "in_progress",
                                  "completed",
                                  "failed"
                                ]
                              },
                              "testCaseExecutions": {
                                "description": "Contains information about functional test cases executed during the test run.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "Contains information about functional test cases executed during a test run.",
                                  "type": "object",
                                  "required": [
                                    "testCaseExecutionId",
                                    "status",
                                    "testCaseId"
                                  ],
                                  "properties": {
                                    "conditionEvaluationResult": {
                                      "additionalProperties": false,
                                      "description": "Contains information about evaluation of conditions. It appears only for executions of functional test cases with the `completed` status.",
                                      "type": "object",
                                      "required": [
                                        "result",
                                        "actualConditionData"
                                      ],
                                      "properties": {
                                        "actualConditionData": {
                                          "description": "Condition data collected when the functional test case URL executed.",
                                          "minItems": 1,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "Name of the condition data.",
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "Value of the condition data.",
                                                "minLength": 1,
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "result": {
                                          "description": "Result of the evaluation of conditions. Possible values are: `passed` for conditions detected during the test run, `failed` for those not detected, or `error_occurred`, if the test run couldn't be executed due to a system error.",
                                          "type": "string",
                                          "enum": [
                                            "passed",
                                            "failed",
                                            "error_occurred"
                                          ]
                                        }
                                      }
                                    },
                                    "errors": {
                                      "description": "Contains [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) object indicating occurred errors.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "title"
                                        ],
                                        "properties": {
                                          "title": {
                                            "description": "Summary of the error.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Dot-notation explanation of the type of occurred error.",
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "status": {
                                      "description": "Test case objects' execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                                      "type": "string",
                                      "enum": [
                                        "in_progress",
                                        "completed",
                                        "failed"
                                      ]
                                    },
                                    "testCaseExecutionId": {
                                      "description": "Unique identifier of the functional test case execution.",
                                      "minimum": 1,
                                      "type": "integer"
                                    },
                                    "testCaseId": {
                                      "description": "Unique identifier of the functional test case.",
                                      "minimum": 1,
                                      "type": "integer"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-functional-test-case-execution-response.yaml"
                                  }
                                }
                              },
                              "testSuiteExecutionId": {
                                "description": "Unique identifier for each test suite execution.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "testSuiteId": {
                                "description": "Unique identifier for each test suite that executed.",
                                "minimum": 0,
                                "type": "integer"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-test-suite-execution-response.yaml"
                            }
                          }
                        }
                      }
                    },
                    "note": {
                      "description": "Notes about the test run.",
                      "maxLength": 200,
                      "minLength": 0,
                      "type": "string"
                    },
                    "sendEmailOnCompletion": {
                      "description": "Whether you get a notification email after the test run is complete.",
                      "type": "boolean"
                    },
                    "status": {
                      "description": "Test run's status. Possible values are: `in_progress`, `completed`, or `failed`.",
                      "type": "string",
                      "enum": [
                        "in_progress",
                        "completed",
                        "failed"
                      ]
                    },
                    "submittedBy": {
                      "description": "Username who submitted the test run.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "submittedDate": {
                      "description": "ISO 8601 timestamp indicating when the test run was submitted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "targetEnvironment": {
                      "description": "Environment against which the test run executed, either `production` or `staging`.",
                      "type": "string",
                      "enum": [
                        "production",
                        "staging"
                      ]
                    },
                    "testRunId": {
                      "description": "Unique identifier for each test run.",
                      "minimum": 1,
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-test-run-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists all test runs submitted in your organization. The response is an array of objects, each keyed by `testRunId` with details and status of each test run.",
        "operationId": "get-test-runs",
        "summary": "List test runs",
        "tags": [
          "Test runs"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-runs"
        },
        "responses": {
          "200": {
            "description": "The response lists test runs.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Contains test runs created in your organization.",
                  "minItems": 0,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Contains information about progress of a test run and its results. It also lists all objects executed during the test run.",
                    "type": "object",
                    "required": [
                      "testRunId",
                      "status",
                      "submittedBy",
                      "submittedDate",
                      "sendEmailOnCompletion"
                    ],
                    "properties": {
                      "comparative": {
                        "additionalProperties": false,
                        "description": "Contains information about comparative testing executed during the test run. It doesn't appear if the test was run only for functional testing.",
                        "type": "object",
                        "required": [
                          "testDefinitionExecutions",
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "description": "Comparative objects' execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                            "type": "string",
                            "enum": [
                              "in_progress",
                              "completed",
                              "failed"
                            ]
                          },
                          "testDefinitionExecutions": {
                            "description": "Contains information about test definitions executed during the test run.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about test definitions executed during a test run, including their results.",
                              "type": "object",
                              "required": [
                                "testDefinitionExecutionId",
                                "testDefinitionId",
                                "targetHostname",
                                "status",
                                "ipVersions",
                                "testCaseIds"
                              ],
                              "properties": {
                                "diffCount": {
                                  "additionalProperties": false,
                                  "description": "Contains information about diffs detected during the test run. It appears only when the execution's `status` is `completed`.",
                                  "type": "object",
                                  "required": [
                                    "total",
                                    "outstanding"
                                  ],
                                  "properties": {
                                    "outstanding": {
                                      "description": "Number of not accepted diffs .",
                                      "minimum": 0,
                                      "type": "integer"
                                    },
                                    "total": {
                                      "description": "Total number of diffs detected.",
                                      "minimum": 0,
                                      "type": "integer"
                                    }
                                  }
                                },
                                "errors": {
                                  "description": "Contains [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating errors occurred during the test run. It appears only when the execution's `status` is `failed`.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                      "type",
                                      "title",
                                      "ipVersion"
                                    ],
                                    "properties": {
                                      "ipVersion": {
                                        "description": "IP version for which the test definition execution failed.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "testCaseId": {
                                        "description": "Unique identifier for each comparative test case for which the test definition execution failed. If missing, the execution failed for all test cases for the corresponding IP version.",
                                        "minimum": 0,
                                        "type": "integer"
                                      },
                                      "title": {
                                        "description": "Summary of each error.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "Dot-notated identifier for each type of error.",
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "ipVersions": {
                                  "description": "IP versions for which the test run executed. Possible values are: `ipv4`, `ipv6`, or both.",
                                  "maxItems": 2,
                                  "minItems": 1,
                                  "type": "array",
                                  "uniqueItems": true,
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "ipv4",
                                      "ipv6"
                                    ]
                                  }
                                },
                                "note": {
                                  "description": "Notes about the test definition execution.",
                                  "maxLength": 500,
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "status": {
                                  "description": "Execution's status. Possible values are: `in_progress`, `completed`, `failed`, or `archived`. A value of `failed` means that the execution couldn't be run because of an error. You can check its details in the `errors` array. A value of `archived` means there have been at least five subsequent runs for this test definition.",
                                  "type": "string",
                                  "enum": [
                                    "in_progress",
                                    "completed",
                                    "failed",
                                    "archived"
                                  ]
                                },
                                "supportedComparisonSettings": {
                                  "description": "Contains attributes set for comparison between environments in the `comparisonSettings` array of each executed comparative test case. Possible values are: `responseCode`, `responseHeaders`, `cpcode`, `cachingOption`, `cacheKey`, `metadataVariables`, or `originServer`.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "responseCode",
                                      "responseHeaders",
                                      "cpcode",
                                      "cachingOption",
                                      "cacheKey",
                                      "metadataVariables",
                                      "originServer"
                                    ]
                                  }
                                },
                                "targetEnvironment": {
                                  "description": "Environment against which Test Center executed the test run, either `production` or `staging`.",
                                  "maxLength": 100,
                                  "type": "string",
                                  "enum": [
                                    "production",
                                    "staging"
                                  ]
                                },
                                "targetHostname": {
                                  "description": "Target environment hostname against which the test definition was executed.",
                                  "format": "hostname",
                                  "maxLength": 100,
                                  "type": "string"
                                },
                                "testCaseIds": {
                                  "description": "List of unique identifiers of comparative test cases that executed. To get details of a test case, run the [Get a comparative test case](https://techdocs.akamai.com/test-ctr/reference/get-test-definition-test-case) operation.",
                                  "minItems": 1,
                                  "type": "array",
                                  "items": {
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                },
                                "testDefinitionExecutionId": {
                                  "description": "Unique identifier for each test definition execution.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "testDefinitionId": {
                                  "description": "Unique identifier for each test definition that executed.",
                                  "minimum": 1,
                                  "type": "integer"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-test-definition-execution-response.yaml"
                              }
                            }
                          }
                        }
                      },
                      "completedDate": {
                        "description": "ISO 8601 timestamp indicating when the test run was complete.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "functional": {
                        "additionalProperties": false,
                        "description": "Contains information about functional testing executed during the test run. Depending on what was the test run for, it may include: `configVersionExecutions`, `requirementExecutions`, `testCaseExecutions`, `testSuiteExecutions`. It doesn't appear if the test was run only for comparative testing.",
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "configVersionExecutions": {
                            "description": "Contains information about config versions executed during the test run.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "configVersionId",
                                "status",
                                "testSuiteExecutions"
                              ],
                              "properties": {
                                "configVersionId": {
                                  "description": "Unique identifier for each config version.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "status": {
                                  "description": "Config version's execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                                  "type": "string",
                                  "enum": [
                                    "in_progress",
                                    "completed",
                                    "failed"
                                  ]
                                },
                                "testSuiteExecutions": {
                                  "description": "Contains information about test suites executed during the test run.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Contains information about test suites executed during the test run.",
                                    "type": "object",
                                    "required": [
                                      "testSuiteExecutionId",
                                      "status",
                                      "testSuiteId",
                                      "testCaseExecutions"
                                    ],
                                    "properties": {
                                      "status": {
                                        "description": "Test suite's execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                                        "type": "string",
                                        "enum": [
                                          "in_progress",
                                          "completed",
                                          "failed"
                                        ]
                                      },
                                      "testCaseExecutions": {
                                        "description": "Contains information about functional test cases executed during the test run.",
                                        "minItems": 0,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "description": "Contains information about functional test cases executed during a test run.",
                                          "type": "object",
                                          "required": [
                                            "testCaseExecutionId",
                                            "status",
                                            "testCaseId"
                                          ],
                                          "properties": {
                                            "conditionEvaluationResult": {
                                              "additionalProperties": false,
                                              "description": "Contains information about evaluation of conditions. It appears only for executions of functional test cases with the `completed` status.",
                                              "type": "object",
                                              "required": [
                                                "result",
                                                "actualConditionData"
                                              ],
                                              "properties": {
                                                "actualConditionData": {
                                                  "description": "Condition data collected when the functional test case URL executed.",
                                                  "minItems": 1,
                                                  "type": "array",
                                                  "items": {
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                      "name",
                                                      "value"
                                                    ],
                                                    "properties": {
                                                      "name": {
                                                        "description": "Name of the condition data.",
                                                        "minLength": 1,
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "description": "Value of the condition data.",
                                                        "minLength": 1,
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "result": {
                                                  "description": "Result of the evaluation of conditions. Possible values are: `passed` for conditions detected during the test run, `failed` for those not detected, or `error_occurred`, if the test run couldn't be executed due to a system error.",
                                                  "type": "string",
                                                  "enum": [
                                                    "passed",
                                                    "failed",
                                                    "error_occurred"
                                                  ]
                                                }
                                              }
                                            },
                                            "errors": {
                                              "description": "Contains [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) object indicating occurred errors.",
                                              "minItems": 0,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                  "type",
                                                  "title"
                                                ],
                                                "properties": {
                                                  "title": {
                                                    "description": "Summary of the error.",
                                                    "minLength": 1,
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "description": "Dot-notation explanation of the type of occurred error.",
                                                    "minLength": 1,
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "status": {
                                              "description": "Test case objects' execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                                              "type": "string",
                                              "enum": [
                                                "in_progress",
                                                "completed",
                                                "failed"
                                              ]
                                            },
                                            "testCaseExecutionId": {
                                              "description": "Unique identifier of the functional test case execution.",
                                              "minimum": 1,
                                              "type": "integer"
                                            },
                                            "testCaseId": {
                                              "description": "Unique identifier of the functional test case.",
                                              "minimum": 1,
                                              "type": "integer"
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/get-functional-test-case-execution-response.yaml"
                                          }
                                        }
                                      },
                                      "testSuiteExecutionId": {
                                        "description": "Unique identifier for each test suite execution.",
                                        "minimum": 0,
                                        "type": "integer"
                                      },
                                      "testSuiteId": {
                                        "description": "Unique identifier for each test suite that executed.",
                                        "minimum": 0,
                                        "type": "integer"
                                      }
                                    },
                                    "x-akamai": {
                                      "file-path": "schemas/get-test-suite-execution-response.yaml"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "requirementExecutions": {
                            "description": "Contains information about requirements executed during the test run.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "requirementId",
                                "status",
                                "testSuiteExecutions"
                              ],
                              "properties": {
                                "requirementId": {
                                  "description": "Unique identifier for each requirement.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "status": {
                                  "description": "Requirement's execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                                  "type": "string",
                                  "enum": [
                                    "in_progress",
                                    "completed",
                                    "failed"
                                  ]
                                },
                                "testSuiteExecutions": {
                                  "description": "Contains information about test suites executed during the test run.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Contains information about test suites executed during the test run.",
                                    "type": "object",
                                    "required": [
                                      "testSuiteExecutionId",
                                      "status",
                                      "testSuiteId",
                                      "testCaseExecutions"
                                    ],
                                    "properties": {
                                      "status": {
                                        "description": "Test suite's execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                                        "type": "string",
                                        "enum": [
                                          "in_progress",
                                          "completed",
                                          "failed"
                                        ]
                                      },
                                      "testCaseExecutions": {
                                        "description": "Contains information about functional test cases executed during the test run.",
                                        "minItems": 0,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "description": "Contains information about functional test cases executed during a test run.",
                                          "type": "object",
                                          "required": [
                                            "testCaseExecutionId",
                                            "status",
                                            "testCaseId"
                                          ],
                                          "properties": {
                                            "conditionEvaluationResult": {
                                              "additionalProperties": false,
                                              "description": "Contains information about evaluation of conditions. It appears only for executions of functional test cases with the `completed` status.",
                                              "type": "object",
                                              "required": [
                                                "result",
                                                "actualConditionData"
                                              ],
                                              "properties": {
                                                "actualConditionData": {
                                                  "description": "Condition data collected when the functional test case URL executed.",
                                                  "minItems": 1,
                                                  "type": "array",
                                                  "items": {
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                      "name",
                                                      "value"
                                                    ],
                                                    "properties": {
                                                      "name": {
                                                        "description": "Name of the condition data.",
                                                        "minLength": 1,
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "description": "Value of the condition data.",
                                                        "minLength": 1,
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "result": {
                                                  "description": "Result of the evaluation of conditions. Possible values are: `passed` for conditions detected during the test run, `failed` for those not detected, or `error_occurred`, if the test run couldn't be executed due to a system error.",
                                                  "type": "string",
                                                  "enum": [
                                                    "passed",
                                                    "failed",
                                                    "error_occurred"
                                                  ]
                                                }
                                              }
                                            },
                                            "errors": {
                                              "description": "Contains [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) object indicating occurred errors.",
                                              "minItems": 0,
                                              "type": "array",
                                              "items": {
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                  "type",
                                                  "title"
                                                ],
                                                "properties": {
                                                  "title": {
                                                    "description": "Summary of the error.",
                                                    "minLength": 1,
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "description": "Dot-notation explanation of the type of occurred error.",
                                                    "minLength": 1,
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            },
                                            "status": {
                                              "description": "Test case objects' execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                                              "type": "string",
                                              "enum": [
                                                "in_progress",
                                                "completed",
                                                "failed"
                                              ]
                                            },
                                            "testCaseExecutionId": {
                                              "description": "Unique identifier of the functional test case execution.",
                                              "minimum": 1,
                                              "type": "integer"
                                            },
                                            "testCaseId": {
                                              "description": "Unique identifier of the functional test case.",
                                              "minimum": 1,
                                              "type": "integer"
                                            }
                                          },
                                          "x-akamai": {
                                            "file-path": "schemas/get-functional-test-case-execution-response.yaml"
                                          }
                                        }
                                      },
                                      "testSuiteExecutionId": {
                                        "description": "Unique identifier for each test suite execution.",
                                        "minimum": 0,
                                        "type": "integer"
                                      },
                                      "testSuiteId": {
                                        "description": "Unique identifier for each test suite that executed.",
                                        "minimum": 0,
                                        "type": "integer"
                                      }
                                    },
                                    "x-akamai": {
                                      "file-path": "schemas/get-test-suite-execution-response.yaml"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "status": {
                            "description": "Functional objects' execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                            "type": "string",
                            "enum": [
                              "in_progress",
                              "completed",
                              "failed"
                            ]
                          },
                          "testCaseExecutions": {
                            "description": "Contains information about functional test cases executed during the test run.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about functional test cases executed during a test run.",
                              "type": "object",
                              "required": [
                                "testCaseExecutionId",
                                "status",
                                "testCaseId"
                              ],
                              "properties": {
                                "conditionEvaluationResult": {
                                  "additionalProperties": false,
                                  "description": "Contains information about evaluation of conditions. It appears only for executions of functional test cases with the `completed` status.",
                                  "type": "object",
                                  "required": [
                                    "result",
                                    "actualConditionData"
                                  ],
                                  "properties": {
                                    "actualConditionData": {
                                      "description": "Condition data collected when the functional test case URL executed.",
                                      "minItems": 1,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "value"
                                        ],
                                        "properties": {
                                          "name": {
                                            "description": "Name of the condition data.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Value of the condition data.",
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "result": {
                                      "description": "Result of the evaluation of conditions. Possible values are: `passed` for conditions detected during the test run, `failed` for those not detected, or `error_occurred`, if the test run couldn't be executed due to a system error.",
                                      "type": "string",
                                      "enum": [
                                        "passed",
                                        "failed",
                                        "error_occurred"
                                      ]
                                    }
                                  }
                                },
                                "errors": {
                                  "description": "Contains [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) object indicating occurred errors.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                      "type",
                                      "title"
                                    ],
                                    "properties": {
                                      "title": {
                                        "description": "Summary of the error.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "Dot-notation explanation of the type of occurred error.",
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "status": {
                                  "description": "Test case objects' execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                                  "type": "string",
                                  "enum": [
                                    "in_progress",
                                    "completed",
                                    "failed"
                                  ]
                                },
                                "testCaseExecutionId": {
                                  "description": "Unique identifier of the functional test case execution.",
                                  "minimum": 1,
                                  "type": "integer"
                                },
                                "testCaseId": {
                                  "description": "Unique identifier of the functional test case.",
                                  "minimum": 1,
                                  "type": "integer"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-functional-test-case-execution-response.yaml"
                              }
                            }
                          },
                          "testSuiteExecutions": {
                            "description": "Contains information about test suites executed during the test run.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about test suites executed during the test run.",
                              "type": "object",
                              "required": [
                                "testSuiteExecutionId",
                                "status",
                                "testSuiteId",
                                "testCaseExecutions"
                              ],
                              "properties": {
                                "status": {
                                  "description": "Test suite's execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                                  "type": "string",
                                  "enum": [
                                    "in_progress",
                                    "completed",
                                    "failed"
                                  ]
                                },
                                "testCaseExecutions": {
                                  "description": "Contains information about functional test cases executed during the test run.",
                                  "minItems": 0,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Contains information about functional test cases executed during a test run.",
                                    "type": "object",
                                    "required": [
                                      "testCaseExecutionId",
                                      "status",
                                      "testCaseId"
                                    ],
                                    "properties": {
                                      "conditionEvaluationResult": {
                                        "additionalProperties": false,
                                        "description": "Contains information about evaluation of conditions. It appears only for executions of functional test cases with the `completed` status.",
                                        "type": "object",
                                        "required": [
                                          "result",
                                          "actualConditionData"
                                        ],
                                        "properties": {
                                          "actualConditionData": {
                                            "description": "Condition data collected when the functional test case URL executed.",
                                            "minItems": 1,
                                            "type": "array",
                                            "items": {
                                              "additionalProperties": false,
                                              "type": "object",
                                              "required": [
                                                "name",
                                                "value"
                                              ],
                                              "properties": {
                                                "name": {
                                                  "description": "Name of the condition data.",
                                                  "minLength": 1,
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "description": "Value of the condition data.",
                                                  "minLength": 1,
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "result": {
                                            "description": "Result of the evaluation of conditions. Possible values are: `passed` for conditions detected during the test run, `failed` for those not detected, or `error_occurred`, if the test run couldn't be executed due to a system error.",
                                            "type": "string",
                                            "enum": [
                                              "passed",
                                              "failed",
                                              "error_occurred"
                                            ]
                                          }
                                        }
                                      },
                                      "errors": {
                                        "description": "Contains [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) object indicating occurred errors.",
                                        "minItems": 0,
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "title"
                                          ],
                                          "properties": {
                                            "title": {
                                              "description": "Summary of the error.",
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "type": {
                                              "description": "Dot-notation explanation of the type of occurred error.",
                                              "minLength": 1,
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "status": {
                                        "description": "Test case objects' execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                                        "type": "string",
                                        "enum": [
                                          "in_progress",
                                          "completed",
                                          "failed"
                                        ]
                                      },
                                      "testCaseExecutionId": {
                                        "description": "Unique identifier of the functional test case execution.",
                                        "minimum": 1,
                                        "type": "integer"
                                      },
                                      "testCaseId": {
                                        "description": "Unique identifier of the functional test case.",
                                        "minimum": 1,
                                        "type": "integer"
                                      }
                                    },
                                    "x-akamai": {
                                      "file-path": "schemas/get-functional-test-case-execution-response.yaml"
                                    }
                                  }
                                },
                                "testSuiteExecutionId": {
                                  "description": "Unique identifier for each test suite execution.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "testSuiteId": {
                                  "description": "Unique identifier for each test suite that executed.",
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/get-test-suite-execution-response.yaml"
                              }
                            }
                          }
                        }
                      },
                      "note": {
                        "description": "Notes about the test run.",
                        "maxLength": 200,
                        "minLength": 0,
                        "type": "string"
                      },
                      "sendEmailOnCompletion": {
                        "description": "Whether you get a notification email after the test run is complete.",
                        "type": "boolean"
                      },
                      "status": {
                        "description": "Test run's status. Possible values are: `in_progress`, `completed`, or `failed`.",
                        "type": "string",
                        "enum": [
                          "in_progress",
                          "completed",
                          "failed"
                        ]
                      },
                      "submittedBy": {
                        "description": "Username who submitted the test run.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "submittedDate": {
                        "description": "ISO 8601 timestamp indicating when the test run was submitted.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "targetEnvironment": {
                        "description": "Environment against which the test run executed, either `production` or `staging`.",
                        "type": "string",
                        "enum": [
                          "production",
                          "staging"
                        ]
                      },
                      "testRunId": {
                        "description": "Unique identifier for each test run.",
                        "minimum": 1,
                        "type": "integer"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/get-test-run-response.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestRunsResponse.yaml"
                  }
                },
                "example": [
                  {
                    "note": "Config change test",
                    "status": "in_progress",
                    "submittedBy": "jperez",
                    "submittedDate": "2020-01-08T17:19:19+0000",
                    "targetEnvironment": "production",
                    "testRunId": 13081,
                    "comparative": {
                      "status": "in_progress",
                      "testDefinitionExecutions": [
                        {
                          "status": "in_progress",
                          "targetEnvironment": "production",
                          "targetHostname": "www.atcuser8.akamaiu.com",
                          "testDefinitionExecutionId": 17125,
                          "testDefinitionId": 7225,
                          "ipVersions": [
                            "ipv4",
                            "ipv6"
                          ],
                          "testCaseIds": [
                            7832
                          ]
                        }
                      ]
                    },
                    "functional": {
                      "status": "in_progress",
                      "configVersionExecutions": [
                        {
                          "configVersionId": 919,
                          "status": "in_progress",
                          "testSuiteExecutions": [
                            {
                              "status": "in_progress",
                              "testSuiteExecutionId": 45,
                              "testSuiteId": 79,
                              "testCaseExecutions": [
                                {
                                  "status": "in_progress",
                                  "testCaseExecutionId": 263,
                                  "testCaseId": 293
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "requirementExecutions": [
                        {
                          "requirementId": 22,
                          "status": "in_progress",
                          "testSuiteExecutions": [
                            {
                              "status": "in_progress",
                              "testSuiteExecutionId": 46,
                              "testSuiteId": 33,
                              "testCaseExecutions": [
                                {
                                  "status": "in_progress",
                                  "testCaseExecutionId": 264,
                                  "testCaseId": 301
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  {
                    "completedDate": "2019-12-17T11:57:46+0000",
                    "status": "completed",
                    "submittedBy": "jkowalski",
                    "submittedDate": "2019-12-17T11:56:07+0000",
                    "targetEnvironment": "staging",
                    "testRunId": 13079,
                    "comparative": {
                      "status": "completed",
                      "testDefinitionExecutions": [
                        {
                          "completedDate": "2019-12-17T11:57:46+0000",
                          "status": "failed",
                          "targetEnvironment": "staging",
                          "targetHostname": "www.atcuser8.akamaiu.com",
                          "testDefinitionExecutionId": 17123,
                          "testDefinitionId": 4050,
                          "ipVersions": [
                            "ipv6"
                          ],
                          "testCaseIds": [
                            4551
                          ],
                          "errors": [
                            {
                              "ipVersion": "ipv6",
                              "title": "Compared websites do not support the specified IP version",
                              "type": "ip.version.not.supported"
                            }
                          ]
                        },
                        {
                          "completedDate": "2019-12-17T11:57:46+0000",
                          "status": "completed",
                          "targetEnvironment": "staging",
                          "targetHostname": "www.atcuser8.akamaiu.com",
                          "testDefinitionExecutionId": 17122,
                          "testDefinitionId": 8710,
                          "ipVersions": [
                            "ipv4",
                            "ipv6"
                          ],
                          "supportedComparisonSettings": [
                            "cpcode",
                            "cachingOption",
                            "responseHeaders",
                            "responseCode"
                          ],
                          "testCaseIds": [
                            9373
                          ],
                          "diffCount": {
                            "outstanding": 2,
                            "total": 2
                          },
                          "errors": [
                            {
                              "ipVersion": "ipv6",
                              "title": "Compared websites do not support the specified IP version",
                              "type": "ip.version.not.supported"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/test-runs/{testRunId}": {
      "get": {
        "description": "Returns details of a test run.",
        "operationId": "get-test-run",
        "summary": "Get a test run",
        "tags": [
          "Test runs"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-run"
        },
        "responses": {
          "200": {
            "description": "The response provides test run details.",
            "content": {
              "application/json": {
                "example": {
                  "note": "Config change test",
                  "status": "in_progress",
                  "submittedBy": "hgildong",
                  "submittedDate": "2020-01-08T17:19:19+0000",
                  "targetEnvironment": "production",
                  "testRunId": 13081,
                  "comparative": {
                    "status": "in_progress",
                    "testDefinitionExecutions": [
                      {
                        "status": "in_progress",
                        "targetEnvironment": "production",
                        "targetHostname": "www.atcuser8.akamaiu.com",
                        "testDefinitionExecutionId": 17125,
                        "testDefinitionId": 7225,
                        "ipVersions": [
                          "ipv4",
                          "ipv6"
                        ],
                        "testCaseIds": [
                          7832
                        ]
                      }
                    ]
                  },
                  "functional": {
                    "status": "in_progress",
                    "configVersionExecutions": [
                      {
                        "configVersionId": 919,
                        "status": "in_progress",
                        "testSuiteExecutions": [
                          {
                            "status": "in_progress",
                            "testSuiteExecutionId": 45,
                            "testSuiteId": 79,
                            "testCaseExecutions": [
                              {
                                "status": "in_progress",
                                "testCaseExecutionId": 263,
                                "testCaseId": 293
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "requirementExecutions": [
                      {
                        "requirementId": 22,
                        "status": "in_progress",
                        "testSuiteExecutions": [
                          {
                            "status": "in_progress",
                            "testSuiteExecutionId": 46,
                            "testSuiteId": 33,
                            "testCaseExecutions": [
                              {
                                "status": "in_progress",
                                "testCaseExecutionId": 264,
                                "testCaseId": 301
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about progress of a test run and its results. It also lists all objects executed during the test run.",
                  "type": "object",
                  "required": [
                    "testRunId",
                    "status",
                    "submittedBy",
                    "submittedDate",
                    "sendEmailOnCompletion"
                  ],
                  "properties": {
                    "comparative": {
                      "additionalProperties": false,
                      "description": "Contains information about comparative testing executed during the test run. It doesn't appear if the test was run only for functional testing.",
                      "type": "object",
                      "required": [
                        "testDefinitionExecutions",
                        "status"
                      ],
                      "properties": {
                        "status": {
                          "description": "Comparative objects' execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                          "type": "string",
                          "enum": [
                            "in_progress",
                            "completed",
                            "failed"
                          ]
                        },
                        "testDefinitionExecutions": {
                          "description": "Contains information about test definitions executed during the test run.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "Contains information about test definitions executed during a test run, including their results.",
                            "type": "object",
                            "required": [
                              "testDefinitionExecutionId",
                              "testDefinitionId",
                              "targetHostname",
                              "status",
                              "ipVersions",
                              "testCaseIds"
                            ],
                            "properties": {
                              "diffCount": {
                                "additionalProperties": false,
                                "description": "Contains information about diffs detected during the test run. It appears only when the execution's `status` is `completed`.",
                                "type": "object",
                                "required": [
                                  "total",
                                  "outstanding"
                                ],
                                "properties": {
                                  "outstanding": {
                                    "description": "Number of not accepted diffs .",
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  "total": {
                                    "description": "Total number of diffs detected.",
                                    "minimum": 0,
                                    "type": "integer"
                                  }
                                }
                              },
                              "errors": {
                                "description": "Contains [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) objects indicating errors occurred during the test run. It appears only when the execution's `status` is `failed`.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "title",
                                    "ipVersion"
                                  ],
                                  "properties": {
                                    "ipVersion": {
                                      "description": "IP version for which the test definition execution failed.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "testCaseId": {
                                      "description": "Unique identifier for each comparative test case for which the test definition execution failed. If missing, the execution failed for all test cases for the corresponding IP version.",
                                      "minimum": 0,
                                      "type": "integer"
                                    },
                                    "title": {
                                      "description": "Summary of each error.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "Dot-notated identifier for each type of error.",
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "ipVersions": {
                                "description": "IP versions for which the test run executed. Possible values are: `ipv4`, `ipv6`, or both.",
                                "maxItems": 2,
                                "minItems": 1,
                                "type": "array",
                                "uniqueItems": true,
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "ipv4",
                                    "ipv6"
                                  ]
                                }
                              },
                              "note": {
                                "description": "Notes about the test definition execution.",
                                "maxLength": 500,
                                "minLength": 0,
                                "type": "string"
                              },
                              "status": {
                                "description": "Execution's status. Possible values are: `in_progress`, `completed`, `failed`, or `archived`. A value of `failed` means that the execution couldn't be run because of an error. You can check its details in the `errors` array. A value of `archived` means there have been at least five subsequent runs for this test definition.",
                                "type": "string",
                                "enum": [
                                  "in_progress",
                                  "completed",
                                  "failed",
                                  "archived"
                                ]
                              },
                              "supportedComparisonSettings": {
                                "description": "Contains attributes set for comparison between environments in the `comparisonSettings` array of each executed comparative test case. Possible values are: `responseCode`, `responseHeaders`, `cpcode`, `cachingOption`, `cacheKey`, `metadataVariables`, or `originServer`.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "responseCode",
                                    "responseHeaders",
                                    "cpcode",
                                    "cachingOption",
                                    "cacheKey",
                                    "metadataVariables",
                                    "originServer"
                                  ]
                                }
                              },
                              "targetEnvironment": {
                                "description": "Environment against which Test Center executed the test run, either `production` or `staging`.",
                                "maxLength": 100,
                                "type": "string",
                                "enum": [
                                  "production",
                                  "staging"
                                ]
                              },
                              "targetHostname": {
                                "description": "Target environment hostname against which the test definition was executed.",
                                "format": "hostname",
                                "maxLength": 100,
                                "type": "string"
                              },
                              "testCaseIds": {
                                "description": "List of unique identifiers of comparative test cases that executed. To get details of a test case, run the [Get a comparative test case](https://techdocs.akamai.com/test-ctr/reference/get-test-definition-test-case) operation.",
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                  "minimum": 0,
                                  "type": "integer"
                                }
                              },
                              "testDefinitionExecutionId": {
                                "description": "Unique identifier for each test definition execution.",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "testDefinitionId": {
                                "description": "Unique identifier for each test definition that executed.",
                                "minimum": 1,
                                "type": "integer"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-test-definition-execution-response.yaml"
                            }
                          }
                        }
                      }
                    },
                    "completedDate": {
                      "description": "ISO 8601 timestamp indicating when the test run was complete.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "functional": {
                      "additionalProperties": false,
                      "description": "Contains information about functional testing executed during the test run. Depending on what was the test run for, it may include: `configVersionExecutions`, `requirementExecutions`, `testCaseExecutions`, `testSuiteExecutions`. It doesn't appear if the test was run only for comparative testing.",
                      "type": "object",
                      "required": [
                        "status"
                      ],
                      "properties": {
                        "configVersionExecutions": {
                          "description": "Contains information about config versions executed during the test run.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                              "configVersionId",
                              "status",
                              "testSuiteExecutions"
                            ],
                            "properties": {
                              "configVersionId": {
                                "description": "Unique identifier for each config version.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "status": {
                                "description": "Config version's execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                                "type": "string",
                                "enum": [
                                  "in_progress",
                                  "completed",
                                  "failed"
                                ]
                              },
                              "testSuiteExecutions": {
                                "description": "Contains information about test suites executed during the test run.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "Contains information about test suites executed during the test run.",
                                  "type": "object",
                                  "required": [
                                    "testSuiteExecutionId",
                                    "status",
                                    "testSuiteId",
                                    "testCaseExecutions"
                                  ],
                                  "properties": {
                                    "status": {
                                      "description": "Test suite's execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                                      "type": "string",
                                      "enum": [
                                        "in_progress",
                                        "completed",
                                        "failed"
                                      ]
                                    },
                                    "testCaseExecutions": {
                                      "description": "Contains information about functional test cases executed during the test run.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "description": "Contains information about functional test cases executed during a test run.",
                                        "type": "object",
                                        "required": [
                                          "testCaseExecutionId",
                                          "status",
                                          "testCaseId"
                                        ],
                                        "properties": {
                                          "conditionEvaluationResult": {
                                            "additionalProperties": false,
                                            "description": "Contains information about evaluation of conditions. It appears only for executions of functional test cases with the `completed` status.",
                                            "type": "object",
                                            "required": [
                                              "result",
                                              "actualConditionData"
                                            ],
                                            "properties": {
                                              "actualConditionData": {
                                                "description": "Condition data collected when the functional test case URL executed.",
                                                "minItems": 1,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "required": [
                                                    "name",
                                                    "value"
                                                  ],
                                                  "properties": {
                                                    "name": {
                                                      "description": "Name of the condition data.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "description": "Value of the condition data.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              },
                                              "result": {
                                                "description": "Result of the evaluation of conditions. Possible values are: `passed` for conditions detected during the test run, `failed` for those not detected, or `error_occurred`, if the test run couldn't be executed due to a system error.",
                                                "type": "string",
                                                "enum": [
                                                  "passed",
                                                  "failed",
                                                  "error_occurred"
                                                ]
                                              }
                                            }
                                          },
                                          "errors": {
                                            "description": "Contains [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) object indicating occurred errors.",
                                            "minItems": 0,
                                            "type": "array",
                                            "items": {
                                              "additionalProperties": false,
                                              "type": "object",
                                              "required": [
                                                "type",
                                                "title"
                                              ],
                                              "properties": {
                                                "title": {
                                                  "description": "Summary of the error.",
                                                  "minLength": 1,
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "description": "Dot-notation explanation of the type of occurred error.",
                                                  "minLength": 1,
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "status": {
                                            "description": "Test case objects' execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                                            "type": "string",
                                            "enum": [
                                              "in_progress",
                                              "completed",
                                              "failed"
                                            ]
                                          },
                                          "testCaseExecutionId": {
                                            "description": "Unique identifier of the functional test case execution.",
                                            "minimum": 1,
                                            "type": "integer"
                                          },
                                          "testCaseId": {
                                            "description": "Unique identifier of the functional test case.",
                                            "minimum": 1,
                                            "type": "integer"
                                          }
                                        },
                                        "x-akamai": {
                                          "file-path": "schemas/get-functional-test-case-execution-response.yaml"
                                        }
                                      }
                                    },
                                    "testSuiteExecutionId": {
                                      "description": "Unique identifier for each test suite execution.",
                                      "minimum": 0,
                                      "type": "integer"
                                    },
                                    "testSuiteId": {
                                      "description": "Unique identifier for each test suite that executed.",
                                      "minimum": 0,
                                      "type": "integer"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-test-suite-execution-response.yaml"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "requirementExecutions": {
                          "description": "Contains information about requirements executed during the test run.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                              "requirementId",
                              "status",
                              "testSuiteExecutions"
                            ],
                            "properties": {
                              "requirementId": {
                                "description": "Unique identifier for each requirement.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "status": {
                                "description": "Requirement's execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                                "type": "string",
                                "enum": [
                                  "in_progress",
                                  "completed",
                                  "failed"
                                ]
                              },
                              "testSuiteExecutions": {
                                "description": "Contains information about test suites executed during the test run.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "Contains information about test suites executed during the test run.",
                                  "type": "object",
                                  "required": [
                                    "testSuiteExecutionId",
                                    "status",
                                    "testSuiteId",
                                    "testCaseExecutions"
                                  ],
                                  "properties": {
                                    "status": {
                                      "description": "Test suite's execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                                      "type": "string",
                                      "enum": [
                                        "in_progress",
                                        "completed",
                                        "failed"
                                      ]
                                    },
                                    "testCaseExecutions": {
                                      "description": "Contains information about functional test cases executed during the test run.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "description": "Contains information about functional test cases executed during a test run.",
                                        "type": "object",
                                        "required": [
                                          "testCaseExecutionId",
                                          "status",
                                          "testCaseId"
                                        ],
                                        "properties": {
                                          "conditionEvaluationResult": {
                                            "additionalProperties": false,
                                            "description": "Contains information about evaluation of conditions. It appears only for executions of functional test cases with the `completed` status.",
                                            "type": "object",
                                            "required": [
                                              "result",
                                              "actualConditionData"
                                            ],
                                            "properties": {
                                              "actualConditionData": {
                                                "description": "Condition data collected when the functional test case URL executed.",
                                                "minItems": 1,
                                                "type": "array",
                                                "items": {
                                                  "additionalProperties": false,
                                                  "type": "object",
                                                  "required": [
                                                    "name",
                                                    "value"
                                                  ],
                                                  "properties": {
                                                    "name": {
                                                      "description": "Name of the condition data.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                    },
                                                    "value": {
                                                      "description": "Value of the condition data.",
                                                      "minLength": 1,
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              },
                                              "result": {
                                                "description": "Result of the evaluation of conditions. Possible values are: `passed` for conditions detected during the test run, `failed` for those not detected, or `error_occurred`, if the test run couldn't be executed due to a system error.",
                                                "type": "string",
                                                "enum": [
                                                  "passed",
                                                  "failed",
                                                  "error_occurred"
                                                ]
                                              }
                                            }
                                          },
                                          "errors": {
                                            "description": "Contains [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) object indicating occurred errors.",
                                            "minItems": 0,
                                            "type": "array",
                                            "items": {
                                              "additionalProperties": false,
                                              "type": "object",
                                              "required": [
                                                "type",
                                                "title"
                                              ],
                                              "properties": {
                                                "title": {
                                                  "description": "Summary of the error.",
                                                  "minLength": 1,
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "description": "Dot-notation explanation of the type of occurred error.",
                                                  "minLength": 1,
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "status": {
                                            "description": "Test case objects' execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                                            "type": "string",
                                            "enum": [
                                              "in_progress",
                                              "completed",
                                              "failed"
                                            ]
                                          },
                                          "testCaseExecutionId": {
                                            "description": "Unique identifier of the functional test case execution.",
                                            "minimum": 1,
                                            "type": "integer"
                                          },
                                          "testCaseId": {
                                            "description": "Unique identifier of the functional test case.",
                                            "minimum": 1,
                                            "type": "integer"
                                          }
                                        },
                                        "x-akamai": {
                                          "file-path": "schemas/get-functional-test-case-execution-response.yaml"
                                        }
                                      }
                                    },
                                    "testSuiteExecutionId": {
                                      "description": "Unique identifier for each test suite execution.",
                                      "minimum": 0,
                                      "type": "integer"
                                    },
                                    "testSuiteId": {
                                      "description": "Unique identifier for each test suite that executed.",
                                      "minimum": 0,
                                      "type": "integer"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-test-suite-execution-response.yaml"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "status": {
                          "description": "Functional objects' execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                          "type": "string",
                          "enum": [
                            "in_progress",
                            "completed",
                            "failed"
                          ]
                        },
                        "testCaseExecutions": {
                          "description": "Contains information about functional test cases executed during the test run.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "Contains information about functional test cases executed during a test run.",
                            "type": "object",
                            "required": [
                              "testCaseExecutionId",
                              "status",
                              "testCaseId"
                            ],
                            "properties": {
                              "conditionEvaluationResult": {
                                "additionalProperties": false,
                                "description": "Contains information about evaluation of conditions. It appears only for executions of functional test cases with the `completed` status.",
                                "type": "object",
                                "required": [
                                  "result",
                                  "actualConditionData"
                                ],
                                "properties": {
                                  "actualConditionData": {
                                    "description": "Condition data collected when the functional test case URL executed.",
                                    "minItems": 1,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "Name of the condition data.",
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Value of the condition data.",
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "result": {
                                    "description": "Result of the evaluation of conditions. Possible values are: `passed` for conditions detected during the test run, `failed` for those not detected, or `error_occurred`, if the test run couldn't be executed due to a system error.",
                                    "type": "string",
                                    "enum": [
                                      "passed",
                                      "failed",
                                      "error_occurred"
                                    ]
                                  }
                                }
                              },
                              "errors": {
                                "description": "Contains [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) object indicating occurred errors.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "title"
                                  ],
                                  "properties": {
                                    "title": {
                                      "description": "Summary of the error.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "Dot-notation explanation of the type of occurred error.",
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "status": {
                                "description": "Test case objects' execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                                "type": "string",
                                "enum": [
                                  "in_progress",
                                  "completed",
                                  "failed"
                                ]
                              },
                              "testCaseExecutionId": {
                                "description": "Unique identifier of the functional test case execution.",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "testCaseId": {
                                "description": "Unique identifier of the functional test case.",
                                "minimum": 1,
                                "type": "integer"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-functional-test-case-execution-response.yaml"
                            }
                          }
                        },
                        "testSuiteExecutions": {
                          "description": "Contains information about test suites executed during the test run.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "Contains information about test suites executed during the test run.",
                            "type": "object",
                            "required": [
                              "testSuiteExecutionId",
                              "status",
                              "testSuiteId",
                              "testCaseExecutions"
                            ],
                            "properties": {
                              "status": {
                                "description": "Test suite's execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                                "type": "string",
                                "enum": [
                                  "in_progress",
                                  "completed",
                                  "failed"
                                ]
                              },
                              "testCaseExecutions": {
                                "description": "Contains information about functional test cases executed during the test run.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "Contains information about functional test cases executed during a test run.",
                                  "type": "object",
                                  "required": [
                                    "testCaseExecutionId",
                                    "status",
                                    "testCaseId"
                                  ],
                                  "properties": {
                                    "conditionEvaluationResult": {
                                      "additionalProperties": false,
                                      "description": "Contains information about evaluation of conditions. It appears only for executions of functional test cases with the `completed` status.",
                                      "type": "object",
                                      "required": [
                                        "result",
                                        "actualConditionData"
                                      ],
                                      "properties": {
                                        "actualConditionData": {
                                          "description": "Condition data collected when the functional test case URL executed.",
                                          "minItems": 1,
                                          "type": "array",
                                          "items": {
                                            "additionalProperties": false,
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "Name of the condition data.",
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "Value of the condition data.",
                                                "minLength": 1,
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "result": {
                                          "description": "Result of the evaluation of conditions. Possible values are: `passed` for conditions detected during the test run, `failed` for those not detected, or `error_occurred`, if the test run couldn't be executed due to a system error.",
                                          "type": "string",
                                          "enum": [
                                            "passed",
                                            "failed",
                                            "error_occurred"
                                          ]
                                        }
                                      }
                                    },
                                    "errors": {
                                      "description": "Contains [HTTP Problem Details](https://tools.ietf.org/html/rfc7807) object indicating occurred errors.",
                                      "minItems": 0,
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": false,
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "title"
                                        ],
                                        "properties": {
                                          "title": {
                                            "description": "Summary of the error.",
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "Dot-notation explanation of the type of occurred error.",
                                            "minLength": 1,
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "status": {
                                      "description": "Test case objects' execution status. Possible values are: `in_progress`, `completed`, or `failed`.",
                                      "type": "string",
                                      "enum": [
                                        "in_progress",
                                        "completed",
                                        "failed"
                                      ]
                                    },
                                    "testCaseExecutionId": {
                                      "description": "Unique identifier of the functional test case execution.",
                                      "minimum": 1,
                                      "type": "integer"
                                    },
                                    "testCaseId": {
                                      "description": "Unique identifier of the functional test case.",
                                      "minimum": 1,
                                      "type": "integer"
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/get-functional-test-case-execution-response.yaml"
                                  }
                                }
                              },
                              "testSuiteExecutionId": {
                                "description": "Unique identifier for each test suite execution.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "testSuiteId": {
                                "description": "Unique identifier for each test suite that executed.",
                                "minimum": 0,
                                "type": "integer"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-test-suite-execution-response.yaml"
                            }
                          }
                        }
                      }
                    },
                    "note": {
                      "description": "Notes about the test run.",
                      "maxLength": 200,
                      "minLength": 0,
                      "type": "string"
                    },
                    "sendEmailOnCompletion": {
                      "description": "Whether you get a notification email after the test run is complete.",
                      "type": "boolean"
                    },
                    "status": {
                      "description": "Test run's status. Possible values are: `in_progress`, `completed`, or `failed`.",
                      "type": "string",
                      "enum": [
                        "in_progress",
                        "completed",
                        "failed"
                      ]
                    },
                    "submittedBy": {
                      "description": "Username who submitted the test run.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "submittedDate": {
                      "description": "ISO 8601 timestamp indicating when the test run was submitted.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "targetEnvironment": {
                      "description": "Environment against which the test run executed, either `production` or `staging`.",
                      "type": "string",
                      "enum": [
                        "production",
                        "staging"
                      ]
                    },
                    "testRunId": {
                      "description": "Unique identifier for each test run.",
                      "minimum": 1,
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-test-run-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each test run.",
          "example": "{{testRunId}}",
          "in": "path",
          "name": "testRunId",
          "required": true,
          "schema": {
            "example": 13081,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testRunId-path.yaml"
          }
        }
      ]
    },
    "/test-runs/{testRunId}/raw-request-response": {
      "get": {
        "description": "Gets a raw request and response for all URLs in a test run.",
        "operationId": "get-test-run-raw-request-response",
        "summary": "Get transaction details for a test run",
        "tags": [
          "Test runs"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-run-raw-request-response"
        },
        "responses": {
          "200": {
            "description": "The response provides the raw request and response.",
            "content": {
              "application/json": {
                "example": {
                  "testRunId": 13081,
                  "comparativeRequestResponse": [
                    {
                      "differenceIds": [
                        "c5267ce4-89e1-44db-83ec-7d2651330903"
                      ],
                      "sourceEnvironment": {
                        "request": {
                          "bodySize": 0,
                          "comment": "",
                          "headersSize": 581,
                          "httpVersion": "HTTP/1.1",
                          "method": "GET",
                          "url": "https://www.atcuser20.akamaiu.com/image/cart.png",
                          "cookies": [],
                          "queryString": [],
                          "headers": [
                            {
                              "name": "Host",
                              "value": "www.atcuser20.akamaiu.com"
                            },
                            {
                              "name": "Connection",
                              "value": "keep-alive"
                            }
                          ]
                        },
                        "response": {
                          "bodySize": 421,
                          "comment": "",
                          "headersSize": 2278,
                          "httpVersion": "HTTP/1.1",
                          "redirectURL": "",
                          "status": 200,
                          "statusText": "OK",
                          "cookies": [],
                          "content": {
                            "comment": "",
                            "compression": 0,
                            "mimeType": "image/png",
                            "size": 0,
                            "text": null
                          },
                          "headers": [
                            {
                              "name": "Server",
                              "value": "Apache/2.4.7 (Ubuntu)"
                            },
                            {
                              "name": "Connection",
                              "value": "keep-alive"
                            }
                          ]
                        }
                      },
                      "targetEnvironment": {
                        "request": {
                          "bodySize": 0,
                          "comment": "",
                          "headersSize": 581,
                          "httpVersion": "HTTP/1.1",
                          "method": "GET",
                          "url": "https://www.atcuser20.akamaiu.com/image/cart.png",
                          "cookies": [],
                          "queryString": [],
                          "headers": [
                            {
                              "name": "Host",
                              "value": "www.atcuser20.akamaiu.com"
                            },
                            {
                              "name": "Connection",
                              "value": "keep-alive"
                            }
                          ]
                        },
                        "response": {
                          "bodySize": -1,
                          "comment": "",
                          "headersSize": -1,
                          "httpVersion": "unknown",
                          "redirectURL": "",
                          "status": 0,
                          "statusText": "",
                          "cookies": [],
                          "headers": [],
                          "content": {
                            "comment": "",
                            "compression": 0,
                            "mimeType": "",
                            "size": 0,
                            "text": null
                          }
                        }
                      }
                    }
                  ],
                  "functionalRequestResponse": [
                    {
                      "testCaseExecutionIds": [
                        254
                      ],
                      "request": {
                        "bodySize": 0,
                        "comment": "",
                        "headersSize": 658,
                        "httpVersion": "HTTP/1.1",
                        "method": "GET",
                        "url": "http://www.atcuser3.akamaiu.com/catalog/view/theme/akamai/image/icon_currency.png",
                        "cookies": [],
                        "queryString": [],
                        "headers": [
                          {
                            "name": "Host",
                            "value": "www.atcuser3.akamaiu.com"
                          },
                          {
                            "name": "Proxy-Connection",
                            "value": "keep-alive"
                          }
                        ]
                      },
                      "response": {
                        "bodySize": 738,
                        "comment": "",
                        "headersSize": 2147,
                        "httpVersion": "HTTP/1.1",
                        "redirectURL": "",
                        "status": 200,
                        "statusText": "OK",
                        "cookies": [],
                        "content": {
                          "comment": "",
                          "compression": 0,
                          "mimeType": "image/png",
                          "size": 0,
                          "text": null
                        },
                        "headers": [
                          {
                            "name": "Server",
                            "value": "Apache/2.4.7 (Ubuntu)"
                          },
                          {
                            "name": "Connection",
                            "value": "keep-alive"
                          }
                        ]
                      }
                    },
                    {
                      "testCaseExecutionIds": [
                        256,
                        252
                      ],
                      "request": {
                        "bodySize": 0,
                        "comment": "",
                        "headersSize": 609,
                        "httpVersion": "HTTP/1.1",
                        "method": "GET",
                        "url": "http://www.atcuser3.akamaiu.com/",
                        "cookies": [],
                        "queryString": [],
                        "headers": [
                          {
                            "name": "Host",
                            "value": "www.atcuser3.akamaiu.com"
                          },
                          {
                            "name": "Proxy-Connection",
                            "value": "keep-alive"
                          }
                        ]
                      },
                      "response": {
                        "bodySize": 15051,
                        "comment": "",
                        "headersSize": 1808,
                        "httpVersion": "HTTP/1.1",
                        "redirectURL": "",
                        "status": 200,
                        "statusText": "OK",
                        "cookies": [],
                        "content": {
                          "comment": "",
                          "compression": 0,
                          "mimeType": "text/html",
                          "size": 0,
                          "text": null
                        },
                        "headers": [
                          {
                            "name": "Server",
                            "value": "Apache/2.4.7 (Ubuntu)"
                          },
                          {
                            "name": "Connection",
                            "value": "keep-alive"
                          }
                        ]
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains a raw request and response of a particular test run.",
                  "type": "object",
                  "required": [
                    "testRunId"
                  ],
                  "properties": {
                    "comparativeRequestResponse": {
                      "description": "Contains a raw request and response for the comparative object execution. It doesn't appear if the test was run only for functional testing.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "sourceEnvironment",
                          "targetEnvironment",
                          "differenceIds"
                        ],
                        "properties": {
                          "differenceIds": {
                            "description": "List of uniquely identifiers of diffs detected during the test run. To get details of a diff, run the [Get a diff](https://techdocs.akamai.com/test-ctr/reference/get-test-definition-execution-difference) operation.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "sourceEnvironment": {
                            "additionalProperties": false,
                            "description": "Contains a raw request and response for the comparative object execution on the source environment.",
                            "type": "object",
                            "required": [
                              "request",
                              "response"
                            ],
                            "properties": {
                              "request": {
                                "additionalProperties": false,
                                "description": "Raw request for the comparative object execution on the source environment.",
                                "type": "object",
                                "required": [
                                  "method",
                                  "url",
                                  "httpVersion",
                                  "cookies",
                                  "headers",
                                  "queryString",
                                  "headerSize",
                                  "bodySize",
                                  "comment"
                                ],
                                "properties": {
                                  "bodySize": {
                                    "description": "Size of the body of the request.",
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  "comment": {
                                    "description": "Comments for the request.",
                                    "minLength": 0,
                                    "type": "string"
                                  },
                                  "cookies": {
                                    "description": "Request cookies.",
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  },
                                  "headerSize": {
                                    "description": "Header size of the request.",
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  "headers": {
                                    "description": "Contains information about standard and customized headers of the request.",
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "Name of the customized header.",
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Value of the customized header.",
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpVersion": {
                                    "description": "HTTP version of the request.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "method": {
                                    "description": "Standard HTTP method. Possible values are: `GET`, `POST`, `DELETE`, `PUT`, or `PATCH`.",
                                    "type": "string",
                                    "enum": [
                                      "GET",
                                      "POST",
                                      "DELETE",
                                      "PUT",
                                      "PATCH"
                                    ]
                                  },
                                  "queryString": {
                                    "description": "Contains query strings of the request.",
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  },
                                  "url": {
                                    "description": "URL of the request.",
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/get-test-url-request-response.yaml"
                                }
                              },
                              "response": {
                                "additionalProperties": false,
                                "description": "Raw response for the comparative object execution on the source environment.",
                                "type": "object",
                                "required": [
                                  "status",
                                  "statusText",
                                  "httpVersion",
                                  "cookies",
                                  "headers",
                                  "content",
                                  "redirectURL",
                                  "headerSize",
                                  "bodySize",
                                  "comment"
                                ],
                                "properties": {
                                  "bodySize": {
                                    "description": "Size of the body of the response in bytes.",
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  "comment": {
                                    "description": "Comments to the response.",
                                    "minLength": 0,
                                    "type": "string"
                                  },
                                  "content": {
                                    "additionalProperties": false,
                                    "description": "Contains information about content-type header of the response.",
                                    "type": "object",
                                    "required": [
                                      "size",
                                      "mimeType",
                                      "comment",
                                      "text",
                                      "compression"
                                    ],
                                    "properties": {
                                      "comment": {
                                        "description": "Comments about the resource.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "compression": {
                                        "description": "Compression applied to the resource.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "mimeType": {
                                        "description": "Media type of the resource.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "size": {
                                        "description": "Size of the resource in bytes.",
                                        "minimum": 0,
                                        "type": "integer"
                                      },
                                      "text": {
                                        "description": "Text of the resource.",
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "cookies": {
                                    "description": "Response cookies.",
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  },
                                  "headerSize": {
                                    "description": "Header size of the response.",
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  "headers": {
                                    "description": "Contains information about headers of the response.",
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "Name of the response header.",
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Value of the response header.",
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpVersion": {
                                    "description": "HTTP version of the response.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "redirectURL": {
                                    "description": "Redirection URL of the response.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "status": {
                                    "description": "HTTP status code of the response.",
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  "statusText": {
                                    "description": "HTTP status code text of the response.",
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/get-test-url-response.yaml"
                                }
                              }
                            }
                          },
                          "targetEnvironment": {
                            "additionalProperties": false,
                            "description": "Contains a raw request and response for the comparative object execution on the target environment.",
                            "type": "object",
                            "required": [
                              "request",
                              "response"
                            ],
                            "properties": {
                              "request": {
                                "additionalProperties": false,
                                "description": "Raw request for the comparative object execution on the target environment.",
                                "type": "object",
                                "required": [
                                  "method",
                                  "url",
                                  "httpVersion",
                                  "cookies",
                                  "headers",
                                  "queryString",
                                  "headerSize",
                                  "bodySize",
                                  "comment"
                                ],
                                "properties": {
                                  "bodySize": {
                                    "description": "Size of the body of the request.",
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  "comment": {
                                    "description": "Comments for the request.",
                                    "minLength": 0,
                                    "type": "string"
                                  },
                                  "cookies": {
                                    "description": "Request cookies.",
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  },
                                  "headerSize": {
                                    "description": "Header size of the request.",
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  "headers": {
                                    "description": "Contains information about standard and customized headers of the request.",
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "Name of the customized header.",
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Value of the customized header.",
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpVersion": {
                                    "description": "HTTP version of the request.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "method": {
                                    "description": "Standard HTTP method. Possible values are: `GET`, `POST`, `DELETE`, `PUT`, or `PATCH`.",
                                    "type": "string",
                                    "enum": [
                                      "GET",
                                      "POST",
                                      "DELETE",
                                      "PUT",
                                      "PATCH"
                                    ]
                                  },
                                  "queryString": {
                                    "description": "Contains query strings of the request.",
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  },
                                  "url": {
                                    "description": "URL of the request.",
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/get-test-url-request-response.yaml"
                                }
                              },
                              "response": {
                                "additionalProperties": false,
                                "description": "Raw response for the comparative object execution on the target environment.",
                                "type": "object",
                                "required": [
                                  "status",
                                  "statusText",
                                  "httpVersion",
                                  "cookies",
                                  "headers",
                                  "content",
                                  "redirectURL",
                                  "headerSize",
                                  "bodySize",
                                  "comment"
                                ],
                                "properties": {
                                  "bodySize": {
                                    "description": "Size of the body of the response in bytes.",
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  "comment": {
                                    "description": "Comments to the response.",
                                    "minLength": 0,
                                    "type": "string"
                                  },
                                  "content": {
                                    "additionalProperties": false,
                                    "description": "Contains information about content-type header of the response.",
                                    "type": "object",
                                    "required": [
                                      "size",
                                      "mimeType",
                                      "comment",
                                      "text",
                                      "compression"
                                    ],
                                    "properties": {
                                      "comment": {
                                        "description": "Comments about the resource.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "compression": {
                                        "description": "Compression applied to the resource.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "mimeType": {
                                        "description": "Media type of the resource.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "size": {
                                        "description": "Size of the resource in bytes.",
                                        "minimum": 0,
                                        "type": "integer"
                                      },
                                      "text": {
                                        "description": "Text of the resource.",
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "cookies": {
                                    "description": "Response cookies.",
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  },
                                  "headerSize": {
                                    "description": "Header size of the response.",
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  "headers": {
                                    "description": "Contains information about headers of the response.",
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                      "additionalProperties": false,
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "Name of the response header.",
                                          "minLength": 1,
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "Value of the response header.",
                                          "minLength": 1,
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "httpVersion": {
                                    "description": "HTTP version of the response.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "redirectURL": {
                                    "description": "Redirection URL of the response.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "status": {
                                    "description": "HTTP status code of the response.",
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  "statusText": {
                                    "description": "HTTP status code text of the response.",
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/get-test-url-response.yaml"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "functionalRequestResponse": {
                      "description": "Contains a raw request and response for the functional object execution. It doesn't appear if the test was run only for comparative testing.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "request",
                          "response",
                          "testCaseExecutionIds"
                        ],
                        "properties": {
                          "request": {
                            "additionalProperties": false,
                            "description": "Raw request for the functional object execution.",
                            "type": "object",
                            "required": [
                              "method",
                              "url",
                              "httpVersion",
                              "cookies",
                              "headers",
                              "queryString",
                              "headerSize",
                              "bodySize",
                              "comment"
                            ],
                            "properties": {
                              "bodySize": {
                                "description": "Size of the body of the request.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "comment": {
                                "description": "Comments for the request.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "cookies": {
                                "description": "Request cookies.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "headerSize": {
                                "description": "Header size of the request.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "headers": {
                                "description": "Contains information about standard and customized headers of the request.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "Name of the customized header.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Value of the customized header.",
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpVersion": {
                                "description": "HTTP version of the request.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "method": {
                                "description": "Standard HTTP method. Possible values are: `GET`, `POST`, `DELETE`, `PUT`, or `PATCH`.",
                                "type": "string",
                                "enum": [
                                  "GET",
                                  "POST",
                                  "DELETE",
                                  "PUT",
                                  "PATCH"
                                ]
                              },
                              "queryString": {
                                "description": "Contains query strings of the request.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "url": {
                                "description": "URL of the request.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-test-url-request-response.yaml"
                            }
                          },
                          "response": {
                            "additionalProperties": false,
                            "description": "Contains a raw response for the functional object execution.",
                            "type": "object",
                            "required": [
                              "status",
                              "statusText",
                              "httpVersion",
                              "cookies",
                              "headers",
                              "content",
                              "redirectURL",
                              "headerSize",
                              "bodySize",
                              "comment"
                            ],
                            "properties": {
                              "bodySize": {
                                "description": "Size of the body of the response in bytes.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "comment": {
                                "description": "Comments to the response.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "content": {
                                "additionalProperties": false,
                                "description": "Contains information about content-type header of the response.",
                                "type": "object",
                                "required": [
                                  "size",
                                  "mimeType",
                                  "comment",
                                  "text",
                                  "compression"
                                ],
                                "properties": {
                                  "comment": {
                                    "description": "Comments about the resource.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "compression": {
                                    "description": "Compression applied to the resource.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "mimeType": {
                                    "description": "Media type of the resource.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "size": {
                                    "description": "Size of the resource in bytes.",
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  "text": {
                                    "description": "Text of the resource.",
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                }
                              },
                              "cookies": {
                                "description": "Response cookies.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "headerSize": {
                                "description": "Header size of the response.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "headers": {
                                "description": "Contains information about headers of the response.",
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "Name of the response header.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Value of the response header.",
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "httpVersion": {
                                "description": "HTTP version of the response.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "redirectURL": {
                                "description": "Redirection URL of the response.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "status": {
                                "description": "HTTP status code of the response.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "statusText": {
                                "description": "HTTP status code text of the response.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-test-url-response.yaml"
                            }
                          },
                          "testCaseExecutionIds": {
                            "description": "Unique identifier of associated functional test cases. To get details of a test case, run the [Get a functional test case](https://techdocs.akamai.com/test-ctr/reference/get-test-case) operation.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "minimum": 0,
                              "type": "integer"
                            }
                          }
                        }
                      }
                    },
                    "testRunId": {
                      "description": "Unique identifier for each test run.",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestRunRawRequestResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for each test run.",
          "example": "{{testRunId}}",
          "in": "path",
          "name": "testRunId",
          "required": true,
          "schema": {
            "example": 13081,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testRunId-path.yaml"
          }
        }
      ]
    }
  },
  "x-readme": {
    "samples-languages": [
      "curl",
      "python",
      "node"
    ]
  },
  "servers": [
    {
      "url": "https://{hostname}/test-management/v2"
    }
  ]
}