{
  "openapi": "3.0.0",
  "externalDocs": {
    "description": "See documentation for Akamai's Test Center API",
    "url": "https://techdocs.akamai.com/test-ctr/reference"
  },
  "info": {
    "title": "Akamai: Test Center API",
    "version": "v1",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "paths": {
    "/activities": {
      "post": {
        "description": "Get the list of activities for the given set of filters.",
        "operationId": "post-activities",
        "summary": "List activities",
        "tags": [
          "Activities"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-activities"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "filters": [
                  {
                    "field": "activityResource",
                    "value": "test-definition",
                    "ids": [
                      "738",
                      "495",
                      "740"
                    ]
                  },
                  {
                    "field": "activityResource",
                    "value": "test-case",
                    "ids": [
                      "1855",
                      "1866"
                    ]
                  },
                  {
                    "field": "activityResource",
                    "value": "test-run",
                    "ids": [
                      "133"
                    ]
                  },
                  {
                    "field": "activityResource",
                    "value": "test-difference",
                    "ids": [
                      "e52a1b76-d33d-11e7-9296-cec278b6b50a"
                    ]
                  },
                  {
                    "field": "activityResource",
                    "value": "test-difference-note",
                    "ids": [
                      "fe59f1e6-0022-4119-b05b-71e33c2a0ee2"
                    ]
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "The logged event of a user-performed action, for example, the creation of a test definition or test case, the removal of either, adding a note to a diff, etc.",
                "type": "object",
                "required": [
                  "filters"
                ],
                "properties": {
                  "filters": {
                    "description": "While filtering the activities, a logical OR is applied on all individual filters.",
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "An array of specified filters.",
                      "type": "object",
                      "required": [
                        "field",
                        "value",
                        "ids"
                      ],
                      "properties": {
                        "field": {
                          "description": "The field on which the filter should be applied. The value must be `activityResource`.",
                          "type": "string",
                          "enum": [
                            "activityResource"
                          ]
                        },
                        "ids": {
                          "description": "While filtering the activities, a logical OR is applied to IDs within the filter. If no IDs are sent, all the activities for the particular field and value are not sent.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "value": {
                          "description": "The value of the selected field on which the filter should be applied. The value can be `test-case`, `test-definition`, `test-difference`, `test-difference-note`, and `test-run`.",
                          "type": "string",
                          "enum": [
                            "test-definition",
                            "test-case",
                            "test-run",
                            "test-difference",
                            "test-difference-note"
                          ]
                        }
                      }
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/postActivitiesRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "createdDate",
                      "createdBy",
                      "activityResource",
                      "activityAction",
                      "activityAdditionalInfo"
                    ],
                    "properties": {
                      "activityAction": {
                        "description": "The action or type for the activity. Not all actions are applicable to all resources. Some actions, such as `accept` and `unaccept` apply only to `test-difference`. Can be `create`, `edit`, `delete`, `run`, `clone`, `start`, `cancel`, `rerun`, `accept`, `unaccept`.",
                        "type": "string",
                        "enum": [
                          "create",
                          "edit",
                          "delete",
                          "run",
                          "clone",
                          "start",
                          "cancel",
                          "rerun",
                          "accept",
                          "unaccept"
                        ]
                      },
                      "activityAdditionalInfo": {
                        "additionalProperties": false,
                        "description": "The additional information required for an activity to represent the complete information. Depending on the activity resource and action, different kinds of additional information needs to be provided. For example, the clone of a test case requires the source test definition, source test case, target test definition and target test case.",
                        "type": "object",
                        "properties": {
                          "note": {
                            "type": "string"
                          },
                          "source-test-case-id": {
                            "nullable": true,
                            "type": "number"
                          },
                          "source-test-case-name": {
                            "nullable": true,
                            "type": "string"
                          },
                          "source-test-definition-id": {
                            "nullable": true,
                            "type": "number"
                          },
                          "source-test-definition-name": {
                            "nullable": true,
                            "type": "string"
                          },
                          "target-test-case-id": {
                            "type": "number"
                          },
                          "target-test-case-name": {
                            "type": "string"
                          },
                          "target-test-definition-id": {
                            "type": "number"
                          },
                          "target-test-definition-name": {
                            "type": "string"
                          },
                          "test-definition-execution-id": {
                            "type": "number"
                          },
                          "test-difference-id": {
                            "type": "number"
                          }
                        }
                      },
                      "activityResource": {
                        "description": "The resource on which an activity was performed. Can be `test-definition`, `test-case`, `test-run`, `test-difference`, or `test-difference-note`.",
                        "type": "string",
                        "enum": [
                          "test-definition",
                          "test-case",
                          "test-run",
                          "test-difference",
                          "test-difference-note"
                        ]
                      },
                      "createdBy": {
                        "description": "User ID of the user who has performed the activity.",
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 date string indicating when the activity was generated.",
                        "type": "string"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/postActivitiesResponse.yaml"
                  }
                },
                "example": [
                  {
                    "activityAction": "create",
                    "activityResource": "test-definition",
                    "createdBy": "jperez",
                    "createdDate": "2017-08-17T01:25:26+0000",
                    "activityAdditionalInfo": {
                      "source-test-definition-id": null,
                      "source-test-definition-name": null,
                      "target-test-definition-id": 738,
                      "target-test-definition-name": "Weather Test"
                    }
                  },
                  {
                    "activityAction": "edit",
                    "activityResource": "test-definition",
                    "createdBy": "alfulani",
                    "createdDate": "2017-08-17T01:25:26+0000",
                    "activityAdditionalInfo": {
                      "source-test-definition-id": null,
                      "source-test-definition-name": null,
                      "target-test-definition-id": 738,
                      "target-test-definition-name": "Weather Test (edited)"
                    }
                  },
                  {
                    "activityAction": "run",
                    "activityResource": "test-definition",
                    "createdBy": "jperez",
                    "createdDate": "2017-08-17T01:25:26+0000",
                    "activityAdditionalInfo": {
                      "source-test-definition-id": null,
                      "source-test-definition-name": null,
                      "target-test-definition-id": 738,
                      "target-test-definition-name": "Weather Test"
                    }
                  },
                  {
                    "activityAction": "clone",
                    "activityResource": "test-definition",
                    "createdBy": "szhang",
                    "createdDate": "2017-08-17T01:25:26+0000",
                    "activityAdditionalInfo": {
                      "source-test-definition-id": 738,
                      "source-test-definition-name": "Weather Test",
                      "target-test-definition-id": 3753,
                      "target-test-definition-name": "Copy of Weather Test"
                    }
                  },
                  {
                    "activityAction": "delete",
                    "activityResource": "test-definition",
                    "createdBy": "jsmith",
                    "createdDate": "2017-08-17T01:25:26+0000",
                    "activityAdditionalInfo": {
                      "source-test-definition-id": null,
                      "source-test-definition-name": null,
                      "target-test-definition-id": 738,
                      "target-test-definition-name": "Weather Test (edited)"
                    }
                  },
                  {
                    "activityAction": "create",
                    "activityResource": "test-case",
                    "createdBy": "jsmith",
                    "createdDate": "2017-08-17T01:25:26+0000",
                    "activityAdditionalInfo": {
                      "source-test-case-id": null,
                      "source-test-case-name": null,
                      "source-test-definition-id": null,
                      "source-test-definition-name": null,
                      "target-test-case-id": 1855,
                      "target-test-case-name": "Base Page",
                      "target-test-definition-id": 738,
                      "target-test-definition-name": "Weather Test"
                    }
                  },
                  {
                    "activityAction": "edit",
                    "activityResource": "test-case",
                    "createdBy": "jkowalski",
                    "createdDate": "2017-08-17T01:25:26+0000",
                    "activityAdditionalInfo": {
                      "source-test-case-id": null,
                      "source-test-case-name": null,
                      "source-test-definition-id": null,
                      "source-test-definition-name": null,
                      "target-test-case-id": 1855,
                      "target-test-case-name": "Base Page (edited)",
                      "target-test-definition-id": 738,
                      "target-test-definition-name": "Weather Test"
                    }
                  },
                  {
                    "activityAction": "delete",
                    "activityResource": "test-case",
                    "createdBy": "adevi",
                    "createdDate": "2017-08-17T01:25:26+0000",
                    "activityAdditionalInfo": {
                      "source-test-case-id": null,
                      "source-test-case-name": null,
                      "source-test-definition-id": null,
                      "source-test-definition-name": null,
                      "target-test-case-id": 1855,
                      "target-test-case-name": "Base Page",
                      "target-test-definition-id": 738,
                      "target-test-definition-name": "Weather Test"
                    }
                  },
                  {
                    "activityAction": "clone",
                    "activityResource": "test-case",
                    "createdBy": "szhang",
                    "createdDate": "2017-08-17T01:25:26+0000",
                    "activityAdditionalInfo": {
                      "source-test-case-id": 1855,
                      "source-test-case-name": "Base Page",
                      "source-test-definition-id": 738,
                      "source-test-definition-name": "Weather Test",
                      "target-test-case-id": 4621,
                      "target-test-case-name": "Copy of Base Page",
                      "target-test-definition-id": 738,
                      "target-test-definition-name": "Weather Test"
                    }
                  },
                  {
                    "activityAction": "start",
                    "activityResource": "test-run",
                    "createdBy": "hgildong",
                    "createdDate": "2017-08-17T01:25:26+0000",
                    "activityAdditionalInfo": {
                      "note": "A sample note",
                      "target-test-definition-id": 738,
                      "target-test-definition-name": "Weather Test",
                      "test-definition-execution-id": 148
                    }
                  },
                  {
                    "activityAction": "accept",
                    "activityResource": "test-difference",
                    "createdBy": "jsmith",
                    "createdDate": "2017-08-17T01:25:26+0000",
                    "activityAdditionalInfo": {
                      "test-definition-execution-id": 148,
                      "test-difference-id": "e52a1b76-d33d-11e7-9296-cec278b6b50a"
                    }
                  },
                  {
                    "activityAction": "unaccept",
                    "activityResource": "test-difference",
                    "createdBy": "tyamada",
                    "createdDate": "2017-08-17T01:25:26+0000",
                    "activityAdditionalInfo": {
                      "test-definition-execution-id": 148,
                      "test-difference-id": "eece8d88-d33d-11e7-9296-cec278b6b50a"
                    }
                  },
                  {
                    "activityAction": "create",
                    "activityResource": "test-difference-note",
                    "createdBy": "jsmith",
                    "createdDate": "2017-08-17T01:25:26+0000",
                    "activityAdditionalInfo": {
                      "note": "Confirming the diff is expected.",
                      "test-definition-execution-id": 148,
                      "test-difference-id": "eece8d88-d33d-11e7-9296-cec278b6b50a"
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/comparison-settings-default-values": {
      "get": {
        "description": "Get the comparison lists for a specific test definition. This includes the Compare All Except list of comparisons and the Compare Only list of comparisons.",
        "operationId": "get-comparison-settings-default-values",
        "summary": "List comparison lists",
        "tags": [
          "Comparison lists"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-comparison-settings-default-values"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "metadataVariables": {
                    "compareAllExcept": [],
                    "compareOnly": [
                      "PMUSER_*",
                      "AKA_PM_*"
                    ]
                  },
                  "responseHeaders": {
                    "compareAllExcept": [
                      "Age",
                      "Date",
                      "Expires",
                      "Server",
                      "Via",
                      "Set-Cookie",
                      "Cache-Control"
                    ],
                    "compareOnly": []
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Default value lists for comparison settings when a test case is created or updated.",
                  "type": "object",
                  "required": [
                    "responseHeaders",
                    "metadataVariables"
                  ],
                  "properties": {
                    "metadataVariables": {
                      "additionalProperties": false,
                      "description": "Inclusion or exclusion list of default values for metadata variables.",
                      "type": "object",
                      "required": [
                        "compareOnly",
                        "compareAllExcept"
                      ],
                      "properties": {
                        "compareAllExcept": {
                          "description": "Exclusion list of default values for metadata variables.",
                          "type": "array",
                          "uniqueItems": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "compareOnly": {
                          "description": "Inclusion list of default values for metadata variables.",
                          "type": "array",
                          "uniqueItems": true,
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "responseHeaders": {
                      "additionalProperties": false,
                      "description": "Inclusion or exclusion list of default values for response headers.",
                      "type": "object",
                      "required": [
                        "compareOnly",
                        "compareAllExcept"
                      ],
                      "properties": {
                        "compareAllExcept": {
                          "description": "Exclusion list of default values for response headers.",
                          "type": "array",
                          "uniqueItems": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "compareOnly": {
                          "description": "Inclusion list of default values for response headers.",
                          "type": "array",
                          "uniqueItems": true,
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getComparisonSettingsDefaultValuesResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/http-headers": {
      "get": {
        "description": "Get list of standard HTTP request and response headers.  These values can be used to prepopulate the request headers during the creation or modification of a test case.",
        "operationId": "get-http-headers",
        "summary": "List HTTP headers",
        "tags": [
          "HTTP headers"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-http-headers"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "requestHeaders": [
                    {
                      "headerName": "A-IM",
                      "possibleValues": [
                        "vcdiff, gdiff",
                        "vcdiff, gdiff;q=0.3",
                        "vcdiff, diffe, gzip"
                      ]
                    },
                    {
                      "headerName": "Accept",
                      "possibleValues": [
                        "audio/*",
                        "text/html",
                        "text/plain",
                        "image/jpeg"
                      ]
                    },
                    {
                      "headerName": "Accept-Additions",
                      "possibleValues": []
                    },
                    {
                      "headerName": "Accept-Charset",
                      "possibleValues": [
                        "iso-8859-5",
                        "unicode-1-1"
                      ]
                    },
                    {
                      "headerName": "Accept-Datetime",
                      "possibleValues": []
                    },
                    {
                      "headerName": "Accept-Encoding",
                      "possibleValues": [
                        "compress",
                        "gzip",
                        "identity",
                        "deflate"
                      ]
                    },
                    {
                      "headerName": "Accept-Features",
                      "possibleValues": []
                    },
                    {
                      "headerName": "Accept-Language",
                      "possibleValues": [
                        "en-US",
                        "da",
                        "en-gb",
                        "en"
                      ]
                    }
                  ],
                  "responseHeaders": [
                    {
                      "headerName": "Access-Control",
                      "possibleValues": []
                    },
                    {
                      "headerName": "Access-Control-Allow-Credentials",
                      "possibleValues": []
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "HTTP request and response headers.",
                  "type": "object",
                  "required": [
                    "requestHeaders",
                    "responseHeaders"
                  ],
                  "properties": {
                    "requestHeaders": {
                      "description": "List of standard HTTP request headers.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "List of standard HTTP request headers.",
                        "type": "object",
                        "required": [
                          "headerName",
                          "possibleValues"
                        ],
                        "properties": {
                          "headerName": {
                            "description": "The name of the request header.",
                            "type": "string"
                          },
                          "possibleValues": {
                            "type": "array",
                            "items": {
                              "description": "The value of the request header.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "responseHeaders": {
                      "description": "List of standard HTTP response headers.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "List of standard HTTP response headers.",
                        "type": "object",
                        "required": [
                          "headerName",
                          "possibleValues"
                        ],
                        "properties": {
                          "headerName": {
                            "description": "The name of the response header.",
                            "type": "string"
                          },
                          "possibleValues": {
                            "type": "array",
                            "items": {
                              "description": "The value of the response header.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getHttpHeadersResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/notification": {
      "post": {
        "description": "Send pending test result emails.",
        "operationId": "post-notification",
        "summary": "Send emails",
        "tags": [
          "Notifications"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-notification"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "status": "Finished sending emails. Total count[42]"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "An object containing the status of notifications triggered.",
                  "type": "object",
                  "required": [
                    "status"
                  ],
                  "properties": {
                    "status": {
                      "description": "A message indicating how many emails were triggered.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/postNotificationResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/properties/{propertyId}": {
      "get": {
        "description": "Get the details of a specific property.",
        "operationId": "get-property",
        "summary": "Get a property",
        "tags": [
          "Properties"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-property"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "accountId": "A-CCT1234",
                  "assetId": "aid_101",
                  "contractId": "C-0N7RAC71",
                  "groupId": "grp_15225",
                  "latestVersion": 2,
                  "note": "Notes about example.com",
                  "productionVersion": null,
                  "propertyId": "prp_175780",
                  "propertyName": "example.com",
                  "stagingVersion": 1
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Property resource from Property Manager.",
                  "type": "object",
                  "required": [
                    "propertyId",
                    "propertyName",
                    "latestVersion",
                    "stagingVersion",
                    "productionVersion",
                    "assetId",
                    "note",
                    "contractId",
                    "accountId",
                    "groupId"
                  ],
                  "properties": {
                    "accountId": {
                      "description": "The unique identifier for the account.",
                      "type": "string"
                    },
                    "assetId": {
                      "description": "The unique identifier for the asset.",
                      "type": "string"
                    },
                    "contractId": {
                      "description": "The unique identifier for the contract.",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "The unique identifier for the group.",
                      "type": "string"
                    },
                    "latestVersion": {
                      "description": "The latest version number.",
                      "type": "integer"
                    },
                    "note": {
                      "description": "Provides descriptive text for each property.",
                      "type": "string"
                    },
                    "productionVersion": {
                      "description": "The version of the property deployed on the production environment.",
                      "nullable": true,
                      "type": "integer"
                    },
                    "propertyId": {
                      "description": "The unique identifier for the property.",
                      "type": "string"
                    },
                    "propertyName": {
                      "description": "The display name for the property.",
                      "type": "string"
                    },
                    "stagingVersion": {
                      "description": "The version of the property deployed on the staging environment.",
                      "nullable": true,
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getPropertyResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for the property.",
          "example": "{{propertyId}}",
          "in": "path",
          "name": "propertyId",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/propertyId-path.yaml"
          }
        }
      ]
    },
    "/properties/{propertyId}/version/{versionId}/isRun": {
      "get": {
        "description": "Verify if propertyId and version are tested in ATC.",
        "operationId": "get-property-version-isrun",
        "summary": "Confirm test",
        "tags": [
          "Properties"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-property-version-isrun"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "propertyId": 433305,
                  "tested": false,
                  "version": 2
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Verify if propertyId and version are tested in ATC.",
                  "type": "object",
                  "required": [
                    "propertyId",
                    "tested",
                    "version"
                  ],
                  "properties": {
                    "propertyId": {
                      "description": "The unique identifier for the property.",
                      "type": "integer"
                    },
                    "tested": {
                      "description": "Status of propertyId and version tested in ATC.",
                      "type": "boolean"
                    },
                    "version": {
                      "description": "Version of the property.",
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getPropertyVersionIsrunResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Version of the property.",
          "example": "{{versionId}}",
          "in": "path",
          "name": "versionId",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/versionId-path.yaml"
          }
        },
        {
          "description": "Unique identifier for the property.",
          "example": "{{propertyId}}",
          "in": "path",
          "name": "propertyId",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/propertyId-path.yaml"
          }
        }
      ]
    },
    "/property-hostnames": {
      "get": {
        "description": "Fetch all of the properties that your account has access to.",
        "operationId": "get-property-hostnames",
        "summary": "Map properties to hostnames",
        "tags": [
          "Properties"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-property-hostnames"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "List of properties containing the hostnames.",
                    "type": "object",
                    "required": [
                      "propertyName",
                      "groupId",
                      "version",
                      "hostnames",
                      "hostnamesIncludingSubdomains"
                    ],
                    "properties": {
                      "groupId": {
                        "description": "Version of the property.",
                        "type": "integer"
                      },
                      "hostnames": {
                        "description": "Hostnames corresponding to the property. The sub-domains corresponding to these hostnames are not part of the property.",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                          "type": "string"
                        }
                      },
                      "hostnamesIncludingSubdomains": {
                        "description": "Non-exact hostnames corresponding to the property. The sub-domains corresponding to these hostnames are also part of the property.",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                          "type": "string"
                        }
                      },
                      "propertyName": {
                        "description": "Name of the property.",
                        "type": "string"
                      },
                      "version": {
                        "description": "Version of the property.",
                        "type": "integer"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getPropertyHostnamesResponse.yaml"
                  }
                },
                "example": [
                  {
                    "groupId": 18385,
                    "propertyName": "mwidomski-gss",
                    "version": 4,
                    "hostnames": [
                      "www.happy-learning.com"
                    ],
                    "hostnamesIncludingSubdomains": [
                      "labs.happy-learning.com"
                    ]
                  },
                  {
                    "groupId": 18315,
                    "propertyName": "rpadmana.gsshappylearning.com",
                    "version": 8,
                    "hostnames": [
                      "failover.rpadmana.gsshappylearning.com",
                      "rpadmana.gsshappylearning.com"
                    ],
                    "hostnamesIncludingSubdomains": []
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/purge": {
      "delete": {
        "description": "Purge older test run data.",
        "operationId": "delete-purge",
        "summary": "Purge older test run data",
        "tags": [
          "Test runs"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/delete-purge"
        },
        "responses": {
          "202": {
            "description": "Successfully submitted.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/test-definition-executions": {
      "get": {
        "description": "Get list of test definition executions. One test definition execution is created for each test definition included in a completed test run.",
        "operationId": "get-test-definition-executions",
        "summary": "List executions",
        "tags": [
          "Executions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-definition-executions"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "List of test definition executions.",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "The test definition execution is a component of a test run. A test run can have multiple executions, one for each test definition included in the test run. A test definition execution contains the subset of test cases, IP versions, target hostname, and target environment of the test definition it belongs to.",
                    "type": "object",
                    "required": [
                      "testDefinitionExecutionId",
                      "testDefinitionId",
                      "testRunId",
                      "targetHostname",
                      "targetEnvironment",
                      "supportedComparisonSettings",
                      "submittedBy",
                      "submittedDate",
                      "status",
                      "ipVersions",
                      "errors",
                      "testCaseIds"
                    ],
                    "properties": {
                      "completedDate": {
                        "description": "ISO 8601 date string for the time at which the test definition execution was completed.",
                        "type": "string"
                      },
                      "diffCount": {
                        "additionalProperties": false,
                        "description": "When the status of the test definition execution is `completed`, this object will appear in the payload. It gives the total and outstanding number of differences.",
                        "type": "object",
                        "required": [
                          "total",
                          "outstanding"
                        ],
                        "properties": {
                          "outstanding": {
                            "description": "This number represents the number of unaccepted diffs.",
                            "type": "integer"
                          },
                          "total": {
                            "description": "This number represents the total number of diffs that was generated.",
                            "type": "integer"
                          }
                        }
                      },
                      "errors": {
                        "description": "When the status of the test definition execution is `failed`, this object will appear in the payload. It contains a list of HTTP Problem Detail-like error objects.",
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "The HTTP problem detail object that signifies the type of error that has occurred.",
                          "type": "object",
                          "required": [
                            "type",
                            "title",
                            "ipVersion"
                          ],
                          "properties": {
                            "ipVersion": {
                              "description": "The IP version for which the test definition execution has failed.",
                              "type": "string"
                            },
                            "testCaseId": {
                              "description": "Unique identifier of the test case for which the test definition execution has failed. If the testCaseId field is not present, it means that all the test cases failed for the corresponding IP version.",
                              "type": "integer"
                            },
                            "title": {
                              "description": "A brief explanation of what the error means.",
                              "type": "string"
                            },
                            "type": {
                              "description": "A dot-notation string to explain what kind of an error occurred.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "ipVersions": {
                        "description": "IP version for which the test has to be run.",
                        "maxItems": 2,
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                          "description": "The IP version options are `ipv4` and `ipv6`.",
                          "type": "string",
                          "enum": [
                            "ipv4",
                            "ipv6"
                          ]
                        }
                      },
                      "note": {
                        "description": "A note about the test definition execution.",
                        "maxLength": 500,
                        "type": "string"
                      },
                      "status": {
                        "description": "Status of the test definition execution. `in_progress` is currently running, `completed` has finished running, `failed` has stopped running due to an error. `archived` means that there were more than 5 runs for that test definition, since this test definition execution was created.",
                        "type": "string",
                        "enum": [
                          "in_progress",
                          "completed",
                          "failed",
                          "archived"
                        ]
                      },
                      "submittedBy": {
                        "description": "The username of the user who initiated the test definition execution.",
                        "type": "string"
                      },
                      "submittedDate": {
                        "description": "The ISO 8601 date string for the time at which the test definition execution was initiated.",
                        "type": "string"
                      },
                      "supportedComparisonSettings": {
                        "description": "List of comparison settings that were supported by the websites tested while running the test.",
                        "type": "array",
                        "items": {
                          "description": "Attributes which are used for comparison between different environments.",
                          "type": "string",
                          "enum": [
                            "responseCode",
                            "responseHeaders",
                            "cpcode",
                            "cachingOption",
                            "cacheKey",
                            "metadataVariables",
                            "originServer"
                          ]
                        }
                      },
                      "targetEnvironment": {
                        "description": "The target environment for the test. Can be either `production` or `staging`.",
                        "maxLength": 100,
                        "type": "string",
                        "enum": [
                          "production",
                          "staging"
                        ]
                      },
                      "targetHostname": {
                        "description": "Hostname for the target environment.",
                        "format": "hostname",
                        "maxLength": 100,
                        "type": "string"
                      },
                      "testCaseIds": {
                        "description": "List of test case IDs that are executed as in the test definition execution. These test cases are a subset of the corresponding test definition's test cases.",
                        "type": "array",
                        "items": {
                          "description": "Identifier of the test case.",
                          "type": "integer"
                        }
                      },
                      "testDefinitionExecutionId": {
                        "description": "Identifier of the test definition execution.",
                        "type": "integer"
                      },
                      "testDefinitionId": {
                        "description": "Identifier of the test definition.",
                        "type": "integer"
                      },
                      "testRunId": {
                        "description": "Identifier of the test run.",
                        "type": "integer"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/get-test-definition-execution-response.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestDefinitionExecutionsResponse.yaml"
                  }
                },
                "example": [
                  {
                    "completedDate": "2018-08-18T12:37:26+0000",
                    "note": "A sample note",
                    "status": "completed",
                    "submittedBy": "adevi",
                    "submittedDate": "2018-08-18T11:37:26+0000",
                    "targetEnvironment": "production",
                    "targetHostname": "www.example-weather-production.com",
                    "testDefinitionExecutionId": 148,
                    "testDefinitionId": 738,
                    "testRunId": 133,
                    "ipVersions": [
                      "ipv6"
                    ],
                    "testCaseIds": [
                      1855
                    ],
                    "diffCount": {
                      "outstanding": 2,
                      "total": 2
                    }
                  },
                  {
                    "completedDate": "2018-03-20T11:43:26+0000",
                    "note": "Another sample note",
                    "status": "failed",
                    "submittedBy": "adevi",
                    "submittedDate": "2018-03-20T11:37:26+0000",
                    "targetEnvironment": "staging",
                    "targetHostname": "www.example-weather-config-1-production.com",
                    "testDefinitionExecutionId": 149,
                    "testDefinitionId": 740,
                    "testRunId": 133,
                    "ipVersions": [
                      "ipv4",
                      "ipv6"
                    ],
                    "testCaseIds": [
                      1991,
                      1992
                    ],
                    "errors": [
                      {
                        "ipVersion": "ipv6",
                        "title": "IP version not supported",
                        "type": "ip.version.not.supported"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Comma-separated list of test definition IDs.",
            "example": "{{testDefinitionIds}}",
            "in": "query",
            "name": "testDefinitionIds",
            "schema": {
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/testDefinitionIds-query.yaml"
            }
          },
          {
            "description": "When enabled, the response includes only the latest test definition execution for each passed valid test definition ID.",
            "example": "{{latestPerTestDefinition}}",
            "in": "query",
            "name": "latestPerTestDefinition",
            "required": true,
            "schema": {
              "default": false,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/latestPerTestDefinition-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/test-definition-executions/{testDefinitionExecutionId}": {
      "get": {
        "description": "Get a specific test definition execution. The response includes the test case IDs of the test cases that belong to the test definitions that were included in the test run. Target hostname, target environment, IP versions, and notes are included in this object, for a test run. When the status is `completed` there is a diffCount object. When the status is `failed` there is an errors array.  If the test run is in progress when you request to get an execution, the API returns a 404 error.",
        "operationId": "get-test-definition-execution",
        "summary": "Get an execution",
        "tags": [
          "Executions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-definition-execution"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "completedDate": "2018-08-18T12:37:26+0000",
                  "note": "A sample note",
                  "status": "completed",
                  "submittedBy": "jsmith",
                  "submittedDate": "2018-08-18T11:37:26+0000",
                  "targetEnvironment": "production",
                  "targetHostname": "www.example-weather-production.com",
                  "testDefinitionExecutionId": 148,
                  "testDefinitionId": 738,
                  "testRunId": 133,
                  "ipVersions": [
                    "ipv6"
                  ],
                  "testCaseIds": [
                    1855
                  ],
                  "diffCount": {
                    "outstanding": 2,
                    "total": 2
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The test definition execution is a component of a test run. A test run can have multiple executions, one for each test definition included in the test run. A test definition execution contains the subset of test cases, IP versions, target hostname, and target environment of the test definition it belongs to.",
                  "type": "object",
                  "required": [
                    "testDefinitionExecutionId",
                    "testDefinitionId",
                    "testRunId",
                    "targetHostname",
                    "targetEnvironment",
                    "submittedBy",
                    "submittedDate",
                    "status",
                    "errors",
                    "ipVersions",
                    "supportedComparisonSettings",
                    "testCaseIds"
                  ],
                  "properties": {
                    "completedDate": {
                      "description": "ISO 8601 date string for the time at which the test definition execution was completed.",
                      "type": "string"
                    },
                    "diffCount": {
                      "additionalProperties": false,
                      "description": "When the status of the test definition execution is `completed`, this object will appear in the payload. It gives the total and outstanding number of differences.",
                      "type": "object",
                      "required": [
                        "total",
                        "outstanding"
                      ],
                      "properties": {
                        "outstanding": {
                          "description": "This number represents the number of unaccepted diffs.",
                          "type": "integer"
                        },
                        "total": {
                          "description": "This number represents the total number of diffs that was generated.",
                          "type": "integer"
                        }
                      }
                    },
                    "errors": {
                      "description": "When the status of the test definition execution is `failed`, this object will appear in the payload. It contains a list of HTTP Problem Detail-like error objects.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "The HTTP problem detail object that signifies the type of error that has occurred.",
                        "type": "object",
                        "required": [
                          "type",
                          "title",
                          "ipVersion"
                        ],
                        "properties": {
                          "ipVersion": {
                            "description": "The IP version for which the test definition execution has failed.",
                            "type": "string"
                          },
                          "testCaseId": {
                            "description": "Unique identifier of the test case for which the test definition execution has failed. If the testCaseId field is not present, it means that all the test cases failed for the corresponding IP version.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "A brief explanation of what the error means.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A dot-notation string to explain what kind of an error occurred.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "ipVersions": {
                      "description": "IP version for which the test has to be run.",
                      "maxItems": 2,
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "description": "The IP version options are `ipv4` and `ipv6`.",
                        "type": "string",
                        "enum": [
                          "ipv4",
                          "ipv6"
                        ]
                      }
                    },
                    "note": {
                      "description": "A note about the test definition execution.",
                      "maxLength": 500,
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the test definition execution. `in_progress` is currently running, `completed` has finished running, `failed` has stopped running due to an error. `archived` means that there were more than 5 runs for that test definition, since this test definition execution was created.",
                      "type": "string",
                      "enum": [
                        "in_progress",
                        "completed",
                        "failed",
                        "archived"
                      ]
                    },
                    "submittedBy": {
                      "description": "The username of the user who initiated the test definition execution.",
                      "type": "string"
                    },
                    "submittedDate": {
                      "description": "The ISO 8601 date string for the time at which the test definition execution was initiated.",
                      "type": "string"
                    },
                    "supportedComparisonSettings": {
                      "description": "List of comparison settings that were supported by the websites tested while running the test.",
                      "type": "array",
                      "items": {
                        "description": "Attributes which are used for comparison between different environments.",
                        "type": "string",
                        "enum": [
                          "responseCode",
                          "responseHeaders",
                          "cpcode",
                          "cachingOption",
                          "cacheKey",
                          "metadataVariables",
                          "originServer"
                        ]
                      }
                    },
                    "targetEnvironment": {
                      "description": "The target environment for the test. Can be either `production` or `staging`.",
                      "maxLength": 100,
                      "type": "string",
                      "enum": [
                        "production",
                        "staging"
                      ]
                    },
                    "targetHostname": {
                      "description": "Hostname for the target environment.",
                      "format": "hostname",
                      "maxLength": 100,
                      "type": "string"
                    },
                    "testCaseIds": {
                      "description": "List of test case IDs that are executed as in the test definition execution. These test cases are a subset of the corresponding test definition's test cases.",
                      "type": "array",
                      "items": {
                        "description": "Identifier of the test case.",
                        "type": "integer"
                      }
                    },
                    "testDefinitionExecutionId": {
                      "description": "Identifier of the test definition execution.",
                      "type": "integer"
                    },
                    "testDefinitionId": {
                      "description": "Identifier of the test definition.",
                      "type": "integer"
                    },
                    "testRunId": {
                      "description": "Identifier of the test run.",
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestDefinitionExecutionResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Numeric identifier for test definition execution.",
          "example": "{{testDefinitionExecutionId}}",
          "in": "path",
          "name": "testDefinitionExecutionId",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testDefinitionExecutionId-path.yaml"
          }
        }
      ]
    },
    "/test-definition-executions/{testDefinitionExecutionId}/context": {
      "get": {
        "description": "A snapshot of the test definition and test cases of when the test definition execution was run. If any note fails you are notified in the `failures` field of the response.",
        "operationId": "get-test-definition-execution-context",
        "summary": "Get context",
        "tags": [
          "Execution context"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-definition-execution-context"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "testDefinition": {
                    "createdBy": "mrossi",
                    "createdDate": "2018-03-16T10:46:21+0000",
                    "hostname": "www.example-weather.com",
                    "modifiedBy": "adevi",
                    "modifiedDate": "2018-03-16T10:46:22+0000",
                    "testDefinitionDescription": "Testing weather prefetch configurations",
                    "testDefinitionId": 738,
                    "testDefinitionName": "Weather Test",
                    "ipVersions": [
                      "ipv6"
                    ],
                    "testCases": [
                      {
                        "createdBy": "adevi",
                        "createdDate": "2018-03-16T10:46:23+0000",
                        "modifiedBy": "tyamada",
                        "modifiedDate": "2018-03-16T10:46:28+0000",
                        "runOrder": 1,
                        "testCaseDescription": "Base Page Test",
                        "testCaseId": 1855,
                        "testCaseName": "Base Page",
                        "testDefinitionId": 738,
                        "url": "https://www.example-weather.com/",
                        "comparisonSettings": {
                          "cacheKey": {
                            "includeEmbeddedObjects": true,
                            "isEnabled": true
                          },
                          "cachingOption": {
                            "includeEmbeddedObjects": true,
                            "isEnabled": true
                          },
                          "cpcode": {
                            "includeEmbeddedObjects": true,
                            "isEnabled": true
                          },
                          "metadataVariables": {
                            "includeEmbeddedObjects": true,
                            "isEnabled": true,
                            "compareAllExcept": [
                              "RUM_IS_IPV6",
                              "RUA_OUT_IS_APPLIED",
                              "RUM_XHR_TEST",
                              "RUM_CLIENT_TO_MAPPING_PCT",
                              "RANDOM_SAMPLE",
                              "RUM_IMPL_PM_GROUPID",
                              "RUM_IMPL_PM_GROUPNAME",
                              "RUM_IMPL_PM_PRODUCT",
                              "RUM_DEBUG"
                            ],
                            "compareOnly": []
                          },
                          "originServer": {
                            "includeEmbeddedObjects": true,
                            "isEnabled": true
                          },
                          "responseCode": {
                            "includeEmbeddedObjects": true,
                            "isEnabled": true
                          },
                          "responseHeaders": {
                            "includeEmbeddedObjects": true,
                            "isEnabled": true,
                            "compareAllExcept": [
                              "Age",
                              "Date",
                              "Expires",
                              "Server",
                              "Via",
                              "Set-Cookie",
                              "Cache-Control"
                            ],
                            "compareOnly": []
                          }
                        },
                        "requestHeaders": [
                          {
                            "headerAction": "add",
                            "headerName": "Accept-Additions",
                            "headerValues": ""
                          }
                        ]
                      },
                      {
                        "createdBy": "adevi",
                        "createdDate": "2018-03-16T10:46:24+0000",
                        "modifiedBy": "jperez",
                        "modifiedDate": "2018-03-16T10:46:30+0000",
                        "runOrder": 2,
                        "testCaseDescription": "Accounts page test",
                        "testCaseId": 1866,
                        "testCaseName": "Accounts page",
                        "testDefinitionId": 738,
                        "url": "https://www.example-weather.com/accounts",
                        "requestHeaders": [],
                        "comparisonSettings": {
                          "cacheKey": {
                            "includeEmbeddedObjects": true,
                            "isEnabled": true
                          },
                          "cachingOption": {
                            "includeEmbeddedObjects": true,
                            "isEnabled": true
                          },
                          "cpcode": {
                            "includeEmbeddedObjects": true,
                            "isEnabled": true
                          },
                          "metadataVariables": {
                            "includeEmbeddedObjects": true,
                            "isEnabled": true,
                            "compareAllExcept": [
                              "RUM_IS_IPV6",
                              "RUA_OUT_IS_APPLIED",
                              "RUM_XHR_TEST",
                              "RUM_CLIENT_TO_MAPPING_PCT",
                              "RANDOM_SAMPLE"
                            ],
                            "compareOnly": []
                          },
                          "originServer": {
                            "includeEmbeddedObjects": true,
                            "isEnabled": true
                          },
                          "responseCode": {
                            "includeEmbeddedObjects": true,
                            "isEnabled": true
                          },
                          "responseHeaders": {
                            "includeEmbeddedObjects": true,
                            "isEnabled": true,
                            "compareAllExcept": [
                              "Age",
                              "Date",
                              "Expires",
                              "Server",
                              "Via",
                              "Set-Cookie",
                              "Cache-Control"
                            ],
                            "compareOnly": []
                          }
                        }
                      }
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "testDefinition"
                  ],
                  "properties": {
                    "testDefinition": {
                      "additionalProperties": false,
                      "description": "A snapshot of the test definition object and it's corresponding test cases as it was at the time of test run.",
                      "type": "object",
                      "required": [
                        "testDefinitionId",
                        "testDefinitionName",
                        "hostname",
                        "ipVersions",
                        "createdBy",
                        "createdDate",
                        "testCases"
                      ],
                      "properties": {
                        "createdBy": {
                          "description": "The user who created the test definition.",
                          "type": "string"
                        },
                        "createdDate": {
                          "description": "ISO 8601 date string for the time when the test definition was created.",
                          "type": "string"
                        },
                        "hostname": {
                          "description": "Hostname to be tested.",
                          "type": "string"
                        },
                        "ipVersions": {
                          "description": "IP version for which the test has to be run.",
                          "maxItems": 2,
                          "minItems": 1,
                          "type": "array",
                          "uniqueItems": true,
                          "items": {
                            "description": "IP version can be `ipv4`, `ipv6`, or both.",
                            "type": "string",
                            "enum": [
                              "ipv4",
                              "ipv6"
                            ]
                          }
                        },
                        "modifiedBy": {
                          "description": "The user who last modified the test definition.",
                          "type": "string"
                        },
                        "modifiedDate": {
                          "description": "ISO 8601 date string for the time when the test definition was last modified.",
                          "type": "string"
                        },
                        "testCases": {
                          "description": "A snapshot of the test cases as they were at the time of the test run.",
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "An object containing data for a single test case, such as which web pages or objects the test definition compares, which response headers are included, and which comparisons are made. Embedded objects here refers to the entities that get loaded after the initial HTML request that is made.",
                            "type": "object",
                            "required": [
                              "testCaseId",
                              "testDefinitionId",
                              "url",
                              "testCaseName",
                              "runOrder",
                              "requestHeaders",
                              "comparisonSettings",
                              "createdBy",
                              "createdDate"
                            ],
                            "properties": {
                              "comparisonSettings": {
                                "additionalProperties": false,
                                "description": "Attributes which are used for comparison between different environments.",
                                "type": "object",
                                "required": [
                                  "responseCode",
                                  "responseHeaders",
                                  "cpcode",
                                  "cachingOption",
                                  "cacheKey",
                                  "metadataVariables",
                                  "originServer"
                                ],
                                "properties": {
                                  "cacheKey": {
                                    "additionalProperties": false,
                                    "description": "The string used by the Akamai Edge Server to identify the requested object in the cache.",
                                    "type": "object",
                                    "required": [
                                      "isEnabled",
                                      "includeEmbeddedObjects"
                                    ],
                                    "properties": {
                                      "includeEmbeddedObjects": {
                                        "default": true,
                                        "description": "If true, the embedded objects for the cache key are included in the comparison made by the test run. If false, they are not.",
                                        "type": "boolean"
                                      },
                                      "isEnabled": {
                                        "default": true,
                                        "description": "If true, the cache key is compared by the test run. If false, the cache key is not compared by the test run.",
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "cachingOption": {
                                    "additionalProperties": false,
                                    "description": "The caching option allows you to specify how long you want to cache everything in your configuration.",
                                    "type": "object",
                                    "required": [
                                      "isEnabled",
                                      "includeEmbeddedObjects"
                                    ],
                                    "properties": {
                                      "includeEmbeddedObjects": {
                                        "default": true,
                                        "description": "If true, the embedded objects for the caching option are included in the comparison made by the test run. If false, they are not.",
                                        "type": "boolean"
                                      },
                                      "isEnabled": {
                                        "default": true,
                                        "description": "If true, the caching option is compared by the test run. If false, the caching option is not compared by the test run.",
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "cpcode": {
                                    "additionalProperties": false,
                                    "description": "The CP code with which the content from the Akamai Edge Server is being delivered.",
                                    "type": "object",
                                    "required": [
                                      "isEnabled",
                                      "includeEmbeddedObjects"
                                    ],
                                    "properties": {
                                      "includeEmbeddedObjects": {
                                        "default": true,
                                        "description": "If true, the embedded objects for the CP code are included in the comparison made by the test run. If false, they are not.",
                                        "type": "boolean"
                                      },
                                      "isEnabled": {
                                        "default": true,
                                        "description": "If true, the CP code is compared by the test run. If false, the CP code is not compared by the test run.",
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "metadataVariables": {
                                    "additionalProperties": false,
                                    "description": "The metadata variables used in the processing of the request.",
                                    "type": "object",
                                    "required": [
                                      "isEnabled",
                                      "includeEmbeddedObjects",
                                      "compareOnly",
                                      "compareAllExcept"
                                    ],
                                    "properties": {
                                      "compareAllExcept": {
                                        "description": "The list of all metadata variables to be ignored, or not compared, by the test run.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "compareOnly": {
                                        "description": "The list of metadata variables to be included, or compared, by the test run.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "includeEmbeddedObjects": {
                                        "default": true,
                                        "description": "If true, the embedded objects for the metadata variables are included in the comparison made by the test run. If false, they are not.",
                                        "type": "boolean"
                                      },
                                      "isEnabled": {
                                        "default": true,
                                        "description": "If true, the metadata variables are compared by the test run. If false they are not.",
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "originServer": {
                                    "additionalProperties": false,
                                    "description": "The hostname of the origin server.",
                                    "type": "object",
                                    "required": [
                                      "isEnabled",
                                      "includeEmbeddedObjects"
                                    ],
                                    "properties": {
                                      "includeEmbeddedObjects": {
                                        "default": true,
                                        "description": "If true, the embedded objects for the origin server are compared by the test run. If false, they are not.",
                                        "type": "boolean"
                                      },
                                      "isEnabled": {
                                        "default": true,
                                        "description": "If true, the origin server is compared by the test run. If false it is not.",
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "responseCode": {
                                    "additionalProperties": false,
                                    "description": "The numerical part of the HTTP Status Code.",
                                    "type": "object",
                                    "required": [
                                      "isEnabled",
                                      "includeEmbeddedObjects"
                                    ],
                                    "properties": {
                                      "includeEmbeddedObjects": {
                                        "default": true,
                                        "description": "If true, the embedded objects for the response code are compared by the test run. If false, they are not.",
                                        "type": "boolean"
                                      },
                                      "isEnabled": {
                                        "default": true,
                                        "description": "If true, the response code is compared by the test run. If false, it is not.",
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "responseHeaders": {
                                    "additionalProperties": false,
                                    "description": "The response headers of the corresponding HTTP responses.",
                                    "type": "object",
                                    "required": [
                                      "isEnabled",
                                      "includeEmbeddedObjects",
                                      "compareOnly",
                                      "compareAllExcept"
                                    ],
                                    "properties": {
                                      "compareAllExcept": {
                                        "description": "The list of all response headers to be ignored, or not compared, by the test run.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "compareOnly": {
                                        "description": "The list of response headers to be included, or compared, by the test run.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "includeEmbeddedObjects": {
                                        "default": true,
                                        "description": "If true, the embedded objects of the response headers are compared by the test run. If false, they are not.",
                                        "type": "boolean"
                                      },
                                      "isEnabled": {
                                        "default": true,
                                        "description": "If true, the response headers are compared by the test run. If false, they are not.",
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                }
                              },
                              "createdBy": {
                                "description": "The user who created the test case.",
                                "type": "string"
                              },
                              "createdDate": {
                                "description": "ISO 8601 date string for the time when the test definition was created.",
                                "type": "string"
                              },
                              "modifiedBy": {
                                "description": "The user who last modified the test case.",
                                "type": "string"
                              },
                              "modifiedDate": {
                                "description": "ISO 8601 date string for the time when the test definition was last modified.",
                                "type": "string"
                              },
                              "requestHeaders": {
                                "description": "Encapsulates the request headers in the test case.",
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "Encapsulates the request headers in the test case.",
                                  "type": "object",
                                  "required": [
                                    "headerName",
                                    "headerValues",
                                    "headerAction"
                                  ],
                                  "properties": {
                                    "headerAction": {
                                      "description": "Either `add` to the list of request headers, `modify` existing request headers, or `filter` request headers belonging to this test case.",
                                      "type": "string",
                                      "enum": [
                                        "add",
                                        "modify",
                                        "filter"
                                      ]
                                    },
                                    "headerName": {
                                      "description": "The name of the request header.",
                                      "type": "string"
                                    },
                                    "headerValues": {
                                      "description": "The value of the request header.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "runOrder": {
                                "description": "An integer representing the order in which the test case will be run as part of its parent test definition.",
                                "type": "integer"
                              },
                              "status": {
                                "description": "This field denotes whether the test case is active or has been removed. Can be `inactive` or `active`.",
                                "type": "string",
                                "enum": [
                                  "inactive",
                                  "active"
                                ]
                              },
                              "testCaseDescription": {
                                "description": "Description about the test case. 4000-character limit.",
                                "maxLength": 4000,
                                "type": "string"
                              },
                              "testCaseId": {
                                "description": "A unique Identifier for test case resource.",
                                "type": "integer"
                              },
                              "testCaseName": {
                                "description": "A short title for the test case. 100-character limit.",
                                "maxLength": 100,
                                "type": "string"
                              },
                              "testDefinitionId": {
                                "description": "A unique Identifier for test definition resource.",
                                "type": "integer"
                              },
                              "url": {
                                "description": "URL of the page to be tested.",
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/get-test-case-response.yaml"
                            }
                          }
                        },
                        "testDefinitionDescription": {
                          "maxLength": 4000,
                          "type": "string"
                        },
                        "testDefinitionId": {
                          "description": "Unique identifier for the test definition.",
                          "type": "integer"
                        },
                        "testDefinitionName": {
                          "description": "A short title for the test definition.",
                          "maxLength": 100,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestDefinitionExecutionContext.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Numeric identifier for test definition execution.",
          "example": "{{testDefinitionExecutionId}}",
          "in": "path",
          "name": "testDefinitionExecutionId",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testDefinitionExecutionId-path.yaml"
          }
        }
      ]
    },
    "/test-definition-executions/{testDefinitionExecutionId}/differences": {
      "get": {
        "description": "Get the list of differences found for a specific test definition execution.",
        "operationId": "get-test-definition-execution-differences",
        "summary": "List differences",
        "tags": [
          "Differences"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-definition-execution-differences"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "The list of differences in the test run in the two environments.",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Differences found between the source URL and target URL, under a specific IP version, within a specific geolocation and on a specific browser, as configured in the test cases of the test definition that was run.",
                    "type": "object",
                    "required": [
                      "differenceId",
                      "testCaseId",
                      "sourceUrl",
                      "targetUrl",
                      "ipVersion",
                      "geoLocation",
                      "browser",
                      "comparisonAttribute",
                      "parameterNames",
                      "sourceValue",
                      "targetValue",
                      "isAccepted"
                    ],
                    "properties": {
                      "browser": {
                        "additionalProperties": false,
                        "description": "An object containing browser info.",
                        "type": "object",
                        "required": [
                          "name",
                          "version"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the browser. Must be `chrome`.",
                            "type": "string",
                            "enum": [
                              "chrome"
                            ]
                          },
                          "version": {
                            "description": "Version of the browser.",
                            "type": "string"
                          }
                        }
                      },
                      "comparisonAttribute": {
                        "description": "The comparison setting which the difference object addresses. Can be any comparison setting: `cacheKey`, `cachingOption`, `cpcode`, `metadataVariables`, `originServer`, `responseCode`, `responseHeaders`.",
                        "type": "string",
                        "enum": [
                          "responseCode",
                          "responseHeaders",
                          "cpcode",
                          "cachingOption",
                          "originServer",
                          "metadataVariables",
                          "cacheKey"
                        ]
                      },
                      "differenceId": {
                        "description": "Unique identifier for the difference.",
                        "type": "string"
                      },
                      "geoLocation": {
                        "description": "Identifier of the geolocation.",
                        "type": "string"
                      },
                      "ipVersion": {
                        "description": "The IP version used for this execution. Can be either `ipv4` or `ipv6`.",
                        "type": "string",
                        "enum": [
                          "ipv4",
                          "ipv6"
                        ]
                      },
                      "isAccepted": {
                        "default": false,
                        "description": "A boolean value indicating whether the difference has been resolved by the user.",
                        "type": "boolean"
                      },
                      "parameterNames": {
                        "description": "A list of strings which represents a hierarchy of keys deduced from the response header value.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "sourceUrl": {
                        "description": "URL of the object in source environment.",
                        "format": "uri",
                        "type": "string"
                      },
                      "sourceValue": {
                        "description": "Value of the comparison attribute for the parameter names in source environment.",
                        "type": "string"
                      },
                      "targetUrl": {
                        "description": "URL of the object in target environment.",
                        "format": "uri",
                        "type": "string"
                      },
                      "targetValue": {
                        "description": "Value of the comparison attribute for the parameter names in target environment.",
                        "type": "string"
                      },
                      "testCaseId": {
                        "description": "Identifier of the test case the difference belongs to.",
                        "type": "integer"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/get-difference-response.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getDifferencesResponse.yaml"
                  }
                },
                "example": [
                  {
                    "comparisonAttribute": "responseHeaders",
                    "differenceId": "e52a1b76-d33d-11e7-9296-cec278b6b50a",
                    "geoLocation": "us",
                    "ipVersion": "ipv6",
                    "isAccepted": false,
                    "sourceUrl": "https://www.example-weather.com/",
                    "sourceValue": "gzip",
                    "targetUrl": "https://www.example-weather-production.com/",
                    "targetValue": "deflate",
                    "testCaseId": 1855,
                    "parameterNames": [
                      "Content-Encoding"
                    ],
                    "browser": {
                      "name": "chrome",
                      "version": "62"
                    }
                  },
                  {
                    "comparisonAttribute": "responseCode",
                    "differenceId": "eece8d88-d33d-11e7-9296-cec278b6b50a",
                    "geoLocation": "us",
                    "ipVersion": "ipv6",
                    "isAccepted": false,
                    "sourceUrl": "https://www.example-weather.com/regions/12345",
                    "sourceValue": "200",
                    "targetUrl": "https://www.example-weather-production.com/regions/12345",
                    "targetValue": "400",
                    "testCaseId": 1855,
                    "parameterNames": [],
                    "browser": {
                      "name": "chrome",
                      "version": "62"
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Update the status of differences, marking the resolved differences as OK to be ignored. This returns the list of all differences, including both accepted and unaccepted diffs. You can update a set of differences ar once. If any of the updates fail, you are notified in the `failures` field of the response.",
        "operationId": "put-test-definition-execution-differences",
        "summary": "Update differences",
        "tags": [
          "Differences"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/put-test-definition-execution-differences"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "List of objects containing the difference ID and its resolution status.",
                "type": "array",
                "items": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "differenceId",
                    "isAccepted"
                  ],
                  "properties": {
                    "differenceId": {
                      "description": "The unique identifier for the difference.",
                      "type": "string"
                    },
                    "isAccepted": {
                      "description": "A boolean value indicating whether the difference is accepted.",
                      "type": "boolean"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/updateDifferencesRequest.yaml"
                }
              },
              "example": [
                {
                  "differenceId": "e52a1b76-d33d-11e7-9296-cec278b6b50a",
                  "isAccepted": true
                },
                {
                  "differenceId": "fe59f1e6-0022-4119-b05b-71e33c2a0ee2",
                  "isAccepted": true
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "failures": [
                    {
                      "status": 200,
                      "title": "Validation Error",
                      "type": "validation.error",
                      "errors": [
                        {
                          "differenceId": "fe59f1e6-0022-4119-b05b-71e33c2a0ee2",
                          "errorField": "differenceId",
                          "title": "Invalid Value",
                          "type": "invalid.value"
                        }
                      ]
                    }
                  ],
                  "successes": [
                    {
                      "differenceId": "e52a1b76-d33d-11e7-9296-cec278b6b50a"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "An object encapsulating the status of the update differences operation.",
                  "type": "object",
                  "required": [
                    "successes",
                    "failures"
                  ],
                  "properties": {
                    "failures": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "HTTP Problem Detail object with extension fields.",
                        "type": "object",
                        "required": [
                          "differenceId",
                          "type",
                          "title",
                          "status",
                          "instance"
                        ],
                        "properties": {
                          "differenceId": {
                            "description": "The unique identifier for difference as a UUID v4 string.",
                            "type": "string"
                          },
                          "instance": {
                            "type": "string"
                          },
                          "status": {
                            "type": "integer"
                          },
                          "title": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "successes": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "differenceId"
                        ],
                        "properties": {
                          "differenceId": {
                            "description": "The unique identifier for difference as a UUID v4 string.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/updateDifferencesResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Numeric identifier for test definition execution.",
          "example": "{{testDefinitionExecutionId}}",
          "in": "path",
          "name": "testDefinitionExecutionId",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testDefinitionExecutionId-path.yaml"
          }
        }
      ]
    },
    "/test-definition-executions/{testDefinitionExecutionId}/differences/notes": {
      "post": {
        "description": "Create notes for a set of diffs in bulk, under `testDefinitionExecutionId`. The only way to access created diffs is through the activity stream.",
        "operationId": "post-test-definition-execution-differences-notes",
        "summary": "Create notes for a set of diffs",
        "tags": [
          "Differences"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-definition-execution-differences-notes"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Create notes for differences in bulk.",
                "type": "array",
                "items": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "differenceId",
                    "note"
                  ],
                  "properties": {
                    "differenceId": {
                      "type": "string"
                    },
                    "note": {
                      "type": "string"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/createDiffNoteRequest.yaml"
                }
              },
              "example": [
                {
                  "differenceId": "e52a1b76-d33d-11e7-9296-cec278b6b50a",
                  "note": "Unexpected change due to incorrect content encoding config"
                },
                {
                  "differenceId": "eece8d88-d33d-11e7-9296-cec278b6b50a",
                  "note": "Expected change."
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Numeric identifier for test definition execution.",
          "example": "{{testDefinitionExecutionId}}",
          "in": "path",
          "name": "testDefinitionExecutionId",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testDefinitionExecutionId-path.yaml"
          }
        }
      ]
    },
    "/test-definition-executions/{testDefinitionExecutionId}/differences/{differenceId}": {
      "get": {
        "description": "Get the details of the test definition execution difference.",
        "operationId": "get-test-definition-execution-difference",
        "summary": "Get a difference",
        "tags": [
          "Differences"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-definition-execution-difference"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "comparisonAttribute": "responseHeaders",
                  "differenceId": "e52a1b76-d33d-11e7-9296-cec278b6b50a",
                  "geoLocation": "us",
                  "ipVersion": "ipv6",
                  "isAccepted": false,
                  "sourceUrl": "https://www.example-weather.com/",
                  "sourceValue": "gzip",
                  "targetUrl": "https://www.example-weather-production.com/",
                  "targetValue": "deflate",
                  "testCaseId": 1855,
                  "parameterNames": [
                    "Content-Encoding"
                  ],
                  "browser": {
                    "name": "chrome",
                    "version": "62"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Differences found between the source URL and target URL, under a specific IP version, within a specific geolocation and on a specific browser, as configured in the test cases of the test definition that was run.",
                  "type": "object",
                  "required": [
                    "differenceId",
                    "testCaseId",
                    "sourceUrl",
                    "targetUrl",
                    "ipVersion",
                    "geoLocation",
                    "browser",
                    "comparisonAttribute",
                    "parameterNames",
                    "sourceValue",
                    "targetValue",
                    "isAccepted"
                  ],
                  "properties": {
                    "browser": {
                      "additionalProperties": false,
                      "description": "An object containing browser info.",
                      "type": "object",
                      "required": [
                        "name",
                        "version"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the browser. Must be `chrome`.",
                          "type": "string",
                          "enum": [
                            "chrome"
                          ]
                        },
                        "version": {
                          "description": "Version of the browser.",
                          "type": "string"
                        }
                      }
                    },
                    "comparisonAttribute": {
                      "description": "The comparison setting which the difference object addresses. Can be any comparison setting: `cacheKey`, `cachingOption`, `cpcode`, `metadataVariables`, `originServer`, `responseCode`, `responseHeaders`.",
                      "type": "string",
                      "enum": [
                        "responseCode",
                        "responseHeaders",
                        "cpcode",
                        "cachingOption",
                        "originServer",
                        "metadataVariables",
                        "cacheKey"
                      ]
                    },
                    "differenceId": {
                      "description": "Unique identifier for the difference.",
                      "type": "string"
                    },
                    "geoLocation": {
                      "description": "Identifier of the geolocation.",
                      "type": "string"
                    },
                    "ipVersion": {
                      "description": "The IP version used for this execution. Can be either `ipv4` or `ipv6`.",
                      "type": "string",
                      "enum": [
                        "ipv4",
                        "ipv6"
                      ]
                    },
                    "isAccepted": {
                      "default": false,
                      "description": "A boolean value indicating whether the difference has been resolved by the user.",
                      "type": "boolean"
                    },
                    "parameterNames": {
                      "description": "A list of strings which represents a hierarchy of keys deduced from the response header value.",
                      "type": "array",
                      "items": {
                        "description": "A string that represents the parsed response header value.",
                        "type": "string"
                      }
                    },
                    "sourceUrl": {
                      "description": "URL of the object in source environment.",
                      "format": "uri",
                      "type": "string"
                    },
                    "sourceValue": {
                      "description": "Value of the comparison attribute for the parameter names in source environment.",
                      "type": "string"
                    },
                    "targetUrl": {
                      "description": "URL of the object in target environment.",
                      "format": "uri",
                      "type": "string"
                    },
                    "targetValue": {
                      "description": "Value of the comparison attribute for the parameter names in target environment.",
                      "type": "string"
                    },
                    "testCaseId": {
                      "description": "Identifier of the test case the difference belongs to.",
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getDifferenceResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Alphanumeric identifier for the difference.",
          "example": "{{differenceId}}",
          "in": "path",
          "name": "differenceId",
          "required": true,
          "schema": {
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/differenceId-path.yaml"
          }
        },
        {
          "description": "Numeric identifier for test definition execution.",
          "example": "{{testDefinitionExecutionId}}",
          "in": "path",
          "name": "testDefinitionExecutionId",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testDefinitionExecutionId-path.yaml"
          }
        }
      ]
    },
    "/test-definition-executions/{testDefinitionExecutionId}/differences/{differenceId}/raw-request-response": {
      "get": {
        "description": "Get the raw request and response, the requests and responses from both compared environments from which a diff was generated.",
        "operationId": "get-test-definition-execution-difference-raw-request-response",
        "summary": "Get the raw request and response",
        "tags": [
          "Differences"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-definition-execution-difference-raw-request-response"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "sourceEnvironment": {
                    "request": {
                      "bodySize": 0,
                      "comment": "",
                      "headersSize": 610,
                      "httpVersion": "HTTP/1.1",
                      "method": "GET",
                      "url": "https://www.example-weather.com/",
                      "cookies": [],
                      "queryString": [],
                      "headers": [
                        {
                          "name": "Host",
                          "value": "www.example-weather"
                        },
                        {
                          "name": "Proxy-Connection",
                          "value": "keep-alive"
                        },
                        {
                          "name": "User-Agent",
                          "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36"
                        },
                        {
                          "name": "Accept",
                          "value": "*/*"
                        },
                        {
                          "name": "Referer",
                          "value": "https://www.example-weather.com/"
                        },
                        {
                          "name": "Accept-Encoding",
                          "value": "gzip, deflate"
                        },
                        {
                          "name": "Accept-Language",
                          "value": "en-US,en;q=0.9"
                        },
                        {
                          "name": "Cookie",
                          "value": "frontend=291i77k6avpip216ct88tkciv7"
                        },
                        {
                          "name": "Content-Length",
                          "value": "0"
                        },
                        {
                          "name": "HeaderName1523525534255",
                          "value": "HeaderValue11523525534255,HeaderValue21523525534255"
                        }
                      ]
                    },
                    "response": {
                      "bodySize": 737,
                      "comment": "",
                      "headersSize": 1350,
                      "httpVersion": "HTTP/1.1",
                      "redirectURL": "",
                      "status": 200,
                      "statusText": "OK",
                      "cookies": [],
                      "content": {
                        "comment": "",
                        "compression": 0,
                        "mimeType": "application/javascript",
                        "size": 0,
                        "text": ""
                      },
                      "headers": [
                        {
                          "name": "Server",
                          "value": "Apache/2.4.7 (Ubuntu)"
                        },
                        {
                          "name": "Last-Modified",
                          "value": "Wed, 14 May 2014 16:03:36 GMT"
                        },
                        {
                          "name": "ETag",
                          "value": "\\63d-4f95e52aaa600-gzip\\"
                        },
                        {
                          "name": "Accept-Ranges",
                          "value": "bytes"
                        },
                        {
                          "name": "Content-Encoding",
                          "value": "gzip"
                        },
                        {
                          "name": "Content-Length",
                          "value": "737"
                        },
                        {
                          "name": "Content-Type",
                          "value": "application/javascript"
                        },
                        {
                          "name": "Cache-Control",
                          "value": "max-age=86400"
                        },
                        {
                          "name": "Expires",
                          "value": "Sat, 14 Apr 2018 11:02:43 GMT"
                        },
                        {
                          "name": "Date",
                          "value": "Fri, 13 Apr 2018 11:02:43 GMT"
                        },
                        {
                          "name": "Connection",
                          "value": "keep-alive"
                        },
                        {
                          "name": "Vary",
                          "value": "Accept-Encoding"
                        }
                      ]
                    }
                  },
                  "targetEnvironment": {
                    "request": {
                      "bodySize": 0,
                      "comment": "",
                      "headersSize": 625,
                      "httpVersion": "HTTP/1.1",
                      "method": "GET",
                      "url": "https://www.example-weather-production.com/",
                      "cookies": [],
                      "queryString": [],
                      "headers": [
                        {
                          "name": "Host",
                          "value": "www.example-weather-production.com"
                        },
                        {
                          "name": "Proxy-Connection",
                          "value": "keep-alive"
                        },
                        {
                          "name": "User-Agent",
                          "value": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36"
                        },
                        {
                          "name": "Accept",
                          "value": "*/*"
                        },
                        {
                          "name": "Referer",
                          "value": "https://www.example-weather-production.com/"
                        },
                        {
                          "name": "Accept-Encoding",
                          "value": "gzip, deflate"
                        },
                        {
                          "name": "Accept-Language",
                          "value": "en-US,en;q=0.9"
                        },
                        {
                          "name": "Cookie",
                          "value": "frontend=60klgq7g1jc4u42gmjt21c7tp1"
                        },
                        {
                          "name": "Content-Length",
                          "value": "0"
                        },
                        {
                          "name": "Content-Encoding",
                          "value": "deflate"
                        },
                        {
                          "name": "HeaderName1523525534255",
                          "value": "HeaderValue11523525534255,HeaderValue21523525534255"
                        }
                      ]
                    },
                    "response": {
                      "bodySize": 1597,
                      "comment": "",
                      "headersSize": 1560,
                      "httpVersion": "HTTP/1.1",
                      "redirectURL": "",
                      "status": 200,
                      "statusText": "OK",
                      "cookies": [],
                      "content": {
                        "comment": "",
                        "compression": 0,
                        "mimeType": "application/javascript",
                        "size": 0,
                        "text": ""
                      },
                      "headers": [
                        {
                          "name": "Server",
                          "value": "Apache/2.4.7 (Ubuntu)"
                        },
                        {
                          "name": "Last-Modified",
                          "value": "Wed, 14 May 2014 16:03:36 GMT"
                        },
                        {
                          "name": "ETag",
                          "value": "\\63d-4f95e52aaa600-gzip\\"
                        },
                        {
                          "name": "Content-Type",
                          "value": "application/javascript"
                        },
                        {
                          "name": "X-Akamai-Staging",
                          "value": "EdgeSuite"
                        },
                        {
                          "name": "X-Akamai-Staging",
                          "value": "EdgeSuite"
                        },
                        {
                          "name": "X-Akamai-Staging",
                          "value": "EdgeSuite"
                        },
                        {
                          "name": "X-Akamai-Staging",
                          "value": "EdgeSuite"
                        },
                        {
                          "name": "Vary",
                          "value": "Accept-Encoding"
                        },
                        {
                          "name": "Cache-Control",
                          "value": "max-age=82116"
                        },
                        {
                          "name": "Expires",
                          "value": "Sat, 14 Apr 2018 09:52:07 GMT"
                        },
                        {
                          "name": "Date",
                          "value": "Fri, 13 Apr 2018 11:03:31 GMT"
                        },
                        {
                          "name": "Content-Length",
                          "value": "1597"
                        },
                        {
                          "name": "Connection",
                          "value": "keep-alive"
                        },
                        {
                          "name": "X-Akamai-Staging",
                          "value": "EdgeSuite"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "sourceEnvironment",
                    "targetEnvironment"
                  ],
                  "properties": {
                    "sourceEnvironment": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "request",
                        "response"
                      ],
                      "properties": {
                        "request": {
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "method",
                            "url",
                            "httpVersion",
                            "cookies",
                            "headers",
                            "queryString",
                            "headerSize",
                            "bodySize",
                            "comment"
                          ],
                          "properties": {
                            "bodySize": {
                              "type": "integer"
                            },
                            "comment": {
                              "type": "string"
                            },
                            "cookies": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "headerSize": {
                              "type": "integer"
                            },
                            "headers": {
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "httpVersion": {
                              "type": "string"
                            },
                            "method": {
                              "description": "Standard HTTP method.",
                              "type": "string",
                              "enum": [
                                "GET",
                                "POST",
                                "DELETE",
                                "PUT",
                                "PATCH"
                              ]
                            },
                            "queryString": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "url": {
                              "type": "string"
                            }
                          }
                        },
                        "response": {
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "status",
                            "statusText",
                            "httpVersion",
                            "cookies",
                            "headers",
                            "content",
                            "redirectURL",
                            "headerSize",
                            "bodySize",
                            "comment"
                          ],
                          "properties": {
                            "bodySize": {
                              "type": "integer"
                            },
                            "comment": {
                              "type": "string"
                            },
                            "content": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "size",
                                "mimeType",
                                "comment",
                                "text",
                                "compression"
                              ],
                              "properties": {
                                "comment": {
                                  "type": "string"
                                },
                                "compression": {
                                  "type": "string"
                                },
                                "mimeType": {
                                  "type": "string"
                                },
                                "size": {
                                  "type": "number"
                                },
                                "text": {
                                  "type": "string"
                                }
                              }
                            },
                            "cookies": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "headerSize": {
                              "type": "integer"
                            },
                            "headers": {
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "httpVersion": {
                              "type": "string"
                            },
                            "redirectURL": {
                              "type": "string"
                            },
                            "status": {
                              "type": "number"
                            },
                            "statusText": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "targetEnvironment": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "request",
                        "response"
                      ],
                      "properties": {
                        "request": {
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "method",
                            "url",
                            "httpVersion",
                            "cookies",
                            "headers",
                            "queryString",
                            "headerSize",
                            "bodySize",
                            "comment"
                          ],
                          "properties": {
                            "bodySize": {
                              "type": "integer"
                            },
                            "comment": {
                              "type": "string"
                            },
                            "cookies": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "headerSize": {
                              "type": "integer"
                            },
                            "headers": {
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "httpVersion": {
                              "type": "string"
                            },
                            "method": {
                              "description": "Standard HTTP method.",
                              "type": "string",
                              "enum": [
                                "GET",
                                "POST",
                                "DELETE",
                                "PUT",
                                "PATCH"
                              ]
                            },
                            "queryString": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "url": {
                              "type": "string"
                            }
                          }
                        },
                        "response": {
                          "additionalProperties": false,
                          "type": "object",
                          "required": [
                            "status",
                            "statusText",
                            "httpVersion",
                            "cookies",
                            "headers",
                            "content",
                            "redirectURL",
                            "headerSize",
                            "bodySize",
                            "comment"
                          ],
                          "properties": {
                            "bodySize": {
                              "type": "integer"
                            },
                            "comment": {
                              "type": "string"
                            },
                            "content": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "size",
                                "mimeType",
                                "comment",
                                "text",
                                "compression"
                              ],
                              "properties": {
                                "comment": {
                                  "type": "string"
                                },
                                "compression": {
                                  "type": "string"
                                },
                                "mimeType": {
                                  "type": "string"
                                },
                                "size": {
                                  "type": "number"
                                },
                                "text": {
                                  "type": "string"
                                }
                              }
                            },
                            "cookies": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "headerSize": {
                              "type": "integer"
                            },
                            "headers": {
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "httpVersion": {
                              "type": "string"
                            },
                            "redirectURL": {
                              "type": "string"
                            },
                            "status": {
                              "type": "number"
                            },
                            "statusText": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getRawRequestResponseResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Alphanumeric identifier for the difference.",
          "example": "{{differenceId}}",
          "in": "path",
          "name": "differenceId",
          "required": true,
          "schema": {
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/differenceId-path.yaml"
          }
        },
        {
          "description": "Numeric identifier for test definition execution.",
          "example": "{{testDefinitionExecutionId}}",
          "in": "path",
          "name": "testDefinitionExecutionId",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testDefinitionExecutionId-path.yaml"
          }
        }
      ]
    },
    "/test-definitions": {
      "post": {
        "description": "Provide the hostname that your configuration change will affect.  The hostname must be configured for Akamai delivery in Property Manager and must not use Instant Config, Slot Matching, or Zone Apex Mapping. You cannot test a hostname as it behaves on ChinaCDN.  Once you specify a hostname, you cannot change it.",
        "operationId": "post-test-definitions",
        "summary": "Create a new test definition",
        "tags": [
          "Test definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-definitions"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "hostname": "www.example-weather.com",
                "testDefinitionDescription": "Testing weather prefetch configurations",
                "testDefinitionName": "Weather Test",
                "ipVersions": [
                  "ipv6"
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "An object containing data for creating a new test definition.",
                "type": "object",
                "required": [
                  "testDefinitionName",
                  "hostname",
                  "ipVersions"
                ],
                "properties": {
                  "hostname": {
                    "description": "The hostname to be tested.",
                    "example": "{{hostname}}",
                    "format": "hostname",
                    "type": "string"
                  },
                  "ipVersions": {
                    "description": "The IP versions that test cases will be run against.",
                    "maxItems": 2,
                    "minItems": 1,
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                      "type": "string",
                      "enum": [
                        "ipv4",
                        "ipv6"
                      ]
                    }
                  },
                  "testDefinitionDescription": {
                    "description": "The description you supply for the test definition. Max length is 4000 characters.",
                    "example": "{{testDefinitionDescription}}",
                    "maxLength": 4000,
                    "type": "string"
                  },
                  "testDefinitionName": {
                    "description": "The name you supply for the test definition. Max length is 100 characters.",
                    "example": "{{testDefinitionName}}",
                    "maxLength": 100,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/createTestDefinitionRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "jperez",
                  "createdDate": "2018-03-16T10:46:21+0000",
                  "hostname": "www.example-weather.com",
                  "modifiedBy": "jperez",
                  "modifiedDate": "2018-03-16T10:46:22+0000",
                  "status": "active",
                  "testDefinitionDescription": "Testing weather prefetch configurations",
                  "testDefinitionId": 738,
                  "testDefinitionName": "Weather Test",
                  "ipVersions": [
                    "ipv6"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The basic unit of testing in Test Center. A test definition is associated with a hostname and configured with at least one test case for testing that hostname. Status is `active` by default but once a test definition is removed it becomes `inactive` and can no longer be made `active`.",
                  "type": "object",
                  "required": [
                    "testDefinitionId",
                    "testDefinitionName",
                    "hostname",
                    "ipVersions",
                    "createdBy",
                    "createdDate"
                  ],
                  "properties": {
                    "createdBy": {
                      "description": "The user who created the test definition.",
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 date string for the time when the test definition was created.",
                      "type": "string"
                    },
                    "hostname": {
                      "description": "Hostname to be tested.",
                      "maxLength": 100,
                      "type": "string"
                    },
                    "ipVersions": {
                      "description": "IP version for which the test has to be run.",
                      "maxItems": 2,
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "description": "Can be `ipv4`, `ipv6`, or both.",
                        "type": "string",
                        "enum": [
                          "ipv4",
                          "ipv6"
                        ]
                      }
                    },
                    "modifiedBy": {
                      "description": "The user who last modified the test definition.",
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 date string for the time when the test definition was last modified.",
                      "type": "string"
                    },
                    "status": {
                      "description": "This field denotes whether the test definition is active or has been removed. Can be `inactive` or `active`.",
                      "type": "string",
                      "enum": [
                        "inactive",
                        "active"
                      ]
                    },
                    "testDefinitionDescription": {
                      "description": "A description about the test definition. 4000-character limit.",
                      "maxLength": 4000,
                      "type": "string"
                    },
                    "testDefinitionId": {
                      "description": "Unique identifier for the test definition.",
                      "type": "integer"
                    },
                    "testDefinitionName": {
                      "description": "A short title for the test definition. 100-character limit.",
                      "maxLength": 100,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestDefinitionResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Get all active test definitions available for the organization that the logged-in account belongs to. The response is an array of TestDefinition objects, each keyed by `testDefinitionId`.",
        "operationId": "get-test-definitions",
        "summary": "List test definitions",
        "tags": [
          "Test definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-definitions"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "List of test definitions.",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "The basic unit of testing in Test Center. A test definition is associated with a hostname and configured with at least one test case for testing that hostname. Status is `active` by default but once a test definition is removed it becomes `inactive` and can no longer be made `active`.",
                    "type": "object",
                    "required": [
                      "testDefinitionId",
                      "testDefinitionName",
                      "hostname",
                      "ipVersions",
                      "createdBy",
                      "createdDate"
                    ],
                    "properties": {
                      "createdBy": {
                        "description": "The user who created the test definition.",
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 date string for the time when the test definition was created.",
                        "type": "string"
                      },
                      "hostname": {
                        "description": "Hostname to be tested.",
                        "maxLength": 100,
                        "type": "string"
                      },
                      "ipVersions": {
                        "description": "IP version for which the test has to be run.",
                        "maxItems": 2,
                        "minItems": 1,
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                          "description": "Can be `ipv4`, `ipv6`, or both.",
                          "type": "string",
                          "enum": [
                            "ipv4",
                            "ipv6"
                          ]
                        }
                      },
                      "modifiedBy": {
                        "description": "The user who last modified the test definition.",
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "ISO 8601 date string for the time when the test definition was last modified.",
                        "type": "string"
                      },
                      "status": {
                        "description": "This field denotes whether the test definition is active or has been removed. Can be `inactive` or `active`.",
                        "type": "string",
                        "enum": [
                          "inactive",
                          "active"
                        ]
                      },
                      "testDefinitionDescription": {
                        "description": "A description about the test definition. 4000-character limit.",
                        "maxLength": 4000,
                        "type": "string"
                      },
                      "testDefinitionId": {
                        "description": "Unique identifier for the test definition.",
                        "type": "integer"
                      },
                      "testDefinitionName": {
                        "description": "A short title for the test definition. 100-character limit.",
                        "maxLength": 100,
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/get-test-definition-response.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestDefinitionsResponse.yaml"
                  }
                },
                "example": [
                  {
                    "createdBy": "tyamada",
                    "createdDate": "2018-03-16T10:46:21+0000",
                    "hostname": "www.example-weather.com",
                    "modifiedBy": "tyamada",
                    "modifiedDate": "2018-03-16T10:46:22+0000",
                    "testDefinitionDescription": "Testing weather prefetch configurations",
                    "testDefinitionId": 738,
                    "testDefinitionName": "Weather Test",
                    "ipVersions": [
                      "ipv6"
                    ]
                  },
                  {
                    "createdBy": "tyamada",
                    "createdDate": "2018-03-11T17:45:27+0000",
                    "hostname": "www.example-weather-config-1.com",
                    "modifiedBy": "alfulani",
                    "modifiedDate": "2018-03-22T10:56:45+0000",
                    "testDefinitionId": 495,
                    "testDefinitionName": "Weather Test Config 1",
                    "ipVersions": [
                      "ipv4"
                    ]
                  },
                  {
                    "createdBy": "szhang",
                    "createdDate": "2018-03-16T10:46:21+0000",
                    "hostname": "www.example-weather-config-2.com",
                    "modifiedBy": "hgildong",
                    "modifiedDate": "2018-03-16T10:46:22+0000",
                    "testDefinitionDescription": "Testing weather prefetch configurations (config 2)",
                    "testDefinitionId": 740,
                    "testDefinitionName": "Weather Test Config 2",
                    "ipVersions": [
                      "ipv4",
                      "ipv6"
                    ]
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/test-definitions/{testDefinitionId}": {
      "get": {
        "description": "Get a specific test definition's details, including its status. The response for this operation does not include information about the test cases that belong to this test definition. To see that information, run the [List test cases](https://techdocs.akamai.com/test-ctr/reference/get-test-definition-test-cases) operation.",
        "operationId": "get-test-definition",
        "summary": "Get a test definition",
        "tags": [
          "Test definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-definition"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "jperez",
                  "createdDate": "2018-03-16T10:46:21+0000",
                  "hostname": "www.example-weather.com",
                  "modifiedBy": "jperez",
                  "modifiedDate": "2018-03-16T10:46:22+0000",
                  "status": "active",
                  "testDefinitionDescription": "Testing weather prefetch configurations",
                  "testDefinitionId": 738,
                  "testDefinitionName": "Weather Test",
                  "ipVersions": [
                    "ipv6"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The basic unit of testing in Test Center. A test definition is associated with a hostname and configured with at least one test case for testing that hostname. Status is `active` by default but once a test definition is removed it becomes `inactive` and can no longer be made `active`.",
                  "type": "object",
                  "required": [
                    "testDefinitionId",
                    "testDefinitionName",
                    "hostname",
                    "ipVersions",
                    "createdBy",
                    "createdDate"
                  ],
                  "properties": {
                    "createdBy": {
                      "description": "The user who created the test definition.",
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 date string for the time when the test definition was created.",
                      "type": "string"
                    },
                    "hostname": {
                      "description": "Hostname to be tested.",
                      "maxLength": 100,
                      "type": "string"
                    },
                    "ipVersions": {
                      "description": "IP version for which the test has to be run.",
                      "maxItems": 2,
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "description": "Can be `ipv4`, `ipv6`, or both.",
                        "type": "string",
                        "enum": [
                          "ipv4",
                          "ipv6"
                        ]
                      }
                    },
                    "modifiedBy": {
                      "description": "The user who last modified the test definition.",
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 date string for the time when the test definition was last modified.",
                      "type": "string"
                    },
                    "status": {
                      "description": "This field denotes whether the test definition is active or has been removed. Can be `inactive` or `active`.",
                      "type": "string",
                      "enum": [
                        "inactive",
                        "active"
                      ]
                    },
                    "testDefinitionDescription": {
                      "description": "A description about the test definition. 4000-character limit.",
                      "maxLength": 4000,
                      "type": "string"
                    },
                    "testDefinitionId": {
                      "description": "Unique identifier for the test definition.",
                      "type": "integer"
                    },
                    "testDefinitionName": {
                      "description": "A short title for the test definition. 100-character limit.",
                      "maxLength": 100,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestDefinitionResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Modify a specific test definition with the exception of its hostname.",
        "operationId": "put-test-definition",
        "summary": "Modify a test definition",
        "tags": [
          "Test definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/put-test-definition"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "hostname": "www.example-weather.com",
                "testDefinitionDescription": "Testing weather prefetch configurations (edited)",
                "testDefinitionId": 738,
                "testDefinitionName": "Weather Test (edited)",
                "ipVersions": [
                  "ipv6"
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "A test definition object.",
                "type": "object",
                "required": [
                  "testDefinitionId",
                  "testDefinitionName",
                  "hostname",
                  "ipVersions"
                ],
                "properties": {
                  "createdBy": {
                    "description": "The user who created the test definition.",
                    "example": "{{createdBy}}",
                    "type": "string"
                  },
                  "createdDate": {
                    "description": "ISO 8601 date string for the time when the test definition was created.",
                    "example": "{{createdDate}}",
                    "type": "string"
                  },
                  "hostname": {
                    "description": "The hostname to be tested.",
                    "example": "{{hostname}}",
                    "type": "string"
                  },
                  "ipVersions": {
                    "description": "The IP versions for which the test has to be run.",
                    "maxItems": 2,
                    "minItems": 1,
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                      "type": "string",
                      "enum": [
                        "ipv4",
                        "ipv6"
                      ]
                    }
                  },
                  "modifiedBy": {
                    "description": "The user who last modified the test definition.",
                    "example": "{{modifiedBy}}",
                    "type": "string"
                  },
                  "modifiedDate": {
                    "description": "ISO 8601 date string for the time when the test definition was last modified.",
                    "example": "{{modifiedDate}}",
                    "type": "string"
                  },
                  "testDefinitionDescription": {
                    "description": "Description for the updated test definition.",
                    "example": "{{testDefinitionDescription}}",
                    "maxLength": 4000,
                    "type": "string"
                  },
                  "testDefinitionId": {
                    "description": "The unique identifier for the test definition.",
                    "example": "{{testDefinitionId}}",
                    "type": "integer"
                  },
                  "testDefinitionName": {
                    "description": "A short title for the test definition.",
                    "example": "{{testDefinitionName}}",
                    "maxLength": 100,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/updateTestDefinitionRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "jkowalski",
                  "createdDate": "2018-03-16T10:46:21+0000",
                  "hostname": "www.example-weather.com",
                  "modifiedBy": "mrossi",
                  "modifiedDate": "2018-04-10T06:45:58+0000",
                  "testDefinitionDescription": "Testing weather prefetch configurations (edited)",
                  "testDefinitionId": 738,
                  "testDefinitionName": "Weather Test (edited)",
                  "ipVersions": [
                    "ipv6"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The basic unit of testing in Test Center. A test definition is associated with a hostname and configured with at least one test case for testing that hostname. Status is `active` by default but once a test definition is removed it becomes `inactive` and can no longer be made `active`.",
                  "type": "object",
                  "required": [
                    "testDefinitionId",
                    "testDefinitionName",
                    "hostname",
                    "ipVersions",
                    "createdBy",
                    "createdDate"
                  ],
                  "properties": {
                    "createdBy": {
                      "description": "The user who created the test definition.",
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 date string for the time when the test definition was created.",
                      "type": "string"
                    },
                    "hostname": {
                      "description": "Hostname to be tested.",
                      "maxLength": 100,
                      "type": "string"
                    },
                    "ipVersions": {
                      "description": "IP version for which the test has to be run.",
                      "maxItems": 2,
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "description": "Can be `ipv4`, `ipv6`, or both.",
                        "type": "string",
                        "enum": [
                          "ipv4",
                          "ipv6"
                        ]
                      }
                    },
                    "modifiedBy": {
                      "description": "The user who last modified the test definition.",
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 date string for the time when the test definition was last modified.",
                      "type": "string"
                    },
                    "status": {
                      "description": "This field denotes whether the test definition is active or has been removed. Can be `inactive` or `active`.",
                      "type": "string",
                      "enum": [
                        "inactive",
                        "active"
                      ]
                    },
                    "testDefinitionDescription": {
                      "description": "A description about the test definition. 4000-character limit.",
                      "maxLength": 4000,
                      "type": "string"
                    },
                    "testDefinitionId": {
                      "description": "Unique identifier for the test definition.",
                      "type": "integer"
                    },
                    "testDefinitionName": {
                      "description": "A short title for the test definition. 100-character limit.",
                      "maxLength": 100,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestDefinitionResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for test definition.",
          "example": "{{testDefinitionId}}",
          "in": "path",
          "name": "testDefinitionId",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testDefinitionId-path.yaml"
          }
        }
      ]
    },
    "/test-definitions/{testDefinitionId}/clone": {
      "post": {
        "description": "The `testDefinitionId` that you enter in the URL parameter is that of the test definition you want to clone. The other information specifies the configuration for the cloned test definition.  Cloning the test definition also clones the corresponding test cases.",
        "operationId": "post-test-definition-clone",
        "summary": "Clone a test definition",
        "tags": [
          "Test definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-definition-clone"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "createdBy": "hgildong",
                "createdDate": "2018-03-16T10:46:21+0000",
                "hostname": "www.example-weather-config-1.com",
                "modifiedBy": "adevi",
                "modifiedDate": "2018-04-10T06:45:58+0000",
                "testDefinitionDescription": "Creating a copy of Weather Test",
                "testDefinitionId": 738,
                "testDefinitionName": "Copy of Weather Test"
              },
              "schema": {
                "additionalProperties": false,
                "description": "A test definition object to be cloned.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "description": "The username of the user who created the test definition.",
                    "example": "{{createdBy}}",
                    "type": "string"
                  },
                  "createdDate": {
                    "description": "ISO 8601 timestamp indicating when the test definition was created.",
                    "example": "{{createdDate}}",
                    "type": "string"
                  },
                  "hostname": {
                    "description": "The URL of the specific web page that you want to test.",
                    "example": "{{hostname}}",
                    "type": "string"
                  },
                  "ipVersions": {
                    "description": "The IP versions for which the test is to be run.",
                    "maxItems": 2,
                    "minItems": 1,
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                      "type": "string",
                      "enum": [
                        "ipv4",
                        "ipv6"
                      ]
                    }
                  },
                  "modifiedBy": {
                    "description": "The username of the user who most recently modified the test definition.",
                    "example": "{{modifiedBy}}",
                    "type": "string"
                  },
                  "modifiedDate": {
                    "description": "ISO 8601 timestamp indicating when the test definition was last updated.",
                    "example": "{{modifiedDate}}",
                    "type": "string"
                  },
                  "testDefinitionDescription": {
                    "description": "A description for the test definition. The max length is 4000 characters.",
                    "example": "{{testDefinitionDescription}}",
                    "maxLength": 4000,
                    "type": "string"
                  },
                  "testDefinitionId": {
                    "description": "The unique identifier of the test definition from which a new test definition will be cloned.",
                    "example": "{{testDefinitionId}}",
                    "type": "integer"
                  },
                  "testDefinitionName": {
                    "description": "A short title for the test definition. The max length is 100 characters.",
                    "example": "{{testDefinitionName}}",
                    "maxLength": 100,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/cloneTestDefinitionRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "jkowalski",
                  "createdDate": "2018-04-10T06:47:16+0000",
                  "hostname": "www.example-weather-config-1.com",
                  "testDefinitionDescription": "Creating a copy of Weather Test",
                  "testDefinitionId": 3753,
                  "testDefinitionName": "Copy of Weather Test",
                  "ipVersions": [
                    "ipv6"
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The basic unit of testing in Test Center. A test definition is associated with a hostname and configured with at least one test case for testing that hostname. Status is `active` by default but once a test definition is removed it becomes `inactive` and can no longer be made `active`.",
                  "type": "object",
                  "required": [
                    "testDefinitionId",
                    "testDefinitionName",
                    "hostname",
                    "ipVersions",
                    "createdBy",
                    "createdDate"
                  ],
                  "properties": {
                    "createdBy": {
                      "description": "The user who created the test definition.",
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 date string for the time when the test definition was created.",
                      "type": "string"
                    },
                    "hostname": {
                      "description": "Hostname to be tested.",
                      "maxLength": 100,
                      "type": "string"
                    },
                    "ipVersions": {
                      "description": "IP version for which the test has to be run.",
                      "maxItems": 2,
                      "minItems": 1,
                      "type": "array",
                      "uniqueItems": true,
                      "items": {
                        "description": "Can be `ipv4`, `ipv6`, or both.",
                        "type": "string",
                        "enum": [
                          "ipv4",
                          "ipv6"
                        ]
                      }
                    },
                    "modifiedBy": {
                      "description": "The user who last modified the test definition.",
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 date string for the time when the test definition was last modified.",
                      "type": "string"
                    },
                    "status": {
                      "description": "This field denotes whether the test definition is active or has been removed. Can be `inactive` or `active`.",
                      "type": "string",
                      "enum": [
                        "inactive",
                        "active"
                      ]
                    },
                    "testDefinitionDescription": {
                      "description": "A description about the test definition. 4000-character limit.",
                      "maxLength": 4000,
                      "type": "string"
                    },
                    "testDefinitionId": {
                      "description": "Unique identifier for the test definition.",
                      "type": "integer"
                    },
                    "testDefinitionName": {
                      "description": "A short title for the test definition. 100-character limit.",
                      "maxLength": 100,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestDefinitionResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for test definition.",
          "example": "{{testDefinitionId}}",
          "in": "path",
          "name": "testDefinitionId",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testDefinitionId-path.yaml"
          }
        }
      ]
    },
    "/test-definitions/{testDefinitionId}/remove": {
      "post": {
        "description": "Remove a test definition identified by `testDefinitionId`. When you remove a test definition and make a GET request for its ID, its status is inactive. The removed test definition remains in the system for 30 days from the date of the removal. There is no way to revive a removed test definition.",
        "operationId": "post-test-definition-remove",
        "summary": "Remove a test definition",
        "tags": [
          "Test definitions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-definition-remove"
        },
        "responses": {
          "204": {
            "description": "Successfully deleted.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for test definition.",
          "example": "{{testDefinitionId}}",
          "in": "path",
          "name": "testDefinitionId",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testDefinitionId-path.yaml"
          }
        }
      ]
    },
    "/test-definitions/{testDefinitionId}/test-cases": {
      "post": {
        "description": "Add a test case to a test definition. The hostname of the URL you provide for the test case must be the same as the hostname for the test definition that the test case belongs to. Do not use this to test authenticated content.",
        "operationId": "post-test-definition-test-cases",
        "summary": "Create a test case",
        "tags": [
          "Test cases"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-definition-test-cases"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "testCaseDescription": "Base Page Test",
                "testCaseName": "Base Page",
                "testDefinitionId": 738,
                "url": "https://www.example-weather.com/",
                "comparisonSettings": {
                  "cacheKey": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true
                  },
                  "cachingOption": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true
                  },
                  "cpcode": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true
                  },
                  "metadataVariables": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true,
                    "compareAllExcept": [
                      "RUM_IS_IPV6",
                      "RUA_OUT_IS_APPLIED",
                      "RUM_XHR_TEST",
                      "RUM_CLIENT_TO_MAPPING_PCT",
                      "RANDOM_SAMPLE",
                      "RUM_IMPL_PM_GROUPID",
                      "RUM_IMPL_PM_GROUPNAME",
                      "RUM_IMPL_PM_PRODUCT",
                      "RUM_DEBUG"
                    ],
                    "compareOnly": []
                  },
                  "originServer": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true
                  },
                  "responseCode": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true
                  },
                  "responseHeaders": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true,
                    "compareAllExcept": [
                      "Age",
                      "Date",
                      "Expires",
                      "Server",
                      "Via",
                      "Set-Cookie",
                      "Cache-Control"
                    ],
                    "compareOnly": []
                  }
                },
                "requestHeaders": [
                  {
                    "headerAction": "add",
                    "headerName": "Max-Forwards",
                    "headerValues": "10"
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Contains information about a test case.",
                "type": "object",
                "required": [
                  "testDefinitionId",
                  "url",
                  "testCaseName",
                  "requestHeaders",
                  "comparisonSettings"
                ],
                "properties": {
                  "comparisonSettings": {
                    "additionalProperties": false,
                    "description": "Comparison settings are attributes which are used for comparison between different environments. By default all comparison settings are included for the test case.",
                    "type": "object",
                    "required": [
                      "responseCode",
                      "responseHeaders",
                      "cpcode",
                      "cachingOption",
                      "cacheKey",
                      "metadataVariables",
                      "originServer"
                    ],
                    "properties": {
                      "cacheKey": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "cachingOption": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "cpcode": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "metadataVariables": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects",
                          "compareOnly",
                          "compareAllExcept"
                        ],
                        "properties": {
                          "compareAllExcept": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "compareOnly": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "originServer": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "responseCode": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "responseHeaders": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects",
                          "compareOnly",
                          "compareAllExcept"
                        ],
                        "properties": {
                          "compareAllExcept": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "compareOnly": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "requestHeaders": {
                    "description": "Add specific request headers to the list of requests that the test case will make. Modify of filter existing request headers in the list of requests that the test case will make.",
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "headerName",
                        "headerValues",
                        "headerAction"
                      ],
                      "properties": {
                        "headerAction": {
                          "type": "string",
                          "enum": [
                            "add",
                            "modify",
                            "filter"
                          ]
                        },
                        "headerName": {
                          "description": "The name of the request header.",
                          "type": "string"
                        },
                        "headerValues": {
                          "description": "The value of the request header.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "testCaseDescription": {
                    "example": "{{testCaseDescription}}",
                    "maxLength": 4000,
                    "type": "string"
                  },
                  "testCaseName": {
                    "description": "The name you supply for the test case. Max length is 100 characters.",
                    "example": "{{testCaseName}}",
                    "maxLength": 100,
                    "type": "string"
                  },
                  "testDefinitionId": {
                    "description": "Read-only. Unique identifier for the test definition.",
                    "example": "{{testDefinitionId}}",
                    "type": "string"
                  },
                  "url": {
                    "description": "URL of the page to be tested.",
                    "example": "{{url}}",
                    "format": "uri",
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/createTestCaseRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "tyamada",
                  "createdDate": "2018-03-16T10:46:23+0000",
                  "modifiedBy": "tyamada",
                  "modifiedDate": "2018-03-16T10:46:28+0000",
                  "runOrder": 1,
                  "status": "active",
                  "testCaseDescription": "Base Page Test",
                  "testCaseId": 1855,
                  "testCaseName": "Base Page",
                  "testDefinitionId": 738,
                  "url": "https://www.example-weather.com/",
                  "comparisonSettings": {
                    "cacheKey": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "cachingOption": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "cpcode": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "metadataVariables": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true,
                      "compareAllExcept": [
                        "RUM_IS_IPV6",
                        "RUA_OUT_IS_APPLIED",
                        "RUM_XHR_TEST",
                        "RUM_CLIENT_TO_MAPPING_PCT",
                        "RANDOM_SAMPLE",
                        "RUM_IMPL_PM_GROUPID",
                        "RUM_IMPL_PM_GROUPNAME",
                        "RUM_IMPL_PM_PRODUCT",
                        "RUM_DEBUG"
                      ],
                      "compareOnly": []
                    },
                    "originServer": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "responseCode": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "responseHeaders": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true,
                      "compareAllExcept": [
                        "Age",
                        "Date",
                        "Expires",
                        "Server",
                        "Via",
                        "Set-Cookie",
                        "Cache-Control"
                      ],
                      "compareOnly": []
                    }
                  },
                  "requestHeaders": [
                    {
                      "headerAction": "add",
                      "headerName": "Max-Forwards",
                      "headerValues": "10"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "An object containing data for a single test case, such as which web pages or objects the test definition compares, which response headers are included, and which comparisons are made. Embedded objects here refers to the entities that get loaded after the initial HTML request that is made.",
                  "type": "object",
                  "required": [
                    "testCaseId",
                    "testDefinitionId",
                    "url",
                    "testCaseName",
                    "runOrder",
                    "requestHeaders",
                    "comparisonSettings",
                    "createdBy",
                    "createdDate"
                  ],
                  "properties": {
                    "comparisonSettings": {
                      "additionalProperties": false,
                      "description": "Attributes which are used for comparison between different environments.",
                      "type": "object",
                      "required": [
                        "responseCode",
                        "responseHeaders",
                        "cpcode",
                        "cachingOption",
                        "cacheKey",
                        "metadataVariables",
                        "originServer"
                      ],
                      "properties": {
                        "cacheKey": {
                          "additionalProperties": false,
                          "description": "The string used by the Akamai Edge Server to identify the requested object in the cache.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects for the cache key are included in the comparison made by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the cache key is compared by the test run. If false, the cache key is not compared by the test run.",
                              "type": "boolean"
                            }
                          }
                        },
                        "cachingOption": {
                          "additionalProperties": false,
                          "description": "The caching option allows you to specify how long you want to cache everything in your configuration.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects for the caching option are included in the comparison made by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the caching option is compared by the test run. If false, the caching option is not compared by the test run.",
                              "type": "boolean"
                            }
                          }
                        },
                        "cpcode": {
                          "additionalProperties": false,
                          "description": "The CP code with which the content from the Akamai Edge Server is being delivered.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects for the CP code are included in the comparison made by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the CP code is compared by the test run. If false, the CP code is not compared by the test run.",
                              "type": "boolean"
                            }
                          }
                        },
                        "metadataVariables": {
                          "additionalProperties": false,
                          "description": "The metadata variables used in the processing of the request.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects",
                            "compareOnly",
                            "compareAllExcept"
                          ],
                          "properties": {
                            "compareAllExcept": {
                              "description": "The list of all metadata variables to be ignored, or not compared, by the test run.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "compareOnly": {
                              "description": "The list of metadata variables to be included, or compared, by the test run.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects for the metadata variables are included in the comparison made by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the metadata variables are compared by the test run. If false they are not.",
                              "type": "boolean"
                            }
                          }
                        },
                        "originServer": {
                          "additionalProperties": false,
                          "description": "The hostname of the origin server.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects for the origin server are compared by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the origin server is compared by the test run. If false it is not.",
                              "type": "boolean"
                            }
                          }
                        },
                        "responseCode": {
                          "additionalProperties": false,
                          "description": "The numerical part of the HTTP Status Code.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects for the response code are compared by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the response code is compared by the test run. If false, it is not.",
                              "type": "boolean"
                            }
                          }
                        },
                        "responseHeaders": {
                          "additionalProperties": false,
                          "description": "The response headers of the corresponding HTTP responses.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects",
                            "compareOnly",
                            "compareAllExcept"
                          ],
                          "properties": {
                            "compareAllExcept": {
                              "description": "The list of all response headers to be ignored, or not compared, by the test run.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "compareOnly": {
                              "description": "The list of response headers to be included, or compared, by the test run.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects of the response headers are compared by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the response headers are compared by the test run. If false, they are not.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "createdBy": {
                      "description": "The user who created the test case.",
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 date string for the time when the test definition was created.",
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "The user who last modified the test case.",
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 date string for the time when the test definition was last modified.",
                      "type": "string"
                    },
                    "requestHeaders": {
                      "description": "Encapsulates the request headers in the test case.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Encapsulates the request headers in the test case.",
                        "type": "object",
                        "required": [
                          "headerName",
                          "headerValues",
                          "headerAction"
                        ],
                        "properties": {
                          "headerAction": {
                            "description": "Either `add` to the list of request headers, `modify` existing request headers, or `filter` request headers belonging to this test case.",
                            "type": "string",
                            "enum": [
                              "add",
                              "modify",
                              "filter"
                            ]
                          },
                          "headerName": {
                            "description": "The name of the request header.",
                            "type": "string"
                          },
                          "headerValues": {
                            "description": "The value of the request header.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "runOrder": {
                      "description": "An integer representing the order in which the test case will be run as part of its parent test definition.",
                      "type": "integer"
                    },
                    "status": {
                      "description": "This field denotes whether the test case is active or has been removed. Can be `inactive` or `active`.",
                      "type": "string",
                      "enum": [
                        "inactive",
                        "active"
                      ]
                    },
                    "testCaseDescription": {
                      "description": "Description about the test case. 4000-character limit.",
                      "maxLength": 4000,
                      "type": "string"
                    },
                    "testCaseId": {
                      "description": "A unique Identifier for test case resource.",
                      "type": "integer"
                    },
                    "testCaseName": {
                      "description": "A short title for the test case. 100-character limit.",
                      "maxLength": 100,
                      "type": "string"
                    },
                    "testDefinitionId": {
                      "description": "A unique Identifier for test definition resource.",
                      "type": "integer"
                    },
                    "url": {
                      "description": "URL of the page to be tested.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestCaseResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "List all test cases that belong to a specific test definition.",
        "operationId": "get-test-definition-test-cases",
        "summary": "List test cases",
        "tags": [
          "Test cases"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-definition-test-cases"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "List of test cases for the given test definition.",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "An object containing data for a single test case, such as which web pages or objects the test definition compares, which response headers are included, and which comparisons are made. Embedded objects here refers to the entities that get loaded after the initial HTML request that is made.",
                    "type": "object",
                    "required": [
                      "testCaseId",
                      "testDefinitionId",
                      "url",
                      "testCaseName",
                      "runOrder",
                      "requestHeaders",
                      "comparisonSettings",
                      "createdBy",
                      "createdDate"
                    ],
                    "properties": {
                      "comparisonSettings": {
                        "additionalProperties": false,
                        "description": "Attributes which are used for comparison between different environments.",
                        "type": "object",
                        "required": [
                          "responseCode",
                          "responseHeaders",
                          "cpcode",
                          "cachingOption",
                          "cacheKey",
                          "metadataVariables",
                          "originServer"
                        ],
                        "properties": {
                          "cacheKey": {
                            "additionalProperties": false,
                            "description": "The string used by the Akamai Edge Server to identify the requested object in the cache.",
                            "type": "object",
                            "required": [
                              "isEnabled",
                              "includeEmbeddedObjects"
                            ],
                            "properties": {
                              "includeEmbeddedObjects": {
                                "default": true,
                                "description": "If true, the embedded objects for the cache key are included in the comparison made by the test run. If false, they are not.",
                                "type": "boolean"
                              },
                              "isEnabled": {
                                "default": true,
                                "description": "If true, the cache key is compared by the test run. If false, the cache key is not compared by the test run.",
                                "type": "boolean"
                              }
                            }
                          },
                          "cachingOption": {
                            "additionalProperties": false,
                            "description": "The caching option allows you to specify how long you want to cache everything in your configuration.",
                            "type": "object",
                            "required": [
                              "isEnabled",
                              "includeEmbeddedObjects"
                            ],
                            "properties": {
                              "includeEmbeddedObjects": {
                                "default": true,
                                "description": "If true, the embedded objects for the caching option are included in the comparison made by the test run. If false, they are not.",
                                "type": "boolean"
                              },
                              "isEnabled": {
                                "default": true,
                                "description": "If true, the caching option is compared by the test run. If false, the caching option is not compared by the test run.",
                                "type": "boolean"
                              }
                            }
                          },
                          "cpcode": {
                            "additionalProperties": false,
                            "description": "The CP code with which the content from the Akamai Edge Server is being delivered.",
                            "type": "object",
                            "required": [
                              "isEnabled",
                              "includeEmbeddedObjects"
                            ],
                            "properties": {
                              "includeEmbeddedObjects": {
                                "default": true,
                                "description": "If true, the embedded objects for the CP code are included in the comparison made by the test run. If false, they are not.",
                                "type": "boolean"
                              },
                              "isEnabled": {
                                "default": true,
                                "description": "If true, the CP code is compared by the test run. If false, the CP code is not compared by the test run.",
                                "type": "boolean"
                              }
                            }
                          },
                          "metadataVariables": {
                            "additionalProperties": false,
                            "description": "The metadata variables used in the processing of the request.",
                            "type": "object",
                            "required": [
                              "isEnabled",
                              "includeEmbeddedObjects",
                              "compareOnly",
                              "compareAllExcept"
                            ],
                            "properties": {
                              "compareAllExcept": {
                                "description": "The list of all metadata variables to be ignored, or not compared, by the test run.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "compareOnly": {
                                "description": "The list of metadata variables to be included, or compared, by the test run.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "includeEmbeddedObjects": {
                                "default": true,
                                "description": "If true, the embedded objects for the metadata variables are included in the comparison made by the test run. If false, they are not.",
                                "type": "boolean"
                              },
                              "isEnabled": {
                                "default": true,
                                "description": "If true, the metadata variables are compared by the test run. If false they are not.",
                                "type": "boolean"
                              }
                            }
                          },
                          "originServer": {
                            "additionalProperties": false,
                            "description": "The hostname of the origin server.",
                            "type": "object",
                            "required": [
                              "isEnabled",
                              "includeEmbeddedObjects"
                            ],
                            "properties": {
                              "includeEmbeddedObjects": {
                                "default": true,
                                "description": "If true, the embedded objects for the origin server are compared by the test run. If false, they are not.",
                                "type": "boolean"
                              },
                              "isEnabled": {
                                "default": true,
                                "description": "If true, the origin server is compared by the test run. If false it is not.",
                                "type": "boolean"
                              }
                            }
                          },
                          "responseCode": {
                            "additionalProperties": false,
                            "description": "The numerical part of the HTTP Status Code.",
                            "type": "object",
                            "required": [
                              "isEnabled",
                              "includeEmbeddedObjects"
                            ],
                            "properties": {
                              "includeEmbeddedObjects": {
                                "default": true,
                                "description": "If true, the embedded objects for the response code are compared by the test run. If false, they are not.",
                                "type": "boolean"
                              },
                              "isEnabled": {
                                "default": true,
                                "description": "If true, the response code is compared by the test run. If false, it is not.",
                                "type": "boolean"
                              }
                            }
                          },
                          "responseHeaders": {
                            "additionalProperties": false,
                            "description": "The response headers of the corresponding HTTP responses.",
                            "type": "object",
                            "required": [
                              "isEnabled",
                              "includeEmbeddedObjects",
                              "compareOnly",
                              "compareAllExcept"
                            ],
                            "properties": {
                              "compareAllExcept": {
                                "description": "The list of all response headers to be ignored, or not compared, by the test run.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "compareOnly": {
                                "description": "The list of response headers to be included, or compared, by the test run.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "includeEmbeddedObjects": {
                                "default": true,
                                "description": "If true, the embedded objects of the response headers are compared by the test run. If false, they are not.",
                                "type": "boolean"
                              },
                              "isEnabled": {
                                "default": true,
                                "description": "If true, the response headers are compared by the test run. If false, they are not.",
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      },
                      "createdBy": {
                        "description": "The user who created the test case.",
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "ISO 8601 date string for the time when the test definition was created.",
                        "type": "string"
                      },
                      "modifiedBy": {
                        "description": "The user who last modified the test case.",
                        "type": "string"
                      },
                      "modifiedDate": {
                        "description": "ISO 8601 date string for the time when the test definition was last modified.",
                        "type": "string"
                      },
                      "requestHeaders": {
                        "description": "Encapsulates the request headers in the test case.",
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "Encapsulates the request headers in the test case.",
                          "type": "object",
                          "required": [
                            "headerName",
                            "headerValues",
                            "headerAction"
                          ],
                          "properties": {
                            "headerAction": {
                              "description": "Either `add` to the list of request headers, `modify` existing request headers, or `filter` request headers belonging to this test case.",
                              "type": "string",
                              "enum": [
                                "add",
                                "modify",
                                "filter"
                              ]
                            },
                            "headerName": {
                              "description": "The name of the request header.",
                              "type": "string"
                            },
                            "headerValues": {
                              "description": "The value of the request header.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "runOrder": {
                        "description": "An integer representing the order in which the test case will be run as part of its parent test definition.",
                        "type": "integer"
                      },
                      "status": {
                        "description": "This field denotes whether the test case is active or has been removed. Can be `inactive` or `active`.",
                        "type": "string",
                        "enum": [
                          "inactive",
                          "active"
                        ]
                      },
                      "testCaseDescription": {
                        "description": "Description about the test case. 4000-character limit.",
                        "maxLength": 4000,
                        "type": "string"
                      },
                      "testCaseId": {
                        "description": "A unique Identifier for test case resource.",
                        "type": "integer"
                      },
                      "testCaseName": {
                        "description": "A short title for the test case. 100-character limit.",
                        "maxLength": 100,
                        "type": "string"
                      },
                      "testDefinitionId": {
                        "description": "A unique Identifier for test definition resource.",
                        "type": "integer"
                      },
                      "url": {
                        "description": "URL of the page to be tested.",
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/get-test-case-response.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestCasesResponse.yaml"
                  }
                },
                "example": [
                  {
                    "createdBy": "adevi",
                    "createdDate": "2018-03-16T10:46:23+0000",
                    "modifiedBy": "tyamada",
                    "modifiedDate": "2018-03-16T10:46:28+0000",
                    "runOrder": 1,
                    "testCaseDescription": "Base Page Test",
                    "testCaseId": 1855,
                    "testCaseName": "Base Page",
                    "testDefinitionId": 738,
                    "url": "https://www.example-weather.com/",
                    "comparisonSettings": {
                      "cacheKey": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true
                      },
                      "cachingOption": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true
                      },
                      "cpcode": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true
                      },
                      "metadataVariables": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true,
                        "compareAllExcept": [
                          "RUM_IS_IPV6",
                          "RUA_OUT_IS_APPLIED",
                          "RUM_XHR_TEST",
                          "RUM_CLIENT_TO_MAPPING_PCT",
                          "RANDOM_SAMPLE",
                          "RUM_IMPL_PM_GROUPID",
                          "RUM_IMPL_PM_GROUPNAME",
                          "RUM_IMPL_PM_PRODUCT",
                          "RUM_DEBUG"
                        ],
                        "compareOnly": []
                      },
                      "originServer": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true
                      },
                      "responseCode": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true
                      },
                      "responseHeaders": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true,
                        "compareAllExcept": [
                          "Age",
                          "Date",
                          "Expires",
                          "Server",
                          "Via",
                          "Set-Cookie",
                          "Cache-Control"
                        ],
                        "compareOnly": []
                      }
                    },
                    "requestHeaders": [
                      {
                        "headerAction": "add",
                        "headerName": "Max-Forwards",
                        "headerValues": "10"
                      }
                    ]
                  },
                  {
                    "createdBy": "tyamada",
                    "createdDate": "2018-03-16T10:46:24+0000",
                    "modifiedBy": "alfulani",
                    "modifiedDate": "2018-03-16T10:46:30+0000",
                    "runOrder": 2,
                    "testCaseDescription": "Accounts page test",
                    "testCaseId": 1866,
                    "testCaseName": "Accounts page",
                    "testDefinitionId": 738,
                    "url": "https://www.example-weather.com/accounts",
                    "requestHeaders": [],
                    "comparisonSettings": {
                      "cacheKey": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true
                      },
                      "cachingOption": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true
                      },
                      "cpcode": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true
                      },
                      "metadataVariables": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true,
                        "compareAllExcept": [
                          "RUM_IS_IPV6",
                          "RUA_OUT_IS_APPLIED",
                          "RUM_XHR_TEST",
                          "RUM_CLIENT_TO_MAPPING_PCT",
                          "RANDOM_SAMPLE"
                        ],
                        "compareOnly": []
                      },
                      "originServer": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true
                      },
                      "responseCode": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true
                      },
                      "responseHeaders": {
                        "includeEmbeddedObjects": true,
                        "isEnabled": true,
                        "compareAllExcept": [
                          "Age",
                          "Date",
                          "Expires",
                          "Server",
                          "Via",
                          "Set-Cookie",
                          "Cache-Control"
                        ],
                        "compareOnly": []
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for test definition.",
          "example": "{{testDefinitionId}}",
          "in": "path",
          "name": "testDefinitionId",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testDefinitionId-path.yaml"
          }
        }
      ]
    },
    "/test-definitions/{testDefinitionId}/test-cases/{testCaseId}": {
      "get": {
        "description": "Get a specific test case's details including its request headers and comparison settings.",
        "operationId": "get-test-definition-test-case",
        "summary": "Get a test case",
        "tags": [
          "Test cases"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-definition-test-case"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "szhang",
                  "createdDate": "2018-03-16T10:46:23+0000",
                  "modifiedBy": "tyamada",
                  "modifiedDate": "2018-03-16T10:46:28+0000",
                  "runOrder": 1,
                  "status": "active",
                  "testCaseDescription": "Base Page Test",
                  "testCaseId": 1855,
                  "testCaseName": "Base Page",
                  "testDefinitionId": 738,
                  "url": "https://www.example-weather.com/",
                  "comparisonSettings": {
                    "cacheKey": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "cachingOption": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "cpcode": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "metadataVariables": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true,
                      "compareAllExcept": [
                        "RUM_IS_IPV6",
                        "RUA_OUT_IS_APPLIED",
                        "RUM_XHR_TEST",
                        "RUM_CLIENT_TO_MAPPING_PCT",
                        "RANDOM_SAMPLE",
                        "RUM_IMPL_PM_GROUPID",
                        "RUM_IMPL_PM_GROUPNAME",
                        "RUM_IMPL_PM_PRODUCT",
                        "RUM_DEBUG"
                      ],
                      "compareOnly": []
                    },
                    "originServer": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "responseCode": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "responseHeaders": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true,
                      "compareAllExcept": [
                        "Age",
                        "Date",
                        "Expires",
                        "Server",
                        "Via",
                        "Set-Cookie",
                        "Cache-Control"
                      ],
                      "compareOnly": []
                    }
                  },
                  "requestHeaders": [
                    {
                      "headerAction": "add",
                      "headerName": "Max-Forwards",
                      "headerValues": "10"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "An object containing data for a single test case, such as which web pages or objects the test definition compares, which response headers are included, and which comparisons are made. Embedded objects here refers to the entities that get loaded after the initial HTML request that is made.",
                  "type": "object",
                  "required": [
                    "testCaseId",
                    "testDefinitionId",
                    "url",
                    "testCaseName",
                    "runOrder",
                    "requestHeaders",
                    "comparisonSettings",
                    "createdBy",
                    "createdDate"
                  ],
                  "properties": {
                    "comparisonSettings": {
                      "additionalProperties": false,
                      "description": "Attributes which are used for comparison between different environments.",
                      "type": "object",
                      "required": [
                        "responseCode",
                        "responseHeaders",
                        "cpcode",
                        "cachingOption",
                        "cacheKey",
                        "metadataVariables",
                        "originServer"
                      ],
                      "properties": {
                        "cacheKey": {
                          "additionalProperties": false,
                          "description": "The string used by the Akamai Edge Server to identify the requested object in the cache.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects for the cache key are included in the comparison made by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the cache key is compared by the test run. If false, the cache key is not compared by the test run.",
                              "type": "boolean"
                            }
                          }
                        },
                        "cachingOption": {
                          "additionalProperties": false,
                          "description": "The caching option allows you to specify how long you want to cache everything in your configuration.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects for the caching option are included in the comparison made by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the caching option is compared by the test run. If false, the caching option is not compared by the test run.",
                              "type": "boolean"
                            }
                          }
                        },
                        "cpcode": {
                          "additionalProperties": false,
                          "description": "The CP code with which the content from the Akamai Edge Server is being delivered.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects for the CP code are included in the comparison made by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the CP code is compared by the test run. If false, the CP code is not compared by the test run.",
                              "type": "boolean"
                            }
                          }
                        },
                        "metadataVariables": {
                          "additionalProperties": false,
                          "description": "The metadata variables used in the processing of the request.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects",
                            "compareOnly",
                            "compareAllExcept"
                          ],
                          "properties": {
                            "compareAllExcept": {
                              "description": "The list of all metadata variables to be ignored, or not compared, by the test run.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "compareOnly": {
                              "description": "The list of metadata variables to be included, or compared, by the test run.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects for the metadata variables are included in the comparison made by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the metadata variables are compared by the test run. If false they are not.",
                              "type": "boolean"
                            }
                          }
                        },
                        "originServer": {
                          "additionalProperties": false,
                          "description": "The hostname of the origin server.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects for the origin server are compared by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the origin server is compared by the test run. If false it is not.",
                              "type": "boolean"
                            }
                          }
                        },
                        "responseCode": {
                          "additionalProperties": false,
                          "description": "The numerical part of the HTTP Status Code.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects for the response code are compared by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the response code is compared by the test run. If false, it is not.",
                              "type": "boolean"
                            }
                          }
                        },
                        "responseHeaders": {
                          "additionalProperties": false,
                          "description": "The response headers of the corresponding HTTP responses.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects",
                            "compareOnly",
                            "compareAllExcept"
                          ],
                          "properties": {
                            "compareAllExcept": {
                              "description": "The list of all response headers to be ignored, or not compared, by the test run.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "compareOnly": {
                              "description": "The list of response headers to be included, or compared, by the test run.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects of the response headers are compared by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the response headers are compared by the test run. If false, they are not.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "createdBy": {
                      "description": "The user who created the test case.",
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 date string for the time when the test definition was created.",
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "The user who last modified the test case.",
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 date string for the time when the test definition was last modified.",
                      "type": "string"
                    },
                    "requestHeaders": {
                      "description": "Encapsulates the request headers in the test case.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Encapsulates the request headers in the test case.",
                        "type": "object",
                        "required": [
                          "headerName",
                          "headerValues",
                          "headerAction"
                        ],
                        "properties": {
                          "headerAction": {
                            "description": "Either `add` to the list of request headers, `modify` existing request headers, or `filter` request headers belonging to this test case.",
                            "type": "string",
                            "enum": [
                              "add",
                              "modify",
                              "filter"
                            ]
                          },
                          "headerName": {
                            "description": "The name of the request header.",
                            "type": "string"
                          },
                          "headerValues": {
                            "description": "The value of the request header.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "runOrder": {
                      "description": "An integer representing the order in which the test case will be run as part of its parent test definition.",
                      "type": "integer"
                    },
                    "status": {
                      "description": "This field denotes whether the test case is active or has been removed. Can be `inactive` or `active`.",
                      "type": "string",
                      "enum": [
                        "inactive",
                        "active"
                      ]
                    },
                    "testCaseDescription": {
                      "description": "Description about the test case. 4000-character limit.",
                      "maxLength": 4000,
                      "type": "string"
                    },
                    "testCaseId": {
                      "description": "A unique Identifier for test case resource.",
                      "type": "integer"
                    },
                    "testCaseName": {
                      "description": "A short title for the test case. 100-character limit.",
                      "maxLength": 100,
                      "type": "string"
                    },
                    "testDefinitionId": {
                      "description": "A unique Identifier for test definition resource.",
                      "type": "integer"
                    },
                    "url": {
                      "description": "URL of the page to be tested.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestCaseResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Modify a specific test case. You cannot modify the `testCaseId` or the `testDefinitionId`.",
        "operationId": "put-test-definition-test-case",
        "summary": "Update a test case",
        "tags": [
          "Test cases"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/put-test-definition-test-case"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "testCaseDescription": "Base Page Test (edited)",
                "testCaseId": 1855,
                "testCaseName": "Base Page (edited)",
                "testDefinitionId": 738,
                "url": "https://www.example-weather.com/",
                "requestHeaders": [],
                "comparisonSettings": {
                  "cacheKey": {
                    "includeEmbeddedObjects": false,
                    "isEnabled": false
                  },
                  "cachingOption": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true
                  },
                  "cpcode": {
                    "includeEmbeddedObjects": false,
                    "isEnabled": false
                  },
                  "metadataVariables": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true,
                    "compareAllExcept": [
                      "RUM_IS_IPV6",
                      "RUA_OUT_IS_APPLIED",
                      "RUM_XHR_TEST",
                      "RUM_CLIENT_TO_MAPPING_PCT",
                      "RANDOM_SAMPLE",
                      "RUM_IMPL_PM_GROUPID",
                      "RUM_IMPL_PM_GROUPNAME",
                      "RUM_IMPL_PM_PRODUCT",
                      "RUM_DEBUG"
                    ],
                    "compareOnly": []
                  },
                  "originServer": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true
                  },
                  "responseCode": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true
                  },
                  "responseHeaders": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true,
                    "compareAllExcept": [
                      "Age",
                      "Date",
                      "Expires",
                      "Server"
                    ],
                    "compareOnly": []
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "An object containing data for a single test case.",
                "type": "object",
                "required": [
                  "testCaseId",
                  "url",
                  "testCaseName",
                  "testCaseDescription",
                  "requestHeaders",
                  "comparisonSettings"
                ],
                "properties": {
                  "comparisonSettings": {
                    "additionalProperties": false,
                    "description": "Comparison settings are attributes which are used for comparison between different environments.",
                    "type": "object",
                    "required": [
                      "responseCode",
                      "responseHeaders",
                      "cpcode",
                      "cachingOption",
                      "cacheKey",
                      "metadataVariables",
                      "originServer"
                    ],
                    "properties": {
                      "cacheKey": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "cachingOption": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "cpcode": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "metadataVariables": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects",
                          "compareOnly",
                          "compareAllExcept"
                        ],
                        "properties": {
                          "compareAllExcept": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "compareOnly": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "originServer": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "responseCode": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "responseHeaders": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects",
                          "compareOnly",
                          "compareAllExcept"
                        ],
                        "properties": {
                          "compareAllExcept": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "compareOnly": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "createdBy": {
                    "description": "The user who created the test case.",
                    "example": "{{createdBy}}",
                    "type": "string"
                  },
                  "createdDate": {
                    "description": "ISO 8601 date string for the time when the test definition was created.",
                    "example": "{{createdDate}}",
                    "type": "string"
                  },
                  "modifiedBy": {
                    "description": "The user who last modified the test case.",
                    "example": "{{modifiedBy}}",
                    "type": "string"
                  },
                  "modifiedDate": {
                    "description": "ISO 8601 date string for the time when the test definition was last modified.",
                    "example": "{{modifiedDate}}",
                    "type": "string"
                  },
                  "requestHeaders": {
                    "description": "A list of request headers to be added, modified or filtered.",
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "headerName",
                        "headerValues",
                        "headerAction"
                      ],
                      "properties": {
                        "headerAction": {
                          "type": "string",
                          "enum": [
                            "add",
                            "modify",
                            "filter"
                          ]
                        },
                        "headerName": {
                          "type": "string"
                        },
                        "headerValues": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "runOrder": {
                    "description": "An integer representing the order in which the test case will be run as part of its parent test definition.",
                    "example": "{{runOrder}}",
                    "type": "integer"
                  },
                  "testCaseDescription": {
                    "description": "Description about the test case.",
                    "example": "{{testCaseDescription}}",
                    "maxLength": 4000,
                    "type": "string"
                  },
                  "testCaseId": {
                    "example": "{{testCaseId}}",
                    "type": "integer"
                  },
                  "testCaseName": {
                    "description": "A short title for the test case.",
                    "example": "{{testCaseName}}",
                    "maxLength": 100,
                    "type": "string"
                  },
                  "testDefinitionId": {
                    "example": "{{testDefinitionId}}",
                    "type": "integer"
                  },
                  "url": {
                    "description": "The URL of the page to be tested.",
                    "example": "{{url}}",
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/updateTestCaseRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "alfulani",
                  "createdDate": "2018-03-16T10:46:23+0000",
                  "modifiedBy": "jkowalski",
                  "modifiedDate": "2018-04-10T06:32:31+0000",
                  "runOrder": 1,
                  "testCaseDescription": "Base Page Test (edited)",
                  "testCaseId": 1855,
                  "testCaseName": "Base Page (edited)",
                  "testDefinitionId": 738,
                  "url": "https://www.example-weather.com/",
                  "requestHeaders": [],
                  "comparisonSettings": {
                    "cacheKey": {
                      "includeEmbeddedObjects": false,
                      "isEnabled": false
                    },
                    "cachingOption": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "cpcode": {
                      "includeEmbeddedObjects": false,
                      "isEnabled": false
                    },
                    "metadataVariables": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true,
                      "compareAllExcept": [
                        "RUM_IS_IPV6",
                        "RUA_OUT_IS_APPLIED",
                        "RUM_XHR_TEST",
                        "RUM_CLIENT_TO_MAPPING_PCT",
                        "RANDOM_SAMPLE",
                        "RUM_IMPL_PM_GROUPID",
                        "RUM_IMPL_PM_GROUPNAME",
                        "RUM_IMPL_PM_PRODUCT",
                        "RUM_DEBUG"
                      ],
                      "compareOnly": []
                    },
                    "originServer": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "responseCode": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "responseHeaders": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true,
                      "compareAllExcept": [
                        "Age",
                        "Date",
                        "Expires",
                        "Server"
                      ],
                      "compareOnly": []
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "An object containing data for a single test case, such as which web pages or objects the test definition compares, which response headers are included, and which comparisons are made. Embedded objects here refers to the entities that get loaded after the initial HTML request that is made.",
                  "type": "object",
                  "required": [
                    "testCaseId",
                    "testDefinitionId",
                    "url",
                    "testCaseName",
                    "runOrder",
                    "requestHeaders",
                    "comparisonSettings",
                    "createdBy",
                    "createdDate"
                  ],
                  "properties": {
                    "comparisonSettings": {
                      "additionalProperties": false,
                      "description": "Attributes which are used for comparison between different environments.",
                      "type": "object",
                      "required": [
                        "responseCode",
                        "responseHeaders",
                        "cpcode",
                        "cachingOption",
                        "cacheKey",
                        "metadataVariables",
                        "originServer"
                      ],
                      "properties": {
                        "cacheKey": {
                          "additionalProperties": false,
                          "description": "The string used by the Akamai Edge Server to identify the requested object in the cache.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects for the cache key are included in the comparison made by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the cache key is compared by the test run. If false, the cache key is not compared by the test run.",
                              "type": "boolean"
                            }
                          }
                        },
                        "cachingOption": {
                          "additionalProperties": false,
                          "description": "The caching option allows you to specify how long you want to cache everything in your configuration.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects for the caching option are included in the comparison made by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the caching option is compared by the test run. If false, the caching option is not compared by the test run.",
                              "type": "boolean"
                            }
                          }
                        },
                        "cpcode": {
                          "additionalProperties": false,
                          "description": "The CP code with which the content from the Akamai Edge Server is being delivered.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects for the CP code are included in the comparison made by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the CP code is compared by the test run. If false, the CP code is not compared by the test run.",
                              "type": "boolean"
                            }
                          }
                        },
                        "metadataVariables": {
                          "additionalProperties": false,
                          "description": "The metadata variables used in the processing of the request.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects",
                            "compareOnly",
                            "compareAllExcept"
                          ],
                          "properties": {
                            "compareAllExcept": {
                              "description": "The list of all metadata variables to be ignored, or not compared, by the test run.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "compareOnly": {
                              "description": "The list of metadata variables to be included, or compared, by the test run.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects for the metadata variables are included in the comparison made by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the metadata variables are compared by the test run. If false they are not.",
                              "type": "boolean"
                            }
                          }
                        },
                        "originServer": {
                          "additionalProperties": false,
                          "description": "The hostname of the origin server.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects for the origin server are compared by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the origin server is compared by the test run. If false it is not.",
                              "type": "boolean"
                            }
                          }
                        },
                        "responseCode": {
                          "additionalProperties": false,
                          "description": "The numerical part of the HTTP Status Code.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects for the response code are compared by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the response code is compared by the test run. If false, it is not.",
                              "type": "boolean"
                            }
                          }
                        },
                        "responseHeaders": {
                          "additionalProperties": false,
                          "description": "The response headers of the corresponding HTTP responses.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects",
                            "compareOnly",
                            "compareAllExcept"
                          ],
                          "properties": {
                            "compareAllExcept": {
                              "description": "The list of all response headers to be ignored, or not compared, by the test run.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "compareOnly": {
                              "description": "The list of response headers to be included, or compared, by the test run.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects of the response headers are compared by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the response headers are compared by the test run. If false, they are not.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "createdBy": {
                      "description": "The user who created the test case.",
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 date string for the time when the test definition was created.",
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "The user who last modified the test case.",
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 date string for the time when the test definition was last modified.",
                      "type": "string"
                    },
                    "requestHeaders": {
                      "description": "Encapsulates the request headers in the test case.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Encapsulates the request headers in the test case.",
                        "type": "object",
                        "required": [
                          "headerName",
                          "headerValues",
                          "headerAction"
                        ],
                        "properties": {
                          "headerAction": {
                            "description": "Either `add` to the list of request headers, `modify` existing request headers, or `filter` request headers belonging to this test case.",
                            "type": "string",
                            "enum": [
                              "add",
                              "modify",
                              "filter"
                            ]
                          },
                          "headerName": {
                            "description": "The name of the request header.",
                            "type": "string"
                          },
                          "headerValues": {
                            "description": "The value of the request header.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "runOrder": {
                      "description": "An integer representing the order in which the test case will be run as part of its parent test definition.",
                      "type": "integer"
                    },
                    "status": {
                      "description": "This field denotes whether the test case is active or has been removed. Can be `inactive` or `active`.",
                      "type": "string",
                      "enum": [
                        "inactive",
                        "active"
                      ]
                    },
                    "testCaseDescription": {
                      "description": "Description about the test case. 4000-character limit.",
                      "maxLength": 4000,
                      "type": "string"
                    },
                    "testCaseId": {
                      "description": "A unique Identifier for test case resource.",
                      "type": "integer"
                    },
                    "testCaseName": {
                      "description": "A short title for the test case. 100-character limit.",
                      "maxLength": 100,
                      "type": "string"
                    },
                    "testDefinitionId": {
                      "description": "A unique Identifier for test definition resource.",
                      "type": "integer"
                    },
                    "url": {
                      "description": "URL of the page to be tested.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestCaseResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for test case.",
          "example": "{{testCaseId}}",
          "in": "path",
          "name": "testCaseId",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testCaseId-path.yaml"
          }
        },
        {
          "description": "Unique identifier for test definition.",
          "example": "{{testDefinitionId}}",
          "in": "path",
          "name": "testDefinitionId",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testDefinitionId-path.yaml"
          }
        }
      ]
    },
    "/test-definitions/{testDefinitionId}/test-cases/{testCaseId}/clone": {
      "post": {
        "description": "The `testCaseId` that you enter in the URL parameter is that of the test case you want to clone. The other information specifies the configuration for the cloned test case.",
        "operationId": "post-test-definition-test-case-clone",
        "summary": "Clone a test case",
        "tags": [
          "Test cases"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-definition-test-case-clone"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "testCaseDescription": "Copy of Base Page Test",
                "testCaseId": 1855,
                "testCaseName": "Copy of Base Page",
                "testDefinitionId": 738,
                "url": "https://www.example-weather.com/",
                "requestHeaders": [],
                "comparisonSettings": {
                  "cacheKey": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true
                  },
                  "cachingOption": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true
                  },
                  "cpcode": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true
                  },
                  "metadataVariables": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true,
                    "compareAllExcept": [
                      "RUM_IS_IPV6",
                      "RUA_OUT_IS_APPLIED",
                      "RUM_XHR_TEST",
                      "RUM_CLIENT_TO_MAPPING_PCT",
                      "RANDOM_SAMPLE"
                    ],
                    "compareOnly": []
                  },
                  "originServer": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true
                  },
                  "responseCode": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true
                  },
                  "responseHeaders": {
                    "includeEmbeddedObjects": true,
                    "isEnabled": true,
                    "compareAllExcept": [
                      "Age",
                      "Date",
                      "Expires",
                      "Server",
                      "Via",
                      "Set-Cookie",
                      "Cache-Control"
                    ],
                    "compareOnly": []
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "An object containing data for cloning a new test case.",
                "type": "object",
                "properties": {
                  "comparisonSettings": {
                    "additionalProperties": false,
                    "description": "Comparison settings are attributes which are used for comparison between different environments. By default all comparison settings are included for the test case.",
                    "type": "object",
                    "required": [
                      "responseCode",
                      "responseHeaders",
                      "cpcode",
                      "cachingOption",
                      "cacheKey",
                      "metadataVariables",
                      "originServer"
                    ],
                    "properties": {
                      "cacheKey": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "cachingOption": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "cpcode": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "metadataVariables": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects",
                          "compareOnly",
                          "compareAllExcept"
                        ],
                        "properties": {
                          "compareAllExcept": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "compareOnly": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "originServer": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "responseCode": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects"
                        ],
                        "properties": {
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      },
                      "responseHeaders": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "isEnabled",
                          "includeEmbeddedObjects",
                          "compareOnly",
                          "compareAllExcept"
                        ],
                        "properties": {
                          "compareAllExcept": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "compareOnly": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "includeEmbeddedObjects": {
                            "default": true,
                            "type": "boolean"
                          },
                          "isEnabled": {
                            "default": true,
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  "requestHeaders": {
                    "description": "Add specific request headers to the list of requests that the test case will make. Modify of filter existing request headers in the list of requests that the test case will make.",
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "headerName",
                        "headerValues",
                        "headerAction"
                      ],
                      "properties": {
                        "headerAction": {
                          "type": "string",
                          "enum": [
                            "add",
                            "modify",
                            "filter"
                          ]
                        },
                        "headerName": {
                          "description": "The name of the request header.",
                          "type": "string"
                        },
                        "headerValues": {
                          "description": "The value of the request header.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "testCaseDescription": {
                    "description": "The description you supply for the test case. Max length is 4000 characters.",
                    "example": "{{testCaseDescription}}",
                    "maxLength": 4000,
                    "type": "string"
                  },
                  "testCaseId": {
                    "description": "A unique identifier for the test case.",
                    "example": "{{testCaseId}}",
                    "type": "string"
                  },
                  "testCaseName": {
                    "description": "The name you supply for the test case. Max length is 100 characters.",
                    "example": "{{testCaseName}}",
                    "maxLength": 100,
                    "type": "string"
                  },
                  "testDefinitionId": {
                    "description": "A unique identifier for the test definition.",
                    "example": "{{testDefinitionId}}",
                    "type": "string"
                  },
                  "url": {
                    "description": "The URL of the specific web page you want to test.",
                    "example": "{{url}}",
                    "format": "uri",
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/cloneTestCaseRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "jkowalski",
                  "createdDate": "2018-04-10T06:35:29+0000",
                  "testCaseDescription": "Copy of Base Page Test",
                  "testCaseId": 4621,
                  "testCaseName": "Copy of Base Page",
                  "testDefinitionId": 738,
                  "url": "https://www.example-weather.com/",
                  "requestHeaders": [],
                  "comparisonSettings": {
                    "cacheKey": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "cachingOption": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "cpcode": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "metadataVariables": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true,
                      "compareAllExcept": [
                        "RUM_IS_IPV6",
                        "RUA_OUT_IS_APPLIED",
                        "RUM_XHR_TEST",
                        "RUM_CLIENT_TO_MAPPING_PCT",
                        "RANDOM_SAMPLE"
                      ],
                      "compareOnly": []
                    },
                    "originServer": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "responseCode": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true
                    },
                    "responseHeaders": {
                      "includeEmbeddedObjects": true,
                      "isEnabled": true,
                      "compareAllExcept": [
                        "Age",
                        "Date",
                        "Expires",
                        "Server",
                        "Via",
                        "Set-Cookie",
                        "Cache-Control"
                      ],
                      "compareOnly": []
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "An object containing data for a single test case, such as which web pages or objects the test definition compares, which response headers are included, and which comparisons are made. Embedded objects here refers to the entities that get loaded after the initial HTML request that is made.",
                  "type": "object",
                  "required": [
                    "testCaseId",
                    "testDefinitionId",
                    "url",
                    "testCaseName",
                    "runOrder",
                    "requestHeaders",
                    "comparisonSettings",
                    "createdBy",
                    "createdDate"
                  ],
                  "properties": {
                    "comparisonSettings": {
                      "additionalProperties": false,
                      "description": "Attributes which are used for comparison between different environments.",
                      "type": "object",
                      "required": [
                        "responseCode",
                        "responseHeaders",
                        "cpcode",
                        "cachingOption",
                        "cacheKey",
                        "metadataVariables",
                        "originServer"
                      ],
                      "properties": {
                        "cacheKey": {
                          "additionalProperties": false,
                          "description": "The string used by the Akamai Edge Server to identify the requested object in the cache.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects for the cache key are included in the comparison made by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the cache key is compared by the test run. If false, the cache key is not compared by the test run.",
                              "type": "boolean"
                            }
                          }
                        },
                        "cachingOption": {
                          "additionalProperties": false,
                          "description": "The caching option allows you to specify how long you want to cache everything in your configuration.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects for the caching option are included in the comparison made by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the caching option is compared by the test run. If false, the caching option is not compared by the test run.",
                              "type": "boolean"
                            }
                          }
                        },
                        "cpcode": {
                          "additionalProperties": false,
                          "description": "The CP code with which the content from the Akamai Edge Server is being delivered.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects for the CP code are included in the comparison made by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the CP code is compared by the test run. If false, the CP code is not compared by the test run.",
                              "type": "boolean"
                            }
                          }
                        },
                        "metadataVariables": {
                          "additionalProperties": false,
                          "description": "The metadata variables used in the processing of the request.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects",
                            "compareOnly",
                            "compareAllExcept"
                          ],
                          "properties": {
                            "compareAllExcept": {
                              "description": "The list of all metadata variables to be ignored, or not compared, by the test run.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "compareOnly": {
                              "description": "The list of metadata variables to be included, or compared, by the test run.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects for the metadata variables are included in the comparison made by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the metadata variables are compared by the test run. If false they are not.",
                              "type": "boolean"
                            }
                          }
                        },
                        "originServer": {
                          "additionalProperties": false,
                          "description": "The hostname of the origin server.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects for the origin server are compared by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the origin server is compared by the test run. If false it is not.",
                              "type": "boolean"
                            }
                          }
                        },
                        "responseCode": {
                          "additionalProperties": false,
                          "description": "The numerical part of the HTTP Status Code.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects"
                          ],
                          "properties": {
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects for the response code are compared by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the response code is compared by the test run. If false, it is not.",
                              "type": "boolean"
                            }
                          }
                        },
                        "responseHeaders": {
                          "additionalProperties": false,
                          "description": "The response headers of the corresponding HTTP responses.",
                          "type": "object",
                          "required": [
                            "isEnabled",
                            "includeEmbeddedObjects",
                            "compareOnly",
                            "compareAllExcept"
                          ],
                          "properties": {
                            "compareAllExcept": {
                              "description": "The list of all response headers to be ignored, or not compared, by the test run.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "compareOnly": {
                              "description": "The list of response headers to be included, or compared, by the test run.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "includeEmbeddedObjects": {
                              "default": true,
                              "description": "If true, the embedded objects of the response headers are compared by the test run. If false, they are not.",
                              "type": "boolean"
                            },
                            "isEnabled": {
                              "default": true,
                              "description": "If true, the response headers are compared by the test run. If false, they are not.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "createdBy": {
                      "description": "The user who created the test case.",
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 date string for the time when the test definition was created.",
                      "type": "string"
                    },
                    "modifiedBy": {
                      "description": "The user who last modified the test case.",
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 date string for the time when the test definition was last modified.",
                      "type": "string"
                    },
                    "requestHeaders": {
                      "description": "Encapsulates the request headers in the test case.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Encapsulates the request headers in the test case.",
                        "type": "object",
                        "required": [
                          "headerName",
                          "headerValues",
                          "headerAction"
                        ],
                        "properties": {
                          "headerAction": {
                            "description": "Either `add` to the list of request headers, `modify` existing request headers, or `filter` request headers belonging to this test case.",
                            "type": "string",
                            "enum": [
                              "add",
                              "modify",
                              "filter"
                            ]
                          },
                          "headerName": {
                            "description": "The name of the request header.",
                            "type": "string"
                          },
                          "headerValues": {
                            "description": "The value of the request header.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "runOrder": {
                      "description": "An integer representing the order in which the test case will be run as part of its parent test definition.",
                      "type": "integer"
                    },
                    "status": {
                      "description": "This field denotes whether the test case is active or has been removed. Can be `inactive` or `active`.",
                      "type": "string",
                      "enum": [
                        "inactive",
                        "active"
                      ]
                    },
                    "testCaseDescription": {
                      "description": "Description about the test case. 4000-character limit.",
                      "maxLength": 4000,
                      "type": "string"
                    },
                    "testCaseId": {
                      "description": "A unique Identifier for test case resource.",
                      "type": "integer"
                    },
                    "testCaseName": {
                      "description": "A short title for the test case. 100-character limit.",
                      "maxLength": 100,
                      "type": "string"
                    },
                    "testDefinitionId": {
                      "description": "A unique Identifier for test definition resource.",
                      "type": "integer"
                    },
                    "url": {
                      "description": "URL of the page to be tested.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestCaseResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for test case.",
          "example": "{{testCaseId}}",
          "in": "path",
          "name": "testCaseId",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testCaseId-path.yaml"
          }
        },
        {
          "description": "Unique identifier for test definition.",
          "example": "{{testDefinitionId}}",
          "in": "path",
          "name": "testDefinitionId",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testDefinitionId-path.yaml"
          }
        }
      ]
    },
    "/test-definitions/{testDefinitionId}/test-cases/{testCaseId}/remove": {
      "post": {
        "description": "Remove a test case identified by `testCaseId` from its test definition.  When you remove a test case and make a GET request for it, its status is inactive. The removed test case remains in the system for 30 days from the date of the removal. After that, you receive a 404 error if you try to retrieve it.",
        "operationId": "post-test-definition-test-case-remove",
        "summary": "Remove a test case",
        "tags": [
          "Test cases"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-definition-test-case-remove"
        },
        "responses": {
          "204": {
            "description": "Successfully deleted.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for test case.",
          "example": "{{testCaseId}}",
          "in": "path",
          "name": "testCaseId",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testCaseId-path.yaml"
          }
        },
        {
          "description": "Unique identifier for test definition.",
          "example": "{{testDefinitionId}}",
          "in": "path",
          "name": "testDefinitionId",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testDefinitionId-path.yaml"
          }
        }
      ]
    },
    "/test-execution-jobs/{testExecutionJobId}": {
      "get": {
        "description": "Retrieves information about a test execution job identified by `testExecutionJobId`.",
        "operationId": "get-test-execution-job",
        "summary": "Get a test execution job",
        "tags": [
          "Test executions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-execution-job"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "accountId": "A-CCT3456",
                  "geoLocation": "US",
                  "ipVersion": "ipv6",
                  "sourceHostname": "www.example-weather.com",
                  "status": "in_progress",
                  "submittedDate": "2018-08-18T11:37:26+0000",
                  "targetEnvironment": "production",
                  "targetHostname": "www.example-weather-production.com",
                  "testDefinitionExecutionId": 148,
                  "testExecutionJobId": 7432,
                  "browser": {
                    "name": "chrome",
                    "version": "62.0"
                  },
                  "masterExclusionLists": {
                    "metadataVariables": [],
                    "responseHeaders": []
                  },
                  "testCases": [
                    {
                      "runOrder": 1,
                      "testCaseExecutionId": 211,
                      "testCaseId": 1855,
                      "url": "https://www.example-weather.com/",
                      "comparisonSettings": {
                        "cacheKey": {
                          "includeEmbeddedObjects": true,
                          "isEnabled": true
                        },
                        "cachingOption": {
                          "includeEmbeddedObjects": true,
                          "isEnabled": true
                        },
                        "cpcode": {
                          "includeEmbeddedObjects": true,
                          "isEnabled": true
                        },
                        "metadataVariables": {
                          "includeEmbeddedObjects": true,
                          "isEnabled": true,
                          "compareAllExcept": [
                            "RUM_IS_IPV6",
                            "RUA_OUT_IS_APPLIED",
                            "RUM_XHR_TEST",
                            "RUM_CLIENT_TO_MAPPING_PCT",
                            "RANDOM_SAMPLE",
                            "RUM_IMPL_PM_GROUPID",
                            "RUM_IMPL_PM_GROUPNAME",
                            "RUM_IMPL_PM_PRODUCT",
                            "RUM_DEBUG"
                          ],
                          "compareOnly": []
                        },
                        "originServer": {
                          "includeEmbeddedObjects": true,
                          "isEnabled": true
                        },
                        "responseCode": {
                          "includeEmbeddedObjects": true,
                          "isEnabled": true
                        },
                        "responseHeaders": {
                          "includeEmbeddedObjects": true,
                          "isEnabled": true,
                          "compareAllExcept": [
                            "Age",
                            "Date",
                            "Expires",
                            "Server",
                            "Via",
                            "Set-Cookie",
                            "Cache-Control"
                          ],
                          "compareOnly": []
                        }
                      },
                      "requestHeaders": [
                        {
                          "headerAction": "add",
                          "headerName": "Max-Forwards",
                          "headerValues": "10"
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "A job configuration of a test definition execution, at the time of test run. This object will be created by test-management component. It will be consumed by browser-node component when it is about to execute a test case.",
                  "type": "object",
                  "required": [
                    "testExecutionJobId",
                    "accountId",
                    "testDefinitionExecutionId",
                    "sourceHostname",
                    "targetHostname",
                    "targetEnvironment",
                    "browser",
                    "ipVersion",
                    "geoLocation",
                    "status",
                    "submittedDate",
                    "masterExclusionLists",
                    "testCases"
                  ],
                  "properties": {
                    "accountId": {
                      "description": "The account ID of the user.",
                      "type": "string"
                    },
                    "browser": {
                      "additionalProperties": false,
                      "description": "Details about the browser to be used for executing the tests. Included browser name and version.",
                      "type": "object",
                      "required": [
                        "name",
                        "version"
                      ],
                      "properties": {
                        "name": {
                          "description": "Browser name. Must be `chrome`.",
                          "type": "string",
                          "enum": [
                            "chrome"
                          ]
                        },
                        "version": {
                          "description": "Browser version.",
                          "type": "string"
                        }
                      }
                    },
                    "geoLocation": {
                      "description": "Geolocation of where the test is run from. Must be `US`.",
                      "type": "string",
                      "enum": [
                        "US"
                      ]
                    },
                    "ipVersion": {
                      "description": "IP version to be used for executing the test. Can be `ipv4`, `ipv6`, or both.",
                      "type": "string",
                      "enum": [
                        "ipv4",
                        "ipv6"
                      ]
                    },
                    "masterExclusionLists": {
                      "additionalProperties": false,
                      "description": "Master exclusion lists for response headers and metadata variables. The values for these should not be diffed or shown to the user.",
                      "type": "object",
                      "required": [
                        "responseHeaders",
                        "metadataVariables"
                      ],
                      "properties": {
                        "metadataVariables": {
                          "description": "The list of metadata variables for the job execution response.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "responseHeaders": {
                          "description": "The list of response headers for the job execution response.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "sourceHostname": {
                      "description": "The hostname in the source environment.",
                      "type": "string"
                    },
                    "status": {
                      "description": "The status of the test execution job. Can be `in_progress`, `completed`, or `failed`.",
                      "type": "string",
                      "enum": [
                        "in_progress",
                        "completed",
                        "failed"
                      ]
                    },
                    "submittedDate": {
                      "description": "ISO 8601 string of date and time at which the job was created.",
                      "type": "string"
                    },
                    "targetEnvironment": {
                      "description": "The target environment can vary depending on the configuration chosen by the user at runtime. It can be either `production` or `staging`. The source environment is always `production`.",
                      "type": "string",
                      "enum": [
                        "staging",
                        "production"
                      ]
                    },
                    "targetHostname": {
                      "description": "The hostname in the target environment.",
                      "type": "string"
                    },
                    "testCases": {
                      "description": "List of test cases that are part of the execution job.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "testCaseId",
                          "testCaseExecutionId",
                          "url",
                          "runOrder",
                          "requestHeaders",
                          "comparisonSettings"
                        ],
                        "properties": {
                          "comparisonSettings": {
                            "additionalProperties": false,
                            "description": "Comparison settings are attributes which are used for comparison between different environments.",
                            "type": "object",
                            "required": [
                              "responseCode",
                              "responseHeaders",
                              "cpcode",
                              "cachingOption",
                              "cacheKey",
                              "metadataVariables",
                              "originServer"
                            ],
                            "properties": {
                              "cacheKey": {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "isEnabled",
                                  "includeEmbeddedObjects"
                                ],
                                "properties": {
                                  "includeEmbeddedObjects": {
                                    "type": "boolean"
                                  },
                                  "isEnabled": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "cachingOption": {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "isEnabled",
                                  "includeEmbeddedObjects"
                                ],
                                "properties": {
                                  "includeEmbeddedObjects": {
                                    "type": "boolean"
                                  },
                                  "isEnabled": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "cpcode": {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "isEnabled",
                                  "includeEmbeddedObjects"
                                ],
                                "properties": {
                                  "includeEmbeddedObjects": {
                                    "type": "boolean"
                                  },
                                  "isEnabled": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "metadataVariables": {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "isEnabled",
                                  "includeEmbeddedObjects",
                                  "compareOnly",
                                  "compareAllExcept"
                                ],
                                "properties": {
                                  "compareAllExcept": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "compareOnly": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "includeEmbeddedObjects": {
                                    "type": "boolean"
                                  },
                                  "isEnabled": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "originServer": {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "isEnabled",
                                  "includeEmbeddedObjects"
                                ],
                                "properties": {
                                  "includeEmbeddedObjects": {
                                    "type": "boolean"
                                  },
                                  "isEnabled": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "responseCode": {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "isEnabled",
                                  "includeEmbeddedObjects"
                                ],
                                "properties": {
                                  "includeEmbeddedObjects": {
                                    "type": "boolean"
                                  },
                                  "isEnabled": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "responseHeaders": {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "isEnabled",
                                  "includeEmbeddedObjects",
                                  "compareOnly",
                                  "compareAllExcept"
                                ],
                                "properties": {
                                  "compareAllExcept": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "compareOnly": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "includeEmbeddedObjects": {
                                    "type": "boolean"
                                  },
                                  "isEnabled": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          },
                          "requestHeaders": {
                            "description": "List of request headers to be added, modified or filtered.",
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "headerName",
                                "headerAction",
                                "headerValues"
                              ],
                              "properties": {
                                "headerAction": {
                                  "type": "string"
                                },
                                "headerName": {
                                  "type": "string"
                                },
                                "headerValues": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "runOrder": {
                            "description": "An integer value indicating the order in which this test case is run.",
                            "type": "integer"
                          },
                          "testCaseExecutionId": {
                            "description": "The unique identifier for the test case execution.",
                            "type": "integer"
                          },
                          "testCaseId": {
                            "description": "The unique identifier for the test case.",
                            "type": "integer"
                          },
                          "type": {
                            "type": "object"
                          },
                          "url": {
                            "description": "The URL to be tested.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "testDefinitionExecutionId": {
                      "description": "The unique identifier for the test definition execution.",
                      "type": "integer"
                    },
                    "testExecutionJobId": {
                      "description": "The unique identifier for the test execution job.",
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestExecutionJobResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Numeric identifier for the test execution job.",
          "example": "{{testExecutionJobId}}",
          "in": "path",
          "name": "testExecutionJobId",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testExecutionJobId-path.yaml"
          }
        }
      ]
    },
    "/test-runs": {
      "post": {
        "description": "Start a test run containing one or more test definitions and their corresponding test cases.",
        "operationId": "post-test-runs",
        "summary": "Submit a test run",
        "tags": [
          "Test runs"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-test-runs"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "testDefinitionExecutions": [
                  {
                    "note": "A sample note",
                    "targetEnvironment": "production",
                    "targetHostname": "www.example-weather-production.com",
                    "testDefinitionId": 738,
                    "ipVersions": [
                      "ipv6"
                    ],
                    "testCaseIds": [
                      1855
                    ]
                  },
                  {
                    "note": "Another sample note",
                    "targetEnvironment": "staging",
                    "targetHostname": "www.example-weather-config-1-production.com",
                    "testDefinitionId": 740,
                    "ipVersions": [
                      "ipv4",
                      "ipv6"
                    ],
                    "testCaseIds": [
                      1991,
                      1992
                    ]
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "A test run object signifies that a test run has been started. A test run can have multiple executions.",
                "type": "object",
                "required": [
                  "testDefinitionExecutions"
                ],
                "properties": {
                  "testDefinitionExecutions": {
                    "description": "List of test definition execution objects that are part of the test run.",
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "testDefinitionId",
                        "targetHostname",
                        "targetEnvironment",
                        "ipVersions",
                        "testCaseIds"
                      ],
                      "properties": {
                        "ipVersions": {
                          "description": "IP version for which the test has to be run. Can be `ipv4`, `ipv6`, or both.",
                          "maxItems": 2,
                          "minItems": 1,
                          "type": "array",
                          "uniqueItems": true,
                          "items": {
                            "type": "string",
                            "enum": [
                              "ipv4",
                              "ipv6"
                            ]
                          }
                        },
                        "note": {
                          "description": "A user-defined note about the current test definition under the current test run.",
                          "maxLength": 500,
                          "type": "string"
                        },
                        "targetEnvironment": {
                          "description": "The target environment for the test. Can be either `production` or `staging`. The source environment for the test, against which the differences are going to be computed, is always going to be `production`.",
                          "maxLength": 100,
                          "type": "string",
                          "enum": [
                            "production",
                            "staging"
                          ]
                        },
                        "targetHostname": {
                          "description": "Hostname for the target environment against which the test definition would be run.",
                          "format": "hostname",
                          "maxLength": 100,
                          "type": "string"
                        },
                        "testCaseIds": {
                          "description": "List of test case IDs that need to be executed in the run. This is a subset of the test cases that belong to the test definition.",
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "testDefinitionId": {
                          "description": "Identifier of the test definition.",
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/createTestRunRequest.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successfully submitted.",
            "content": {
              "application/json": {
                "example": {
                  "status": "failed",
                  "submittedBy": "afero",
                  "submittedDate": "2018-08-18T11:37:26+0000",
                  "testRunId": 133,
                  "testDefinitionExecutions": [
                    {
                      "completedDate": "2018-08-18T12:37:26+0000",
                      "note": "A sample note",
                      "status": "completed",
                      "submittedBy": "jperez",
                      "submittedDate": "2018-08-18T11:37:26+0000",
                      "targetEnvironment": "production",
                      "targetHostname": "www.example-weather-production.com",
                      "testDefinitionExecutionId": 148,
                      "testDefinitionId": 738,
                      "testRunId": 133,
                      "ipVersions": [
                        "ipv6"
                      ],
                      "testCaseIds": [
                        1855
                      ],
                      "diffCount": {
                        "outstanding": 2,
                        "total": 2
                      }
                    },
                    {
                      "completedDate": "2018-08-18T12:37:26+0000",
                      "note": "Another sample note",
                      "status": "failed",
                      "submittedBy": "jkowalski",
                      "submittedDate": "2018-08-18T11:37:26+0000",
                      "targetEnvironment": "staging",
                      "targetHostname": "www.example-weather-config-1-production.com",
                      "testDefinitionExecutionId": 149,
                      "testDefinitionId": 740,
                      "testRunId": 133,
                      "ipVersions": [
                        "ipv4",
                        "ipv6"
                      ],
                      "testCaseIds": [
                        1991,
                        1992
                      ],
                      "errors": [
                        {
                          "ipVersion": "ipv6",
                          "title": "IP version not supported",
                          "type": "ip.version.not.supported"
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "An object representing a test run.",
                  "type": "object",
                  "required": [
                    "testRunId",
                    "status",
                    "submittedBy",
                    "submittedDate",
                    "testDefinitionExecutions"
                  ],
                  "properties": {
                    "status": {
                      "description": "Current status of the test definition execution.",
                      "type": "string",
                      "enum": [
                        "in_progress",
                        "completed",
                        "failed"
                      ]
                    },
                    "submittedBy": {
                      "description": "Unique identifier of the user who submitted the test run.",
                      "type": "string"
                    },
                    "submittedDate": {
                      "description": "ISO 8601 timestamp of the instant when the user submitted the test run.",
                      "type": "string"
                    },
                    "testDefinitionExecutions": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "The test definition execution is a component of a test run. A test run can have multiple executions, one for each test definition included in the test run. A test definition execution contains the subset of test cases, IP versions, target hostname, and target environment of the test definition it belongs to.",
                        "type": "object",
                        "required": [
                          "testDefinitionExecutionId",
                          "testDefinitionId",
                          "testRunId",
                          "targetHostname",
                          "targetEnvironment",
                          "supportedComparisonSettings",
                          "submittedBy",
                          "submittedDate",
                          "status",
                          "ipVersions",
                          "errors",
                          "testCaseIds"
                        ],
                        "properties": {
                          "completedDate": {
                            "description": "ISO 8601 date string for the time at which the test definition execution was completed.",
                            "type": "string"
                          },
                          "diffCount": {
                            "additionalProperties": false,
                            "description": "When the status of the test definition execution is `completed`, this object will appear in the payload. It gives the total and outstanding number of differences.",
                            "type": "object",
                            "required": [
                              "total",
                              "outstanding"
                            ],
                            "properties": {
                              "outstanding": {
                                "description": "This number represents the number of unaccepted diffs.",
                                "type": "integer"
                              },
                              "total": {
                                "description": "This number represents the total number of diffs that was generated.",
                                "type": "integer"
                              }
                            }
                          },
                          "errors": {
                            "description": "When the status of the test definition execution is `failed`, this object will appear in the payload. It contains a list of HTTP Problem Detail-like error objects.",
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "The HTTP problem detail object that signifies the type of error that has occurred.",
                              "type": "object",
                              "required": [
                                "type",
                                "title",
                                "ipVersion"
                              ],
                              "properties": {
                                "ipVersion": {
                                  "description": "The IP version for which the test definition execution has failed.",
                                  "type": "string"
                                },
                                "testCaseId": {
                                  "description": "Unique identifier of the test case for which the test definition execution has failed. If the testCaseId field is not present, it means that all the test cases failed for the corresponding IP version.",
                                  "type": "integer"
                                },
                                "title": {
                                  "description": "A brief explanation of what the error means.",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "A dot-notation string to explain what kind of an error occurred.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "ipVersions": {
                            "description": "IP version for which the test has to be run.",
                            "maxItems": 2,
                            "minItems": 1,
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                              "description": "The IP version options are `ipv4` and `ipv6`.",
                              "type": "string",
                              "enum": [
                                "ipv4",
                                "ipv6"
                              ]
                            }
                          },
                          "note": {
                            "description": "A note about the test definition execution.",
                            "maxLength": 500,
                            "type": "string"
                          },
                          "status": {
                            "description": "Status of the test definition execution. `in_progress` is currently running, `completed` has finished running, `failed` has stopped running due to an error. `archived` means that there were more than 5 runs for that test definition, since this test definition execution was created.",
                            "type": "string",
                            "enum": [
                              "in_progress",
                              "completed",
                              "failed",
                              "archived"
                            ]
                          },
                          "submittedBy": {
                            "description": "The username of the user who initiated the test definition execution.",
                            "type": "string"
                          },
                          "submittedDate": {
                            "description": "The ISO 8601 date string for the time at which the test definition execution was initiated.",
                            "type": "string"
                          },
                          "supportedComparisonSettings": {
                            "description": "List of comparison settings that were supported by the websites tested while running the test.",
                            "type": "array",
                            "items": {
                              "description": "Attributes which are used for comparison between different environments.",
                              "type": "string",
                              "enum": [
                                "responseCode",
                                "responseHeaders",
                                "cpcode",
                                "cachingOption",
                                "cacheKey",
                                "metadataVariables",
                                "originServer"
                              ]
                            }
                          },
                          "targetEnvironment": {
                            "description": "The target environment for the test. Can be either `production` or `staging`.",
                            "maxLength": 100,
                            "type": "string",
                            "enum": [
                              "production",
                              "staging"
                            ]
                          },
                          "targetHostname": {
                            "description": "Hostname for the target environment.",
                            "format": "hostname",
                            "maxLength": 100,
                            "type": "string"
                          },
                          "testCaseIds": {
                            "description": "List of test case IDs that are executed as in the test definition execution. These test cases are a subset of the corresponding test definition's test cases.",
                            "type": "array",
                            "items": {
                              "description": "Identifier of the test case.",
                              "type": "integer"
                            }
                          },
                          "testDefinitionExecutionId": {
                            "description": "Identifier of the test definition execution.",
                            "type": "integer"
                          },
                          "testDefinitionId": {
                            "description": "Identifier of the test definition.",
                            "type": "integer"
                          },
                          "testRunId": {
                            "description": "Identifier of the test run.",
                            "type": "integer"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/get-test-definition-execution-response.yaml"
                        }
                      }
                    },
                    "testRunId": {
                      "description": "Unique identifier for the test run.",
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestRunResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/test-runs/{testRunId}": {
      "get": {
        "description": "Get the Test Run identified by `testRunId`.",
        "operationId": "get-test-run",
        "summary": "Get test run",
        "tags": [
          "Test runs"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-test-run"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "status": "failed",
                  "submittedBy": "jdupont",
                  "submittedDate": "2018-08-18T11:37:26+0000",
                  "testRunId": 133,
                  "testDefinitionExecutions": [
                    {
                      "completedDate": "2018-08-18T12:37:26+0000",
                      "note": "A sample note",
                      "status": "completed",
                      "submittedBy": "jdupont",
                      "submittedDate": "2018-08-18T11:37:26+0000",
                      "targetEnvironment": "production",
                      "targetHostname": "www.example-weather-production.com",
                      "testDefinitionExecutionId": 148,
                      "testDefinitionId": 738,
                      "testRunId": 133,
                      "ipVersions": [
                        "ipv6"
                      ],
                      "testCaseIds": [
                        1855
                      ],
                      "diffCount": {
                        "outstanding": 2,
                        "total": 2
                      }
                    },
                    {
                      "completedDate": "2018-08-18T12:37:26+0000",
                      "note": "Another sample note",
                      "status": "failed",
                      "submittedBy": "jkowalski",
                      "submittedDate": "2018-08-18T11:37:26+0000",
                      "targetEnvironment": "staging",
                      "targetHostname": "www.example-weather-config-1-production.com",
                      "testDefinitionExecutionId": 149,
                      "testDefinitionId": 740,
                      "testRunId": 133,
                      "ipVersions": [
                        "ipv4",
                        "ipv6"
                      ],
                      "testCaseIds": [
                        1991,
                        1992
                      ],
                      "errors": [
                        {
                          "ipVersion": "ipv6",
                          "title": "IP version not supported",
                          "type": "ip.version.not.supported"
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "An object representing a test run.",
                  "type": "object",
                  "required": [
                    "testRunId",
                    "status",
                    "submittedBy",
                    "submittedDate",
                    "testDefinitionExecutions"
                  ],
                  "properties": {
                    "status": {
                      "description": "Current status of the test definition execution.",
                      "type": "string",
                      "enum": [
                        "in_progress",
                        "completed",
                        "failed"
                      ]
                    },
                    "submittedBy": {
                      "description": "Unique identifier of the user who submitted the test run.",
                      "type": "string"
                    },
                    "submittedDate": {
                      "description": "ISO 8601 timestamp of the instant when the user submitted the test run.",
                      "type": "string"
                    },
                    "testDefinitionExecutions": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "The test definition execution is a component of a test run. A test run can have multiple executions, one for each test definition included in the test run. A test definition execution contains the subset of test cases, IP versions, target hostname, and target environment of the test definition it belongs to.",
                        "type": "object",
                        "required": [
                          "testDefinitionExecutionId",
                          "testDefinitionId",
                          "testRunId",
                          "targetHostname",
                          "targetEnvironment",
                          "supportedComparisonSettings",
                          "submittedBy",
                          "submittedDate",
                          "status",
                          "ipVersions",
                          "errors",
                          "testCaseIds"
                        ],
                        "properties": {
                          "completedDate": {
                            "description": "ISO 8601 date string for the time at which the test definition execution was completed.",
                            "type": "string"
                          },
                          "diffCount": {
                            "additionalProperties": false,
                            "description": "When the status of the test definition execution is `completed`, this object will appear in the payload. It gives the total and outstanding number of differences.",
                            "type": "object",
                            "required": [
                              "total",
                              "outstanding"
                            ],
                            "properties": {
                              "outstanding": {
                                "description": "This number represents the number of unaccepted diffs.",
                                "type": "integer"
                              },
                              "total": {
                                "description": "This number represents the total number of diffs that was generated.",
                                "type": "integer"
                              }
                            }
                          },
                          "errors": {
                            "description": "When the status of the test definition execution is `failed`, this object will appear in the payload. It contains a list of HTTP Problem Detail-like error objects.",
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "The HTTP problem detail object that signifies the type of error that has occurred.",
                              "type": "object",
                              "required": [
                                "type",
                                "title",
                                "ipVersion"
                              ],
                              "properties": {
                                "ipVersion": {
                                  "description": "The IP version for which the test definition execution has failed.",
                                  "type": "string"
                                },
                                "testCaseId": {
                                  "description": "Unique identifier of the test case for which the test definition execution has failed. If the testCaseId field is not present, it means that all the test cases failed for the corresponding IP version.",
                                  "type": "integer"
                                },
                                "title": {
                                  "description": "A brief explanation of what the error means.",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "A dot-notation string to explain what kind of an error occurred.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "ipVersions": {
                            "description": "IP version for which the test has to be run.",
                            "maxItems": 2,
                            "minItems": 1,
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                              "description": "The IP version options are `ipv4` and `ipv6`.",
                              "type": "string",
                              "enum": [
                                "ipv4",
                                "ipv6"
                              ]
                            }
                          },
                          "note": {
                            "description": "A note about the test definition execution.",
                            "maxLength": 500,
                            "type": "string"
                          },
                          "status": {
                            "description": "Status of the test definition execution. `in_progress` is currently running, `completed` has finished running, `failed` has stopped running due to an error. `archived` means that there were more than 5 runs for that test definition, since this test definition execution was created.",
                            "type": "string",
                            "enum": [
                              "in_progress",
                              "completed",
                              "failed",
                              "archived"
                            ]
                          },
                          "submittedBy": {
                            "description": "The username of the user who initiated the test definition execution.",
                            "type": "string"
                          },
                          "submittedDate": {
                            "description": "The ISO 8601 date string for the time at which the test definition execution was initiated.",
                            "type": "string"
                          },
                          "supportedComparisonSettings": {
                            "description": "List of comparison settings that were supported by the websites tested while running the test.",
                            "type": "array",
                            "items": {
                              "description": "Attributes which are used for comparison between different environments.",
                              "type": "string",
                              "enum": [
                                "responseCode",
                                "responseHeaders",
                                "cpcode",
                                "cachingOption",
                                "cacheKey",
                                "metadataVariables",
                                "originServer"
                              ]
                            }
                          },
                          "targetEnvironment": {
                            "description": "The target environment for the test. Can be either `production` or `staging`.",
                            "maxLength": 100,
                            "type": "string",
                            "enum": [
                              "production",
                              "staging"
                            ]
                          },
                          "targetHostname": {
                            "description": "Hostname for the target environment.",
                            "format": "hostname",
                            "maxLength": 100,
                            "type": "string"
                          },
                          "testCaseIds": {
                            "description": "List of test case IDs that are executed as in the test definition execution. These test cases are a subset of the corresponding test definition's test cases.",
                            "type": "array",
                            "items": {
                              "description": "Identifier of the test case.",
                              "type": "integer"
                            }
                          },
                          "testDefinitionExecutionId": {
                            "description": "Identifier of the test definition execution.",
                            "type": "integer"
                          },
                          "testDefinitionId": {
                            "description": "Identifier of the test definition.",
                            "type": "integer"
                          },
                          "testRunId": {
                            "description": "Identifier of the test run.",
                            "type": "integer"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/get-test-definition-execution-response.yaml"
                        }
                      }
                    },
                    "testRunId": {
                      "description": "Unique identifier for the test run.",
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getTestRunResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Numeric identifier for a test run.",
          "example": "{{testRunId}}",
          "in": "path",
          "name": "testRunId",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/testRunId-path.yaml"
          }
        }
      ]
    },
    "/update-incomplete-jobs": {
      "post": {
        "description": "Update incomplete jobs' status.",
        "operationId": "post-update-incomplete-jobs",
        "summary": "Update incomplete jobs",
        "tags": [
          "Test runs"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-update-incomplete-jobs"
        },
        "responses": {
          "202": {
            "description": "Successfully submitted.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/update-run-status": {
      "post": {
        "description": "Update status of test runs in progress. This returns a list of IDs of jobs that were updated.",
        "operationId": "post-update-run-status",
        "summary": "Update test run status",
        "tags": [
          "Test runs"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/post-update-run-status"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": [
                  744,
                  533,
                  3335,
                  7436
                ],
                "schema": {
                  "description": "A list of IDs of jobs that were updated.",
                  "type": "array",
                  "items": {
                    "description": "Identifier for the job that was updated.",
                    "type": "integer"
                  },
                  "x-akamai": {
                    "file-path": "schemas/postUpdatedJobsResponse.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/user-config": {
      "get": {
        "description": "Get the list of resources and permissions for the logged in account.",
        "operationId": "get-user-config",
        "summary": "List user configurations",
        "tags": [
          "Users"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Test Center API",
          "url": "https://techdocs.akamai.com/test-ctr/reference/get-user-config"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "List of resources and corresponding permissions for the logged in user.",
                    "type": "object",
                    "required": [
                      "resource",
                      "permissions"
                    ],
                    "properties": {
                      "permissions": {
                        "description": "Permissions granted for the corresponding resource.",
                        "type": "array",
                        "uniqueItems": true,
                        "items": {
                          "description": "Permissions granted for the corresponding resource.",
                          "type": "string",
                          "enum": [
                            "READ",
                            "CREATE",
                            "UPDATE",
                            "DELETE",
                            "RUN"
                          ]
                        }
                      },
                      "resource": {
                        "description": "Configurable resources include `TEST_DEFINITION`, `TEST_RUN`, and `TEST_RESULT`.",
                        "type": "string",
                        "enum": [
                          "TEST_DEFINITION",
                          "TEST_RUN",
                          "TEST_RESULT"
                        ]
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/getUserConfigResponse.yaml"
                  }
                },
                "example": [
                  {
                    "resource": "TEST_DEFINITION",
                    "permissions": [
                      "READ",
                      "CREATE",
                      "UPDATE",
                      "DELETE"
                    ]
                  },
                  {
                    "resource": "TEST_RUN",
                    "permissions": [
                      "READ",
                      "RUN"
                    ]
                  },
                  {
                    "resource": "TEST_RESULT",
                    "permissions": [
                      "READ",
                      "UPDATE"
                    ]
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "x-readme": {
    "samples-languages": [
      "curl",
      "python",
      "node"
    ]
  },
  "servers": [
    {
      "url": "https://{hostname}/test-management/v1"
    }
  ]
}