type: object
description: |-
  A common outer wrapping object structure. It provides additional contextual details for a set of requested data. The data itself is available under various inner members' `items` array.
  
x-akamai:
  file-path: schemas/property-version-rules-get-response.yaml
additionalProperties: false
properties:
  accountId:
    type: string
    description: |
      Identifies the prevailing account under which you requested the data. See [ID prefixes](ref:id-prefixes) for details on how to omit the ID's `act_` prefix.
  contractId:
    type: string
    description: |
      Identifies the prevailing contract under which you requested the data. See [ID prefixes](ref:id-prefixes) for details on how to omit the ID's `ctr_` prefix.
  etag:
    type: string
    description: |
      A digest with which to check the [data's integrity](ref:concurrency-control).
  groupId:
    type: string
    description: |
      Identifies the prevailing group under which you requested the data. See [ID prefixes](ref:id-prefixes) for details on how to omit the ID's `grp_` prefix.
  propertyId:
    type: string
    description: |
      Identifies the property a rule tree represents. See [ID prefixes](ref:id-prefixes) for details on how to omit the ID's `prp_` prefix. Don't use this value if you want to exchange data with the Identity and Access Manager API. See [Manage properties and includes](https://techdocs.akamai.com/iam-api/reference/manage-access-to-properties-and-includes).
  propertyVersion:
    type: integer
    description: |
      The version of the property that a rule tree represents.
    minimum: 1
  ruleFormat:
    type: string
    description: |
      Indicates the versioned set of features and criteria that are currently applied to a rule tree. See [API versioning](ref:api-versioning) for more information.
  rules:
    type: object
    description: |
      Specifies the executable logic to apply to cached edge content. The outer envelope's `rules` object specifies the relevant top-level `default` rule object. See the [Rule Trees](ref:rule-trees) section for guidance on how to structure the data.
    additionalProperties: false
    required:
    - behaviors
    - name
    properties:
      name:
        type: string
        description: |
          A description of the rule. The top-level rule needs to be named `default`.
      options:
        type: object
        description: |
          Flags that apply to the top-level rule object.
        additionalProperties: false
        properties:
          is_secure:
            type: boolean
            description: |
              When enabled, serves the property's content over SSL. Doing so may enable additional rule behaviors.
      advancedOverride:
        type: string
        description: |
          A block of post-processing XML metadata that your Akamai representative can apply on your behalf. You need to configure this separately for each property. Use the more recent `customOverride` member to apply the same XML metadata to more than one property.
      behaviors:
        type: array
        description: |
          A series of [behavior](ref:ga-behaviors) objects, which execute after the set of `criteria` evaluates. Behavior and criteria objects are structured identically. Optional on nested rules.
        items:
          type: object
          additionalProperties: false
          required:
          - name
          - options
          properties:
            name:
              type: string
              description: |
                The name of the behavior.
            options:
              type: object
              description: |
                A variable set of options that configure each behavior. See the [behavior](ref:ga-behaviors) and [criteria](ref:ga-criteria) reference for details on each.
            locked:
              type: string
              description: |
                Indicates a behavior or criteria that you arrange with your Akamai representative to lock. Typically, you prevent further modifications to protect sensitive data from erroneous changes.
            uuid:
              type: string
              description: |
                A data hash that indicates an _advanced_ behavior. When present, you may not modify the contents of the behavior, and need to provide the same `uuid` value when modifying the rule tree. See [Advanced and locked features](ref:advanced-and-locked-features).
      children:
        type: array
        description: |
          A series of nested rules that execute after the current rule's `criteria` and `behaviors`.
        minItems: 0
        items:
          type: object
      comment:
        type: string
        description: |
          A descriptive comment to help you track the rule's function.
      criteria:
        type: array
        description: |
          A series of [criteria](ref:ga-criteria) objects, which form a set of logical tests that may prevent the rule's `behaviors` from executing. Behavior and criteria objects are structured identically.
        items:
          type: object
      criteriaLocked:
        type: boolean
        description: |
          Within child rules, this prohibits any modifications to `criteria` objects. Contact your Akamai representative to change the value.
      customOverride:
        type: object
        description: |
          Specifies post-processing XML metadata that your Akamai representative can create on your behalf. Once available with the [List custom overrides](ref:get-custom-overrides) operation, you can assign an `overrideId` to more than one property's `default` rule. See [Custom behaviors and overrides](ref:custom-behaviors-and-overrides) for guidance.
        additionalProperties: false
        required:
        - name
        - overrideId
        properties:
          name:
            type: string
            description: |
              The name of the custom override. It may vary from what appears in the [List custom overrides](ref:get-custom-overrides) operation's response object.
          overrideId:
            type: string
            description: |
              Identifies the predefined custom override metadata you want to append to the current rule. See [ID prefixes](ref:id-prefixes) for details on how to omit the ID's `cbo_` prefix.
      uuid:
        type: string
        description: |
          A data hash that indicates the rule contains at least one _advanced_ behavior or criteria, each identified with its own `uuid` member. When this member is present on the rule, you may not remove any advanced features it contains, or change their sequence. You need to provide the same `uuid` value when modifying the rule tree. See [Advanced and locked features](ref:advanced-and-locked-features).
      variables:
        type: array
        description: |
          Declares a variable. See [Variables](ref:variables) for guidance on how variables may appear within a rule tree.
        minItems: 0
        items:
          type: object
          additionalProperties: false
          required:
          - hidden
          - name
          - sensitive
          properties:
            name:
              type: string
              description: |
                The underlying root name of the variable, which needs to be unique within the set of `variables`.
            description:
              type: string
              description: |
                Text for you to keep track of how you use each variable.
            value:
              type: string
              description: |
                Initializes a default value. Omitting this member initializes the variable with an empty string.
            hidden:
              type: boolean
              description: |
                When enabled, the variable is suppressed from session response headers. Useful when testing content as described in the [Debug variables](ref:debug-variables) section.
            sensitive:
              type: boolean
              description: |
                When enabled, the variable is suppressed from session responses as `hidden` ones, but it also can't be invoked within any behaviors that assign values to cookies or response headers. You also can't assign a `sensitive` variable to another one that isn't `sensitive`, and you can't add it to custom logging fields. Use this more stringent option for any personally identifiable information, typically after initially testing on the staging network.
