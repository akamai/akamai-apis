{
  "openapi": "3.0.0",
  "externalDocs": {
    "description": "See documentation for Akamai's Cloudlets API",
    "url": "https://techdocs.akamai.com/cloudlets/reference"
  },
  "info": {
    "title": "Akamai: Cloudlets API",
    "version": "v3",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "paths": {
    "/cloudlet-info": {
      "get": {
        "description": "Returns details for Cloudlets that you can [create a shared policy](https://techdocs.akamai.com/cloudlets/reference/post-policy) for, including a Cloudlet name and Cloudlet type.",
        "operationId": "get-cloudlets",
        "summary": "List Cloudlets",
        "tags": [
          "Cloudlets"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-cloudlets"
        },
        "responses": {
          "200": {
            "description": "Returns details of a Cloudlet that you can [create a shared policy](https://techdocs.akamai.com/cloudlets/reference/post-policy) for, including a Cloudlet name and Cloudlet type.",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "cloudletName",
                    "cloudletType"
                  ],
                  "properties": {
                    "cloudletName": {
                      "description": "The Cloudlet name that the shared policy is for.",
                      "type": "string",
                      "enum": [
                        "API_PRIORITIZATION",
                        "AUDIENCE_SEGMENTATION",
                        "EDGE_REDIRECTOR",
                        "FORWARD_REWRITE",
                        "PHASED_RELEASE",
                        "REQUEST_CONTROL",
                        "VIRTUAL_WAITING_ROOM"
                      ]
                    },
                    "cloudletType": {
                      "description": "The two- or three- letter code of the Cloudlet that the shared policy is for. Shared policies are available for API Prioritization (`AP`), Edge Redirector (`ER`), Forward Rewrite (`FR`), Audience Segmentation (`AS`), Request Control (`IG`), Phased Release (`CD`) and Virtual Waiting Room (`VWR`).",
                      "type": "string",
                      "enum": [
                        "AP",
                        "AS",
                        "ER",
                        "FR",
                        "CD",
                        "IG",
                        "VWR"
                      ]
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-cloudlet-info-response.yaml"
                  }
                },
                "example": [
                  {
                    "cloudletName": "API_PRIORITIZATION",
                    "cloudletType": "AP"
                  },
                  {
                    "cloudletName": "AUDIENCE_SEGMENTATION",
                    "cloudletType": "AS"
                  },
                  {
                    "cloudletName": "EDGE_REDIRECTOR",
                    "cloudletType": "ER"
                  },
                  {
                    "cloudletName": "FORWARD_REWRITE",
                    "cloudletType": "FR"
                  },
                  {
                    "cloudletName": "PHASED_RELEASE",
                    "cloudletType": "CD"
                  },
                  {
                    "cloudletName": "REQUEST_CONTROL",
                    "cloudletType": "IG"
                  },
                  {
                    "cloudletName": "VIRTUAL_WAITING_ROOM",
                    "cloudletType": "VWR"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/policies": {
      "post": {
        "description": "Creates a shared policy for a specific Cloudlet type. Currently, you can create a shared policy for the API Prioritization, Edge Redirector, Forward Rewrite, Request Control, Phased Release, Virtual Waiting Room, and Audience Segmentation Cloudlets. You can then add match rules by [creating a policy version](https://techdocs.akamai.com/cloudlets/reference/post-policy-version). If a policy already exists with the same policy name, you receive a 409 status response that contains data for the existing policy.",
        "operationId": "post-policy",
        "summary": "Create a policy",
        "tags": [
          "Policies"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/post-policy"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "cloudletType": "ER",
                "description": "ER policy for static assets",
                "groupId": 5,
                "name": "static_assets_redirector"
              },
              "schema": {
                "additionalProperties": false,
                "type": "object",
                "required": [
                  "cloudletType",
                  "groupId",
                  "name"
                ],
                "properties": {
                  "cloudletType": {
                    "description": "The two- or three- letter code of the Cloudlet that the shared policy is for. Shared policies are available for API Prioritization (`AP`), Edge Redirector (`ER`), Forward Rewrite (`FR`), Audience Segmentation (`AS`), Request Control (`IG`), Phased Release (`CD`) and Virtual Waiting Room (`VWR`).",
                    "example": "{{cloudletType}}",
                    "type": "string",
                    "enum": [
                      "AP",
                      "CD",
                      "ER",
                      "FR",
                      "IG",
                      "AS",
                      "VWR"
                    ]
                  },
                  "description": {
                    "description": "A human-readable label for the policy.",
                    "example": "{{description}}",
                    "type": "string"
                  },
                  "groupId": {
                    "description": "Identifies the group where you want to create the policy. See [About group IDs](https://techdocs.akamai.com/cloudlets/reference/about-group-ids).",
                    "example": "{{groupId}}",
                    "type": "integer"
                  },
                  "name": {
                    "description": "The name of the policy. You use this value to refer to this policy in Property Manager.",
                    "example": "{{name}}",
                    "type": "string"
                  },
                  "policyType": {
                    "description": "The type of policy that you want to create. This API lets you create only `SHARED` policies.",
                    "example": "{{policyType}}",
                    "type": "string",
                    "enum": [
                      "SHARED"
                    ]
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/post-policies-request.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contains information about a shared policy.",
            "content": {
              "application/json": {
                "example": {
                  "cloudletType": "ER",
                  "createdBy": "jsmith",
                  "createdDate": "2020-10-01T12:35:22.500Z",
                  "description": "ER policy for static assets",
                  "groupId": 5,
                  "id": 1001,
                  "modifiedBy": "alfulani",
                  "modifiedDate": "2020-10-01T12:35:22.500Z",
                  "name": "static_assets_redirector",
                  "policyType": "SHARED",
                  "currentActivations": {
                    "production": {
                      "effective": null,
                      "latest": null
                    },
                    "staging": {
                      "effective": null,
                      "latest": null
                    }
                  },
                  "links": [
                    {
                      "href": "/cloudlets/v3/policies/1001",
                      "rel": "self"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about a shared policy.",
                  "type": "object",
                  "required": [
                    "cloudletType",
                    "createdBy",
                    "createdDate",
                    "currentActivations",
                    "groupId",
                    "id",
                    "modifiedBy",
                    "modifiedDate",
                    "name",
                    "policyType"
                  ],
                  "properties": {
                    "cloudletType": {
                      "description": "The two- or three- letter code of the Cloudlet that the shared policy is for. Shared policies are available for API Prioritization (`AP`), Edge Redirector (`ER`), Forward Rewrite (`FR`), Audience Segmentation (`AS`), Request Control (`IG`), Phased Release (`CD`) and Virtual Waiting Room (`VWR`).",
                      "type": "string",
                      "enum": [
                        "AP",
                        "ER",
                        "FR",
                        "AS",
                        "IG",
                        "CD",
                        "VWR"
                      ]
                    },
                    "createdBy": {
                      "description": "The username who created the policy.",
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the policy was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "currentActivations": {
                      "additionalProperties": false,
                      "description": "Information about the active policy version that's currently in use and the status of the most recent activation or deactivation operation on the policy's versions for the production and staging networks.",
                      "type": "object",
                      "required": [
                        "production",
                        "staging"
                      ],
                      "properties": {
                        "production": {
                          "additionalProperties": false,
                          "description": "The policy version number that's currently in use on this network and the status of the most recent activation or deactivation operation for this policy's versions.",
                          "type": "object",
                          "required": [
                            "effective",
                            "latest"
                          ],
                          "properties": {
                            "effective": {
                              "additionalProperties": false,
                              "description": "The status of the activation that's currently in use on this network, or `null` if the policy has no activations.",
                              "nullable": true,
                              "type": "object",
                              "required": [
                                "createdBy",
                                "createdDate",
                                "id",
                                "network",
                                "operation",
                                "policyId",
                                "policyVersion",
                                "status"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "The username who created the activation.",
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "failureDetails": {
                                  "description": "A detailed description of the reason why the activation failed.",
                                  "type": "string"
                                },
                                "finishDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in `failureDetails`.",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Identifies the activation.",
                                  "type": "integer"
                                },
                                "links": {
                                  "description": "Hypermedia links to help navigate through the result set.",
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                                    "type": "object",
                                    "required": [
                                      "href",
                                      "rel"
                                    ],
                                    "properties": {
                                      "href": {
                                        "description": "A relative path to the currently requested object or a specific page of the result set.",
                                        "type": "string"
                                      },
                                      "rel": {
                                        "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/links.yaml"
                                  }
                                },
                                "network": {
                                  "description": "The networks where you can activate or deactivate the policy version, either `PRODUCTION` or `STAGING`.",
                                  "type": "string",
                                  "enum": [
                                    "PRODUCTION",
                                    "STAGING"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/network-enum.yaml"
                                  }
                                },
                                "operation": {
                                  "description": "The operations that you can perform on a policy version, either `ACTIVATION` or `DEACTIVATION`.",
                                  "type": "string",
                                  "enum": [
                                    "ACTIVATION",
                                    "DEACTIVATION"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/activation-operation-enum.yaml"
                                  }
                                },
                                "policyId": {
                                  "description": "Identifies the shared policy.",
                                  "type": "integer"
                                },
                                "policyVersion": {
                                  "description": "The number of the policy version.",
                                  "type": "integer"
                                },
                                "policyVersionDeleted": {
                                  "description": "Indicates if the policy version is deleted.",
                                  "type": "boolean"
                                },
                                "status": {
                                  "description": "The status of the operation, either `IN_PROGRESS`, `SUCCESS`, or `FAILED`.",
                                  "type": "string",
                                  "enum": [
                                    "IN_PROGRESS",
                                    "SUCCESS",
                                    "FAILED"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/policy-activation.yaml"
                              }
                            },
                            "latest": {
                              "additionalProperties": false,
                              "description": "The status of the most recent activation or deactivation operation for the policy on this network. If the policy has no activations, `null` is returned.",
                              "nullable": true,
                              "type": "object",
                              "required": [
                                "createdBy",
                                "createdDate",
                                "id",
                                "network",
                                "operation",
                                "policyId",
                                "policyVersion",
                                "status"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "The username who created the activation.",
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "failureDetails": {
                                  "description": "A detailed description of the reason why the activation failed.",
                                  "type": "string"
                                },
                                "finishDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in `failureDetails`.",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Identifies the activation.",
                                  "type": "integer"
                                },
                                "links": {
                                  "description": "Hypermedia links to help navigate through the result set.",
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                                    "type": "object",
                                    "required": [
                                      "href",
                                      "rel"
                                    ],
                                    "properties": {
                                      "href": {
                                        "description": "A relative path to the currently requested object or a specific page of the result set.",
                                        "type": "string"
                                      },
                                      "rel": {
                                        "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/links.yaml"
                                  }
                                },
                                "network": {
                                  "description": "The networks where you can activate or deactivate the policy version, either `PRODUCTION` or `STAGING`.",
                                  "type": "string",
                                  "enum": [
                                    "PRODUCTION",
                                    "STAGING"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/network-enum.yaml"
                                  }
                                },
                                "operation": {
                                  "description": "The operations that you can perform on a policy version, either `ACTIVATION` or `DEACTIVATION`.",
                                  "type": "string",
                                  "enum": [
                                    "ACTIVATION",
                                    "DEACTIVATION"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/activation-operation-enum.yaml"
                                  }
                                },
                                "policyId": {
                                  "description": "Identifies the shared policy.",
                                  "type": "integer"
                                },
                                "policyVersion": {
                                  "description": "The number of the policy version.",
                                  "type": "integer"
                                },
                                "policyVersionDeleted": {
                                  "description": "Indicates if the policy version is deleted.",
                                  "type": "boolean"
                                },
                                "status": {
                                  "description": "The status of the operation, either `IN_PROGRESS`, `SUCCESS`, or `FAILED`.",
                                  "type": "string",
                                  "enum": [
                                    "IN_PROGRESS",
                                    "SUCCESS",
                                    "FAILED"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/policy-activation.yaml"
                              }
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/network-status.yaml"
                          }
                        },
                        "staging": {
                          "additionalProperties": false,
                          "description": "The policy version number that's currently in use on this network and the status of the most recent activation or deactivation operation for this policy's versions.",
                          "type": "object",
                          "required": [
                            "effective",
                            "latest"
                          ],
                          "properties": {
                            "effective": {
                              "additionalProperties": false,
                              "description": "The status of the activation that's currently in use on this network, or `null` if the policy has no activations.",
                              "nullable": true,
                              "type": "object",
                              "required": [
                                "createdBy",
                                "createdDate",
                                "id",
                                "network",
                                "operation",
                                "policyId",
                                "policyVersion",
                                "status"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "The username who created the activation.",
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "failureDetails": {
                                  "description": "A detailed description of the reason why the activation failed.",
                                  "type": "string"
                                },
                                "finishDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in `failureDetails`.",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Identifies the activation.",
                                  "type": "integer"
                                },
                                "links": {
                                  "description": "Hypermedia links to help navigate through the result set.",
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                                    "type": "object",
                                    "required": [
                                      "href",
                                      "rel"
                                    ],
                                    "properties": {
                                      "href": {
                                        "description": "A relative path to the currently requested object or a specific page of the result set.",
                                        "type": "string"
                                      },
                                      "rel": {
                                        "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/links.yaml"
                                  }
                                },
                                "network": {
                                  "description": "The networks where you can activate or deactivate the policy version, either `PRODUCTION` or `STAGING`.",
                                  "type": "string",
                                  "enum": [
                                    "PRODUCTION",
                                    "STAGING"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/network-enum.yaml"
                                  }
                                },
                                "operation": {
                                  "description": "The operations that you can perform on a policy version, either `ACTIVATION` or `DEACTIVATION`.",
                                  "type": "string",
                                  "enum": [
                                    "ACTIVATION",
                                    "DEACTIVATION"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/activation-operation-enum.yaml"
                                  }
                                },
                                "policyId": {
                                  "description": "Identifies the shared policy.",
                                  "type": "integer"
                                },
                                "policyVersion": {
                                  "description": "The number of the policy version.",
                                  "type": "integer"
                                },
                                "policyVersionDeleted": {
                                  "description": "Indicates if the policy version is deleted.",
                                  "type": "boolean"
                                },
                                "status": {
                                  "description": "The status of the operation, either `IN_PROGRESS`, `SUCCESS`, or `FAILED`.",
                                  "type": "string",
                                  "enum": [
                                    "IN_PROGRESS",
                                    "SUCCESS",
                                    "FAILED"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/policy-activation.yaml"
                              }
                            },
                            "latest": {
                              "additionalProperties": false,
                              "description": "The status of the most recent activation or deactivation operation for the policy on this network. If the policy has no activations, `null` is returned.",
                              "nullable": true,
                              "type": "object",
                              "required": [
                                "createdBy",
                                "createdDate",
                                "id",
                                "network",
                                "operation",
                                "policyId",
                                "policyVersion",
                                "status"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "The username who created the activation.",
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "failureDetails": {
                                  "description": "A detailed description of the reason why the activation failed.",
                                  "type": "string"
                                },
                                "finishDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in `failureDetails`.",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Identifies the activation.",
                                  "type": "integer"
                                },
                                "links": {
                                  "description": "Hypermedia links to help navigate through the result set.",
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                                    "type": "object",
                                    "required": [
                                      "href",
                                      "rel"
                                    ],
                                    "properties": {
                                      "href": {
                                        "description": "A relative path to the currently requested object or a specific page of the result set.",
                                        "type": "string"
                                      },
                                      "rel": {
                                        "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/links.yaml"
                                  }
                                },
                                "network": {
                                  "description": "The networks where you can activate or deactivate the policy version, either `PRODUCTION` or `STAGING`.",
                                  "type": "string",
                                  "enum": [
                                    "PRODUCTION",
                                    "STAGING"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/network-enum.yaml"
                                  }
                                },
                                "operation": {
                                  "description": "The operations that you can perform on a policy version, either `ACTIVATION` or `DEACTIVATION`.",
                                  "type": "string",
                                  "enum": [
                                    "ACTIVATION",
                                    "DEACTIVATION"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/activation-operation-enum.yaml"
                                  }
                                },
                                "policyId": {
                                  "description": "Identifies the shared policy.",
                                  "type": "integer"
                                },
                                "policyVersion": {
                                  "description": "The number of the policy version.",
                                  "type": "integer"
                                },
                                "policyVersionDeleted": {
                                  "description": "Indicates if the policy version is deleted.",
                                  "type": "boolean"
                                },
                                "status": {
                                  "description": "The status of the operation, either `IN_PROGRESS`, `SUCCESS`, or `FAILED`.",
                                  "type": "string",
                                  "enum": [
                                    "IN_PROGRESS",
                                    "SUCCESS",
                                    "FAILED"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/policy-activation.yaml"
                              }
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/network-status.yaml"
                          }
                        }
                      }
                    },
                    "description": {
                      "description": "A human-readable label for the policy.",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "Identifies the group. See [About group IDs](https://techdocs.akamai.com/cloudlets/reference/about-group-ids).",
                      "type": "integer"
                    },
                    "id": {
                      "description": "Identifies the policy.",
                      "type": "integer"
                    },
                    "links": {
                      "description": "Hypermedia links to help navigate through the result set.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                        "type": "object",
                        "required": [
                          "href",
                          "rel"
                        ],
                        "properties": {
                          "href": {
                            "description": "A relative path to the currently requested object or a specific page of the result set.",
                            "type": "string"
                          },
                          "rel": {
                            "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                            "type": "string"
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/links.yaml"
                      }
                    },
                    "modifiedBy": {
                      "description": "The username who last modified the policy.",
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the policy was last modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the policy. You use this value to refer to a shared policy in Property Manager.",
                      "type": "string"
                    },
                    "policyType": {
                      "description": "The type of policy. This API lets you create only `SHARED` policies.",
                      "type": "string",
                      "enum": [
                        "SHARED"
                      ]
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/policy.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Invalid request parameters, or problems parsing or validating the request object.](https://techdocs.akamai.com/cloudlets/reference/400)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a38da5f6-457c-4189-b4ae-9142623a7d41",
                  "status": 400,
                  "title": "Validation failed",
                  "type": "/cloudlets/v3/error-types/validation-failed",
                  "errors": [
                    {
                      "detail": "Value of `groupId` must be greater than 0.",
                      "invalidField": "groupId",
                      "invalidValue": -120,
                      "title": "Validation failed"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          },
          "403": {
            "description": "[No permission to access this resource.](https://techdocs.akamai.com/cloudlets/reference/403)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "cc6e9850-c426-4e17-8e33-cab96beccad8",
                  "status": 403,
                  "title": "Access Denied",
                  "type": "/cloudlets/v3/error-types/access-denied",
                  "errors": [
                    {
                      "detail": "User does not have view capability for Edge Redirector Cloudlet in group 120.",
                      "title": "Access Denied"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          },
          "409": {
            "description": "[Conflict with the current state of the resource.](https://techdocs.akamai.com/cloudlets/reference/409)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "60a28279-d429-44c7-ad3b-2b50909d393e",
                  "status": 409,
                  "title": "Data Update Conflict",
                  "type": "/cloudlets/v3/error-types/data-update-conflict",
                  "errors": [
                    {
                      "detail": "Policy with `policyname` name already exists.",
                      "title": "Data Update Conflict"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Returns shared policies that are available within your group.",
        "operationId": "get-policies",
        "summary": "List shared policies",
        "tags": [
          "Policies"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-policies"
        },
        "responses": {
          "200": {
            "description": "Contains information about the shared policies.",
            "content": {
              "application/json": {
                "example": {
                  "page": {
                    "number": 0,
                    "size": 10,
                    "totalElements": 1103,
                    "totalPages": 111
                  },
                  "content": [
                    {
                      "cloudletType": "ER",
                      "createdBy": "jsmith",
                      "createdDate": "2020-10-01T12:35:22.500Z",
                      "description": "ER policy for static assets",
                      "groupId": 5,
                      "id": 1001,
                      "modifiedBy": "jperez",
                      "modifiedDate": "2020-10-01T12:35:22.500Z",
                      "name": "static_assets_redirector",
                      "policyType": "SHARED",
                      "currentActivations": {
                        "production": {
                          "effective": {
                            "createdBy": "mrossi",
                            "createdDate": "2020-10-01T12:35:24.520Z",
                            "finishDate": "2020-10-01T12:35:25.962Z",
                            "id": 300001,
                            "network": "PRODUCTION",
                            "operation": "ACTIVATION",
                            "policyId": 1001,
                            "policyVersion": 1,
                            "status": "SUCCESS",
                            "links": [
                              {
                                "href": "/cloudlets/v3/policies/1001/activations/300001",
                                "rel": "self"
                              }
                            ]
                          },
                          "latest": {
                            "createdBy": "tyamada",
                            "createdDate": "2020-10-01T12:35:24.520Z",
                            "finishDate": "2020-10-01T12:35:25.962Z",
                            "id": 300001,
                            "network": "PRODUCTION",
                            "operation": "ACTIVATION",
                            "policyId": 1001,
                            "policyVersion": 1,
                            "status": "SUCCESS",
                            "links": [
                              {
                                "href": "/cloudlets/v3/policies/1001/activations/300001",
                                "rel": "self"
                              }
                            ]
                          }
                        },
                        "staging": {
                          "effective": null,
                          "latest": null
                        }
                      },
                      "links": [
                        {
                          "href": "/cloudlets/v3/policies/1001",
                          "rel": "self"
                        }
                      ]
                    }
                  ],
                  "links": [
                    {
                      "href": "/cloudlets/v3/policies?page=0&size=10",
                      "rel": "first"
                    },
                    {
                      "href": "/cloudlets/v3/policies?page=0&size=10",
                      "rel": "self"
                    },
                    {
                      "href": "/cloudlets/v3/policies?page=1&size=10",
                      "rel": "next"
                    },
                    {
                      "href": "/cloudlets/v3/policies?page=110&size=10",
                      "rel": "last"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "content",
                    "page"
                  ],
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information about a shared policy.",
                        "type": "object",
                        "required": [
                          "cloudletType",
                          "createdBy",
                          "createdDate",
                          "currentActivations",
                          "groupId",
                          "id",
                          "modifiedBy",
                          "modifiedDate",
                          "name",
                          "policyType"
                        ],
                        "properties": {
                          "cloudletType": {
                            "description": "The two- or three- letter code of the Cloudlet that the shared policy is for. Shared policies are available for API Prioritization (`AP`), Edge Redirector (`ER`), Forward Rewrite (`FR`), Audience Segmentation (`AS`), Request Control (`IG`), Phased Release (`CD`) and Virtual Waiting Room (`VWR`).",
                            "type": "string",
                            "enum": [
                              "AP",
                              "ER",
                              "FR",
                              "AS",
                              "IG",
                              "CD",
                              "VWR"
                            ]
                          },
                          "createdBy": {
                            "description": "The username who created the policy.",
                            "type": "string"
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the policy was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "currentActivations": {
                            "additionalProperties": false,
                            "description": "Information about the active policy version that's currently in use and the status of the most recent activation or deactivation operation on the policy's versions for the production and staging networks.",
                            "type": "object",
                            "required": [
                              "production",
                              "staging"
                            ],
                            "properties": {
                              "production": {
                                "additionalProperties": false,
                                "description": "The policy version number that's currently in use on this network and the status of the most recent activation or deactivation operation for this policy's versions.",
                                "type": "object",
                                "required": [
                                  "effective",
                                  "latest"
                                ],
                                "properties": {
                                  "effective": {
                                    "additionalProperties": false,
                                    "description": "The status of the activation that's currently in use on this network, or `null` if the policy has no activations.",
                                    "nullable": true,
                                    "type": "object",
                                    "required": [
                                      "createdBy",
                                      "createdDate",
                                      "id",
                                      "network",
                                      "operation",
                                      "policyId",
                                      "policyVersion",
                                      "status"
                                    ],
                                    "properties": {
                                      "createdBy": {
                                        "description": "The username who created the activation.",
                                        "type": "string"
                                      },
                                      "createdDate": {
                                        "description": "ISO 8601 timestamp indicating when the activation was created.",
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "failureDetails": {
                                        "description": "A detailed description of the reason why the activation failed.",
                                        "type": "string"
                                      },
                                      "finishDate": {
                                        "description": "ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in `failureDetails`.",
                                        "format": "date-time",
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Identifies the activation.",
                                        "type": "integer"
                                      },
                                      "links": {
                                        "description": "Hypermedia links to help navigate through the result set.",
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                                          "type": "object",
                                          "required": [
                                            "href",
                                            "rel"
                                          ],
                                          "properties": {
                                            "href": {
                                              "description": "A relative path to the currently requested object or a specific page of the result set.",
                                              "type": "string"
                                            },
                                            "rel": {
                                              "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-akamai": {
                                          "file-path": "schemas/links.yaml"
                                        }
                                      },
                                      "network": {
                                        "description": "The networks where you can activate or deactivate the policy version, either `PRODUCTION` or `STAGING`.",
                                        "type": "string",
                                        "enum": [
                                          "PRODUCTION",
                                          "STAGING"
                                        ],
                                        "x-akamai": {
                                          "file-path": "schemas/network-enum.yaml"
                                        }
                                      },
                                      "operation": {
                                        "description": "The operations that you can perform on a policy version, either `ACTIVATION` or `DEACTIVATION`.",
                                        "type": "string",
                                        "enum": [
                                          "ACTIVATION",
                                          "DEACTIVATION"
                                        ],
                                        "x-akamai": {
                                          "file-path": "schemas/activation-operation-enum.yaml"
                                        }
                                      },
                                      "policyId": {
                                        "description": "Identifies the shared policy.",
                                        "type": "integer"
                                      },
                                      "policyVersion": {
                                        "description": "The number of the policy version.",
                                        "type": "integer"
                                      },
                                      "policyVersionDeleted": {
                                        "description": "Indicates if the policy version is deleted.",
                                        "type": "boolean"
                                      },
                                      "status": {
                                        "description": "The status of the operation, either `IN_PROGRESS`, `SUCCESS`, or `FAILED`.",
                                        "type": "string",
                                        "enum": [
                                          "IN_PROGRESS",
                                          "SUCCESS",
                                          "FAILED"
                                        ]
                                      }
                                    },
                                    "x-akamai": {
                                      "file-path": "schemas/policy-activation.yaml"
                                    }
                                  },
                                  "latest": {
                                    "additionalProperties": false,
                                    "description": "The status of the most recent activation or deactivation operation for the policy on this network. If the policy has no activations, `null` is returned.",
                                    "nullable": true,
                                    "type": "object",
                                    "required": [
                                      "createdBy",
                                      "createdDate",
                                      "id",
                                      "network",
                                      "operation",
                                      "policyId",
                                      "policyVersion",
                                      "status"
                                    ],
                                    "properties": {
                                      "createdBy": {
                                        "description": "The username who created the activation.",
                                        "type": "string"
                                      },
                                      "createdDate": {
                                        "description": "ISO 8601 timestamp indicating when the activation was created.",
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "failureDetails": {
                                        "description": "A detailed description of the reason why the activation failed.",
                                        "type": "string"
                                      },
                                      "finishDate": {
                                        "description": "ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in `failureDetails`.",
                                        "format": "date-time",
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Identifies the activation.",
                                        "type": "integer"
                                      },
                                      "links": {
                                        "description": "Hypermedia links to help navigate through the result set.",
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                                          "type": "object",
                                          "required": [
                                            "href",
                                            "rel"
                                          ],
                                          "properties": {
                                            "href": {
                                              "description": "A relative path to the currently requested object or a specific page of the result set.",
                                              "type": "string"
                                            },
                                            "rel": {
                                              "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-akamai": {
                                          "file-path": "schemas/links.yaml"
                                        }
                                      },
                                      "network": {
                                        "description": "The networks where you can activate or deactivate the policy version, either `PRODUCTION` or `STAGING`.",
                                        "type": "string",
                                        "enum": [
                                          "PRODUCTION",
                                          "STAGING"
                                        ],
                                        "x-akamai": {
                                          "file-path": "schemas/network-enum.yaml"
                                        }
                                      },
                                      "operation": {
                                        "description": "The operations that you can perform on a policy version, either `ACTIVATION` or `DEACTIVATION`.",
                                        "type": "string",
                                        "enum": [
                                          "ACTIVATION",
                                          "DEACTIVATION"
                                        ],
                                        "x-akamai": {
                                          "file-path": "schemas/activation-operation-enum.yaml"
                                        }
                                      },
                                      "policyId": {
                                        "description": "Identifies the shared policy.",
                                        "type": "integer"
                                      },
                                      "policyVersion": {
                                        "description": "The number of the policy version.",
                                        "type": "integer"
                                      },
                                      "policyVersionDeleted": {
                                        "description": "Indicates if the policy version is deleted.",
                                        "type": "boolean"
                                      },
                                      "status": {
                                        "description": "The status of the operation, either `IN_PROGRESS`, `SUCCESS`, or `FAILED`.",
                                        "type": "string",
                                        "enum": [
                                          "IN_PROGRESS",
                                          "SUCCESS",
                                          "FAILED"
                                        ]
                                      }
                                    },
                                    "x-akamai": {
                                      "file-path": "schemas/policy-activation.yaml"
                                    }
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/network-status.yaml"
                                }
                              },
                              "staging": {
                                "additionalProperties": false,
                                "description": "The policy version number that's currently in use on this network and the status of the most recent activation or deactivation operation for this policy's versions.",
                                "type": "object",
                                "required": [
                                  "effective",
                                  "latest"
                                ],
                                "properties": {
                                  "effective": {
                                    "additionalProperties": false,
                                    "description": "The status of the activation that's currently in use on this network, or `null` if the policy has no activations.",
                                    "nullable": true,
                                    "type": "object",
                                    "required": [
                                      "createdBy",
                                      "createdDate",
                                      "id",
                                      "network",
                                      "operation",
                                      "policyId",
                                      "policyVersion",
                                      "status"
                                    ],
                                    "properties": {
                                      "createdBy": {
                                        "description": "The username who created the activation.",
                                        "type": "string"
                                      },
                                      "createdDate": {
                                        "description": "ISO 8601 timestamp indicating when the activation was created.",
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "failureDetails": {
                                        "description": "A detailed description of the reason why the activation failed.",
                                        "type": "string"
                                      },
                                      "finishDate": {
                                        "description": "ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in `failureDetails`.",
                                        "format": "date-time",
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Identifies the activation.",
                                        "type": "integer"
                                      },
                                      "links": {
                                        "description": "Hypermedia links to help navigate through the result set.",
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                                          "type": "object",
                                          "required": [
                                            "href",
                                            "rel"
                                          ],
                                          "properties": {
                                            "href": {
                                              "description": "A relative path to the currently requested object or a specific page of the result set.",
                                              "type": "string"
                                            },
                                            "rel": {
                                              "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-akamai": {
                                          "file-path": "schemas/links.yaml"
                                        }
                                      },
                                      "network": {
                                        "description": "The networks where you can activate or deactivate the policy version, either `PRODUCTION` or `STAGING`.",
                                        "type": "string",
                                        "enum": [
                                          "PRODUCTION",
                                          "STAGING"
                                        ],
                                        "x-akamai": {
                                          "file-path": "schemas/network-enum.yaml"
                                        }
                                      },
                                      "operation": {
                                        "description": "The operations that you can perform on a policy version, either `ACTIVATION` or `DEACTIVATION`.",
                                        "type": "string",
                                        "enum": [
                                          "ACTIVATION",
                                          "DEACTIVATION"
                                        ],
                                        "x-akamai": {
                                          "file-path": "schemas/activation-operation-enum.yaml"
                                        }
                                      },
                                      "policyId": {
                                        "description": "Identifies the shared policy.",
                                        "type": "integer"
                                      },
                                      "policyVersion": {
                                        "description": "The number of the policy version.",
                                        "type": "integer"
                                      },
                                      "policyVersionDeleted": {
                                        "description": "Indicates if the policy version is deleted.",
                                        "type": "boolean"
                                      },
                                      "status": {
                                        "description": "The status of the operation, either `IN_PROGRESS`, `SUCCESS`, or `FAILED`.",
                                        "type": "string",
                                        "enum": [
                                          "IN_PROGRESS",
                                          "SUCCESS",
                                          "FAILED"
                                        ]
                                      }
                                    },
                                    "x-akamai": {
                                      "file-path": "schemas/policy-activation.yaml"
                                    }
                                  },
                                  "latest": {
                                    "additionalProperties": false,
                                    "description": "The status of the most recent activation or deactivation operation for the policy on this network. If the policy has no activations, `null` is returned.",
                                    "nullable": true,
                                    "type": "object",
                                    "required": [
                                      "createdBy",
                                      "createdDate",
                                      "id",
                                      "network",
                                      "operation",
                                      "policyId",
                                      "policyVersion",
                                      "status"
                                    ],
                                    "properties": {
                                      "createdBy": {
                                        "description": "The username who created the activation.",
                                        "type": "string"
                                      },
                                      "createdDate": {
                                        "description": "ISO 8601 timestamp indicating when the activation was created.",
                                        "format": "date-time",
                                        "type": "string"
                                      },
                                      "failureDetails": {
                                        "description": "A detailed description of the reason why the activation failed.",
                                        "type": "string"
                                      },
                                      "finishDate": {
                                        "description": "ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in `failureDetails`.",
                                        "format": "date-time",
                                        "nullable": true,
                                        "type": "string"
                                      },
                                      "id": {
                                        "description": "Identifies the activation.",
                                        "type": "integer"
                                      },
                                      "links": {
                                        "description": "Hypermedia links to help navigate through the result set.",
                                        "type": "array",
                                        "items": {
                                          "additionalProperties": false,
                                          "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                                          "type": "object",
                                          "required": [
                                            "href",
                                            "rel"
                                          ],
                                          "properties": {
                                            "href": {
                                              "description": "A relative path to the currently requested object or a specific page of the result set.",
                                              "type": "string"
                                            },
                                            "rel": {
                                              "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-akamai": {
                                          "file-path": "schemas/links.yaml"
                                        }
                                      },
                                      "network": {
                                        "description": "The networks where you can activate or deactivate the policy version, either `PRODUCTION` or `STAGING`.",
                                        "type": "string",
                                        "enum": [
                                          "PRODUCTION",
                                          "STAGING"
                                        ],
                                        "x-akamai": {
                                          "file-path": "schemas/network-enum.yaml"
                                        }
                                      },
                                      "operation": {
                                        "description": "The operations that you can perform on a policy version, either `ACTIVATION` or `DEACTIVATION`.",
                                        "type": "string",
                                        "enum": [
                                          "ACTIVATION",
                                          "DEACTIVATION"
                                        ],
                                        "x-akamai": {
                                          "file-path": "schemas/activation-operation-enum.yaml"
                                        }
                                      },
                                      "policyId": {
                                        "description": "Identifies the shared policy.",
                                        "type": "integer"
                                      },
                                      "policyVersion": {
                                        "description": "The number of the policy version.",
                                        "type": "integer"
                                      },
                                      "policyVersionDeleted": {
                                        "description": "Indicates if the policy version is deleted.",
                                        "type": "boolean"
                                      },
                                      "status": {
                                        "description": "The status of the operation, either `IN_PROGRESS`, `SUCCESS`, or `FAILED`.",
                                        "type": "string",
                                        "enum": [
                                          "IN_PROGRESS",
                                          "SUCCESS",
                                          "FAILED"
                                        ]
                                      }
                                    },
                                    "x-akamai": {
                                      "file-path": "schemas/policy-activation.yaml"
                                    }
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/network-status.yaml"
                                }
                              }
                            }
                          },
                          "description": {
                            "description": "A human-readable label for the policy.",
                            "type": "string"
                          },
                          "groupId": {
                            "description": "Identifies the group. See [About group IDs](https://techdocs.akamai.com/cloudlets/reference/about-group-ids).",
                            "type": "integer"
                          },
                          "id": {
                            "description": "Identifies the policy.",
                            "type": "integer"
                          },
                          "links": {
                            "description": "Hypermedia links to help navigate through the result set.",
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                              "type": "object",
                              "required": [
                                "href",
                                "rel"
                              ],
                              "properties": {
                                "href": {
                                  "description": "A relative path to the currently requested object or a specific page of the result set.",
                                  "type": "string"
                                },
                                "rel": {
                                  "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                                  "type": "string"
                                }
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/links.yaml"
                            }
                          },
                          "modifiedBy": {
                            "description": "The username who last modified the policy.",
                            "type": "string"
                          },
                          "modifiedDate": {
                            "description": "ISO 8601 timestamp indicating when the policy was last modified.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the policy. You use this value to refer to a shared policy in Property Manager.",
                            "type": "string"
                          },
                          "policyType": {
                            "description": "The type of policy. This API lets you create only `SHARED` policies.",
                            "type": "string",
                            "enum": [
                              "SHARED"
                            ]
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/policy.yaml"
                        }
                      }
                    },
                    "links": {
                      "description": "Hypermedia links to help navigate through the result set.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                        "type": "object",
                        "required": [
                          "href",
                          "rel"
                        ],
                        "properties": {
                          "href": {
                            "description": "A relative path to the currently requested object or a specific page of the result set.",
                            "type": "string"
                          },
                          "rel": {
                            "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                            "type": "string"
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/links.yaml"
                      }
                    },
                    "page": {
                      "additionalProperties": false,
                      "description": "Contains informational data about pagination.",
                      "type": "object",
                      "required": [
                        "totalPages",
                        "totalElements",
                        "number",
                        "size"
                      ],
                      "properties": {
                        "number": {
                          "description": "Specifies the number of the returned page.",
                          "type": "integer"
                        },
                        "size": {
                          "description": "Specifies the number of objects on a page, at least `10` objects.",
                          "type": "integer"
                        },
                        "totalElements": {
                          "description": "Specifies the total number of the available objects.",
                          "type": "integer"
                        },
                        "totalPages": {
                          "description": "Specifies the total number of the available pages.",
                          "type": "integer"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/page-head.yaml"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-policies-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Specifies a page number for batched results, starting at zero.",
            "example": "{{page}}",
            "in": "query",
            "name": "page",
            "required": true,
            "schema": {
              "example": 3,
              "minimum": 0,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/page-query.yaml"
            }
          },
          {
            "description": "Specifies the number of objects on a page, at least `10` objects.",
            "example": "{{size}}",
            "in": "query",
            "name": "size",
            "required": true,
            "schema": {
              "example": 100,
              "minimum": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/size-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/policies/{policyId}": {
      "get": {
        "description": "Returns information about a shared policy, including its activation status on the staging and production networks. If you don't already have the `policyId`, run the [List shared policies](https://techdocs.akamai.com/cloudlets/reference/get-policies) operation and store the relevant `id` value.",
        "operationId": "get-policy",
        "summary": "Get a policy",
        "tags": [
          "Policies"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-policy"
        },
        "responses": {
          "200": {
            "description": "Contains information about a shared policy.",
            "content": {
              "application/json": {
                "example": {
                  "cloudletType": "ER",
                  "createdBy": "jsmith",
                  "createdDate": "2020-10-01T12:35:22.500Z",
                  "description": "ER policy for static assets",
                  "groupId": 5,
                  "id": 1001,
                  "modifiedBy": "adevi",
                  "modifiedDate": "2020-10-01T12:35:22.500Z",
                  "name": "static_assets_redirector",
                  "policyType": "SHARED",
                  "currentActivations": {
                    "production": {
                      "effective": {
                        "createdBy": "hgildong",
                        "createdDate": "2020-10-01T12:35:24.520Z",
                        "finishDate": "2020-10-01T12:35:25.962Z",
                        "id": 300001,
                        "network": "PRODUCTION",
                        "operation": "ACTIVATION",
                        "policyId": 1001,
                        "policyVersion": 1,
                        "status": "SUCCESS",
                        "links": [
                          {
                            "href": "/cloudlets/v3/policies/1001/activations/300001",
                            "rel": "self"
                          }
                        ]
                      },
                      "latest": {
                        "createdBy": "jkowalski",
                        "createdDate": "2020-10-01T12:35:24.520Z",
                        "finishDate": "2020-10-01T12:35:25.962Z",
                        "id": 300001,
                        "network": "PRODUCTION",
                        "operation": "ACTIVATION",
                        "policyId": 1001,
                        "policyVersion": 1,
                        "status": "SUCCESS",
                        "links": [
                          {
                            "href": "/cloudlets/v3/policies/1001/activations/300001",
                            "rel": "self"
                          }
                        ]
                      }
                    },
                    "staging": {
                      "effective": null,
                      "latest": null
                    }
                  },
                  "links": [
                    {
                      "href": "/cloudlets/v3/policies/1001",
                      "rel": "self"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about a shared policy.",
                  "type": "object",
                  "required": [
                    "cloudletType",
                    "createdBy",
                    "createdDate",
                    "currentActivations",
                    "groupId",
                    "id",
                    "modifiedBy",
                    "modifiedDate",
                    "name",
                    "policyType"
                  ],
                  "properties": {
                    "cloudletType": {
                      "description": "The two- or three- letter code of the Cloudlet that the shared policy is for. Shared policies are available for API Prioritization (`AP`), Edge Redirector (`ER`), Forward Rewrite (`FR`), Audience Segmentation (`AS`), Request Control (`IG`), Phased Release (`CD`) and Virtual Waiting Room (`VWR`).",
                      "type": "string",
                      "enum": [
                        "AP",
                        "ER",
                        "FR",
                        "AS",
                        "IG",
                        "CD",
                        "VWR"
                      ]
                    },
                    "createdBy": {
                      "description": "The username who created the policy.",
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the policy was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "currentActivations": {
                      "additionalProperties": false,
                      "description": "Information about the active policy version that's currently in use and the status of the most recent activation or deactivation operation on the policy's versions for the production and staging networks.",
                      "type": "object",
                      "required": [
                        "production",
                        "staging"
                      ],
                      "properties": {
                        "production": {
                          "additionalProperties": false,
                          "description": "The policy version number that's currently in use on this network and the status of the most recent activation or deactivation operation for this policy's versions.",
                          "type": "object",
                          "required": [
                            "effective",
                            "latest"
                          ],
                          "properties": {
                            "effective": {
                              "additionalProperties": false,
                              "description": "The status of the activation that's currently in use on this network, or `null` if the policy has no activations.",
                              "nullable": true,
                              "type": "object",
                              "required": [
                                "createdBy",
                                "createdDate",
                                "id",
                                "network",
                                "operation",
                                "policyId",
                                "policyVersion",
                                "status"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "The username who created the activation.",
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "failureDetails": {
                                  "description": "A detailed description of the reason why the activation failed.",
                                  "type": "string"
                                },
                                "finishDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in `failureDetails`.",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Identifies the activation.",
                                  "type": "integer"
                                },
                                "links": {
                                  "description": "Hypermedia links to help navigate through the result set.",
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                                    "type": "object",
                                    "required": [
                                      "href",
                                      "rel"
                                    ],
                                    "properties": {
                                      "href": {
                                        "description": "A relative path to the currently requested object or a specific page of the result set.",
                                        "type": "string"
                                      },
                                      "rel": {
                                        "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/links.yaml"
                                  }
                                },
                                "network": {
                                  "description": "The networks where you can activate or deactivate the policy version, either `PRODUCTION` or `STAGING`.",
                                  "type": "string",
                                  "enum": [
                                    "PRODUCTION",
                                    "STAGING"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/network-enum.yaml"
                                  }
                                },
                                "operation": {
                                  "description": "The operations that you can perform on a policy version, either `ACTIVATION` or `DEACTIVATION`.",
                                  "type": "string",
                                  "enum": [
                                    "ACTIVATION",
                                    "DEACTIVATION"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/activation-operation-enum.yaml"
                                  }
                                },
                                "policyId": {
                                  "description": "Identifies the shared policy.",
                                  "type": "integer"
                                },
                                "policyVersion": {
                                  "description": "The number of the policy version.",
                                  "type": "integer"
                                },
                                "policyVersionDeleted": {
                                  "description": "Indicates if the policy version is deleted.",
                                  "type": "boolean"
                                },
                                "status": {
                                  "description": "The status of the operation, either `IN_PROGRESS`, `SUCCESS`, or `FAILED`.",
                                  "type": "string",
                                  "enum": [
                                    "IN_PROGRESS",
                                    "SUCCESS",
                                    "FAILED"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/policy-activation.yaml"
                              }
                            },
                            "latest": {
                              "additionalProperties": false,
                              "description": "The status of the most recent activation or deactivation operation for the policy on this network. If the policy has no activations, `null` is returned.",
                              "nullable": true,
                              "type": "object",
                              "required": [
                                "createdBy",
                                "createdDate",
                                "id",
                                "network",
                                "operation",
                                "policyId",
                                "policyVersion",
                                "status"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "The username who created the activation.",
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "failureDetails": {
                                  "description": "A detailed description of the reason why the activation failed.",
                                  "type": "string"
                                },
                                "finishDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in `failureDetails`.",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Identifies the activation.",
                                  "type": "integer"
                                },
                                "links": {
                                  "description": "Hypermedia links to help navigate through the result set.",
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                                    "type": "object",
                                    "required": [
                                      "href",
                                      "rel"
                                    ],
                                    "properties": {
                                      "href": {
                                        "description": "A relative path to the currently requested object or a specific page of the result set.",
                                        "type": "string"
                                      },
                                      "rel": {
                                        "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/links.yaml"
                                  }
                                },
                                "network": {
                                  "description": "The networks where you can activate or deactivate the policy version, either `PRODUCTION` or `STAGING`.",
                                  "type": "string",
                                  "enum": [
                                    "PRODUCTION",
                                    "STAGING"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/network-enum.yaml"
                                  }
                                },
                                "operation": {
                                  "description": "The operations that you can perform on a policy version, either `ACTIVATION` or `DEACTIVATION`.",
                                  "type": "string",
                                  "enum": [
                                    "ACTIVATION",
                                    "DEACTIVATION"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/activation-operation-enum.yaml"
                                  }
                                },
                                "policyId": {
                                  "description": "Identifies the shared policy.",
                                  "type": "integer"
                                },
                                "policyVersion": {
                                  "description": "The number of the policy version.",
                                  "type": "integer"
                                },
                                "policyVersionDeleted": {
                                  "description": "Indicates if the policy version is deleted.",
                                  "type": "boolean"
                                },
                                "status": {
                                  "description": "The status of the operation, either `IN_PROGRESS`, `SUCCESS`, or `FAILED`.",
                                  "type": "string",
                                  "enum": [
                                    "IN_PROGRESS",
                                    "SUCCESS",
                                    "FAILED"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/policy-activation.yaml"
                              }
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/network-status.yaml"
                          }
                        },
                        "staging": {
                          "additionalProperties": false,
                          "description": "The policy version number that's currently in use on this network and the status of the most recent activation or deactivation operation for this policy's versions.",
                          "type": "object",
                          "required": [
                            "effective",
                            "latest"
                          ],
                          "properties": {
                            "effective": {
                              "additionalProperties": false,
                              "description": "The status of the activation that's currently in use on this network, or `null` if the policy has no activations.",
                              "nullable": true,
                              "type": "object",
                              "required": [
                                "createdBy",
                                "createdDate",
                                "id",
                                "network",
                                "operation",
                                "policyId",
                                "policyVersion",
                                "status"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "The username who created the activation.",
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "failureDetails": {
                                  "description": "A detailed description of the reason why the activation failed.",
                                  "type": "string"
                                },
                                "finishDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in `failureDetails`.",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Identifies the activation.",
                                  "type": "integer"
                                },
                                "links": {
                                  "description": "Hypermedia links to help navigate through the result set.",
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                                    "type": "object",
                                    "required": [
                                      "href",
                                      "rel"
                                    ],
                                    "properties": {
                                      "href": {
                                        "description": "A relative path to the currently requested object or a specific page of the result set.",
                                        "type": "string"
                                      },
                                      "rel": {
                                        "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/links.yaml"
                                  }
                                },
                                "network": {
                                  "description": "The networks where you can activate or deactivate the policy version, either `PRODUCTION` or `STAGING`.",
                                  "type": "string",
                                  "enum": [
                                    "PRODUCTION",
                                    "STAGING"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/network-enum.yaml"
                                  }
                                },
                                "operation": {
                                  "description": "The operations that you can perform on a policy version, either `ACTIVATION` or `DEACTIVATION`.",
                                  "type": "string",
                                  "enum": [
                                    "ACTIVATION",
                                    "DEACTIVATION"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/activation-operation-enum.yaml"
                                  }
                                },
                                "policyId": {
                                  "description": "Identifies the shared policy.",
                                  "type": "integer"
                                },
                                "policyVersion": {
                                  "description": "The number of the policy version.",
                                  "type": "integer"
                                },
                                "policyVersionDeleted": {
                                  "description": "Indicates if the policy version is deleted.",
                                  "type": "boolean"
                                },
                                "status": {
                                  "description": "The status of the operation, either `IN_PROGRESS`, `SUCCESS`, or `FAILED`.",
                                  "type": "string",
                                  "enum": [
                                    "IN_PROGRESS",
                                    "SUCCESS",
                                    "FAILED"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/policy-activation.yaml"
                              }
                            },
                            "latest": {
                              "additionalProperties": false,
                              "description": "The status of the most recent activation or deactivation operation for the policy on this network. If the policy has no activations, `null` is returned.",
                              "nullable": true,
                              "type": "object",
                              "required": [
                                "createdBy",
                                "createdDate",
                                "id",
                                "network",
                                "operation",
                                "policyId",
                                "policyVersion",
                                "status"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "The username who created the activation.",
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "failureDetails": {
                                  "description": "A detailed description of the reason why the activation failed.",
                                  "type": "string"
                                },
                                "finishDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in `failureDetails`.",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Identifies the activation.",
                                  "type": "integer"
                                },
                                "links": {
                                  "description": "Hypermedia links to help navigate through the result set.",
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                                    "type": "object",
                                    "required": [
                                      "href",
                                      "rel"
                                    ],
                                    "properties": {
                                      "href": {
                                        "description": "A relative path to the currently requested object or a specific page of the result set.",
                                        "type": "string"
                                      },
                                      "rel": {
                                        "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/links.yaml"
                                  }
                                },
                                "network": {
                                  "description": "The networks where you can activate or deactivate the policy version, either `PRODUCTION` or `STAGING`.",
                                  "type": "string",
                                  "enum": [
                                    "PRODUCTION",
                                    "STAGING"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/network-enum.yaml"
                                  }
                                },
                                "operation": {
                                  "description": "The operations that you can perform on a policy version, either `ACTIVATION` or `DEACTIVATION`.",
                                  "type": "string",
                                  "enum": [
                                    "ACTIVATION",
                                    "DEACTIVATION"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/activation-operation-enum.yaml"
                                  }
                                },
                                "policyId": {
                                  "description": "Identifies the shared policy.",
                                  "type": "integer"
                                },
                                "policyVersion": {
                                  "description": "The number of the policy version.",
                                  "type": "integer"
                                },
                                "policyVersionDeleted": {
                                  "description": "Indicates if the policy version is deleted.",
                                  "type": "boolean"
                                },
                                "status": {
                                  "description": "The status of the operation, either `IN_PROGRESS`, `SUCCESS`, or `FAILED`.",
                                  "type": "string",
                                  "enum": [
                                    "IN_PROGRESS",
                                    "SUCCESS",
                                    "FAILED"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/policy-activation.yaml"
                              }
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/network-status.yaml"
                          }
                        }
                      }
                    },
                    "description": {
                      "description": "A human-readable label for the policy.",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "Identifies the group. See [About group IDs](https://techdocs.akamai.com/cloudlets/reference/about-group-ids).",
                      "type": "integer"
                    },
                    "id": {
                      "description": "Identifies the policy.",
                      "type": "integer"
                    },
                    "links": {
                      "description": "Hypermedia links to help navigate through the result set.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                        "type": "object",
                        "required": [
                          "href",
                          "rel"
                        ],
                        "properties": {
                          "href": {
                            "description": "A relative path to the currently requested object or a specific page of the result set.",
                            "type": "string"
                          },
                          "rel": {
                            "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                            "type": "string"
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/links.yaml"
                      }
                    },
                    "modifiedBy": {
                      "description": "The username who last modified the policy.",
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the policy was last modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the policy. You use this value to refer to a shared policy in Property Manager.",
                      "type": "string"
                    },
                    "policyType": {
                      "description": "The type of policy. This API lets you create only `SHARED` policies.",
                      "type": "string",
                      "enum": [
                        "SHARED"
                      ]
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/policy.yaml"
                  }
                }
              }
            }
          },
          "403": {
            "description": "[No permission to access this resource.](https://techdocs.akamai.com/cloudlets/reference/403)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "cc6e9850-c426-4e17-8e33-cab96beccad8",
                  "status": 403,
                  "title": "Access Denied",
                  "type": "/cloudlets/v3/error-types/access-denied",
                  "errors": [
                    {
                      "detail": "User does not have view capability for Edge Redirector Cloudlet in group 120.",
                      "title": "Access Denied"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          },
          "404": {
            "description": "[Resource not found.](https://techdocs.akamai.com/cloudlets/reference/404)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a38da5f6-457c-4189-b4ae-9142623a7d41",
                  "status": 404,
                  "title": "Not found",
                  "type": "/cloudlets/v3/error-types/not-found",
                  "errors": [
                    {
                      "detail": "Policy with id `300001` not found.",
                      "title": "Not found"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates an existing policy. If you don't already have the `policyId`, run the [list shared policies](https://techdocs.akamai.com/cloudlets/reference/get-policies) operation and store the relevant `id` value.",
        "operationId": "put-policy",
        "summary": "Update a policy",
        "tags": [
          "Policies"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/put-policy"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "description": "ER policy for static assets",
                "groupId": 5
              },
              "schema": {
                "additionalProperties": false,
                "type": "object",
                "required": [
                  "groupId"
                ],
                "properties": {
                  "description": {
                    "description": "A human-readable label for the policy.",
                    "example": "{{description}}",
                    "type": "string"
                  },
                  "groupId": {
                    "description": "Identifies the group. See [About group IDs](https://techdocs.akamai.com/cloudlets/reference/about-group-ids).",
                    "example": "{{groupId}}",
                    "type": "integer"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/put-policy-request.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contains information about a shared policy.",
            "content": {
              "application/json": {
                "example": {
                  "cloudletType": "ER",
                  "createdBy": "jsmith",
                  "createdDate": "2020-10-01T12:35:22.500Z",
                  "description": "ER policy for static assets",
                  "groupId": 5,
                  "id": 1001,
                  "modifiedBy": "jsmith",
                  "modifiedDate": "2020-10-01T12:35:22.500Z",
                  "name": "static_assets_redirector",
                  "policyType": "SHARED",
                  "currentActivations": {
                    "production": {
                      "effective": {
                        "createdBy": "jsmith",
                        "createdDate": "2020-10-01T12:35:24.520Z",
                        "finishDate": "2020-10-01T12:35:25.962Z",
                        "id": 300001,
                        "network": "PRODUCTION",
                        "operation": "ACTIVATION",
                        "policyId": 1001,
                        "policyVersion": 1,
                        "status": "SUCCESS",
                        "links": [
                          {
                            "href": "/cloudlets/v3/policies/1001/activations/300001",
                            "rel": "self"
                          }
                        ]
                      },
                      "latest": {
                        "createdBy": "adevi",
                        "createdDate": "2020-10-01T12:35:24.520Z",
                        "finishDate": "2020-10-01T12:35:25.962Z",
                        "id": 300001,
                        "network": "PRODUCTION",
                        "operation": "ACTIVATION",
                        "policyId": 1001,
                        "policyVersion": 1,
                        "status": "SUCCESS",
                        "links": [
                          {
                            "href": "/cloudlets/v3/policies/1001/activations/300001",
                            "rel": "self"
                          }
                        ]
                      }
                    },
                    "staging": {
                      "effective": null,
                      "latest": null
                    }
                  },
                  "links": [
                    {
                      "href": "/cloudlets/v3/policies/1001",
                      "rel": "self"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about a shared policy.",
                  "type": "object",
                  "required": [
                    "cloudletType",
                    "createdBy",
                    "createdDate",
                    "currentActivations",
                    "groupId",
                    "id",
                    "modifiedBy",
                    "modifiedDate",
                    "name",
                    "policyType"
                  ],
                  "properties": {
                    "cloudletType": {
                      "description": "The two- or three- letter code of the Cloudlet that the shared policy is for. Shared policies are available for API Prioritization (`AP`), Edge Redirector (`ER`), Forward Rewrite (`FR`), Audience Segmentation (`AS`), Request Control (`IG`), Phased Release (`CD`) and Virtual Waiting Room (`VWR`).",
                      "type": "string",
                      "enum": [
                        "AP",
                        "ER",
                        "FR",
                        "AS",
                        "IG",
                        "CD",
                        "VWR"
                      ]
                    },
                    "createdBy": {
                      "description": "The username who created the policy.",
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the policy was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "currentActivations": {
                      "additionalProperties": false,
                      "description": "Information about the active policy version that's currently in use and the status of the most recent activation or deactivation operation on the policy's versions for the production and staging networks.",
                      "type": "object",
                      "required": [
                        "production",
                        "staging"
                      ],
                      "properties": {
                        "production": {
                          "additionalProperties": false,
                          "description": "The policy version number that's currently in use on this network and the status of the most recent activation or deactivation operation for this policy's versions.",
                          "type": "object",
                          "required": [
                            "effective",
                            "latest"
                          ],
                          "properties": {
                            "effective": {
                              "additionalProperties": false,
                              "description": "The status of the activation that's currently in use on this network, or `null` if the policy has no activations.",
                              "nullable": true,
                              "type": "object",
                              "required": [
                                "createdBy",
                                "createdDate",
                                "id",
                                "network",
                                "operation",
                                "policyId",
                                "policyVersion",
                                "status"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "The username who created the activation.",
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "failureDetails": {
                                  "description": "A detailed description of the reason why the activation failed.",
                                  "type": "string"
                                },
                                "finishDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in `failureDetails`.",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Identifies the activation.",
                                  "type": "integer"
                                },
                                "links": {
                                  "description": "Hypermedia links to help navigate through the result set.",
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                                    "type": "object",
                                    "required": [
                                      "href",
                                      "rel"
                                    ],
                                    "properties": {
                                      "href": {
                                        "description": "A relative path to the currently requested object or a specific page of the result set.",
                                        "type": "string"
                                      },
                                      "rel": {
                                        "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/links.yaml"
                                  }
                                },
                                "network": {
                                  "description": "The networks where you can activate or deactivate the policy version, either `PRODUCTION` or `STAGING`.",
                                  "type": "string",
                                  "enum": [
                                    "PRODUCTION",
                                    "STAGING"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/network-enum.yaml"
                                  }
                                },
                                "operation": {
                                  "description": "The operations that you can perform on a policy version, either `ACTIVATION` or `DEACTIVATION`.",
                                  "type": "string",
                                  "enum": [
                                    "ACTIVATION",
                                    "DEACTIVATION"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/activation-operation-enum.yaml"
                                  }
                                },
                                "policyId": {
                                  "description": "Identifies the shared policy.",
                                  "type": "integer"
                                },
                                "policyVersion": {
                                  "description": "The number of the policy version.",
                                  "type": "integer"
                                },
                                "policyVersionDeleted": {
                                  "description": "Indicates if the policy version is deleted.",
                                  "type": "boolean"
                                },
                                "status": {
                                  "description": "The status of the operation, either `IN_PROGRESS`, `SUCCESS`, or `FAILED`.",
                                  "type": "string",
                                  "enum": [
                                    "IN_PROGRESS",
                                    "SUCCESS",
                                    "FAILED"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/policy-activation.yaml"
                              }
                            },
                            "latest": {
                              "additionalProperties": false,
                              "description": "The status of the most recent activation or deactivation operation for the policy on this network. If the policy has no activations, `null` is returned.",
                              "nullable": true,
                              "type": "object",
                              "required": [
                                "createdBy",
                                "createdDate",
                                "id",
                                "network",
                                "operation",
                                "policyId",
                                "policyVersion",
                                "status"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "The username who created the activation.",
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "failureDetails": {
                                  "description": "A detailed description of the reason why the activation failed.",
                                  "type": "string"
                                },
                                "finishDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in `failureDetails`.",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Identifies the activation.",
                                  "type": "integer"
                                },
                                "links": {
                                  "description": "Hypermedia links to help navigate through the result set.",
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                                    "type": "object",
                                    "required": [
                                      "href",
                                      "rel"
                                    ],
                                    "properties": {
                                      "href": {
                                        "description": "A relative path to the currently requested object or a specific page of the result set.",
                                        "type": "string"
                                      },
                                      "rel": {
                                        "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/links.yaml"
                                  }
                                },
                                "network": {
                                  "description": "The networks where you can activate or deactivate the policy version, either `PRODUCTION` or `STAGING`.",
                                  "type": "string",
                                  "enum": [
                                    "PRODUCTION",
                                    "STAGING"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/network-enum.yaml"
                                  }
                                },
                                "operation": {
                                  "description": "The operations that you can perform on a policy version, either `ACTIVATION` or `DEACTIVATION`.",
                                  "type": "string",
                                  "enum": [
                                    "ACTIVATION",
                                    "DEACTIVATION"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/activation-operation-enum.yaml"
                                  }
                                },
                                "policyId": {
                                  "description": "Identifies the shared policy.",
                                  "type": "integer"
                                },
                                "policyVersion": {
                                  "description": "The number of the policy version.",
                                  "type": "integer"
                                },
                                "policyVersionDeleted": {
                                  "description": "Indicates if the policy version is deleted.",
                                  "type": "boolean"
                                },
                                "status": {
                                  "description": "The status of the operation, either `IN_PROGRESS`, `SUCCESS`, or `FAILED`.",
                                  "type": "string",
                                  "enum": [
                                    "IN_PROGRESS",
                                    "SUCCESS",
                                    "FAILED"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/policy-activation.yaml"
                              }
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/network-status.yaml"
                          }
                        },
                        "staging": {
                          "additionalProperties": false,
                          "description": "The policy version number that's currently in use on this network and the status of the most recent activation or deactivation operation for this policy's versions.",
                          "type": "object",
                          "required": [
                            "effective",
                            "latest"
                          ],
                          "properties": {
                            "effective": {
                              "additionalProperties": false,
                              "description": "The status of the activation that's currently in use on this network, or `null` if the policy has no activations.",
                              "nullable": true,
                              "type": "object",
                              "required": [
                                "createdBy",
                                "createdDate",
                                "id",
                                "network",
                                "operation",
                                "policyId",
                                "policyVersion",
                                "status"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "The username who created the activation.",
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "failureDetails": {
                                  "description": "A detailed description of the reason why the activation failed.",
                                  "type": "string"
                                },
                                "finishDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in `failureDetails`.",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Identifies the activation.",
                                  "type": "integer"
                                },
                                "links": {
                                  "description": "Hypermedia links to help navigate through the result set.",
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                                    "type": "object",
                                    "required": [
                                      "href",
                                      "rel"
                                    ],
                                    "properties": {
                                      "href": {
                                        "description": "A relative path to the currently requested object or a specific page of the result set.",
                                        "type": "string"
                                      },
                                      "rel": {
                                        "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/links.yaml"
                                  }
                                },
                                "network": {
                                  "description": "The networks where you can activate or deactivate the policy version, either `PRODUCTION` or `STAGING`.",
                                  "type": "string",
                                  "enum": [
                                    "PRODUCTION",
                                    "STAGING"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/network-enum.yaml"
                                  }
                                },
                                "operation": {
                                  "description": "The operations that you can perform on a policy version, either `ACTIVATION` or `DEACTIVATION`.",
                                  "type": "string",
                                  "enum": [
                                    "ACTIVATION",
                                    "DEACTIVATION"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/activation-operation-enum.yaml"
                                  }
                                },
                                "policyId": {
                                  "description": "Identifies the shared policy.",
                                  "type": "integer"
                                },
                                "policyVersion": {
                                  "description": "The number of the policy version.",
                                  "type": "integer"
                                },
                                "policyVersionDeleted": {
                                  "description": "Indicates if the policy version is deleted.",
                                  "type": "boolean"
                                },
                                "status": {
                                  "description": "The status of the operation, either `IN_PROGRESS`, `SUCCESS`, or `FAILED`.",
                                  "type": "string",
                                  "enum": [
                                    "IN_PROGRESS",
                                    "SUCCESS",
                                    "FAILED"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/policy-activation.yaml"
                              }
                            },
                            "latest": {
                              "additionalProperties": false,
                              "description": "The status of the most recent activation or deactivation operation for the policy on this network. If the policy has no activations, `null` is returned.",
                              "nullable": true,
                              "type": "object",
                              "required": [
                                "createdBy",
                                "createdDate",
                                "id",
                                "network",
                                "operation",
                                "policyId",
                                "policyVersion",
                                "status"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "The username who created the activation.",
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "failureDetails": {
                                  "description": "A detailed description of the reason why the activation failed.",
                                  "type": "string"
                                },
                                "finishDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in `failureDetails`.",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Identifies the activation.",
                                  "type": "integer"
                                },
                                "links": {
                                  "description": "Hypermedia links to help navigate through the result set.",
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                                    "type": "object",
                                    "required": [
                                      "href",
                                      "rel"
                                    ],
                                    "properties": {
                                      "href": {
                                        "description": "A relative path to the currently requested object or a specific page of the result set.",
                                        "type": "string"
                                      },
                                      "rel": {
                                        "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/links.yaml"
                                  }
                                },
                                "network": {
                                  "description": "The networks where you can activate or deactivate the policy version, either `PRODUCTION` or `STAGING`.",
                                  "type": "string",
                                  "enum": [
                                    "PRODUCTION",
                                    "STAGING"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/network-enum.yaml"
                                  }
                                },
                                "operation": {
                                  "description": "The operations that you can perform on a policy version, either `ACTIVATION` or `DEACTIVATION`.",
                                  "type": "string",
                                  "enum": [
                                    "ACTIVATION",
                                    "DEACTIVATION"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/activation-operation-enum.yaml"
                                  }
                                },
                                "policyId": {
                                  "description": "Identifies the shared policy.",
                                  "type": "integer"
                                },
                                "policyVersion": {
                                  "description": "The number of the policy version.",
                                  "type": "integer"
                                },
                                "policyVersionDeleted": {
                                  "description": "Indicates if the policy version is deleted.",
                                  "type": "boolean"
                                },
                                "status": {
                                  "description": "The status of the operation, either `IN_PROGRESS`, `SUCCESS`, or `FAILED`.",
                                  "type": "string",
                                  "enum": [
                                    "IN_PROGRESS",
                                    "SUCCESS",
                                    "FAILED"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/policy-activation.yaml"
                              }
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/network-status.yaml"
                          }
                        }
                      }
                    },
                    "description": {
                      "description": "A human-readable label for the policy.",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "Identifies the group. See [About group IDs](https://techdocs.akamai.com/cloudlets/reference/about-group-ids).",
                      "type": "integer"
                    },
                    "id": {
                      "description": "Identifies the policy.",
                      "type": "integer"
                    },
                    "links": {
                      "description": "Hypermedia links to help navigate through the result set.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                        "type": "object",
                        "required": [
                          "href",
                          "rel"
                        ],
                        "properties": {
                          "href": {
                            "description": "A relative path to the currently requested object or a specific page of the result set.",
                            "type": "string"
                          },
                          "rel": {
                            "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                            "type": "string"
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/links.yaml"
                      }
                    },
                    "modifiedBy": {
                      "description": "The username who last modified the policy.",
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the policy was last modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the policy. You use this value to refer to a shared policy in Property Manager.",
                      "type": "string"
                    },
                    "policyType": {
                      "description": "The type of policy. This API lets you create only `SHARED` policies.",
                      "type": "string",
                      "enum": [
                        "SHARED"
                      ]
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/policy.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Invalid request parameters, or problems parsing or validating the request object.](https://techdocs.akamai.com/cloudlets/reference/400)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a38da5f6-457c-4189-b4ae-9142623a7d41",
                  "status": 400,
                  "title": "Validation failed",
                  "type": "/cloudlets/v3/error-types/validation-failed",
                  "errors": [
                    {
                      "detail": "Value of `groupId` must be greater than 0.",
                      "invalidField": "groupId",
                      "invalidValue": -120,
                      "title": "Validation failed"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          },
          "403": {
            "description": "[No permission to access this resource.](https://techdocs.akamai.com/cloudlets/reference/403)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "cc6e9850-c426-4e17-8e33-cab96beccad8",
                  "status": 403,
                  "title": "Access Denied",
                  "type": "/cloudlets/v3/error-types/access-denied",
                  "errors": [
                    {
                      "detail": "User does not have view capability for Edge Redirector Cloudlet in group 120.",
                      "title": "Access Denied"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          },
          "404": {
            "description": "[Resource not found.](https://techdocs.akamai.com/cloudlets/reference/404)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a38da5f6-457c-4189-b4ae-9142623a7d41",
                  "status": 404,
                  "title": "Not found",
                  "type": "/cloudlets/v3/error-types/not-found",
                  "errors": [
                    {
                      "detail": "Policy with id `300001` not found.",
                      "title": "Not found"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Deletes an existing Cloudlets policy. If you don't already have the `policyId`, run the [List shared policies](https://techdocs.akamai.com/cloudlets/reference/get-policies) operation and store the relevant `id` value. You can't delete a policy if any of its versions is active or being activated on the staging or production networks.",
        "operationId": "delete-policy",
        "summary": "Remove a policy",
        "tags": [
          "Policies"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/delete-policy"
        },
        "responses": {
          "204": {
            "description": "The Cloudlets policy was deleted.",
            "content": {
              "*/*": {}
            }
          },
          "403": {
            "description": "[User is not authenticated.](https://techdocs.akamai.com/cloudlets/reference/403)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "cc6e9850-c426-4e17-8e33-cab96beccad8",
                  "status": 403,
                  "title": "Access Denied",
                  "type": "/cloudlets/v3/error-types/access-denied",
                  "errors": [
                    {
                      "detail": "User does not have view capability for Edge Redirector Cloudlet in group 120.",
                      "title": "Access Denied"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          },
          "404": {
            "description": "[Resource not found.](https://techdocs.akamai.com/cloudlets/reference/404)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a38da5f6-457c-4189-b4ae-9142623a7d41",
                  "status": 404,
                  "title": "Not found",
                  "type": "/cloudlets/v3/error-types/not-found",
                  "errors": [
                    {
                      "detail": "Policy with id `300001` not found.",
                      "title": "Not found"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Identifies the shared policy.",
          "example": "{{policyId}}",
          "in": "path",
          "name": "policyId",
          "required": true,
          "schema": {
            "example": 1001,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/policyId-path.yaml"
          }
        }
      ]
    },
    "/policies/{policyId}/activations": {
      "post": {
        "description": "Asynchronously activates or deactivates the selected Cloudlet policy version on the staging or production networks. When a policy version becomes active on the network, the previously active version gets automatically deactivated. Activating a policy version returns the `id` of the activation, which you can store and use to run the [Get status for an activation](https://techdocs.akamai.com/cloudlets/reference/get-policy-activation) operation to check the status value. You can activate a policy on each network only after any previous activations have completed, otherwise you get a 409 error.",
        "operationId": "post-policy-activations",
        "summary": "Activate a policy version",
        "tags": [
          "Activations"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/post-policy-activations"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "network": "PRODUCTION",
                "operation": "ACTIVATION",
                "policyVersion": 1
              },
              "schema": {
                "additionalProperties": false,
                "type": "object",
                "required": [
                  "network",
                  "operation",
                  "policyVersion"
                ],
                "properties": {
                  "network": {
                    "description": "The networks where you can activate or deactivate the policy version, either `PRODUCTION` or `STAGING`.",
                    "example": "{{network}}",
                    "type": "string",
                    "enum": [
                      "PRODUCTION",
                      "STAGING"
                    ],
                    "x-akamai": {
                      "file-path": "schemas/network-enum.yaml"
                    }
                  },
                  "operation": {
                    "description": "The operations that you can perform on a policy version, either `ACTIVATION` or `DEACTIVATION`.",
                    "example": "{{operation}}",
                    "type": "string",
                    "enum": [
                      "ACTIVATION",
                      "DEACTIVATION"
                    ],
                    "x-akamai": {
                      "file-path": "schemas/activation-operation-enum.yaml"
                    }
                  },
                  "policyVersion": {
                    "description": "Identifies the policy version.",
                    "example": "{{policyVersion}}",
                    "type": "integer"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/post-policy-activations-request.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "The status of an activation or deactivation operation for a policy version.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "mrossi",
                  "createdDate": "2020-10-01T12:35:24.520Z",
                  "finishDate": "2020-10-01T12:35:25.962Z",
                  "id": 300001,
                  "network": "PRODUCTION",
                  "operation": "ACTIVATION",
                  "policyId": 1001,
                  "policyVersion": 1,
                  "policyVersionDeleted": false,
                  "status": "SUCCESS",
                  "links": [
                    {
                      "href": "/cloudlets/v3/policies/1001/activations/300001",
                      "rel": "self"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The status of an activation or deactivation operation for a policy version.",
                  "nullable": true,
                  "type": "object",
                  "required": [
                    "createdBy",
                    "createdDate",
                    "id",
                    "network",
                    "operation",
                    "policyId",
                    "policyVersion",
                    "status"
                  ],
                  "properties": {
                    "createdBy": {
                      "description": "The username who created the activation.",
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the activation was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "failureDetails": {
                      "description": "A detailed description of the reason why the activation failed.",
                      "type": "string"
                    },
                    "finishDate": {
                      "description": "ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in `failureDetails`.",
                      "format": "date-time",
                      "nullable": true,
                      "type": "string"
                    },
                    "id": {
                      "description": "Identifies the activation.",
                      "type": "integer"
                    },
                    "links": {
                      "description": "Hypermedia links to help navigate through the result set.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                        "type": "object",
                        "required": [
                          "href",
                          "rel"
                        ],
                        "properties": {
                          "href": {
                            "description": "A relative path to the currently requested object or a specific page of the result set.",
                            "type": "string"
                          },
                          "rel": {
                            "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                            "type": "string"
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/links.yaml"
                      }
                    },
                    "network": {
                      "description": "The networks where you can activate or deactivate the policy version, either `PRODUCTION` or `STAGING`.",
                      "type": "string",
                      "enum": [
                        "PRODUCTION",
                        "STAGING"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/network-enum.yaml"
                      }
                    },
                    "operation": {
                      "description": "The operations that you can perform on a policy version, either `ACTIVATION` or `DEACTIVATION`.",
                      "type": "string",
                      "enum": [
                        "ACTIVATION",
                        "DEACTIVATION"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/activation-operation-enum.yaml"
                      }
                    },
                    "policyId": {
                      "description": "Identifies the shared policy.",
                      "type": "integer"
                    },
                    "policyVersion": {
                      "description": "The number of the policy version.",
                      "type": "integer"
                    },
                    "policyVersionDeleted": {
                      "description": "Indicates if the policy version is deleted.",
                      "type": "boolean"
                    },
                    "status": {
                      "description": "The status of the operation, either `IN_PROGRESS`, `SUCCESS`, or `FAILED`.",
                      "type": "string",
                      "enum": [
                        "IN_PROGRESS",
                        "SUCCESS",
                        "FAILED"
                      ]
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/policy-activation.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Invalid request parameters, or problems parsing or validating the request object.](https://techdocs.akamai.com/cloudlets/reference/400)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "ab8ef931-9b2e-4337-8878-cfe3c7eaafd0",
                  "status": 400,
                  "title": "Validation failed",
                  "type": "/cloudlets/v3/error-types/validation-failed",
                  "errors": [
                    {
                      "detail": "Unable to activate because a previous activation for this policy is pending.",
                      "title": "Validation failed"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          },
          "403": {
            "description": "[No permission to access this resource.](https://techdocs.akamai.com/cloudlets/reference/403)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "579e9f73-688d-4887-8f5b-5a2dd789b29e",
                  "status": 403,
                  "title": "Access Denied",
                  "type": "/cloudlets/v3/error-types/access-denied",
                  "errors": [
                    {
                      "detail": "User does not have edit capability for Edge Redirector Cloudlet in group 1000.",
                      "title": "Access Denied"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          },
          "404": {
            "description": "[Resource not found.](https://techdocs.akamai.com/cloudlets/reference/404)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "ec37d23b-b3c1-45f9-9f49-5695da2738a4",
                  "status": 404,
                  "title": "Not found",
                  "type": "/cloudlets/v3/error-types/not-found",
                  "errors": [
                    {
                      "detail": "Policy Version `100` not found in Policy `100000`.",
                      "title": "Not found"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Returns the complete activation history for the selected policy.",
        "operationId": "get-policy-activations",
        "summary": "List policy activations",
        "tags": [
          "Activations"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-policy-activations"
        },
        "responses": {
          "200": {
            "description": "Returns the policy activation history.",
            "content": {
              "application/json": {
                "example": {
                  "page": {
                    "number": 0,
                    "size": 1000,
                    "totalElements": 4,
                    "totalPages": 1
                  },
                  "content": [
                    {
                      "createdBy": "mrossi",
                      "createdDate": "2020-10-01T12:35:24.520Z",
                      "finishDate": "2020-10-01T12:35:25.962Z",
                      "id": 300001,
                      "network": "PRODUCTION",
                      "operation": "ACTIVATION",
                      "policyId": 1001,
                      "policyVersion": 1,
                      "policyVersionDeleted": false,
                      "status": "IN_PROGRESS",
                      "links": [
                        {
                          "href": "/cloudlets/v3/policies/1001/activations/300001",
                          "rel": "self"
                        }
                      ]
                    }
                  ],
                  "links": [
                    {
                      "href": "/cloudlets/v3/policies/1001/activations?page=0&size=1000",
                      "rel": "self"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "",
                  "type": "object",
                  "required": [
                    "content",
                    "page"
                  ],
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "The status of an activation or deactivation operation for a policy version.",
                        "nullable": true,
                        "type": "object",
                        "required": [
                          "createdBy",
                          "createdDate",
                          "id",
                          "network",
                          "operation",
                          "policyId",
                          "policyVersion",
                          "status"
                        ],
                        "properties": {
                          "createdBy": {
                            "description": "The username who created the activation.",
                            "type": "string"
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the activation was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "failureDetails": {
                            "description": "A detailed description of the reason why the activation failed.",
                            "type": "string"
                          },
                          "finishDate": {
                            "description": "ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in `failureDetails`.",
                            "format": "date-time",
                            "nullable": true,
                            "type": "string"
                          },
                          "id": {
                            "description": "Identifies the activation.",
                            "type": "integer"
                          },
                          "links": {
                            "description": "Hypermedia links to help navigate through the result set.",
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                              "type": "object",
                              "required": [
                                "href",
                                "rel"
                              ],
                              "properties": {
                                "href": {
                                  "description": "A relative path to the currently requested object or a specific page of the result set.",
                                  "type": "string"
                                },
                                "rel": {
                                  "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                                  "type": "string"
                                }
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/links.yaml"
                            }
                          },
                          "network": {
                            "description": "The networks where you can activate or deactivate the policy version, either `PRODUCTION` or `STAGING`.",
                            "type": "string",
                            "enum": [
                              "PRODUCTION",
                              "STAGING"
                            ],
                            "x-akamai": {
                              "file-path": "schemas/network-enum.yaml"
                            }
                          },
                          "operation": {
                            "description": "The operations that you can perform on a policy version, either `ACTIVATION` or `DEACTIVATION`.",
                            "type": "string",
                            "enum": [
                              "ACTIVATION",
                              "DEACTIVATION"
                            ],
                            "x-akamai": {
                              "file-path": "schemas/activation-operation-enum.yaml"
                            }
                          },
                          "policyId": {
                            "description": "Identifies the shared policy.",
                            "type": "integer"
                          },
                          "policyVersion": {
                            "description": "The number of the policy version.",
                            "type": "integer"
                          },
                          "policyVersionDeleted": {
                            "description": "Indicates if the policy version is deleted.",
                            "type": "boolean"
                          },
                          "status": {
                            "description": "The status of the operation, either `IN_PROGRESS`, `SUCCESS`, or `FAILED`.",
                            "type": "string",
                            "enum": [
                              "IN_PROGRESS",
                              "SUCCESS",
                              "FAILED"
                            ]
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/policy-activation.yaml"
                        }
                      }
                    },
                    "links": {
                      "description": "Hypermedia links to help navigate through the result set.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                        "type": "object",
                        "required": [
                          "href",
                          "rel"
                        ],
                        "properties": {
                          "href": {
                            "description": "A relative path to the currently requested object or a specific page of the result set.",
                            "type": "string"
                          },
                          "rel": {
                            "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                            "type": "string"
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/links.yaml"
                      }
                    },
                    "page": {
                      "additionalProperties": false,
                      "description": "Contains informational data about pagination.",
                      "type": "object",
                      "required": [
                        "totalPages",
                        "totalElements",
                        "number",
                        "size"
                      ],
                      "properties": {
                        "number": {
                          "description": "Specifies the number of the returned page.",
                          "type": "integer"
                        },
                        "size": {
                          "description": "Specifies the number of objects on a page, at least `10` objects.",
                          "type": "integer"
                        },
                        "totalElements": {
                          "description": "Specifies the total number of the available objects.",
                          "type": "integer"
                        },
                        "totalPages": {
                          "description": "Specifies the total number of the available pages.",
                          "type": "integer"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/page-head.yaml"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-policy-activations-response.yaml"
                  }
                }
              }
            }
          },
          "403": {
            "description": "[No permission to access this resource.](https://techdocs.akamai.com/cloudlets/reference/403)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "579e9f73-688d-4887-8f5b-5a2dd789b29e",
                  "status": 403,
                  "title": "Access Denied",
                  "type": "/cloudlets/v3/error-types/access-denied",
                  "errors": [
                    {
                      "detail": "User does not have edit capability for Edge Redirector Cloudlet in group 1000.",
                      "title": "Access Denied"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          },
          "404": {
            "description": "[Resource not found.](https://techdocs.akamai.com/cloudlets/reference/404)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "ec37d23b-b3c1-45f9-9f49-5695da2738a4",
                  "status": 404,
                  "title": "Not found",
                  "type": "/cloudlets/v3/error-types/not-found",
                  "errors": [
                    {
                      "detail": "Policy Version `100` not found in Policy `100000`.",
                      "title": "Not found"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Specifies a page number for batched results, starting at zero.",
            "example": "{{page}}",
            "in": "query",
            "name": "page",
            "required": true,
            "schema": {
              "example": 3,
              "minimum": 0,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/page-query.yaml"
            }
          },
          {
            "description": "Specifies the number of objects on a page, at least `10` objects.",
            "example": "{{size}}",
            "in": "query",
            "name": "size",
            "required": true,
            "schema": {
              "example": 100,
              "minimum": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/size-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Identifies the shared policy.",
          "example": "{{policyId}}",
          "in": "path",
          "name": "policyId",
          "required": true,
          "schema": {
            "example": 1001,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/policyId-path.yaml"
          }
        }
      ]
    },
    "/policies/{policyId}/activations/{activationId}": {
      "get": {
        "description": "Returns the status of an activation. See [Activation status](https://techdocs.akamai.com/cloudlets/reference/activation-status).",
        "operationId": "get-policy-activation",
        "summary": "Get status for an activation",
        "tags": [
          "Activations"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-policy-activation"
        },
        "responses": {
          "200": {
            "description": "The status of an activation or deactivation operation for a policy version.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "jperez",
                  "createdDate": "2020-10-01T12:35:24.520Z",
                  "finishDate": "2020-10-01T12:35:25.962Z",
                  "id": 300001,
                  "network": "PRODUCTION",
                  "operation": "ACTIVATION",
                  "policyId": 1001,
                  "policyVersion": 1,
                  "policyVersionDeleted": false,
                  "status": "SUCCESS",
                  "links": [
                    {
                      "href": "/cloudlets/v3/policies/1001/activations/300001",
                      "rel": "self"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The status of an activation or deactivation operation for a policy version.",
                  "nullable": true,
                  "type": "object",
                  "required": [
                    "createdBy",
                    "createdDate",
                    "id",
                    "network",
                    "operation",
                    "policyId",
                    "policyVersion",
                    "status"
                  ],
                  "properties": {
                    "createdBy": {
                      "description": "The username who created the activation.",
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the activation was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "failureDetails": {
                      "description": "A detailed description of the reason why the activation failed.",
                      "type": "string"
                    },
                    "finishDate": {
                      "description": "ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in `failureDetails`.",
                      "format": "date-time",
                      "nullable": true,
                      "type": "string"
                    },
                    "id": {
                      "description": "Identifies the activation.",
                      "type": "integer"
                    },
                    "links": {
                      "description": "Hypermedia links to help navigate through the result set.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                        "type": "object",
                        "required": [
                          "href",
                          "rel"
                        ],
                        "properties": {
                          "href": {
                            "description": "A relative path to the currently requested object or a specific page of the result set.",
                            "type": "string"
                          },
                          "rel": {
                            "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                            "type": "string"
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/links.yaml"
                      }
                    },
                    "network": {
                      "description": "The networks where you can activate or deactivate the policy version, either `PRODUCTION` or `STAGING`.",
                      "type": "string",
                      "enum": [
                        "PRODUCTION",
                        "STAGING"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/network-enum.yaml"
                      }
                    },
                    "operation": {
                      "description": "The operations that you can perform on a policy version, either `ACTIVATION` or `DEACTIVATION`.",
                      "type": "string",
                      "enum": [
                        "ACTIVATION",
                        "DEACTIVATION"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/activation-operation-enum.yaml"
                      }
                    },
                    "policyId": {
                      "description": "Identifies the shared policy.",
                      "type": "integer"
                    },
                    "policyVersion": {
                      "description": "The number of the policy version.",
                      "type": "integer"
                    },
                    "policyVersionDeleted": {
                      "description": "Indicates if the policy version is deleted.",
                      "type": "boolean"
                    },
                    "status": {
                      "description": "The status of the operation, either `IN_PROGRESS`, `SUCCESS`, or `FAILED`.",
                      "type": "string",
                      "enum": [
                        "IN_PROGRESS",
                        "SUCCESS",
                        "FAILED"
                      ]
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/policy-activation.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Identifies the policy activation.",
          "example": "{{activationId}}",
          "in": "path",
          "name": "activationId",
          "required": true,
          "schema": {
            "example": 3001,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/activationId-path.yaml"
          }
        },
        {
          "description": "Identifies the shared policy.",
          "example": "{{policyId}}",
          "in": "path",
          "name": "policyId",
          "required": true,
          "schema": {
            "example": 1001,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/policyId-path.yaml"
          }
        }
      ]
    },
    "/policies/{policyId}/clone": {
      "post": {
        "description": "Clones the staging, production, and last modified versions of a non-shared (API v2) or shared policy into a new shared policy. You can also specify any additional versions that you want to clone into the new shared policy. The policy ID is required. If you don't already have the policy ID, use [List shared policies](https://techdocs.akamai.com/cloudlets/reference/get-policies) or [List policies](https://techdocs.akamai.com/cloudlets/v2/reference/get-policies) and note the `id` or `policyId` value. When cloning a non-shared policy to a shared policy, a group ID (`groupId`) is required. Policies created using API v2 do not require a `groupId`, so the non-shared policy that you are cloning may or may not have this data member. If the policy you are cloning doesn't have a `groupId`, assign one while performing this operation. To check if the non-shared policy has a `groupId`, see [List policies](https://techdocs.akamai.com/cloudlets/v2/reference/get-policies).",
        "operationId": "post-policy-clone",
        "summary": "Clone a policy as a shared policy",
        "tags": [
          "Policies"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/post-policy-clone"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "groupId": 1,
                "newName": "static_assets_redirector_shared",
                "additionalVersions": [
                  3,
                  5
                ]
              },
              "schema": {
                "additionalProperties": false,
                "type": "object",
                "required": [
                  "groupId",
                  "newName"
                ],
                "properties": {
                  "additionalVersions": {
                    "description": "Any additional versions that you want to clone into the new shared policy.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "groupId": {
                    "description": "Identifies the group where you want to create the shared policy. See [About group IDs](https://techdocs.akamai.com/cloudlets/reference/about-group-ids).",
                    "example": "{{groupId}}",
                    "type": "integer"
                  },
                  "newName": {
                    "description": "The name of the new shared policy.",
                    "example": "{{newName}}",
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/post-policy-clone-request.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contains information about a shared policy.",
            "content": {
              "application/json": {
                "example": {
                  "cloudletType": "ER",
                  "createdBy": "jsmith",
                  "createdDate": "2020-10-01T12:35:22.500Z",
                  "description": "ER policy for static assets",
                  "groupId": 5,
                  "id": 1001,
                  "modifiedBy": "adevi",
                  "modifiedDate": "2020-10-01T12:35:22.500Z",
                  "name": "static_assets_redirector",
                  "policyType": "SHARED",
                  "currentActivations": {
                    "production": {
                      "effective": {
                        "createdBy": "adevi",
                        "createdDate": "2020-10-01T12:35:24.520Z",
                        "finishDate": "2020-10-01T12:35:25.962Z",
                        "id": 300001,
                        "network": "PRODUCTION",
                        "operation": "ACTIVATION",
                        "policyId": 1001,
                        "policyVersion": 1,
                        "status": "SUCCESS",
                        "links": [
                          {
                            "href": "/cloudlets/v3/policies/1001/activations/300001",
                            "rel": "self"
                          }
                        ]
                      },
                      "latest": {
                        "createdBy": "adevi",
                        "createdDate": "2020-10-01T12:35:24.520Z",
                        "finishDate": "2020-10-01T12:35:25.962Z",
                        "id": 300001,
                        "network": "PRODUCTION",
                        "operation": "ACTIVATION",
                        "policyId": 1001,
                        "policyVersion": 1,
                        "status": "SUCCESS",
                        "links": [
                          {
                            "href": "/cloudlets/v3/policies/1001/activations/300001",
                            "rel": "self"
                          }
                        ]
                      }
                    },
                    "staging": {
                      "effective": null,
                      "latest": null
                    }
                  },
                  "links": [
                    {
                      "href": "/cloudlets/v3/policies/1001",
                      "rel": "self"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about a shared policy.",
                  "type": "object",
                  "required": [
                    "cloudletType",
                    "createdBy",
                    "createdDate",
                    "currentActivations",
                    "groupId",
                    "id",
                    "modifiedBy",
                    "modifiedDate",
                    "name",
                    "policyType"
                  ],
                  "properties": {
                    "cloudletType": {
                      "description": "The two- or three- letter code of the Cloudlet that the shared policy is for. Shared policies are available for API Prioritization (`AP`), Edge Redirector (`ER`), Forward Rewrite (`FR`), Audience Segmentation (`AS`), Request Control (`IG`), Phased Release (`CD`) and Virtual Waiting Room (`VWR`).",
                      "type": "string",
                      "enum": [
                        "AP",
                        "ER",
                        "FR",
                        "AS",
                        "IG",
                        "CD",
                        "VWR"
                      ]
                    },
                    "createdBy": {
                      "description": "The username who created the policy.",
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the policy was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "currentActivations": {
                      "additionalProperties": false,
                      "description": "Information about the active policy version that's currently in use and the status of the most recent activation or deactivation operation on the policy's versions for the production and staging networks.",
                      "type": "object",
                      "required": [
                        "production",
                        "staging"
                      ],
                      "properties": {
                        "production": {
                          "additionalProperties": false,
                          "description": "The policy version number that's currently in use on this network and the status of the most recent activation or deactivation operation for this policy's versions.",
                          "type": "object",
                          "required": [
                            "effective",
                            "latest"
                          ],
                          "properties": {
                            "effective": {
                              "additionalProperties": false,
                              "description": "The status of the activation that's currently in use on this network, or `null` if the policy has no activations.",
                              "nullable": true,
                              "type": "object",
                              "required": [
                                "createdBy",
                                "createdDate",
                                "id",
                                "network",
                                "operation",
                                "policyId",
                                "policyVersion",
                                "status"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "The username who created the activation.",
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "failureDetails": {
                                  "description": "A detailed description of the reason why the activation failed.",
                                  "type": "string"
                                },
                                "finishDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in `failureDetails`.",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Identifies the activation.",
                                  "type": "integer"
                                },
                                "links": {
                                  "description": "Hypermedia links to help navigate through the result set.",
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                                    "type": "object",
                                    "required": [
                                      "href",
                                      "rel"
                                    ],
                                    "properties": {
                                      "href": {
                                        "description": "A relative path to the currently requested object or a specific page of the result set.",
                                        "type": "string"
                                      },
                                      "rel": {
                                        "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/links.yaml"
                                  }
                                },
                                "network": {
                                  "description": "The networks where you can activate or deactivate the policy version, either `PRODUCTION` or `STAGING`.",
                                  "type": "string",
                                  "enum": [
                                    "PRODUCTION",
                                    "STAGING"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/network-enum.yaml"
                                  }
                                },
                                "operation": {
                                  "description": "The operations that you can perform on a policy version, either `ACTIVATION` or `DEACTIVATION`.",
                                  "type": "string",
                                  "enum": [
                                    "ACTIVATION",
                                    "DEACTIVATION"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/activation-operation-enum.yaml"
                                  }
                                },
                                "policyId": {
                                  "description": "Identifies the shared policy.",
                                  "type": "integer"
                                },
                                "policyVersion": {
                                  "description": "The number of the policy version.",
                                  "type": "integer"
                                },
                                "policyVersionDeleted": {
                                  "description": "Indicates if the policy version is deleted.",
                                  "type": "boolean"
                                },
                                "status": {
                                  "description": "The status of the operation, either `IN_PROGRESS`, `SUCCESS`, or `FAILED`.",
                                  "type": "string",
                                  "enum": [
                                    "IN_PROGRESS",
                                    "SUCCESS",
                                    "FAILED"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/policy-activation.yaml"
                              }
                            },
                            "latest": {
                              "additionalProperties": false,
                              "description": "The status of the most recent activation or deactivation operation for the policy on this network. If the policy has no activations, `null` is returned.",
                              "nullable": true,
                              "type": "object",
                              "required": [
                                "createdBy",
                                "createdDate",
                                "id",
                                "network",
                                "operation",
                                "policyId",
                                "policyVersion",
                                "status"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "The username who created the activation.",
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "failureDetails": {
                                  "description": "A detailed description of the reason why the activation failed.",
                                  "type": "string"
                                },
                                "finishDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in `failureDetails`.",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Identifies the activation.",
                                  "type": "integer"
                                },
                                "links": {
                                  "description": "Hypermedia links to help navigate through the result set.",
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                                    "type": "object",
                                    "required": [
                                      "href",
                                      "rel"
                                    ],
                                    "properties": {
                                      "href": {
                                        "description": "A relative path to the currently requested object or a specific page of the result set.",
                                        "type": "string"
                                      },
                                      "rel": {
                                        "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/links.yaml"
                                  }
                                },
                                "network": {
                                  "description": "The networks where you can activate or deactivate the policy version, either `PRODUCTION` or `STAGING`.",
                                  "type": "string",
                                  "enum": [
                                    "PRODUCTION",
                                    "STAGING"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/network-enum.yaml"
                                  }
                                },
                                "operation": {
                                  "description": "The operations that you can perform on a policy version, either `ACTIVATION` or `DEACTIVATION`.",
                                  "type": "string",
                                  "enum": [
                                    "ACTIVATION",
                                    "DEACTIVATION"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/activation-operation-enum.yaml"
                                  }
                                },
                                "policyId": {
                                  "description": "Identifies the shared policy.",
                                  "type": "integer"
                                },
                                "policyVersion": {
                                  "description": "The number of the policy version.",
                                  "type": "integer"
                                },
                                "policyVersionDeleted": {
                                  "description": "Indicates if the policy version is deleted.",
                                  "type": "boolean"
                                },
                                "status": {
                                  "description": "The status of the operation, either `IN_PROGRESS`, `SUCCESS`, or `FAILED`.",
                                  "type": "string",
                                  "enum": [
                                    "IN_PROGRESS",
                                    "SUCCESS",
                                    "FAILED"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/policy-activation.yaml"
                              }
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/network-status.yaml"
                          }
                        },
                        "staging": {
                          "additionalProperties": false,
                          "description": "The policy version number that's currently in use on this network and the status of the most recent activation or deactivation operation for this policy's versions.",
                          "type": "object",
                          "required": [
                            "effective",
                            "latest"
                          ],
                          "properties": {
                            "effective": {
                              "additionalProperties": false,
                              "description": "The status of the activation that's currently in use on this network, or `null` if the policy has no activations.",
                              "nullable": true,
                              "type": "object",
                              "required": [
                                "createdBy",
                                "createdDate",
                                "id",
                                "network",
                                "operation",
                                "policyId",
                                "policyVersion",
                                "status"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "The username who created the activation.",
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "failureDetails": {
                                  "description": "A detailed description of the reason why the activation failed.",
                                  "type": "string"
                                },
                                "finishDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in `failureDetails`.",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Identifies the activation.",
                                  "type": "integer"
                                },
                                "links": {
                                  "description": "Hypermedia links to help navigate through the result set.",
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                                    "type": "object",
                                    "required": [
                                      "href",
                                      "rel"
                                    ],
                                    "properties": {
                                      "href": {
                                        "description": "A relative path to the currently requested object or a specific page of the result set.",
                                        "type": "string"
                                      },
                                      "rel": {
                                        "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/links.yaml"
                                  }
                                },
                                "network": {
                                  "description": "The networks where you can activate or deactivate the policy version, either `PRODUCTION` or `STAGING`.",
                                  "type": "string",
                                  "enum": [
                                    "PRODUCTION",
                                    "STAGING"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/network-enum.yaml"
                                  }
                                },
                                "operation": {
                                  "description": "The operations that you can perform on a policy version, either `ACTIVATION` or `DEACTIVATION`.",
                                  "type": "string",
                                  "enum": [
                                    "ACTIVATION",
                                    "DEACTIVATION"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/activation-operation-enum.yaml"
                                  }
                                },
                                "policyId": {
                                  "description": "Identifies the shared policy.",
                                  "type": "integer"
                                },
                                "policyVersion": {
                                  "description": "The number of the policy version.",
                                  "type": "integer"
                                },
                                "policyVersionDeleted": {
                                  "description": "Indicates if the policy version is deleted.",
                                  "type": "boolean"
                                },
                                "status": {
                                  "description": "The status of the operation, either `IN_PROGRESS`, `SUCCESS`, or `FAILED`.",
                                  "type": "string",
                                  "enum": [
                                    "IN_PROGRESS",
                                    "SUCCESS",
                                    "FAILED"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/policy-activation.yaml"
                              }
                            },
                            "latest": {
                              "additionalProperties": false,
                              "description": "The status of the most recent activation or deactivation operation for the policy on this network. If the policy has no activations, `null` is returned.",
                              "nullable": true,
                              "type": "object",
                              "required": [
                                "createdBy",
                                "createdDate",
                                "id",
                                "network",
                                "operation",
                                "policyId",
                                "policyVersion",
                                "status"
                              ],
                              "properties": {
                                "createdBy": {
                                  "description": "The username who created the activation.",
                                  "type": "string"
                                },
                                "createdDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation was created.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "failureDetails": {
                                  "description": "A detailed description of the reason why the activation failed.",
                                  "type": "string"
                                },
                                "finishDate": {
                                  "description": "ISO 8601 timestamp indicating when the activation ended, either successfully or unsuccessfully. You can check details of unsuccessful attempts in `failureDetails`.",
                                  "format": "date-time",
                                  "nullable": true,
                                  "type": "string"
                                },
                                "id": {
                                  "description": "Identifies the activation.",
                                  "type": "integer"
                                },
                                "links": {
                                  "description": "Hypermedia links to help navigate through the result set.",
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                                    "type": "object",
                                    "required": [
                                      "href",
                                      "rel"
                                    ],
                                    "properties": {
                                      "href": {
                                        "description": "A relative path to the currently requested object or a specific page of the result set.",
                                        "type": "string"
                                      },
                                      "rel": {
                                        "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-akamai": {
                                    "file-path": "schemas/links.yaml"
                                  }
                                },
                                "network": {
                                  "description": "The networks where you can activate or deactivate the policy version, either `PRODUCTION` or `STAGING`.",
                                  "type": "string",
                                  "enum": [
                                    "PRODUCTION",
                                    "STAGING"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/network-enum.yaml"
                                  }
                                },
                                "operation": {
                                  "description": "The operations that you can perform on a policy version, either `ACTIVATION` or `DEACTIVATION`.",
                                  "type": "string",
                                  "enum": [
                                    "ACTIVATION",
                                    "DEACTIVATION"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/activation-operation-enum.yaml"
                                  }
                                },
                                "policyId": {
                                  "description": "Identifies the shared policy.",
                                  "type": "integer"
                                },
                                "policyVersion": {
                                  "description": "The number of the policy version.",
                                  "type": "integer"
                                },
                                "policyVersionDeleted": {
                                  "description": "Indicates if the policy version is deleted.",
                                  "type": "boolean"
                                },
                                "status": {
                                  "description": "The status of the operation, either `IN_PROGRESS`, `SUCCESS`, or `FAILED`.",
                                  "type": "string",
                                  "enum": [
                                    "IN_PROGRESS",
                                    "SUCCESS",
                                    "FAILED"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/policy-activation.yaml"
                              }
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/network-status.yaml"
                          }
                        }
                      }
                    },
                    "description": {
                      "description": "A human-readable label for the policy.",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "Identifies the group. See [About group IDs](https://techdocs.akamai.com/cloudlets/reference/about-group-ids).",
                      "type": "integer"
                    },
                    "id": {
                      "description": "Identifies the policy.",
                      "type": "integer"
                    },
                    "links": {
                      "description": "Hypermedia links to help navigate through the result set.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                        "type": "object",
                        "required": [
                          "href",
                          "rel"
                        ],
                        "properties": {
                          "href": {
                            "description": "A relative path to the currently requested object or a specific page of the result set.",
                            "type": "string"
                          },
                          "rel": {
                            "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                            "type": "string"
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/links.yaml"
                      }
                    },
                    "modifiedBy": {
                      "description": "The username who last modified the policy.",
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the policy was last modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the policy. You use this value to refer to a shared policy in Property Manager.",
                      "type": "string"
                    },
                    "policyType": {
                      "description": "The type of policy. This API lets you create only `SHARED` policies.",
                      "type": "string",
                      "enum": [
                        "SHARED"
                      ]
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/policy.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Invalid request parameters, or problems parsing or validating the request object.](https://techdocs.akamai.com/cloudlets/reference/400)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a38da5f6-457c-4189-b4ae-9142623a7d41",
                  "status": 400,
                  "title": "Validation failed",
                  "type": "/cloudlets/v3/error-types/validation-failed",
                  "errors": [
                    {
                      "detail": "Value of `groupId` must be greater than 0.",
                      "invalidField": "groupId",
                      "invalidValue": -120,
                      "title": "Validation failed"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          },
          "403": {
            "description": "[No permission to access this resource.](https://techdocs.akamai.com/cloudlets/reference/403)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "cc6e9850-c426-4e17-8e33-cab96beccad8",
                  "status": 403,
                  "title": "Access Denied",
                  "type": "/cloudlets/v3/error-types/access-denied",
                  "errors": [
                    {
                      "detail": "User does not have view capability for Edge Redirector Cloudlet in group 120.",
                      "title": "Access Denied"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          },
          "404": {
            "description": "[Resource not found.](https://techdocs.akamai.com/cloudlets/reference/404)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a38da5f6-457c-4189-b4ae-9142623a7d41",
                  "status": 404,
                  "title": "Not found",
                  "type": "/cloudlets/v3/error-types/not-found",
                  "errors": [
                    {
                      "detail": "Policy with id `300001` not found.",
                      "title": "Not found"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Identifies the shared policy.",
          "example": "{{policyId}}",
          "in": "path",
          "name": "policyId",
          "required": true,
          "schema": {
            "example": 1001,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/policyId-path.yaml"
          }
        }
      ]
    },
    "/policies/{policyId}/properties": {
      "get": {
        "description": "Returns all active properties that are assigned to the policy.",
        "operationId": "get-policy-properties",
        "summary": "Get active properties",
        "tags": [
          "Properties"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-policy-properties"
        },
        "responses": {
          "200": {
            "description": "Contains detailed information about all active properties that are assigned to the policy.",
            "content": {
              "application/json": {
                "example": {
                  "page": {
                    "number": 0,
                    "size": 1000,
                    "totalElements": 2,
                    "totalPages": 1
                  },
                  "content": [
                    {
                      "groupId": 5,
                      "id": 1234,
                      "name": "property",
                      "network": "PRODUCTION",
                      "version": 1,
                      "links": []
                    },
                    {
                      "groupId": 5,
                      "id": 1233,
                      "name": "property",
                      "network": "STAGING",
                      "version": 1,
                      "links": []
                    }
                  ],
                  "links": [
                    {
                      "href": "/cloudlets/v3/policies/101/properties?page=0&size=1000",
                      "rel": "self"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains detailed information about all active properties that are assigned to the policy.",
                  "type": "object",
                  "required": [
                    "content",
                    "page"
                  ],
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Object representing details of property assigned to the policy.",
                        "title": "policy-property-info.json",
                        "type": "object",
                        "required": [
                          "name",
                          "id",
                          "groupId",
                          "version",
                          "network"
                        ],
                        "properties": {
                          "groupId": {
                            "description": "Identifies the group which the property belongs to.",
                            "type": "integer"
                          },
                          "id": {
                            "description": "Identifies the property.",
                            "type": "integer"
                          },
                          "name": {
                            "description": "Property name.",
                            "type": "string"
                          },
                          "network": {
                            "description": "The networks where you can activate or deactivate the policy version, either `PRODUCTION` or `STAGING`.",
                            "type": "string",
                            "enum": [
                              "PRODUCTION",
                              "STAGING"
                            ],
                            "x-akamai": {
                              "file-path": "schemas/network-enum.yaml"
                            }
                          },
                          "version": {
                            "description": "The version number of the property.",
                            "type": "integer"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/policy-property-info.yaml"
                        }
                      }
                    },
                    "links": {
                      "description": "Hypermedia links to help navigate through the result set.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                        "type": "object",
                        "required": [
                          "href",
                          "rel"
                        ],
                        "properties": {
                          "href": {
                            "description": "A relative path to the currently requested object or a specific page of the result set.",
                            "type": "string"
                          },
                          "rel": {
                            "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                            "type": "string"
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/links.yaml"
                      }
                    },
                    "page": {
                      "additionalProperties": false,
                      "description": "Contains informational data about pagination.",
                      "type": "object",
                      "required": [
                        "totalPages",
                        "totalElements",
                        "number",
                        "size"
                      ],
                      "properties": {
                        "number": {
                          "description": "Specifies the number of the returned page.",
                          "type": "integer"
                        },
                        "size": {
                          "description": "Specifies the number of objects on a page, at least `10` objects.",
                          "type": "integer"
                        },
                        "totalElements": {
                          "description": "Specifies the total number of the available objects.",
                          "type": "integer"
                        },
                        "totalPages": {
                          "description": "Specifies the total number of the available pages.",
                          "type": "integer"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/page-head.yaml"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-policy-properties-response.yaml"
                  }
                }
              }
            }
          },
          "403": {
            "description": "[No permission to access this resource.](https://techdocs.akamai.com/cloudlets/reference/403)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "cc6e9850-c426-4e17-8e33-cab96beccad8",
                  "status": 403,
                  "title": "Access Denied",
                  "type": "/cloudlets/v3/error-types/access-denied",
                  "errors": [
                    {
                      "detail": "User does not have view capability for Edge Redirector Cloudlet in group 120.",
                      "title": "Access Denied"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          },
          "404": {
            "description": "[Resource not found.](https://techdocs.akamai.com/cloudlets/reference/404)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "a38da5f6-457c-4189-b4ae-9142623a7d41",
                  "status": 404,
                  "title": "Not found",
                  "type": "/cloudlets/v3/error-types/not-found",
                  "errors": [
                    {
                      "detail": "Policy with id `300001` not found.",
                      "title": "Not found"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Specifies a page number for batched results, starting at zero.",
            "example": "{{page}}",
            "in": "query",
            "name": "page",
            "required": true,
            "schema": {
              "example": 3,
              "minimum": 0,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/page-query.yaml"
            }
          },
          {
            "description": "Specifies the number of objects on a page, at least `10` objects.",
            "example": "{{size}}",
            "in": "query",
            "name": "size",
            "required": true,
            "schema": {
              "example": 100,
              "minimum": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/size-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Identifies the shared policy.",
          "example": "{{policyId}}",
          "in": "path",
          "name": "policyId",
          "required": true,
          "schema": {
            "example": 1001,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/policyId-path.yaml"
          }
        }
      ]
    },
    "/policies/{policyId}/versions": {
      "post": {
        "description": "Creates a policy version, including match rules for a Cloudlet that you're using. For Virtual Waiting Room, you can also configure the number of visitors that can enter your origin per second (`originNewVisitorLimit`). If you don't already have the `policyId`, run the [List shared policies](https://techdocs.akamai.com/cloudlets/reference/get-policies) operation and store the relevant `id` value.",
        "operationId": "post-policy-version",
        "summary": "Create a policy version",
        "tags": [
          "Versions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/post-policy-version"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "description": "Initial version",
                "matchRules": [
                  {
                    "end": 0,
                    "matchURL": "/images/*",
                    "name": "Redirect images",
                    "redirectURL": "/static/images/*",
                    "start": 0,
                    "statusCode": 302,
                    "type": "erMatchRule",
                    "useIncomingQueryString": true,
                    "useRelativeUrl": "relative_url"
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "type": "object",
                "required": [
                  "description",
                  "matchRules"
                ],
                "properties": {
                  "configuration": {
                    "description": "Provides information about the policy version.",
                    "example": "{{configuration}}",
                    "x-akamai": {
                      "file-path": "schemas/policy-version-configuration.yaml"
                    },
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "description": "__Beta__ Virtual Waiting Room policy configuration.",
                        "title": "Virtual Waiting Room",
                        "type": "object",
                        "required": [
                          "originNewVisitorLimit"
                        ],
                        "properties": {
                          "originNewVisitorLimit": {
                            "default": 1000,
                            "description": "Sets how many new visitors per second can access the origin, at least `10`, and `1000` by default. If the number of visitors per second exceeds the value, the new visitors are sent to the virtual waiting room.",
                            "maximum": 10000000,
                            "minimum": 10,
                            "type": "integer"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/policy-version-configuration-vwr.yaml",
                          "status": "BETA"
                        }
                      }
                    ]
                  },
                  "description": {
                    "description": "A human-readable label for the policy version.",
                    "example": "{{description}}",
                    "type": "string"
                  },
                  "matchRules": {
                    "description": "A list of Cloudlet-specific match rules for this shared policy. Currently, you can only create match rules only for the Edge Redirector, Forward Rewrite, Virtual Waiting Room, and Audience Segmentation Cloudlets.",
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for API Prioritization.",
                          "title": "API Prioritization",
                          "type": "object",
                          "required": [
                            "type",
                            "passThroughPercent"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "title": "Object match value",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified range needs to be a percentage from 1 to 100.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "integer",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` type, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "title": "matchType and matchValue required",
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "title": "matchType and objectMatchValue required",
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "nullable": true,
                              "type": "string"
                            },
                            "passThroughPercent": {
                              "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of 100 means the request always passes through to the origin.",
                              "maximum": 100,
                              "minimum": -1,
                              "type": "number"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.",
                              "type": "string",
                              "enum": [
                                "apMatchRule"
                              ]
                            },
                            "useIncomingQueryString": {
                              "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                              "type": "boolean"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-ap.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Audience Segmentation.",
                          "title": "Audience Segmentation",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "forwardSettings": {
                              "additionalProperties": false,
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                              "type": "object",
                              "properties": {
                                "originId": {
                                  "description": "The conditional origin's unique identifier.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "pathAndQS": {
                                  "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                  "maxLength": 8192,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                  "type": "boolean"
                                }
                              }
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "range",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "title": "Object match value",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified range needs to be a percentage from 1 to 100.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "integer",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` type, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "title": "matchType and matchValue required",
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "title": "matchType and objectMatchValue required",
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.",
                              "type": "string",
                              "enum": [
                                "asMatchRule"
                              ]
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-as.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Edge Redirector.",
                          "title": "Edge Redirector",
                          "type": "object",
                          "required": [
                            "type",
                            "redirectURL",
                            "statusCode"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "nullable": true,
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "If the value assigned to an incoming request falls within an inclusive range of two intergers, the match is true. When setting up a range match, enter the two integers that comprise the range.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` type, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "title": "matchType and matchValue required",
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "title": "matchType and objectMatchValue required",
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "redirectURL": {
                              "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "statusCode": {
                              "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.",
                              "type": "integer",
                              "enum": [
                                301,
                                302,
                                303,
                                307,
                                308
                              ]
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.",
                              "type": "string",
                              "enum": [
                                "erMatchRule"
                              ]
                            },
                            "useIncomingQueryString": {
                              "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                              "type": "boolean"
                            },
                            "useIncomingSchemeAndHost": {
                              "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.",
                              "type": "boolean"
                            },
                            "useRelativeUrl": {
                              "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response's `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response's `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.",
                              "type": "string",
                              "enum": [
                                "none",
                                "copy_scheme_hostname",
                                "relative_url"
                              ]
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-er.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Forward Rewrite.",
                          "title": "Forward Rewrite",
                          "type": "object",
                          "required": [
                            "type",
                            "forwardSettings"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "forwardSettings": {
                              "additionalProperties": false,
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                              "type": "object",
                              "properties": {
                                "originId": {
                                  "description": "The conditional origin's unique identifier.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "pathAndQS": {
                                  "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                  "maxLength": 8192,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                  "type": "boolean"
                                }
                              }
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "If the value assigned to an incoming request falls within an inclusive range of two integers, the match is `true`. When setting up a range match, enter the two integers that comprise the range.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` type, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "title": "matchType and matchValue required",
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "title": "matchType and objectMatchValue required",
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.",
                              "type": "string",
                              "enum": [
                                "frMatchRule"
                              ]
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-fr.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Phased Release.",
                          "title": "Phased Release",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "forwardSettings": {
                              "additionalProperties": false,
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                              "type": "object",
                              "properties": {
                                "originId": {
                                  "description": "The conditional origin's unique identifier.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "pathAndQS": {
                                  "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                  "maxLength": 8192,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                  "type": "boolean"
                                }
                              }
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "nullable": true,
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "If the value assigned to an incoming request falls within an inclusive range of two intergers, the match is true. When setting up a range match, enter the two integers that comprise the range.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` type, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "title": "matchType and matchValue required",
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "title": "matchType and objectMatchValue required",
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.",
                              "type": "string",
                              "enum": [
                                "cdMatchRule"
                              ]
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-cd.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Request Control.",
                          "title": "Request Control",
                          "type": "object",
                          "required": [
                            "type",
                            "allowDeny"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "allowDeny": {
                              "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).",
                              "type": "string",
                              "enum": [
                                "allow",
                                "deny",
                                "denybranded"
                              ]
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "nullable": true,
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "If the value assigned to an incoming request falls within an inclusive range of two intergers, the match is true. When setting up a range match, enter the two integers that comprise the range.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` type, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "title": "matchType and matchValue required",
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "title": "matchType and objectMatchValue required",
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.",
                              "type": "string",
                              "enum": [
                                "igMatchRule"
                              ]
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-ig.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "__Beta__ Specifies match rules for the Virtual Waiting Room.",
                          "title": "Virtual Waiting Room",
                          "type": "object",
                          "required": [
                            "type",
                            "action"
                          ],
                          "properties": {
                            "action": {
                              "description": "First In First Out (`FIFO`) processing is applied when there is a rule match. The first to enter the virtual waiting room is the first one out. After leaving the waiting room, the user is sent to the origin.",
                              "type": "string",
                              "enum": [
                                "FIFO"
                              ]
                            },
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. Enter the value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "nullable": true,
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "If the value assigned to an incoming request falls within an inclusive range of two integers, the match is `true`. When setting up a range match, enter the two integers that comprise the range.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` type, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If using a match type that supports name attributes, enter the value in the incoming request to match on. The following match types support name attributes: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "title": "matchType and matchValue required",
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "title": "matchType and objectMatchValue required",
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` time settings.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "description": "The start time for this match rule. Enter the value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Virtual Waiting Room is `vwrMatchRule`.",
                              "type": "string",
                              "enum": [
                                "vwrMatchRule"
                              ]
                            },
                            "useIncomingQueryString": {
                              "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                              "type": "boolean"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-vwr.yaml",
                            "status": "BETA"
                          }
                        }
                      ]
                    },
                    "x-akamai": {
                      "file-path": "schemas/match-rules.yaml"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/post-policy-versions-request.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contains detailed information about a shared policy version.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "jsmith",
                  "createdDate": "2020-10-02T13:48:27.018Z",
                  "description": "Initial version",
                  "id": 2002,
                  "immutable": false,
                  "modifiedBy": "jsmith",
                  "modifiedDate": "2020-10-02T13:48:27.018Z",
                  "policyId": 1001,
                  "version": 1,
                  "matchRulesWarnings": [],
                  "matchRules": [
                    {
                      "akaRuleId": "ac0ca0af44f57683",
                      "end": 0,
                      "id": 0,
                      "matchURL": "/images/*",
                      "name": "Redirect images",
                      "redirectURL": "/static/images/*",
                      "start": 0,
                      "statusCode": 302,
                      "type": "erMatchRule",
                      "useIncomingQueryString": true,
                      "useRelativeUrl": "relative_url"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains detailed information about a shared policy version.",
                  "type": "object",
                  "required": [
                    "createdBy",
                    "createdDate",
                    "id",
                    "immutable",
                    "matchRulesWarnings",
                    "modifiedBy",
                    "modifiedDate",
                    "policyId",
                    "version"
                  ],
                  "properties": {
                    "configuration": {
                      "description": "Provides information about the policy version.",
                      "x-akamai": {
                        "file-path": "schemas/policy-version-configuration.yaml"
                      },
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "description": "__Beta__ Virtual Waiting Room policy configuration.",
                          "title": "Virtual Waiting Room",
                          "type": "object",
                          "required": [
                            "originNewVisitorLimit"
                          ],
                          "properties": {
                            "originNewVisitorLimit": {
                              "default": 1000,
                              "description": "Sets how many new visitors per second can access the origin, at least `10`, and `1000` by default. If the number of visitors per second exceeds the value, the new visitors are sent to the virtual waiting room.",
                              "maximum": 10000000,
                              "minimum": 10,
                              "type": "integer"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/policy-version-configuration-vwr.yaml",
                            "status": "BETA"
                          }
                        }
                      ]
                    },
                    "createdBy": {
                      "description": "The username who created the policy version.",
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the policy version was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "description": "A human-readable label for the policy version.",
                      "type": "string"
                    },
                    "id": {
                      "description": "Identifies the policy version. You don't use this identifier to refer to a policy version in any operation. Use the `version` member for this purpose.",
                      "type": "integer"
                    },
                    "immutable": {
                      "description": "If `true`, this policy version is active or in the process of being activated, and you can't modify it.",
                      "type": "boolean"
                    },
                    "matchRules": {
                      "description": "A list of Cloudlet-specific match rules for this shared policy.",
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for API Prioritization.",
                            "title": "API Prioritization",
                            "type": "object",
                            "required": [
                              "type",
                              "passThroughPercent"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified range needs to be a percentage from 1 to 100.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "integer",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` type, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "title": "matchType and matchValue required",
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "title": "matchType and objectMatchValue required",
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "nullable": true,
                                "type": "string"
                              },
                              "passThroughPercent": {
                                "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of 100 means the request always passes through to the origin.",
                                "maximum": 100,
                                "minimum": -1,
                                "type": "number"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "apMatchRule"
                                ]
                              },
                              "useIncomingQueryString": {
                                "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                "type": "boolean"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-ap.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Audience Segmentation.",
                            "title": "Audience Segmentation",
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                "type": "object",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pathAndQS": {
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "useIncomingQueryString": {
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "range",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified range needs to be a percentage from 1 to 100.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "integer",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` type, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "title": "matchType and matchValue required",
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "title": "matchType and objectMatchValue required",
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "asMatchRule"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-as.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Edge Redirector.",
                            "title": "Edge Redirector",
                            "type": "object",
                            "required": [
                              "type",
                              "redirectURL",
                              "statusCode"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "nullable": true,
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "If the value assigned to an incoming request falls within an inclusive range of two intergers, the match is true. When setting up a range match, enter the two integers that comprise the range.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` type, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "title": "matchType and matchValue required",
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "title": "matchType and objectMatchValue required",
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "redirectURL": {
                                "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "statusCode": {
                                "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.",
                                "type": "integer",
                                "enum": [
                                  301,
                                  302,
                                  303,
                                  307,
                                  308
                                ]
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "erMatchRule"
                                ]
                              },
                              "useIncomingQueryString": {
                                "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                "type": "boolean"
                              },
                              "useIncomingSchemeAndHost": {
                                "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.",
                                "type": "boolean"
                              },
                              "useRelativeUrl": {
                                "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response's `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response's `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.",
                                "type": "string",
                                "enum": [
                                  "none",
                                  "copy_scheme_hostname",
                                  "relative_url"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-er.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Forward Rewrite.",
                            "title": "Forward Rewrite",
                            "type": "object",
                            "required": [
                              "type",
                              "forwardSettings"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                "type": "object",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pathAndQS": {
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "useIncomingQueryString": {
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "If the value assigned to an incoming request falls within an inclusive range of two integers, the match is `true`. When setting up a range match, enter the two integers that comprise the range.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` type, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "title": "matchType and matchValue required",
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "title": "matchType and objectMatchValue required",
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "frMatchRule"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-fr.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Phased Release.",
                            "title": "Phased Release",
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                "type": "object",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pathAndQS": {
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "useIncomingQueryString": {
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "nullable": true,
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "If the value assigned to an incoming request falls within an inclusive range of two intergers, the match is true. When setting up a range match, enter the two integers that comprise the range.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` type, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "title": "matchType and matchValue required",
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "title": "matchType and objectMatchValue required",
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "cdMatchRule"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-cd.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Request Control.",
                            "title": "Request Control",
                            "type": "object",
                            "required": [
                              "type",
                              "allowDeny"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "allowDeny": {
                                "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).",
                                "type": "string",
                                "enum": [
                                  "allow",
                                  "deny",
                                  "denybranded"
                                ]
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "nullable": true,
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "If the value assigned to an incoming request falls within an inclusive range of two intergers, the match is true. When setting up a range match, enter the two integers that comprise the range.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` type, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "title": "matchType and matchValue required",
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "title": "matchType and objectMatchValue required",
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "igMatchRule"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-ig.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "__Beta__ Specifies match rules for the Virtual Waiting Room.",
                            "title": "Virtual Waiting Room",
                            "type": "object",
                            "required": [
                              "type",
                              "action"
                            ],
                            "properties": {
                              "action": {
                                "description": "First In First Out (`FIFO`) processing is applied when there is a rule match. The first to enter the virtual waiting room is the first one out. After leaving the waiting room, the user is sent to the origin.",
                                "type": "string",
                                "enum": [
                                  "FIFO"
                                ]
                              },
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. Enter the value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "nullable": true,
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "If the value assigned to an incoming request falls within an inclusive range of two integers, the match is `true`. When setting up a range match, enter the two integers that comprise the range.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` type, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If using a match type that supports name attributes, enter the value in the incoming request to match on. The following match types support name attributes: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "title": "matchType and matchValue required",
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "title": "matchType and objectMatchValue required",
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` time settings.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. Enter the value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Virtual Waiting Room is `vwrMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "vwrMatchRule"
                                ]
                              },
                              "useIncomingQueryString": {
                                "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                "type": "boolean"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-vwr.yaml",
                              "status": "BETA"
                            }
                          }
                        ]
                      },
                      "x-akamai": {
                        "file-path": "schemas/match-rules.yaml"
                      }
                    },
                    "matchRulesWarnings": {
                      "description": "A list of warnings about the version's match rules.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "detail",
                          "title",
                          "type"
                        ],
                        "properties": {
                          "detail": {
                            "description": "A detailed description of the warning.",
                            "type": "string"
                          },
                          "jsonPointer": {
                            "description": "A JSON pointer to the warned data.",
                            "type": "string"
                          },
                          "title": {
                            "description": "The title of the warning.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A link to detailed information about the warning type.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "modifiedBy": {
                      "description": "The username who last modified the policy version.",
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the policy version was last modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "policyId": {
                      "description": "Identifies the shared policy.",
                      "type": "integer"
                    },
                    "version": {
                      "description": "The number of the policy version.",
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/policy-version.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Invalid request parameters, or problems parsing or validating the request object.](https://techdocs.akamai.com/cloudlets/reference/400)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "d07eaa5b-3f21-47e2-9182-9b5010f54564",
                  "status": 400,
                  "title": "Validation failed",
                  "type": "/cloudlets/v3/error-types/validation-failed",
                  "errors": [
                    {
                      "detail": "Invalid `matchRules` property type. Expected array, but got `NULL` instead.",
                      "title": "Validation failed"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          },
          "403": {
            "description": "[No permission to access this resource.](https://techdocs.akamai.com/cloudlets/reference/403)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "cc6e9850-c426-4e17-8e33-cab96beccad8",
                  "status": 403,
                  "title": "Access Denied",
                  "type": "/cloudlets/v3/error-types/access-denied",
                  "errors": [
                    {
                      "detail": "User does not have view capability for Edge Redirector Cloudlet in group 120.",
                      "title": "Access Denied"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          },
          "404": {
            "description": "[Resource not found.](https://techdocs.akamai.com/cloudlets/reference/404)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "03d51e0a-a50f-41e7-85ad-1a0584a58946",
                  "status": 404,
                  "title": "Not found",
                  "type": "/cloudlets/v3/error-types/not-found",
                  "errors": [
                    {
                      "detail": "Policy Version `11` not found in Policy `100000`.",
                      "title": "Not found"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Returns information about all versions of a shared policy.",
        "operationId": "get-policy-versions",
        "summary": "List policy versions",
        "tags": [
          "Versions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-policy-versions"
        },
        "responses": {
          "200": {
            "description": "A list of versions for a shared policy.",
            "content": {
              "application/json": {
                "example": {
                  "page": {
                    "number": 0,
                    "size": 1000,
                    "totalElements": 1,
                    "totalPages": 1
                  },
                  "content": [
                    {
                      "createdBy": "jsmith",
                      "createdDate": "2020-10-01T12:35:22.500Z",
                      "description": "Initial version",
                      "id": 2001,
                      "modifiedBy": "jsmith",
                      "modifiedDate": "2020-10-01T12:35:22.500Z",
                      "policyId": 101,
                      "version": 1,
                      "links": [
                        {
                          "href": "/cloudlets/v3/policies/101/versions/1",
                          "rel": "self"
                        }
                      ]
                    }
                  ],
                  "links": [
                    {
                      "href": "/cloudlets/v3/policies/101/versions?page=0&size=1000",
                      "rel": "self"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "A list of versions for a shared policy.",
                  "type": "object",
                  "required": [
                    "content",
                    "page"
                  ],
                  "properties": {
                    "content": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A list of versions for a shared policy.",
                        "type": "object",
                        "required": [
                          "links",
                          "createdBy",
                          "createdDate",
                          "id",
                          "modifiedBy",
                          "modifiedDate",
                          "policyId",
                          "version"
                        ],
                        "properties": {
                          "createdBy": {
                            "description": "The username who created the policy version.",
                            "type": "string"
                          },
                          "createdDate": {
                            "description": "ISO 8601 timestamp indicating when the policy version was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "description": {
                            "description": "A human-readable label for the policy version.",
                            "type": "string"
                          },
                          "id": {
                            "description": "Identifies the policy version.",
                            "type": "integer"
                          },
                          "links": {
                            "description": "Hypermedia links to help navigate through the result set.",
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                              "type": "object",
                              "required": [
                                "href",
                                "rel"
                              ],
                              "properties": {
                                "href": {
                                  "description": "A relative path to the currently requested object or a specific page of the result set.",
                                  "type": "string"
                                },
                                "rel": {
                                  "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                                  "type": "string"
                                }
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/links.yaml"
                            }
                          },
                          "modifiedBy": {
                            "description": "The username who last modified the policy version.",
                            "type": "string"
                          },
                          "modifiedDate": {
                            "description": "ISO 8601 timestamp indicating when the policy version was last modified.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "policyId": {
                            "description": "Identifies the shared policy.",
                            "type": "integer"
                          },
                          "version": {
                            "description": "The number of the policy version.",
                            "type": "integer"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/policy-version-summary.yaml"
                        }
                      }
                    },
                    "links": {
                      "description": "Hypermedia links to help navigate through the result set.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Hypermedia links to help navigate through the result set, or to identify the current item whose `rel` is `self`.",
                        "type": "object",
                        "required": [
                          "href",
                          "rel"
                        ],
                        "properties": {
                          "href": {
                            "description": "A relative path to the currently requested object or a specific page of the result set.",
                            "type": "string"
                          },
                          "rel": {
                            "description": "The relationship between the current and linked result sets. `self` links to the current result set, while `first`, `next`, and `last` link to different sets of paginated data.",
                            "type": "string"
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/links.yaml"
                      }
                    },
                    "page": {
                      "additionalProperties": false,
                      "description": "Contains informational data about pagination.",
                      "type": "object",
                      "required": [
                        "totalPages",
                        "totalElements",
                        "number",
                        "size"
                      ],
                      "properties": {
                        "number": {
                          "description": "Specifies the number of the returned page.",
                          "type": "integer"
                        },
                        "size": {
                          "description": "Specifies the number of objects on a page, at least `10` objects.",
                          "type": "integer"
                        },
                        "totalElements": {
                          "description": "Specifies the total number of the available objects.",
                          "type": "integer"
                        },
                        "totalPages": {
                          "description": "Specifies the total number of the available pages.",
                          "type": "integer"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/page-head.yaml"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-policy-versions-response.yaml"
                  }
                }
              }
            }
          },
          "403": {
            "description": "[No permission to access this resource.](https://techdocs.akamai.com/cloudlets/reference/403)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "cc6e9850-c426-4e17-8e33-cab96beccad8",
                  "status": 403,
                  "title": "Access Denied",
                  "type": "/cloudlets/v3/error-types/access-denied",
                  "errors": [
                    {
                      "detail": "User does not have view capability for Edge Redirector Cloudlet in group 120.",
                      "title": "Access Denied"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          },
          "404": {
            "description": "[Resource not found.](https://techdocs.akamai.com/cloudlets/reference/404)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "03d51e0a-a50f-41e7-85ad-1a0584a58946",
                  "status": 404,
                  "title": "Not found",
                  "type": "/cloudlets/v3/error-types/not-found",
                  "errors": [
                    {
                      "detail": "Policy Version `11` not found in Policy `100000`.",
                      "title": "Not found"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Specifies a page number for batched results, starting at zero.",
            "example": "{{page}}",
            "in": "query",
            "name": "page",
            "required": true,
            "schema": {
              "example": 3,
              "minimum": 0,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/page-query.yaml"
            }
          },
          {
            "description": "Specifies the number of objects on a page, at least `10` objects.",
            "example": "{{size}}",
            "in": "query",
            "name": "size",
            "required": true,
            "schema": {
              "example": 100,
              "minimum": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/size-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Identifies the shared policy.",
          "example": "{{policyId}}",
          "in": "path",
          "name": "policyId",
          "required": true,
          "schema": {
            "example": 1001,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/policyId-path.yaml"
          }
        }
      ]
    },
    "/policies/{policyId}/versions/{version}": {
      "get": {
        "description": "Returns information about a shared policy version, including match rules for a Cloudlet that you're using and whether its locked for changes.",
        "operationId": "get-policy-version",
        "summary": "Get a policy version",
        "tags": [
          "Versions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-policy-version"
        },
        "responses": {
          "200": {
            "description": "Contains detailed information about a shared policy version.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "jsmith",
                  "createdDate": "2020-10-02T13:48:27.018Z",
                  "description": "Initial version",
                  "id": 2002,
                  "immutable": false,
                  "modifiedBy": "jsmith",
                  "modifiedDate": "2020-10-02T13:48:27.018Z",
                  "policyId": 1001,
                  "version": 1,
                  "matchRulesWarnings": [],
                  "matchRules": [
                    {
                      "akaRuleId": "ac0ca0af44f57683",
                      "end": 0,
                      "id": 0,
                      "matchURL": "/images/*",
                      "name": "Redirect images",
                      "redirectURL": "/static/images/*",
                      "start": 0,
                      "statusCode": 302,
                      "type": "erMatchRule",
                      "useIncomingQueryString": true,
                      "useRelativeUrl": "relative_url"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains detailed information about a shared policy version.",
                  "type": "object",
                  "required": [
                    "createdBy",
                    "createdDate",
                    "id",
                    "immutable",
                    "matchRulesWarnings",
                    "modifiedBy",
                    "modifiedDate",
                    "policyId",
                    "version"
                  ],
                  "properties": {
                    "configuration": {
                      "description": "Provides information about the policy version.",
                      "x-akamai": {
                        "file-path": "schemas/policy-version-configuration.yaml"
                      },
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "description": "__Beta__ Virtual Waiting Room policy configuration.",
                          "title": "Virtual Waiting Room",
                          "type": "object",
                          "required": [
                            "originNewVisitorLimit"
                          ],
                          "properties": {
                            "originNewVisitorLimit": {
                              "default": 1000,
                              "description": "Sets how many new visitors per second can access the origin, at least `10`, and `1000` by default. If the number of visitors per second exceeds the value, the new visitors are sent to the virtual waiting room.",
                              "maximum": 10000000,
                              "minimum": 10,
                              "type": "integer"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/policy-version-configuration-vwr.yaml",
                            "status": "BETA"
                          }
                        }
                      ]
                    },
                    "createdBy": {
                      "description": "The username who created the policy version.",
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the policy version was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "description": "A human-readable label for the policy version.",
                      "type": "string"
                    },
                    "id": {
                      "description": "Identifies the policy version. You don't use this identifier to refer to a policy version in any operation. Use the `version` member for this purpose.",
                      "type": "integer"
                    },
                    "immutable": {
                      "description": "If `true`, this policy version is active or in the process of being activated, and you can't modify it.",
                      "type": "boolean"
                    },
                    "matchRules": {
                      "description": "A list of Cloudlet-specific match rules for this shared policy.",
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for API Prioritization.",
                            "title": "API Prioritization",
                            "type": "object",
                            "required": [
                              "type",
                              "passThroughPercent"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified range needs to be a percentage from 1 to 100.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "integer",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` type, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "title": "matchType and matchValue required",
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "title": "matchType and objectMatchValue required",
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "nullable": true,
                                "type": "string"
                              },
                              "passThroughPercent": {
                                "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of 100 means the request always passes through to the origin.",
                                "maximum": 100,
                                "minimum": -1,
                                "type": "number"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "apMatchRule"
                                ]
                              },
                              "useIncomingQueryString": {
                                "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                "type": "boolean"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-ap.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Audience Segmentation.",
                            "title": "Audience Segmentation",
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                "type": "object",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pathAndQS": {
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "useIncomingQueryString": {
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "range",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified range needs to be a percentage from 1 to 100.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "integer",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` type, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "title": "matchType and matchValue required",
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "title": "matchType and objectMatchValue required",
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "asMatchRule"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-as.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Edge Redirector.",
                            "title": "Edge Redirector",
                            "type": "object",
                            "required": [
                              "type",
                              "redirectURL",
                              "statusCode"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "nullable": true,
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "If the value assigned to an incoming request falls within an inclusive range of two intergers, the match is true. When setting up a range match, enter the two integers that comprise the range.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` type, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "title": "matchType and matchValue required",
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "title": "matchType and objectMatchValue required",
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "redirectURL": {
                                "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "statusCode": {
                                "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.",
                                "type": "integer",
                                "enum": [
                                  301,
                                  302,
                                  303,
                                  307,
                                  308
                                ]
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "erMatchRule"
                                ]
                              },
                              "useIncomingQueryString": {
                                "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                "type": "boolean"
                              },
                              "useIncomingSchemeAndHost": {
                                "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.",
                                "type": "boolean"
                              },
                              "useRelativeUrl": {
                                "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response's `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response's `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.",
                                "type": "string",
                                "enum": [
                                  "none",
                                  "copy_scheme_hostname",
                                  "relative_url"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-er.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Forward Rewrite.",
                            "title": "Forward Rewrite",
                            "type": "object",
                            "required": [
                              "type",
                              "forwardSettings"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                "type": "object",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pathAndQS": {
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "useIncomingQueryString": {
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "If the value assigned to an incoming request falls within an inclusive range of two integers, the match is `true`. When setting up a range match, enter the two integers that comprise the range.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` type, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "title": "matchType and matchValue required",
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "title": "matchType and objectMatchValue required",
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "frMatchRule"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-fr.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Phased Release.",
                            "title": "Phased Release",
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                "type": "object",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pathAndQS": {
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "useIncomingQueryString": {
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "nullable": true,
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "If the value assigned to an incoming request falls within an inclusive range of two intergers, the match is true. When setting up a range match, enter the two integers that comprise the range.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` type, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "title": "matchType and matchValue required",
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "title": "matchType and objectMatchValue required",
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "cdMatchRule"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-cd.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Request Control.",
                            "title": "Request Control",
                            "type": "object",
                            "required": [
                              "type",
                              "allowDeny"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "allowDeny": {
                                "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).",
                                "type": "string",
                                "enum": [
                                  "allow",
                                  "deny",
                                  "denybranded"
                                ]
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "nullable": true,
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "If the value assigned to an incoming request falls within an inclusive range of two intergers, the match is true. When setting up a range match, enter the two integers that comprise the range.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` type, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "title": "matchType and matchValue required",
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "title": "matchType and objectMatchValue required",
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "igMatchRule"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-ig.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "__Beta__ Specifies match rules for the Virtual Waiting Room.",
                            "title": "Virtual Waiting Room",
                            "type": "object",
                            "required": [
                              "type",
                              "action"
                            ],
                            "properties": {
                              "action": {
                                "description": "First In First Out (`FIFO`) processing is applied when there is a rule match. The first to enter the virtual waiting room is the first one out. After leaving the waiting room, the user is sent to the origin.",
                                "type": "string",
                                "enum": [
                                  "FIFO"
                                ]
                              },
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. Enter the value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "nullable": true,
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "If the value assigned to an incoming request falls within an inclusive range of two integers, the match is `true`. When setting up a range match, enter the two integers that comprise the range.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` type, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If using a match type that supports name attributes, enter the value in the incoming request to match on. The following match types support name attributes: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "title": "matchType and matchValue required",
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "title": "matchType and objectMatchValue required",
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` time settings.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. Enter the value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Virtual Waiting Room is `vwrMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "vwrMatchRule"
                                ]
                              },
                              "useIncomingQueryString": {
                                "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                "type": "boolean"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-vwr.yaml",
                              "status": "BETA"
                            }
                          }
                        ]
                      },
                      "x-akamai": {
                        "file-path": "schemas/match-rules.yaml"
                      }
                    },
                    "matchRulesWarnings": {
                      "description": "A list of warnings about the version's match rules.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "detail",
                          "title",
                          "type"
                        ],
                        "properties": {
                          "detail": {
                            "description": "A detailed description of the warning.",
                            "type": "string"
                          },
                          "jsonPointer": {
                            "description": "A JSON pointer to the warned data.",
                            "type": "string"
                          },
                          "title": {
                            "description": "The title of the warning.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A link to detailed information about the warning type.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "modifiedBy": {
                      "description": "The username who last modified the policy version.",
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the policy version was last modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "policyId": {
                      "description": "Identifies the shared policy.",
                      "type": "integer"
                    },
                    "version": {
                      "description": "The number of the policy version.",
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/policy-version.yaml"
                  }
                }
              }
            }
          },
          "403": {
            "description": "[No permission to access this resource.](https://techdocs.akamai.com/cloudlets/reference/403)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "cc6e9850-c426-4e17-8e33-cab96beccad8",
                  "status": 403,
                  "title": "Access Denied",
                  "type": "/cloudlets/v3/error-types/access-denied",
                  "errors": [
                    {
                      "detail": "User does not have view capability for Edge Redirector Cloudlet in group 120.",
                      "title": "Access Denied"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          },
          "404": {
            "description": "[Resource not found.](https://techdocs.akamai.com/cloudlets/reference/404)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "03d51e0a-a50f-41e7-85ad-1a0584a58946",
                  "status": 404,
                  "title": "Not found",
                  "type": "/cloudlets/v3/error-types/not-found",
                  "errors": [
                    {
                      "detail": "Policy Version `11` not found in Policy `100000`.",
                      "title": "Not found"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates the description and match rules for a policy version. For Virtual Waiting Room, you can also configure the number of visitors that can enter your origin per second (`originNewVisitorLimit`).",
        "operationId": "put-policy-version",
        "summary": "Update a policy version",
        "tags": [
          "Versions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/put-policy-version"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "description": "Initial version",
                "matchRules": [
                  {
                    "end": 0,
                    "matchURL": "/images/*",
                    "name": "Redirect images",
                    "redirectURL": "/static/images/*",
                    "start": 0,
                    "statusCode": 302,
                    "type": "erMatchRule",
                    "useIncomingQueryString": true,
                    "useRelativeUrl": "relative_url"
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "type": "object",
                "required": [
                  "description"
                ],
                "properties": {
                  "configuration": {
                    "description": "Provides information about the policy version.",
                    "example": "{{configuration}}",
                    "x-akamai": {
                      "file-path": "schemas/policy-version-configuration.yaml"
                    },
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "description": "__Beta__ Virtual Waiting Room policy configuration.",
                        "title": "Virtual Waiting Room",
                        "type": "object",
                        "required": [
                          "originNewVisitorLimit"
                        ],
                        "properties": {
                          "originNewVisitorLimit": {
                            "default": 1000,
                            "description": "Sets how many new visitors per second can access the origin, at least `10`, and `1000` by default. If the number of visitors per second exceeds the value, the new visitors are sent to the virtual waiting room.",
                            "maximum": 10000000,
                            "minimum": 10,
                            "type": "integer"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/policy-version-configuration-vwr.yaml",
                          "status": "BETA"
                        }
                      }
                    ]
                  },
                  "description": {
                    "description": "A human-readable label for the version.",
                    "example": "{{description}}",
                    "type": "string"
                  },
                  "matchRules": {
                    "description": "A list of Cloudlet-specific match rules for this shared policy.",
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for API Prioritization.",
                          "title": "API Prioritization",
                          "type": "object",
                          "required": [
                            "type",
                            "passThroughPercent"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "title": "Object match value",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified range needs to be a percentage from 1 to 100.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "integer",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` type, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "title": "matchType and matchValue required",
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "title": "matchType and objectMatchValue required",
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "nullable": true,
                              "type": "string"
                            },
                            "passThroughPercent": {
                              "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of 100 means the request always passes through to the origin.",
                              "maximum": 100,
                              "minimum": -1,
                              "type": "number"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.",
                              "type": "string",
                              "enum": [
                                "apMatchRule"
                              ]
                            },
                            "useIncomingQueryString": {
                              "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                              "type": "boolean"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-ap.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Audience Segmentation.",
                          "title": "Audience Segmentation",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "forwardSettings": {
                              "additionalProperties": false,
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                              "type": "object",
                              "properties": {
                                "originId": {
                                  "description": "The conditional origin's unique identifier.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "pathAndQS": {
                                  "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                  "maxLength": 8192,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                  "type": "boolean"
                                }
                              }
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "range",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "title": "Object match value",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified range needs to be a percentage from 1 to 100.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "integer",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` type, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "title": "matchType and matchValue required",
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "title": "matchType and objectMatchValue required",
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.",
                              "type": "string",
                              "enum": [
                                "asMatchRule"
                              ]
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-as.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Edge Redirector.",
                          "title": "Edge Redirector",
                          "type": "object",
                          "required": [
                            "type",
                            "redirectURL",
                            "statusCode"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "nullable": true,
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "If the value assigned to an incoming request falls within an inclusive range of two intergers, the match is true. When setting up a range match, enter the two integers that comprise the range.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` type, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "title": "matchType and matchValue required",
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "title": "matchType and objectMatchValue required",
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "redirectURL": {
                              "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "statusCode": {
                              "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.",
                              "type": "integer",
                              "enum": [
                                301,
                                302,
                                303,
                                307,
                                308
                              ]
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.",
                              "type": "string",
                              "enum": [
                                "erMatchRule"
                              ]
                            },
                            "useIncomingQueryString": {
                              "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                              "type": "boolean"
                            },
                            "useIncomingSchemeAndHost": {
                              "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.",
                              "type": "boolean"
                            },
                            "useRelativeUrl": {
                              "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response's `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response's `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.",
                              "type": "string",
                              "enum": [
                                "none",
                                "copy_scheme_hostname",
                                "relative_url"
                              ]
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-er.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Forward Rewrite.",
                          "title": "Forward Rewrite",
                          "type": "object",
                          "required": [
                            "type",
                            "forwardSettings"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "forwardSettings": {
                              "additionalProperties": false,
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                              "type": "object",
                              "properties": {
                                "originId": {
                                  "description": "The conditional origin's unique identifier.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "pathAndQS": {
                                  "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                  "maxLength": 8192,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                  "type": "boolean"
                                }
                              }
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "If the value assigned to an incoming request falls within an inclusive range of two integers, the match is `true`. When setting up a range match, enter the two integers that comprise the range.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` type, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "title": "matchType and matchValue required",
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "title": "matchType and objectMatchValue required",
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.",
                              "type": "string",
                              "enum": [
                                "frMatchRule"
                              ]
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-fr.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Phased Release.",
                          "title": "Phased Release",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "forwardSettings": {
                              "additionalProperties": false,
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                              "type": "object",
                              "properties": {
                                "originId": {
                                  "description": "The conditional origin's unique identifier.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "pathAndQS": {
                                  "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                  "maxLength": 8192,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                  "type": "boolean"
                                }
                              }
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "nullable": true,
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "If the value assigned to an incoming request falls within an inclusive range of two intergers, the match is true. When setting up a range match, enter the two integers that comprise the range.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` type, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "title": "matchType and matchValue required",
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "title": "matchType and objectMatchValue required",
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.",
                              "type": "string",
                              "enum": [
                                "cdMatchRule"
                              ]
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-cd.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Request Control.",
                          "title": "Request Control",
                          "type": "object",
                          "required": [
                            "type",
                            "allowDeny"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "allowDeny": {
                              "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).",
                              "type": "string",
                              "enum": [
                                "allow",
                                "deny",
                                "denybranded"
                              ]
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "nullable": true,
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "If the value assigned to an incoming request falls within an inclusive range of two intergers, the match is true. When setting up a range match, enter the two integers that comprise the range.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` type, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "title": "matchType and matchValue required",
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "title": "matchType and objectMatchValue required",
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.",
                              "type": "string",
                              "enum": [
                                "igMatchRule"
                              ]
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-ig.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "__Beta__ Specifies match rules for the Virtual Waiting Room.",
                          "title": "Virtual Waiting Room",
                          "type": "object",
                          "required": [
                            "type",
                            "action"
                          ],
                          "properties": {
                            "action": {
                              "description": "First In First Out (`FIFO`) processing is applied when there is a rule match. The first to enter the virtual waiting room is the first one out. After leaving the waiting room, the user is sent to the origin.",
                              "type": "string",
                              "enum": [
                                "FIFO"
                              ]
                            },
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. Enter the value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "nullable": true,
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "If the value assigned to an incoming request falls within an inclusive range of two integers, the match is `true`. When setting up a range match, enter the two integers that comprise the range.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` type, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If using a match type that supports name attributes, enter the value in the incoming request to match on. The following match types support name attributes: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "title": "matchType and matchValue required",
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "title": "matchType and objectMatchValue required",
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` time settings.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "description": "The start time for this match rule. Enter the value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Virtual Waiting Room is `vwrMatchRule`.",
                              "type": "string",
                              "enum": [
                                "vwrMatchRule"
                              ]
                            },
                            "useIncomingQueryString": {
                              "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                              "type": "boolean"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-vwr.yaml",
                            "status": "BETA"
                          }
                        }
                      ]
                    },
                    "x-akamai": {
                      "file-path": "schemas/match-rules.yaml"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/put-policy-version-request.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contains detailed information about a shared policy version.",
            "content": {
              "application/json": {
                "example": {
                  "createdBy": "jsmith",
                  "createdDate": "2020-10-02T13:48:27.018Z",
                  "description": "Initial version",
                  "id": 2002,
                  "immutable": false,
                  "modifiedBy": "jsmith",
                  "modifiedDate": "2020-10-02T13:48:27.018Z",
                  "policyId": 1001,
                  "version": 1,
                  "matchRulesWarnings": [],
                  "matchRules": [
                    {
                      "akaRuleId": "ac0ca0af44f57683",
                      "end": 0,
                      "id": 0,
                      "matchURL": "/images/*",
                      "name": "Redirect images",
                      "redirectURL": "/static/images/*",
                      "start": 0,
                      "statusCode": 302,
                      "type": "erMatchRule",
                      "useIncomingQueryString": true,
                      "useRelativeUrl": "relative_url"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains detailed information about a shared policy version.",
                  "type": "object",
                  "required": [
                    "createdBy",
                    "createdDate",
                    "id",
                    "immutable",
                    "matchRulesWarnings",
                    "modifiedBy",
                    "modifiedDate",
                    "policyId",
                    "version"
                  ],
                  "properties": {
                    "configuration": {
                      "description": "Provides information about the policy version.",
                      "x-akamai": {
                        "file-path": "schemas/policy-version-configuration.yaml"
                      },
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "description": "__Beta__ Virtual Waiting Room policy configuration.",
                          "title": "Virtual Waiting Room",
                          "type": "object",
                          "required": [
                            "originNewVisitorLimit"
                          ],
                          "properties": {
                            "originNewVisitorLimit": {
                              "default": 1000,
                              "description": "Sets how many new visitors per second can access the origin, at least `10`, and `1000` by default. If the number of visitors per second exceeds the value, the new visitors are sent to the virtual waiting room.",
                              "maximum": 10000000,
                              "minimum": 10,
                              "type": "integer"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/policy-version-configuration-vwr.yaml",
                            "status": "BETA"
                          }
                        }
                      ]
                    },
                    "createdBy": {
                      "description": "The username who created the policy version.",
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "ISO 8601 timestamp indicating when the policy version was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "description": "A human-readable label for the policy version.",
                      "type": "string"
                    },
                    "id": {
                      "description": "Identifies the policy version. You don't use this identifier to refer to a policy version in any operation. Use the `version` member for this purpose.",
                      "type": "integer"
                    },
                    "immutable": {
                      "description": "If `true`, this policy version is active or in the process of being activated, and you can't modify it.",
                      "type": "boolean"
                    },
                    "matchRules": {
                      "description": "A list of Cloudlet-specific match rules for this shared policy.",
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for API Prioritization.",
                            "title": "API Prioritization",
                            "type": "object",
                            "required": [
                              "type",
                              "passThroughPercent"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified range needs to be a percentage from 1 to 100.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "integer",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` type, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "title": "matchType and matchValue required",
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "title": "matchType and objectMatchValue required",
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "nullable": true,
                                "type": "string"
                              },
                              "passThroughPercent": {
                                "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of 100 means the request always passes through to the origin.",
                                "maximum": 100,
                                "minimum": -1,
                                "type": "number"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "apMatchRule"
                                ]
                              },
                              "useIncomingQueryString": {
                                "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                "type": "boolean"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-ap.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Audience Segmentation.",
                            "title": "Audience Segmentation",
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                "type": "object",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pathAndQS": {
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "useIncomingQueryString": {
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "range",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified range needs to be a percentage from 1 to 100.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "integer",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` type, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "title": "matchType and matchValue required",
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "title": "matchType and objectMatchValue required",
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "asMatchRule"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-as.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Edge Redirector.",
                            "title": "Edge Redirector",
                            "type": "object",
                            "required": [
                              "type",
                              "redirectURL",
                              "statusCode"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "nullable": true,
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "If the value assigned to an incoming request falls within an inclusive range of two intergers, the match is true. When setting up a range match, enter the two integers that comprise the range.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` type, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "title": "matchType and matchValue required",
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "title": "matchType and objectMatchValue required",
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "redirectURL": {
                                "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "statusCode": {
                                "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.",
                                "type": "integer",
                                "enum": [
                                  301,
                                  302,
                                  303,
                                  307,
                                  308
                                ]
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "erMatchRule"
                                ]
                              },
                              "useIncomingQueryString": {
                                "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                "type": "boolean"
                              },
                              "useIncomingSchemeAndHost": {
                                "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.",
                                "type": "boolean"
                              },
                              "useRelativeUrl": {
                                "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response's `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response's `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.",
                                "type": "string",
                                "enum": [
                                  "none",
                                  "copy_scheme_hostname",
                                  "relative_url"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-er.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Forward Rewrite.",
                            "title": "Forward Rewrite",
                            "type": "object",
                            "required": [
                              "type",
                              "forwardSettings"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                "type": "object",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pathAndQS": {
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "useIncomingQueryString": {
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "If the value assigned to an incoming request falls within an inclusive range of two integers, the match is `true`. When setting up a range match, enter the two integers that comprise the range.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` type, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If matching any name, specify the `name` value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "title": "matchType and matchValue required",
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "title": "matchType and objectMatchValue required",
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "frMatchRule"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-fr.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Phased Release.",
                            "title": "Phased Release",
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                "type": "object",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pathAndQS": {
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "useIncomingQueryString": {
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "nullable": true,
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "If the value assigned to an incoming request falls within an inclusive range of two intergers, the match is true. When setting up a range match, enter the two integers that comprise the range.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` type, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "title": "matchType and matchValue required",
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "title": "matchType and objectMatchValue required",
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "cdMatchRule"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-cd.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Request Control.",
                            "title": "Request Control",
                            "type": "object",
                            "required": [
                              "type",
                              "allowDeny"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "allowDeny": {
                                "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).",
                                "type": "string",
                                "enum": [
                                  "allow",
                                  "deny",
                                  "denybranded"
                                ]
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "nullable": true,
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "If the value assigned to an incoming request falls within an inclusive range of two intergers, the match is true. When setting up a range match, enter the two integers that comprise the range.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` type, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If matching any name, specify the value in the incoming request to match on. The following match types support this: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "title": "matchType and matchValue required",
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "title": "matchType and objectMatchValue required",
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "igMatchRule"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-ig.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "__Beta__ Specifies match rules for the Virtual Waiting Room.",
                            "title": "Virtual Waiting Room",
                            "type": "object",
                            "required": [
                              "type",
                              "action"
                            ],
                            "properties": {
                              "action": {
                                "description": "First In First Out (`FIFO`) processing is applied when there is a rule match. The first to enter the virtual waiting room is the first one out. After leaving the waiting room, the user is sent to the origin.",
                                "type": "string",
                                "enum": [
                                  "FIFO"
                                ]
                              },
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. Enter the value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "nullable": true,
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "If the value assigned to an incoming request falls within an inclusive range of two integers, the match is `true`. When setting up a range match, enter the two integers that comprise the range.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. For example, if the match type is `method`, the array values could be `GET` and `POST`.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` type, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "The value attributes in the incoming request to match on. Valid entries vary by match type. For example, `GET` and `POST` are valid entries for the `method` match type, and an integer is valid for the `numberOfFields` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for the value property should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for the value property includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for the value property includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If using a match type that supports name attributes, enter the value in the incoming request to match on. The following match types support name attributes: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "title": "matchType and matchValue required",
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "title": "matchType and objectMatchValue required",
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` time settings.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. Enter the value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Virtual Waiting Room is `vwrMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "vwrMatchRule"
                                ]
                              },
                              "useIncomingQueryString": {
                                "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                "type": "boolean"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-vwr.yaml",
                              "status": "BETA"
                            }
                          }
                        ]
                      },
                      "x-akamai": {
                        "file-path": "schemas/match-rules.yaml"
                      }
                    },
                    "matchRulesWarnings": {
                      "description": "A list of warnings about the version's match rules.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "detail",
                          "title",
                          "type"
                        ],
                        "properties": {
                          "detail": {
                            "description": "A detailed description of the warning.",
                            "type": "string"
                          },
                          "jsonPointer": {
                            "description": "A JSON pointer to the warned data.",
                            "type": "string"
                          },
                          "title": {
                            "description": "The title of the warning.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A link to detailed information about the warning type.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "modifiedBy": {
                      "description": "The username who last modified the policy version.",
                      "type": "string"
                    },
                    "modifiedDate": {
                      "description": "ISO 8601 timestamp indicating when the policy version was last modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "policyId": {
                      "description": "Identifies the shared policy.",
                      "type": "integer"
                    },
                    "version": {
                      "description": "The number of the policy version.",
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/policy-version.yaml"
                  }
                }
              }
            }
          },
          "400": {
            "description": "[Invalid request parameters, or problems parsing or validating the request object.](https://techdocs.akamai.com/cloudlets/reference/400)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "d07eaa5b-3f21-47e2-9182-9b5010f54564",
                  "status": 400,
                  "title": "Validation failed",
                  "type": "/cloudlets/v3/error-types/validation-failed",
                  "errors": [
                    {
                      "detail": "Invalid `matchRules` property type. Expected array, but got `NULL` instead.",
                      "title": "Validation failed"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          },
          "403": {
            "description": "[No permission to access this resource.](https://techdocs.akamai.com/cloudlets/reference/403)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "cc6e9850-c426-4e17-8e33-cab96beccad8",
                  "status": 403,
                  "title": "Access Denied",
                  "type": "/cloudlets/v3/error-types/access-denied",
                  "errors": [
                    {
                      "detail": "User does not have view capability for Edge Redirector Cloudlet in group 120.",
                      "title": "Access Denied"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          },
          "404": {
            "description": "[Resource not found.](https://techdocs.akamai.com/cloudlets/reference/404)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "03d51e0a-a50f-41e7-85ad-1a0584a58946",
                  "status": 404,
                  "title": "Not found",
                  "type": "/cloudlets/v3/error-types/not-found",
                  "errors": [
                    {
                      "detail": "Policy Version `11` not found in Policy `100000`.",
                      "title": "Not found"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Deletes a version of a shared policy. You can't delete a policy if it's active on the staging or production network. When you remove a policy version, version numbers aren't reallocated. For example, a policy has 15 versions, and you delete versions 14 and 15. The next version created would be 16, not 14.",
        "operationId": "delete-policy-version",
        "summary": "Remove a policy version",
        "tags": [
          "Versions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/delete-policy-version"
        },
        "responses": {
          "204": {
            "description": "The policy version is deleted.",
            "content": {
              "*/*": {}
            }
          },
          "403": {
            "description": "[No permission to access this resource.](https://techdocs.akamai.com/cloudlets/reference/403)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "cc6e9850-c426-4e17-8e33-cab96beccad8",
                  "status": 403,
                  "title": "Access Denied",
                  "type": "/cloudlets/v3/error-types/access-denied",
                  "errors": [
                    {
                      "detail": "User does not have view capability for Edge Redirector Cloudlet in group 120.",
                      "title": "Access Denied"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          },
          "404": {
            "description": "[Resource not found.](https://techdocs.akamai.com/cloudlets/reference/404)",
            "content": {
              "application/problem+json": {
                "example": {
                  "instance": "03d51e0a-a50f-41e7-85ad-1a0584a58946",
                  "status": 404,
                  "title": "Not found",
                  "type": "/cloudlets/v3/error-types/not-found",
                  "errors": [
                    {
                      "detail": "Policy Version `11` not found in Policy `100000`.",
                      "title": "Not found"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "instance",
                    "status",
                    "title",
                    "type",
                    "errors"
                  ],
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A nested error object.",
                        "type": "object",
                        "required": [
                          "instance",
                          "status",
                          "title",
                          "type",
                          "errors"
                        ],
                        "properties": {
                          "instance": {
                            "description": "A URI path that identifies the specific occurrence of the problem.",
                            "type": "string"
                          },
                          "status": {
                            "description": "HTTP response status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "Short descriptive title of the problem response.",
                            "type": "string"
                          },
                          "type": {
                            "description": "A URI path that identifies the problem type.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/error-nested.yaml"
                        }
                      }
                    },
                    "instance": {
                      "description": "A URI path that identifies the specific occurrence of the problem.",
                      "type": "string"
                    },
                    "status": {
                      "description": "HTTP response status code.",
                      "type": "integer"
                    },
                    "title": {
                      "description": "Short descriptive title of the problem response.",
                      "type": "string"
                    },
                    "type": {
                      "description": "A URI path that identifies the problem type.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/error.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "The number of the version.",
          "example": "{{version}}",
          "in": "path",
          "name": "version",
          "required": true,
          "schema": {
            "example": 2001,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/version-path.yaml"
          }
        },
        {
          "description": "Identifies the shared policy.",
          "example": "{{policyId}}",
          "in": "path",
          "name": "policyId",
          "required": true,
          "schema": {
            "example": 1001,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/policyId-path.yaml"
          }
        }
      ]
    }
  },
  "x-readme": {
    "samples-languages": [
      "curl",
      "python",
      "node"
    ]
  },
  "servers": [
    {
      "url": "https://{hostname}/cloudlets/v3"
    }
  ]
}