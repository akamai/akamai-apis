{
  "openapi": "3.0.0",
  "externalDocs": {
    "description": "See documentation for Akamai's Cloudlets API",
    "url": "https://techdocs.akamai.com/cloudlets/reference"
  },
  "info": {
    "title": "Akamai: Cloudlets API",
    "version": "2",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "paths": {
    "/cloudlet-info": {
      "get": {
        "description": "Returns name, code, and ID (`cloudletId`) information for all available Cloudlets. You need the `cloudletId` when creating a new policy.",
        "operationId": "get-cloudlets",
        "summary": "List Cloudlets",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-cloudlets"
        },
        "responses": {
          "200": {
            "description": "Returns details for Cloudlets that you can [create a policy](https://techdocs.akamai.com/cloudlets/reference/post-policy) for, including the Cloudlet's name and code.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Returns name, code, and ID information for a specific type of Cloudlet. You need the `cloudletId` when creating a new policy.",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Returns details of a Cloudlet that you can [create a policy for](https://techdocs.akamai.com/cloudlets/reference/post-policy), including a Cloudlet name and Cloudlet code.",
                    "type": "object",
                    "required": [
                      "cloudletName",
                      "cloudletId",
                      "location"
                    ],
                    "properties": {
                      "apiVersion": {
                        "description": "The specific version of this API.",
                        "type": "string"
                      },
                      "cloudletCode": {
                        "description": "The type of Cloudlet that this policy is for. To see the available Cloudlets, run the [List Cloudlets](https://techdocs.akamai.com/cloudlets/reference/get-cloudlets) operation. Possible values include: `ALB` for Application Load Balancer, `AP` for API Prioritization, `AS` for Audience Segmentation, `CD` for Phased Release, `ER` for Edge Redirector, `FR` for Forward Rewrite, `IG` for Request Control, and `VP` for Visitor Prioritization.",
                        "type": "string",
                        "enum": [
                          "ALB",
                          "AP",
                          "AS",
                          "CD",
                          "ER",
                          "FR",
                          "IG",
                          "VP"
                        ],
                        "x-akamai": {
                          "file-path": "schemas/cloudlet-code-enum.yaml"
                        }
                      },
                      "cloudletId": {
                        "description": "The ID of cloudlet that this policy is for. The `cloudletId` for Edge Redirector is `0`, Visitor Prioritization is `1`, Forward Rewrite is `3`, Request Control is `4`, API Prioritization is `5`, Audience Segmentation is `6`, Phased Release is `7`, and Application Load Balancer is `9`. To see the available Cloudlets, run the [List Cloudlets](https://techdocs.akamai.com/cloudlets/reference/get-cloudlets) operation.",
                        "type": "integer",
                        "enum": [
                          0,
                          1,
                          3,
                          4,
                          5,
                          6,
                          7,
                          9
                        ]
                      },
                      "cloudletName": {
                        "description": "The name of Cloudlet that this policy is for. To see the available Cloudlets, run the [List Cloudlets](https://techdocs.akamai.com/cloudlets/reference/get-cloudlets) operation. Available options are `APPLICATIONLOADBALANCER`, `ASSETPRIORITIZATION` for API Prioritization, `AUDIENCESEGMENTATION`, `CONTINUOUSDEPLOYMENT` for Phased Release, `EDGEREDIRECTOR`, `FORWARDREWRITE`, `IPGEOACCESS` for Request Control, and `VISITORPRIORITIZATION`.",
                        "type": "string",
                        "enum": [
                          "APPLICATIONLOADBALANCER",
                          "ASSETPRIORITIZATION",
                          "AUDIENCESEGMENTATION",
                          "CONTINUOUSDEPLOYMENT",
                          "EDGEREDIRECTOR",
                          "FORWARDREWRITE",
                          "IPGEOACCESS",
                          "VISITORPRIORITIZATION"
                        ],
                        "x-akamai": {
                          "file-path": "schemas/cloudlet-name-enum.yaml"
                        }
                      },
                      "location": {
                        "description": "The navigable endpoint used for the object referred to in the operation.",
                        "type": "string"
                      },
                      "serviceVersion": {
                        "deprecated": true,
                        "description": "The build of the software running on the server.",
                        "nullable": true,
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/cloudlets-info-object.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-cloudlet-info-response.yaml"
                  }
                },
                "example": [
                  {
                    "apiVersion": "2.0",
                    "cloudletCode": "FR",
                    "cloudletId": 3,
                    "cloudletName": "FORWARDREWRITE",
                    "location": "/cloudlets/api/v2/cloudlet-info/3",
                    "serviceVersion": null
                  },
                  {
                    "apiVersion": "2.0",
                    "cloudletCode": "ER",
                    "cloudletId": 0,
                    "cloudletName": "EDGEREDIRECTOR",
                    "location": "/cloudlets/api/v2/cloudlet-info/0",
                    "serviceVersion": null
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/cloudlet-info/{cloudletId}": {
      "get": {
        "description": "Returns name, code, and ID information for a specific type of Cloudlet. You need the `cloudletId` when creating a new policy.",
        "operationId": "get-cloudlet-info",
        "summary": "Get a Cloudlet",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-cloudlet-info"
        },
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "example": {
                  "apiVersion": "2.0",
                  "cloudletCode": "ER",
                  "cloudletId": 0,
                  "cloudletName": "EDGEREDIRECTOR",
                  "location": "/cloudlets/api/v2/cloudlet-info/0",
                  "serviceVersion": null
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Returns details of a Cloudlet that you can [create a policy for](https://techdocs.akamai.com/cloudlets/reference/post-policy), including a Cloudlet name and Cloudlet code.",
                  "type": "object",
                  "required": [
                    "cloudletName",
                    "cloudletId",
                    "location"
                  ],
                  "properties": {
                    "apiVersion": {
                      "description": "The specific version of this API.",
                      "type": "string"
                    },
                    "cloudletCode": {
                      "description": "The type of Cloudlet that this policy is for. To see the available Cloudlets, run the [List Cloudlets](https://techdocs.akamai.com/cloudlets/reference/get-cloudlets) operation. Possible values include: `ALB` for Application Load Balancer, `AP` for API Prioritization, `AS` for Audience Segmentation, `CD` for Phased Release, `ER` for Edge Redirector, `FR` for Forward Rewrite, `IG` for Request Control, and `VP` for Visitor Prioritization.",
                      "type": "string",
                      "enum": [
                        "ALB",
                        "AP",
                        "AS",
                        "CD",
                        "ER",
                        "FR",
                        "IG",
                        "VP"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/cloudlet-code-enum.yaml"
                      }
                    },
                    "cloudletId": {
                      "description": "The ID of cloudlet that this policy is for. The `cloudletId` for Edge Redirector is `0`, Visitor Prioritization is `1`, Forward Rewrite is `3`, Request Control is `4`, API Prioritization is `5`, Audience Segmentation is `6`, Phased Release is `7`, and Application Load Balancer is `9`. To see the available Cloudlets, run the [List Cloudlets](https://techdocs.akamai.com/cloudlets/reference/get-cloudlets) operation.",
                      "type": "integer",
                      "enum": [
                        0,
                        1,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                      ]
                    },
                    "cloudletName": {
                      "description": "The name of Cloudlet that this policy is for. To see the available Cloudlets, run the [List Cloudlets](https://techdocs.akamai.com/cloudlets/reference/get-cloudlets) operation. Available options are `APPLICATIONLOADBALANCER`, `ASSETPRIORITIZATION` for API Prioritization, `AUDIENCESEGMENTATION`, `CONTINUOUSDEPLOYMENT` for Phased Release, `EDGEREDIRECTOR`, `FORWARDREWRITE`, `IPGEOACCESS` for Request Control, and `VISITORPRIORITIZATION`.",
                      "type": "string",
                      "enum": [
                        "APPLICATIONLOADBALANCER",
                        "ASSETPRIORITIZATION",
                        "AUDIENCESEGMENTATION",
                        "CONTINUOUSDEPLOYMENT",
                        "EDGEREDIRECTOR",
                        "FORWARDREWRITE",
                        "IPGEOACCESS",
                        "VISITORPRIORITIZATION"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/cloudlet-name-enum.yaml"
                      }
                    },
                    "location": {
                      "description": "The navigable endpoint used for the object referred to in the operation.",
                      "type": "string"
                    },
                    "serviceVersion": {
                      "deprecated": true,
                      "description": "The build of the software running on the server.",
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/cloudlets-info-object.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "__Enum__ For GET operations, returns only policies for this particular `cloudletId`. The `cloudletId` for Edge Redirector is `0`, Visitor Prioritization is `1`, Forward Rewrite is `3`, Request Control is `4`, API Prioritization is `5`, Audience Segmentation is `6`, Phased Release is `7` and Application Load Balancer is `9`.",
          "example": "{{cloudletId}}",
          "in": "path",
          "name": "cloudletId",
          "required": true,
          "schema": {
            "type": "integer",
            "enum": [
              0,
              1,
              3,
              4,
              5,
              6,
              7,
              9
            ]
          },
          "x-akamai": {
            "file-path": "parameters/cloudletId-path.yaml"
          }
        }
      ]
    },
    "/group-info": {
      "get": {
        "description": "Returns information about the Cloudlet types associated with the groups you have edit privileges for.",
        "operationId": "get-group-info",
        "summary": "List groups",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-group-info"
        },
        "responses": {
          "200": {
            "description": "Returns information about the Cloudlet types that are associated with the groups that you have edit privileges for.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Returns information about the Cloudlet types associated with the selected group.",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Returns information about the Cloudlet types associated with the groups you have edit privileges for.",
                    "type": "object",
                    "required": [
                      "groupId",
                      "groupName",
                      "parentId",
                      "capabilities",
                      "properties",
                      "location"
                    ],
                    "properties": {
                      "apiVersion": {
                        "description": "The specific version of this API.",
                        "type": "string"
                      },
                      "capabilities": {
                        "description": "Type and permission information for each cloudlet.",
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "Returns information about the Cloudlet capabilities.",
                          "type": "object",
                          "required": [
                            "cloudletCode",
                            "cloudletId",
                            "capabilities"
                          ],
                          "properties": {
                            "capabilities": {
                              "description": "Possible permission values include: `Activate`, `Edit`, and `View`.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "cloudletCode": {
                              "description": "The type of Cloudlet that this policy is for. To see the available Cloudlets, run the [List Cloudlets](https://techdocs.akamai.com/cloudlets/reference/get-cloudlets) operation. Possible values include: `ALB` for Application Load Balancer, `AP` for API Prioritization, `AS` for Audience Segmentation, `CD` for Phased Release, `ER` for Edge Redirector, `FR` for Forward Rewrite, `IG` for Request Control, and `VP` for Visitor Prioritization.",
                              "type": "string",
                              "enum": [
                                "ALB",
                                "AP",
                                "AS",
                                "CD",
                                "ER",
                                "FR",
                                "IG",
                                "VP"
                              ],
                              "x-akamai": {
                                "file-path": "schemas/cloudlet-code-enum.yaml"
                              }
                            },
                            "cloudletId": {
                              "description": "The ID of cloudlet that this policy is for. The `cloudletId` for Edge Redirector is `0`, Visitor Prioritization is `1`, Forward Rewrite is `3`, Request Control is `4`, API Prioritization is `5`, Audience Segmentation is `6`, Phased Release is `7`, and Application Load Balancer is `9`. To see the available Cloudlets, run the [List Cloudlets](https://techdocs.akamai.com/cloudlets/reference/get-cloudlets) operation.",
                              "type": "integer"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/cloudlet-capability.yaml"
                          }
                        }
                      },
                      "groupId": {
                        "description": "The ID of group.",
                        "type": "integer"
                      },
                      "groupName": {
                        "description": "The name of group.",
                        "type": "string"
                      },
                      "location": {
                        "description": "The navigable endpoint used for the object referred to in the operation.",
                        "type": "string"
                      },
                      "parentId": {
                        "description": "The ID of parent group.",
                        "type": "integer"
                      },
                      "properties": {
                        "description": "List of associated properties with this group.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "serviceVersion": {
                        "deprecated": true,
                        "description": "The build of the software running on the server. The value can be `null`.",
                        "nullable": true,
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/group-info-object.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-group-info-response.yaml"
                  }
                },
                "example": [
                  {
                    "apiVersion": "2.0",
                    "groupId": 1234,
                    "groupName": "Master Group Name",
                    "location": "/cloudlets/api/v2/group-info/1234",
                    "parentId": 0,
                    "properties": null,
                    "serviceVersion": null,
                    "capabilities": [
                      {
                        "cloudletCode": "FR",
                        "cloudletId": 3,
                        "capabilities": [
                          "View",
                          "Edit",
                          "Activate"
                        ]
                      },
                      {
                        "cloudletCode": "ER",
                        "cloudletId": 0,
                        "capabilities": [
                          "View",
                          "Edit",
                          "Activate",
                          "AdvancedEdit"
                        ]
                      }
                    ]
                  },
                  {
                    "apiVersion": "2.0",
                    "groupId": 5678,
                    "groupName": "Subgroup 1",
                    "location": "/cloudlets/api/v2/group-info/5678",
                    "parentId": 1234,
                    "properties": null,
                    "serviceVersion": null,
                    "capabilities": [
                      {
                        "cloudletCode": "ER",
                        "cloudletId": 0,
                        "capabilities": [
                          "View",
                          "Edit",
                          "Activate"
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/group-info/{groupId}": {
      "get": {
        "description": "Returns information about the Cloudlet types associated with the selected group. For results to display, you must have edit privileges for one or more Cloudlet types within the group.",
        "operationId": "get-groupid-info",
        "summary": "Get a group",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-groupid-info"
        },
        "responses": {
          "200": {
            "description": "Provides information on the cloudlets associated with the selected group.",
            "content": {
              "application/json": {
                "example": {
                  "apiVersion": "2.0",
                  "groupId": 1234,
                  "groupName": "Master Group Name",
                  "location": "/cloudlets/api/v2/group-info/1234",
                  "parentId": 0,
                  "properties": null,
                  "serviceVersion": null,
                  "capabilities": [
                    {
                      "cloudletCode": "FR",
                      "cloudletId": 3,
                      "capabilities": [
                        "View",
                        "Edit",
                        "Activate"
                      ]
                    },
                    {
                      "cloudletCode": "ER",
                      "cloudletId": 0,
                      "capabilities": [
                        "View",
                        "Edit",
                        "Activate",
                        "AdvancedEdit"
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Returns information about the Cloudlet types associated with the groups you have edit privileges for.",
                  "type": "object",
                  "required": [
                    "groupId",
                    "groupName",
                    "parentId",
                    "capabilities",
                    "properties",
                    "location"
                  ],
                  "properties": {
                    "apiVersion": {
                      "description": "The specific version of this API.",
                      "type": "string"
                    },
                    "capabilities": {
                      "description": "Type and permission information for each cloudlet.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Returns information about the Cloudlet capabilities.",
                        "type": "object",
                        "required": [
                          "cloudletCode",
                          "cloudletId",
                          "capabilities"
                        ],
                        "properties": {
                          "capabilities": {
                            "description": "Possible permission values include: `Activate`, `Edit`, and `View`.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "cloudletCode": {
                            "description": "The type of Cloudlet that this policy is for. To see the available Cloudlets, run the [List Cloudlets](https://techdocs.akamai.com/cloudlets/reference/get-cloudlets) operation. Possible values include: `ALB` for Application Load Balancer, `AP` for API Prioritization, `AS` for Audience Segmentation, `CD` for Phased Release, `ER` for Edge Redirector, `FR` for Forward Rewrite, `IG` for Request Control, and `VP` for Visitor Prioritization.",
                            "type": "string",
                            "enum": [
                              "ALB",
                              "AP",
                              "AS",
                              "CD",
                              "ER",
                              "FR",
                              "IG",
                              "VP"
                            ],
                            "x-akamai": {
                              "file-path": "schemas/cloudlet-code-enum.yaml"
                            }
                          },
                          "cloudletId": {
                            "description": "The ID of cloudlet that this policy is for. The `cloudletId` for Edge Redirector is `0`, Visitor Prioritization is `1`, Forward Rewrite is `3`, Request Control is `4`, API Prioritization is `5`, Audience Segmentation is `6`, Phased Release is `7`, and Application Load Balancer is `9`. To see the available Cloudlets, run the [List Cloudlets](https://techdocs.akamai.com/cloudlets/reference/get-cloudlets) operation.",
                            "type": "integer"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/cloudlet-capability.yaml"
                        }
                      }
                    },
                    "groupId": {
                      "description": "The ID of group.",
                      "type": "integer"
                    },
                    "groupName": {
                      "description": "The name of group.",
                      "type": "string"
                    },
                    "location": {
                      "description": "The navigable endpoint used for the object referred to in the operation.",
                      "type": "string"
                    },
                    "parentId": {
                      "description": "The ID of parent group.",
                      "type": "integer"
                    },
                    "properties": {
                      "description": "List of associated properties with this group.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "serviceVersion": {
                      "deprecated": true,
                      "description": "The build of the software running on the server. The value can be `null`.",
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/group-info-object.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Get a group: For GET operations, returns only policies associated with the group ID entered. Enter `0` to get policies in all groups.",
          "example": "{{groupId}}",
          "in": "path",
          "name": "groupId",
          "required": true,
          "schema": {
            "type": "number"
          },
          "x-akamai": {
            "file-path": "parameters/groupId-path.yaml"
          }
        }
      ]
    },
    "/origins": {
      "post": {
        "description": "For Application Load Balancer, run this operation to create a load balancing configuration. This operation is only available for the `APPLICATION_LOAD_BALANCER` origin type.",
        "operationId": "post-origin",
        "summary": "Create a load balancing configuration",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/post-origin"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "description": "Test load balancer.",
                "originId": "loadBalancer1"
              },
              "schema": {
                "additionalProperties": false,
                "description": "TBD.",
                "type": "object",
                "required": [
                  "originId"
                ],
                "properties": {
                  "originId": {
                    "description": "The conditional origin's unique identifier.",
                    "example": "{{originId}}",
                    "maxLength": 63,
                    "minLength": 2,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/post-origins-request.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Schema for a Cloudlets Origin.",
            "content": {
              "application/json": {
                "example": {
                  "checksum": "958a75d5f1ffbb24f6eb35fe6c4a13a4",
                  "description": "Test load balancer.",
                  "originId": "loadBalancer1",
                  "type": "APPLICATION_LOAD_BALANCER"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "TBD.",
                  "type": "object",
                  "properties": {
                    "checksum": {
                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description you provide for each load balancing configuration.",
                      "type": "string"
                    },
                    "originId": {
                      "description": "The conditional origin's unique identifier.",
                      "maxLength": 63,
                      "minLength": 2,
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of origin this conditional origin is set up as. In this response the conditonal origin `type` is `APPLICATION_LOAD_BALANCER`.",
                      "type": "string",
                      "enum": [
                        "APPLICATION_LOAD_BALANCER"
                      ]
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/post-origins-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists the Application Load Balancer conditonal origins. You can use `type` to narrow the number of results returned. Options for the origin type include `APPLICATION_LOAD_BALANCER` for Application Load Balancer origins, `CUSTOMER` for standard origins, and `NETSTORAGE` for NetStorage-based origins.",
        "operationId": "get-origins",
        "summary": "List conditional origins",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-origins"
        },
        "responses": {
          "200": {
            "description": "Schema for a list of origins.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "TBD.",
                  "type": "array",
                  "items": {
                    "description": "Schema for a Cloudlets Origin.",
                    "x-akamai": {
                      "file-path": "schemas/origin.yaml"
                    },
                    "anyOf": [
                      {
                        "additionalProperties": false,
                        "title": "APPLICATION_LOAD_BALANCER",
                        "properties": {
                          "checksum": {
                            "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.",
                            "type": "string"
                          },
                          "description": {
                            "description": "The description of the load balancing configuration provided by a user.",
                            "type": "string"
                          },
                          "originId": {
                            "description": "The conditional origin's unique identifier.",
                            "maxLength": 63,
                            "minLength": 2,
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of origin this conditional origin is set up as. In this response the conditonal origin `type` is `APPLICATION_LOAD_BALANCER`.",
                            "type": "string",
                            "enum": [
                              "APPLICATION_LOAD_BALANCER"
                            ]
                          }
                        }
                      },
                      {
                        "additionalProperties": false,
                        "title": "CUSTOMER",
                        "required": [
                          "hostname",
                          "originId",
                          "type"
                        ],
                        "properties": {
                          "checksum": {
                            "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.",
                            "type": "string"
                          },
                          "hostname": {
                            "description": "The name of the host that can be used as a conditional origin.",
                            "type": "string"
                          },
                          "originId": {
                            "description": "The conditional origin's unique identifier.",
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of origin this conditional origin is set up as, in this case `CUSTOMER`.",
                            "type": "string",
                            "enum": [
                              "CUSTOMER"
                            ]
                          }
                        }
                      },
                      {
                        "additionalProperties": false,
                        "title": "NETSTORAGE",
                        "required": [
                          "hostname",
                          "originId",
                          "type"
                        ],
                        "properties": {
                          "checksum": {
                            "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.",
                            "type": "string"
                          },
                          "hostname": {
                            "description": "The name of the host that can be used as a conditional origin.",
                            "type": "string"
                          },
                          "originId": {
                            "description": "The conditional origin's unique identifier.",
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of origin this conditional origin is set up as, in this case `NETSTORAGE`.",
                            "type": "string",
                            "enum": [
                              "NETSTORAGE"
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-origins-response.yaml"
                  }
                },
                "example": [
                  {
                    "checksum": "691365709300c782c875ea43244a3d3f",
                    "hostname": "origin1.example.com",
                    "originId": "customerOrigin1",
                    "type": "CUSTOMER"
                  },
                  {
                    "checksum": "da016ec7b425cc1b601352d6078d0b51",
                    "hostname": "origin2.example.com",
                    "originId": "customerOrigin2",
                    "type": "CUSTOMER"
                  },
                  {
                    "checksum": "958a75d5f1ffbb24f6eb35fe6c4a13a4",
                    "description": "Test load balancer.",
                    "originId": "loadBalancer1",
                    "type": "APPLICATION_LOAD_BALANCER"
                  },
                  {
                    "checksum": "773636eb8f6c65f5dc01cc3d84f5c0a8",
                    "hostname": "download.akamai.com/12345",
                    "originId": "netStorageOrigin1",
                    "type": "NETSTORAGE"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Returns data for a specific type of origin as defined in Property Manager. Options include `alb` for Application Load Balancer origins, `customer` for standard origins, and `netstorage` for NetStorage-based origins.",
            "example": "{{type}}",
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/type-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/origins/currentActivations": {
      "get": {
        "description": "Run this operation to return information about all the current load balancing activations.",
        "operationId": "get-origins-currentactivations",
        "summary": "List current load balancing activations",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-origins-currentactivations"
        },
        "responses": {
          "200": {
            "description": "Schema for all current load balancer activations.",
            "content": {
              "application/json": {
                "example": {
                  "loadBalancer1": {
                    "PRODUCTION": {
                      "activatedBy": "tyamada",
                      "activatedDate": "2018-01-02T00:00:00.000Z",
                      "network": "PRODUCTION",
                      "originId": "loadBalancer1",
                      "status": "active",
                      "version": 1
                    },
                    "STAGING": {
                      "activatedBy": "jperez",
                      "activatedDate": "2018-01-01T00:00:00.000Z",
                      "network": "PRODUCTION",
                      "originId": "loadBalancer1",
                      "status": "active",
                      "version": 2
                    }
                  },
                  "loadBalancer2": {
                    "STAGING": {
                      "activatedBy": "jkowalski",
                      "activatedDate": "2018-12-31T00:00:00.000Z",
                      "network": "STAGING",
                      "originId": "loadBalancer2",
                      "status": "active",
                      "version": 1
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Provides information on the current load balancing activations.",
                  "type": "object",
                  "properties": {
                    "PRODUCTION": {
                      "description": "Contains information for current load balancing activations on the `PRODUCTION` network.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information for the current load balancing activations on either or both the `PRODUCTION` and `STAGING` networks.",
                        "type": "object",
                        "properties": {
                          "activatedBy": {
                            "description": "The name of the user who activated the load balancing configuration.",
                            "type": "string"
                          },
                          "activatedDate": {
                            "description": "The date and time, in ISO 8601 format, on which the load balancing configuration was activated.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "network": {
                            "description": "The network, either `STAGING` or `PRODUCTION`, on which a load balancing configuration for Application Load Balancer has been activated.",
                            "type": "string",
                            "enum": [
                              "PRODUCTION",
                              "STAGING"
                            ]
                          },
                          "originId": {
                            "description": "The conditional origin's unique identifier.",
                            "type": "string"
                          },
                          "status": {
                            "description": "The activation status for load balancing configuration. An `active` status indicates that the load balancing version is currently active (published) and its associated property version is also active.",
                            "type": "string",
                            "enum": [
                              "active"
                            ]
                          },
                          "version": {
                            "description": "The version number of the activated load balancing configuration.",
                            "type": "integer"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/origin-currentactivations.yaml"
                        }
                      }
                    },
                    "STAGING": {
                      "description": "Contains information for current load balancing activations on the `STAGING` network.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information for the current load balancing activations on either or both the `PRODUCTION` and `STAGING` networks.",
                        "type": "object",
                        "properties": {
                          "activatedBy": {
                            "description": "The name of the user who activated the load balancing configuration.",
                            "type": "string"
                          },
                          "activatedDate": {
                            "description": "The date and time, in ISO 8601 format, on which the load balancing configuration was activated.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "network": {
                            "description": "The network, either `STAGING` or `PRODUCTION`, on which a load balancing configuration for Application Load Balancer has been activated.",
                            "type": "string",
                            "enum": [
                              "PRODUCTION",
                              "STAGING"
                            ]
                          },
                          "originId": {
                            "description": "The conditional origin's unique identifier.",
                            "type": "string"
                          },
                          "status": {
                            "description": "The activation status for load balancing configuration. An `active` status indicates that the load balancing version is currently active (published) and its associated property version is also active.",
                            "type": "string",
                            "enum": [
                              "active"
                            ]
                          },
                          "version": {
                            "description": "The version number of the activated load balancing configuration.",
                            "type": "integer"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/origin-currentactivations.yaml"
                        }
                      }
                    },
                    "originId": {
                      "description": "The conditional origin's unique identifier for the current load balancing activation on either or both the `PRODUCTION` and `STAGING` networks.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-origins-currentactivations-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/origins/{originId}": {
      "get": {
        "description": "Run this operation to get data for a specific conditional origin using the `originId`. Run the [List conditional origins](https://techdocs.akamai.com/cloudlets/v2/reference/get-origins) to get the `originId`. This operation is only available for the `APPLICATION_LOAD_BALANCER` origin type.",
        "operationId": "get-origin",
        "summary": "Get a conditional origin",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-origin"
        },
        "responses": {
          "200": {
            "description": "Schema for a Cloudlets Origin.",
            "content": {
              "application/json": {
                "example": {
                  "checksum": "958a75d5f1ffbb24f6eb35fe6c4a13a4",
                  "description": "Test load balancer.",
                  "originId": "loadBalancer1",
                  "type": "APPLICATION_LOAD_BALANCER"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "TBD.",
                  "type": "object",
                  "properties": {
                    "checksum": {
                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.",
                      "type": "string"
                    },
                    "description": {
                      "description": "The description of the load balancing configuration provided by a user.",
                      "type": "string"
                    },
                    "originId": {
                      "description": "The conditional origin's unique identifier.",
                      "maxLength": 63,
                      "minLength": 2,
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of origin this conditional origin is set up as. In this response the conditonal origin `type` is `APPLICATION_LOAD_BALANCER`.",
                      "type": "string",
                      "enum": [
                        "APPLICATION_LOAD_BALANCER"
                      ]
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-origin-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "For Application Load Balancer, run this operation to update the description of an existing load balancing configuration. This operation is only available for the `APPLICATION_LOAD_BALANCER` origin type.",
        "operationId": "put-origin",
        "summary": "Update a load balancing configuration",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/put-origin"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "description": "Test load balancing configuration."
              },
              "schema": {
                "additionalProperties": false,
                "description": "TBD.",
                "type": "object",
                "properties": {
                  "description": {
                    "description": "The new description of the load balancing configuration provided by a user.",
                    "example": "{{description}}",
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/put-origin-request.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Schema for a Cloudlets Origin.",
            "content": {
              "application/json": {
                "example": {
                  "checksum": "abcdefg1111hijklmn22222fff76yae3",
                  "description": "Test load balancing configuration.",
                  "originId": "clorigin1",
                  "type": "APPLICATION_LOAD_BALANCER"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "TBD.",
                  "type": "object",
                  "properties": {
                    "checksum": {
                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.",
                      "type": "string"
                    },
                    "description": {
                      "description": "The description of the load balancing configuration provided by a user.",
                      "type": "string"
                    },
                    "originId": {
                      "description": "The conditional origin's unique identifier.",
                      "maxLength": 63,
                      "minLength": 2,
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of origin this conditional origin is set up as. In this response the conditonal origin `type` is `APPLICATION_LOAD_BALANCER`.",
                      "type": "string",
                      "enum": [
                        "APPLICATION_LOAD_BALANCER"
                      ]
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/put-origin-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for the origin.",
          "example": "{{originId}}",
          "in": "path",
          "name": "originId",
          "required": true,
          "schema": {
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/originId-path.yaml"
          }
        }
      ]
    },
    "/origins/{originId}/activations": {
      "post": {
        "description": "Activate the selected load balancing version. The load balancing version status is either `active` or `inactive`.",
        "operationId": "post-origin-activations",
        "summary": "Activate a load balancing version",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/post-origin-activations"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "dryrun": false,
                "network": "PRODUCTION",
                "version": 1
              },
              "schema": {
                "additionalProperties": false,
                "description": "TBD.",
                "type": "object",
                "required": [
                  "network",
                  "version"
                ],
                "properties": {
                  "dryrun": {
                    "description": "If `true`, the operation validates the configuration, but does not activate the load balancing version. The default setting is `false`.",
                    "example": "{{dryrun}}",
                    "type": "boolean"
                  },
                  "network": {
                    "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.",
                    "example": "{{network}}",
                    "type": "string",
                    "enum": [
                      "PRODUCTION",
                      "STAGING",
                      "prod",
                      "production",
                      "staging"
                    ]
                  },
                  "version": {
                    "description": "The version number of the activated load balancing configuration.",
                    "example": "{{version}}",
                    "minimum": 0,
                    "type": "integer"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/post-origin-activations-request.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Schema for a load balancer activation.",
            "content": {
              "application/json": {
                "example": {
                  "activatedBy": "afero",
                  "activatedDate": "2018-01-02T00:00:00.000Z",
                  "dryrun": false,
                  "network": "PRODUCTION",
                  "originId": "loadBalancer1",
                  "status": "active",
                  "version": 1
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "TBD.",
                  "type": "object",
                  "required": [
                    "network",
                    "version"
                  ],
                  "properties": {
                    "activatedBy": {
                      "description": "The name of the user who activated the load balancing configuration.",
                      "type": "string"
                    },
                    "activatedDate": {
                      "description": "The date and time, in ISO 8601 format, on which the load balancing configuration was activated.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "dryrun": {
                      "description": "If `true`, the operation validates the configuration, but does not activate the load balancing version. The default setting is `false`.",
                      "type": "boolean"
                    },
                    "network": {
                      "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.",
                      "type": "string",
                      "enum": [
                        "PRODUCTION",
                        "STAGING",
                        "prod",
                        "production",
                        "staging"
                      ]
                    },
                    "originId": {
                      "description": "The conditional origin's unique identifier.",
                      "type": "string"
                    },
                    "status": {
                      "description": "The activation status for the load balancing version. Values include the following: `inactive` where the load balancing version has not been activated. No active property versions reference this policy. `active` where the load balancing version is currently active (published) and its associated property version is also active. `deactivated` where the load balancing version was previously activated but it has been superseded by a more recent activation of another load balancing version. `pending` where the load balancing version is proceeding through the activation workflow. `failed` where the activation workflow for the load balancing version has failed.",
                      "type": "string",
                      "enum": [
                        "active",
                        "deactivated",
                        "inactive",
                        "pending",
                        "failed"
                      ]
                    },
                    "version": {
                      "description": "The version number of the activated load balancing configuration.",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/post-origin-activations-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Set `async` to `true` for policy activations on multiple properties to reduce API response time and let the policy activation continue asynchronously in the background. Default is `false`.",
            "example": "{{async}}",
            "in": "query",
            "name": "async",
            "schema": {
              "default": false,
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/async-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "The response lists the activations by the `activatedDate` with the most recent listed first.",
        "operationId": "get-origin-activations",
        "summary": "List activations for a load balancing configuration",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-origin-activations"
        },
        "responses": {
          "200": {
            "description": "Schema for a list of load balancer activations.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "List of current load balancing activations on `STAGING`, and `PRODUCTION` networks.  ",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Schema for a load balancer activation.",
                    "type": "object",
                    "required": [
                      "network",
                      "version"
                    ],
                    "properties": {
                      "activatedBy": {
                        "description": "The name of the user who activated the load balancing configuration.",
                        "type": "string"
                      },
                      "activatedDate": {
                        "description": "The date and time, in ISO 8601 format, on which the load balancing configuration was activated.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "dryrun": {
                        "description": "If `true`, the operation validates the configuration, but does not activate the load balancing version. The default setting is `false`.",
                        "type": "boolean"
                      },
                      "network": {
                        "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.",
                        "type": "string",
                        "enum": [
                          "PRODUCTION",
                          "STAGING",
                          "prod",
                          "production",
                          "staging"
                        ]
                      },
                      "originId": {
                        "description": "The conditional origin's unique identifier.",
                        "type": "string"
                      },
                      "status": {
                        "description": "The activation status for the policy or property. Values include the following: `inactive` where the policy version has not been activated. No active property versions reference this policy. `active` where the policy version is currently active (published) and its associated property version is also active. `deactivated` where the policy version was previously activated but it has been superseded by a more recent activation of another policy version. `pending` where the policy version is proceeding through the activation workflow. `failed` where the policy version activation workflow has failed.",
                        "type": "string",
                        "enum": [
                          "active",
                          "deactivated",
                          "inactive",
                          "pending",
                          "failed"
                        ]
                      },
                      "version": {
                        "description": "The version number of the activated load balancing configuration.",
                        "minimum": 0,
                        "type": "integer"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/origin-activation.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-origin-activations-response.yaml"
                  }
                },
                "example": [
                  {
                    "activatedBy": "tyamada",
                    "activatedDate": "2018-01-02T00:00:00.000Z",
                    "network": "PRODUCTION",
                    "originId": "loadBalancer1",
                    "status": "active",
                    "version": 1
                  },
                  {
                    "activatedBy": "jperez",
                    "activatedDate": "2018-01-01T00:00:00.000Z",
                    "network": "STAGING",
                    "originId": "loadBalancer1",
                    "status": "active",
                    "version": 2
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for the origin.",
          "example": "{{originId}}",
          "in": "path",
          "name": "originId",
          "required": true,
          "schema": {
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/originId-path.yaml"
          }
        }
      ]
    },
    "/origins/{originId}/versions": {
      "post": {
        "description": "You can create multiple versions of the load balancing configuration. By versioning these settings, you can test new configurations, or manage changes to the data centers supporting Application Load Balancer.",
        "operationId": "post-origin-versions",
        "summary": "Create a load balancing version",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/post-origin-versions"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "balancingType": "WEIGHTED",
                "deleted": false,
                "description": "Load Balancer version 3",
                "livenessSettings": {
                  "hostHeader": "www.example.com",
                  "interval": 25,
                  "path": "/status",
                  "peerCertificateVerification": true,
                  "port": 443,
                  "protocol": "HTTPS",
                  "status3xxFailure": false,
                  "status4xxFailure": true,
                  "status5xxFailure": false,
                  "timeout": 30
                },
                "dataCenters": [
                  {
                    "cloudServerHostHeaderOverride": false,
                    "cloudService": false,
                    "continent": "NA",
                    "country": "US",
                    "latitude": 102.78108,
                    "longitude": -116.07064,
                    "originId": "customerOrigin1",
                    "percent": 100,
                    "livenessHosts": [
                      "origin2.example.com"
                    ]
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "TBD.",
                "type": "object",
                "properties": {
                  "balancingType": {
                    "description": "The type of load balancing being performed. Options include `WEIGHTED` and `PERFORMANCE`.",
                    "example": "{{balancingType}}",
                    "type": "string",
                    "enum": [
                      "PERFORMANCE",
                      "WEIGHTED"
                    ]
                  },
                  "dataCenters": {
                    "description": "The object containing information on conditional origins being used as data centers for an Application Load Balancer implementation, as detailed [below](#datacenters). Only conditional origins with an `originType` of `CUSTOMER` or `NETSTORAGE` can be used as data centers in an Application Load Balancer configuration.",
                    "maxItems": 199,
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Contains information about the data centers where the origins are located.",
                      "type": "object",
                      "required": [
                        "cloudService",
                        "continent",
                        "country",
                        "latitude",
                        "longitude",
                        "originId",
                        "percent"
                      ],
                      "properties": {
                        "city": {
                          "description": "The city in which the data center is located.",
                          "type": "string"
                        },
                        "cloudServerHostHeaderOverride": {
                          "description": "When set to `true`, overides the host header for load balancing in a cloud environment.",
                          "type": "boolean"
                        },
                        "cloudService": {
                          "description": "If `true` caching for the data center is updated at a certain interval, like it would for a cloud-based service.",
                          "type": "boolean"
                        },
                        "continent": {
                          "description": "The continent on which the data center is located. See [Continent Codes](https://control.akamai.com/dl/edgescape/continentCodes.csv) for a list of valid codes.",
                          "type": "string",
                          "enum": [
                            "AF",
                            "AS",
                            "EU",
                            "NA",
                            "OC",
                            "OT",
                            "SA"
                          ]
                        },
                        "country": {
                          "description": "The country in which the data center is located. See [Country Codes](https://control.akamai.com/dl/edgescape/cc2continent.csv) for a list of valid codes.",
                          "maxLength": 2,
                          "minLength": 2,
                          "type": "string"
                        },
                        "hostname": {
                          "description": "The name of the host that can be used as a conditional origin.",
                          "maxLength": 256,
                          "type": "string"
                        },
                        "latitude": {
                          "description": "The latitude value for the data center. This member supports six decimal places of precision.",
                          "maximum": 180,
                          "minimum": -180,
                          "type": "number"
                        },
                        "livenessHosts": {
                          "description": "An array of strings that represent the origin servers used to poll the data centers in an Application Load Balancer configuration. These servers support basic HTTP polling.",
                          "minItems": 1,
                          "type": "array",
                          "uniqueItems": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "longitude": {
                          "description": "The longitude value for the data center. This member supports six decimal places of precision.",
                          "maximum": 180,
                          "minimum": -180,
                          "type": "number"
                        },
                        "originId": {
                          "description": "The conditional origin's unique identifier.",
                          "maxLength": 128,
                          "type": "string"
                        },
                        "percent": {
                          "description": "The percent of traffic that is sent to the data center. The total for all `dataCenters` objects within the array must equal 100%.",
                          "maximum": 100,
                          "minimum": 0,
                          "type": "number"
                        },
                        "stateOrProvince": {
                          "description": "The state, province, or region where the data center is located. See [region codes](https://control.akamai.com/dl/edgescape/region_codes.txt).",
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/dataCenter.yaml"
                      }
                    }
                  },
                  "deleted": {
                    "description": "If `true`, the conditional origin version has been deleted. If you set this member to `false`, you can use this version again.",
                    "example": "{{deleted}}",
                    "type": "boolean"
                  },
                  "description": {
                    "description": "The description of the load balancing configuration provided by a user.",
                    "example": "{{description}}",
                    "type": "string"
                  },
                  "livenessSettings": {
                    "description": "The object containing information on the liveness settings for an Application Load Balancer implementation, as detailed [below](#livenesssettings).",
                    "type": "object"
                  },
                  "originId": {
                    "description": "The conditional origin's unique identifier.",
                    "example": "{{originId}}",
                    "maxLength": 62,
                    "minLength": 2,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/post-origin-versions-request.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Return details about origin version.",
            "content": {
              "application/json": {
                "example": {
                  "balancingType": "WEIGHTED",
                  "createdBy": "jkowalski",
                  "createdDate": "2017-12-21T00:00:00.000Z",
                  "deleted": false,
                  "description": "Load Balancer version 3",
                  "immutable": false,
                  "lastModifiedBy": "jperez",
                  "lastModifiedDate": "2017-12-21T00:00:00.000Z",
                  "originId": "loadBalancer1",
                  "version": 3,
                  "livenessSettings": {
                    "hostHeader": "www.example.com",
                    "interval": 25,
                    "path": "/status",
                    "peerCertificateVerification": true,
                    "port": 443,
                    "protocol": "HTTPS",
                    "status3xxFailure": false,
                    "status4xxFailure": true,
                    "status5xxFailure": false,
                    "timeout": 30
                  },
                  "dataCenters": [
                    {
                      "cloudServerHostHeaderOverride": false,
                      "cloudService": false,
                      "continent": "NA",
                      "country": "US",
                      "latitude": 102.78108,
                      "longitude": -116.07064,
                      "originId": "customerOrigin1",
                      "percent": 100,
                      "livenessHosts": [
                        "origin2.example.com"
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "TBD.",
                  "type": "object",
                  "properties": {
                    "balancingType": {
                      "description": "The type of load balancing being performed. Options include `WEIGHTED` and `PERFORMANCE`.",
                      "type": "string",
                      "enum": [
                        "PERFORMANCE",
                        "WEIGHTED"
                      ]
                    },
                    "createdBy": {
                      "description": "The name of the user who created this load balancing configuration.",
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "The date and time, in ISO 8601 format, when this load balancing configuration was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "dataCenters": {
                      "description": "The object containing information on conditional origins being used as data centers for an Application Load Balancer implementation, as detailed [below](#datacenters). Only conditional origins with an `originType` of `CUSTOMER` or `NETSTORAGE` can be used as data centers in an Application Load Balancer configuration.",
                      "maxItems": 199,
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information about the data centers where the origins are located.",
                        "type": "object",
                        "required": [
                          "cloudService",
                          "continent",
                          "country",
                          "latitude",
                          "longitude",
                          "originId",
                          "percent"
                        ],
                        "properties": {
                          "city": {
                            "description": "The city in which the data center is located.",
                            "type": "string"
                          },
                          "cloudServerHostHeaderOverride": {
                            "description": "When set to `true`, overides the host header for load balancing in a cloud environment.",
                            "type": "boolean"
                          },
                          "cloudService": {
                            "description": "If `true` caching for the data center is updated at a certain interval, like it would for a cloud-based service.",
                            "type": "boolean"
                          },
                          "continent": {
                            "description": "The continent on which the data center is located. See [Continent Codes](https://control.akamai.com/dl/edgescape/continentCodes.csv) for a list of valid codes.",
                            "type": "string",
                            "enum": [
                              "AF",
                              "AS",
                              "EU",
                              "NA",
                              "OC",
                              "OT",
                              "SA"
                            ]
                          },
                          "country": {
                            "description": "The country in which the data center is located. See [Country Codes](https://control.akamai.com/dl/edgescape/cc2continent.csv) for a list of valid codes.",
                            "maxLength": 2,
                            "minLength": 2,
                            "type": "string"
                          },
                          "hostname": {
                            "description": "The name of the host that can be used as a conditional origin.",
                            "maxLength": 256,
                            "type": "string"
                          },
                          "latitude": {
                            "description": "The latitude value for the data center. This member supports six decimal places of precision.",
                            "maximum": 180,
                            "minimum": -180,
                            "type": "number"
                          },
                          "livenessHosts": {
                            "description": "An array of strings that represent the origin servers used to poll the data centers in an Application Load Balancer configuration. These servers support basic HTTP polling.",
                            "minItems": 1,
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                              "type": "string"
                            }
                          },
                          "longitude": {
                            "description": "The longitude value for the data center. This member supports six decimal places of precision.",
                            "maximum": 180,
                            "minimum": -180,
                            "type": "number"
                          },
                          "originId": {
                            "description": "The conditional origin's unique identifier.",
                            "maxLength": 128,
                            "type": "string"
                          },
                          "percent": {
                            "description": "The percent of traffic that is sent to the data center. The total for all `dataCenters` objects within the array must equal 100%.",
                            "maximum": 100,
                            "minimum": 0,
                            "type": "number"
                          },
                          "stateOrProvince": {
                            "description": "The state, province, or region where the data center is located. See [region codes](https://control.akamai.com/dl/edgescape/region_codes.txt).",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/dataCenter.yaml"
                        }
                      }
                    },
                    "deleted": {
                      "description": "If `true`, the conditional origin version has been deleted. If you set this member to `false`, you can use this version again.",
                      "type": "boolean"
                    },
                    "description": {
                      "description": "The description of the load balancing configuration provided by a user.",
                      "type": "string"
                    },
                    "immutable": {
                      "description": "Indicates whether you can edit the load balancing version. The default setting is `false`. It becomes `true` when you activate the load balancing version for the first time.",
                      "type": "boolean"
                    },
                    "lastModifiedBy": {
                      "description": "The user who last modified the load balancing configuration.",
                      "type": "string"
                    },
                    "lastModifiedDate": {
                      "description": "The date and time, in ISO 8601 format, when the initial load balancing configuration was last modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "livenessSettings": {
                      "description": "The object containing information on the liveness settings for an Application Load Balancer implementation, as detailed [below](#livenesssettings).",
                      "type": "object"
                    },
                    "originId": {
                      "description": "The conditional origin's unique identifier.",
                      "maxLength": 62,
                      "minLength": 2,
                      "type": "string"
                    },
                    "version": {
                      "description": "The version number of the activated load balancing configuration.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "warnings": {
                      "description": "Provides error response data to help diagnose the problem that led to the error.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Provides error response data to help diagnose the problem that led to the error.",
                        "type": "object",
                        "required": [
                          "detail",
                          "title",
                          "type"
                        ],
                        "properties": {
                          "detail": {
                            "description": "Provides actionable instructions to diagnose the problem that caused the error.",
                            "type": "string"
                          },
                          "errors": {
                            "description": "Error objects that provide information for debugging.",
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Provides error response data to help diagnose the problem that led to the error.",
                              "type": "object",
                              "required": [
                                "detail",
                                "title",
                                "type"
                              ],
                              "properties": {
                                "detail": {
                                  "description": "Provides actionable instructions to diagnose the problem that caused the error.",
                                  "type": "string"
                                },
                                "errors": {
                                  "description": "Error objects that provide information for debugging.",
                                  "type": "array",
                                  "items": {
                                    "description": "A further-nested HTTP problem object.",
                                    "type": "object",
                                    "x-akamai": {
                                      "file-path": "schemas/http-problem-nested.yaml"
                                    }
                                  }
                                },
                                "jsonPointer": {
                                  "description": "The pointer to the error response JSON body.",
                                  "maxLength": 128,
                                  "type": "string"
                                },
                                "status": {
                                  "description": "The HTTP problem status code.",
                                  "type": "integer"
                                },
                                "title": {
                                  "description": "The descriptive label for the overall problem.",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "The error `type` uniquely identifies each distinct error case. An error can have multiple `types`.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "jsonPointer": {
                            "description": "The pointer to the error response JSON body.",
                            "maxLength": 128,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP problem status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "The descriptive label for the overall problem.",
                            "type": "string"
                          },
                          "type": {
                            "description": "The error `type` uniquely identifies each distinct error case. An error can have multiple `types`.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/warning.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/post-origin-versions-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "For Application Load Balancer, run this operation to list all versions of a load balancing configuration. The response lists the versions in descending order.",
        "operationId": "get-origin-versions",
        "summary": "List load balancing versions",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-origin-versions"
        },
        "responses": {
          "200": {
            "description": "Schema for a list of load balancer versions.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Lists origin versions for load balancing.",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Lists origin versions for load balancing.",
                    "type": "object",
                    "properties": {
                      "createdBy": {
                        "description": "The name of the user who created this load balancing configuration.",
                        "type": "string"
                      },
                      "createdDate": {
                        "description": "The date and time, in ISO 8601 format, when this load balancing configuration was created.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "deleted": {
                        "description": "If `true`, the conditional origin version has been deleted. If you set this member to `false`, you can use this version again.",
                        "type": "boolean"
                      },
                      "description": {
                        "description": "The description of the load balancing configuration provided by a user.",
                        "type": "string"
                      },
                      "immutable": {
                        "description": "Indicates whether you can edit the load balancing version. The default setting is `false`. It automatically becomes `true` when the load balancing version is activated for the first time.",
                        "type": "boolean"
                      },
                      "lastModifiedBy": {
                        "description": "The user who last modified the load balancing configuration.",
                        "type": "string"
                      },
                      "lastModifiedDate": {
                        "description": "The date and time, in ISO 8601 format, when the initial load balancing configuration was last modified.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "originId": {
                        "description": "The conditional origin's unique identifier.",
                        "maxLength": 62,
                        "minLength": 2,
                        "type": "string"
                      },
                      "version": {
                        "description": "The version number of the activated load balancing configuration.",
                        "minimum": 0,
                        "type": "integer"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/origin-version.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-origin-versions-response.yaml"
                  }
                },
                "example": [
                  {
                    "createdBy": "tyamada",
                    "createdDate": "2017-12-20T00:00:00.000Z",
                    "deleted": false,
                    "description": "Load Balancer version 2",
                    "immutable": true,
                    "lastModifiedBy": "jkowalski",
                    "lastModifiedDate": "2017-12-20T00:00:00.000Z",
                    "originId": "loadBalancer1",
                    "version": 2
                  },
                  {
                    "createdBy": "jkowalski",
                    "createdDate": "2017-12-10T00:00:00.000Z",
                    "deleted": false,
                    "description": "Load Balancer version 1",
                    "immutable": true,
                    "lastModifiedBy": "jsmith",
                    "lastModifiedDate": "2017-12-10T00:00:00.000Z",
                    "originId": "loadBalancer1",
                    "version": 1
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "Unique identifier for the origin.",
          "example": "{{originId}}",
          "in": "path",
          "name": "originId",
          "required": true,
          "schema": {
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/originId-path.yaml"
          }
        }
      ]
    },
    "/origins/{originId}/versions/{version}": {
      "get": {
        "description": "For this operation, you have the option of using the `validate` query parameter.  When set to `true`, this parameter verifies whether the settings for the selected `loadBalancerId` and `version` are valid. The default setting for this parameter is `false`.",
        "operationId": "get-origin-version",
        "summary": "Get a load balancing version",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-origin-version"
        },
        "responses": {
          "200": {
            "description": "Return details about origin version.",
            "content": {
              "application/json": {
                "example": {
                  "balancingType": "WEIGHTED",
                  "createdBy": "mrossi",
                  "createdDate": "2017-12-20T00:00:00.000Z",
                  "deleted": false,
                  "description": "Load Balancer version 2",
                  "immutable": true,
                  "lastModifiedBy": "jdupont",
                  "lastModifiedDate": "2017-12-20T00:00:00.000Z",
                  "originId": "loadBalancer1",
                  "version": 2,
                  "livenessSettings": {
                    "hostHeader": "www.example.com",
                    "interval": 25,
                    "path": "/status",
                    "peerCertificateVerification": true,
                    "port": 443,
                    "protocol": "HTTPS",
                    "status3xxFailure": false,
                    "status4xxFailure": true,
                    "status5xxFailure": false,
                    "timeout": 30
                  },
                  "dataCenters": [
                    {
                      "cloudServerHostHeaderOverride": false,
                      "cloudService": false,
                      "continent": "NA",
                      "country": "US",
                      "latitude": 102.78108,
                      "longitude": -116.07064,
                      "originId": "customerOrigin1",
                      "percent": 100,
                      "livenessHosts": [
                        "origin2.example.com"
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "TBD.",
                  "type": "object",
                  "properties": {
                    "balancingType": {
                      "description": "The type of load balancing being performed. Options include `WEIGHTED` and `PERFORMANCE`.",
                      "type": "string",
                      "enum": [
                        "PERFORMANCE",
                        "WEIGHTED"
                      ]
                    },
                    "createdBy": {
                      "description": "The name of the user who created this load balancing configuration.",
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "The date and time, in ISO 8601 format, when this load balancing configuration was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "dataCenters": {
                      "description": "The object containing information on conditional origins being used as data centers for an Application Load Balancer implementation. Only conditional origins with an `originType` of `CUSTOMER` or `NETSTORAGE` can be used as data centers in an Application Load Balancer configuration.",
                      "maxItems": 199,
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information about the data centers where the origins are located.",
                        "type": "object",
                        "required": [
                          "cloudService",
                          "continent",
                          "country",
                          "latitude",
                          "longitude",
                          "originId",
                          "percent"
                        ],
                        "properties": {
                          "city": {
                            "description": "The city in which the data center is located.",
                            "type": "string"
                          },
                          "cloudServerHostHeaderOverride": {
                            "description": "When set to `true`, overides the host header for load balancing in a cloud environment.",
                            "type": "boolean"
                          },
                          "cloudService": {
                            "description": "If `true` caching for the data center is updated at a certain interval, like it would for a cloud-based service.",
                            "type": "boolean"
                          },
                          "continent": {
                            "description": "The continent on which the data center is located. See [Continent Codes](https://control.akamai.com/dl/edgescape/continentCodes.csv) for a list of valid codes.",
                            "type": "string",
                            "enum": [
                              "AF",
                              "AS",
                              "EU",
                              "NA",
                              "OC",
                              "OT",
                              "SA"
                            ]
                          },
                          "country": {
                            "description": "The country in which the data center is located. See [Country Codes](https://control.akamai.com/dl/edgescape/cc2continent.csv) for a list of valid codes.",
                            "maxLength": 2,
                            "minLength": 2,
                            "type": "string"
                          },
                          "hostname": {
                            "description": "The name of the host that can be used as a conditional origin.",
                            "maxLength": 256,
                            "type": "string"
                          },
                          "latitude": {
                            "description": "The latitude value for the data center. This member supports six decimal places of precision.",
                            "maximum": 180,
                            "minimum": -180,
                            "type": "number"
                          },
                          "livenessHosts": {
                            "description": "An array of strings that represent the origin servers used to poll the data centers in an Application Load Balancer configuration. These servers support basic HTTP polling.",
                            "minItems": 1,
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                              "type": "string"
                            }
                          },
                          "longitude": {
                            "description": "The longitude value for the data center. This member supports six decimal places of precision.",
                            "maximum": 180,
                            "minimum": -180,
                            "type": "number"
                          },
                          "originId": {
                            "description": "The conditional origin's unique identifier.",
                            "maxLength": 128,
                            "type": "string"
                          },
                          "percent": {
                            "description": "The percent of traffic that is sent to the data center. The total for all `dataCenters` objects within the array must equal 100%.",
                            "maximum": 100,
                            "minimum": 0,
                            "type": "number"
                          },
                          "stateOrProvince": {
                            "description": "The state, province, or region where the data center is located. See [region codes](https://control.akamai.com/dl/edgescape/region_codes.txt).",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/dataCenter.yaml"
                        }
                      }
                    },
                    "deleted": {
                      "description": "If `true`, the conditional origin version has been deleted. If you set this member to `false`, you can use this version again.",
                      "type": "boolean"
                    },
                    "description": {
                      "description": "The description of the load balancing configuration provided by a user.",
                      "type": "string"
                    },
                    "immutable": {
                      "description": "Indicates whether you can edit the load balancing version. The default setting is `false`. It automatically becomes `true` when the load balancing version is activated for the first time.",
                      "type": "boolean"
                    },
                    "lastModifiedBy": {
                      "description": "The user who last modified the load balancing configuration.",
                      "type": "string"
                    },
                    "lastModifiedDate": {
                      "description": "The date and time, in ISO 8601 format, when the initial load balancing configuration was last modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "livenessSettings": {
                      "description": "The object containing information on the liveness settings for an Application Load Balancer implementation.",
                      "type": "object"
                    },
                    "originId": {
                      "description": "The conditional origin's unique identifier.",
                      "maxLength": 62,
                      "minLength": 2,
                      "type": "string"
                    },
                    "version": {
                      "description": "The version number of the activated load balancing configuration.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "warnings": {
                      "description": "Provides error response data to help diagnose the problem that led to the error.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Provides error response data to help diagnose the problem that led to the error.",
                        "type": "object",
                        "required": [
                          "detail",
                          "title",
                          "type"
                        ],
                        "properties": {
                          "detail": {
                            "description": "Provides actionable instructions to diagnose the problem that caused the error.",
                            "type": "string"
                          },
                          "errors": {
                            "description": "Error objects that provide information for debugging.",
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Provides error response data to help diagnose the problem that led to the error.",
                              "type": "object",
                              "required": [
                                "detail",
                                "title",
                                "type"
                              ],
                              "properties": {
                                "detail": {
                                  "description": "Provides actionable instructions to diagnose the problem that caused the error.",
                                  "type": "string"
                                },
                                "errors": {
                                  "description": "Error objects that provide information for debugging.",
                                  "type": "array",
                                  "items": {
                                    "description": "A further-nested HTTP problem object.",
                                    "type": "object",
                                    "x-akamai": {
                                      "file-path": "schemas/http-problem-nested.yaml"
                                    }
                                  }
                                },
                                "jsonPointer": {
                                  "description": "The pointer to the error response JSON body.",
                                  "maxLength": 128,
                                  "type": "string"
                                },
                                "status": {
                                  "description": "The HTTP problem status code.",
                                  "type": "integer"
                                },
                                "title": {
                                  "description": "The descriptive label for the overall problem.",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "The error `type` uniquely identifies each distinct error case. An error can have multiple `types`.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "jsonPointer": {
                            "description": "The pointer to the error response JSON body.",
                            "maxLength": 128,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP problem status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "The descriptive label for the overall problem.",
                            "type": "string"
                          },
                          "type": {
                            "description": "The error `type` uniquely identifies each distinct error case. An error can have multiple `types`.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/warning.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-origin-version-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For GET operations, verifies that the current settings for the selected `originId` and `version` are valid.",
            "example": "{{validate}}",
            "in": "query",
            "name": "validate",
            "schema": {
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/validate-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Use this operation to update a selected load balancer version. You cannot edit a load balancer version that has ever been activated.",
        "operationId": "put-origin-version",
        "summary": "Update a load balancing version",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/put-origin-version"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "balancingType": "WEIGHTED",
                "deleted": false,
                "description": "Load Balancer version 3 *UPDATED*",
                "originId": "loadBalancer1",
                "version": 3,
                "livenessSettings": {
                  "hostHeader": "www.example.com",
                  "interval": 25,
                  "path": "/status",
                  "peerCertificateVerification": true,
                  "port": 443,
                  "protocol": "HTTPS",
                  "status3xxFailure": false,
                  "status4xxFailure": true,
                  "status5xxFailure": false,
                  "timeout": 30
                },
                "dataCenters": [
                  {
                    "cloudServerHostHeaderOverride": false,
                    "cloudService": false,
                    "continent": "NA",
                    "country": "US",
                    "latitude": 102.78108,
                    "longitude": -116.07064,
                    "originId": "customerOrigin1",
                    "percent": 100,
                    "livenessHosts": [
                      "origin2.example.com"
                    ]
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "TBD.",
                "type": "object",
                "properties": {
                  "balancingType": {
                    "description": "The type of load balancing being performed. Options include `WEIGHTED` and `PERFORMANCE`.",
                    "example": "{{balancingType}}",
                    "type": "string",
                    "enum": [
                      "PERFORMANCE",
                      "WEIGHTED"
                    ]
                  },
                  "dataCenters": {
                    "description": "The object containing information on conditional origins being used as data centers for an Application Load Balancer implementation, as detailed [below](#datacenters). Only conditional origins with an `originType` of `CUSTOMER` or `NETSTORAGE` can be used as data centers in an Application Load Balancer configuration.",
                    "maxItems": 199,
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Contains information about the data centers where the origins are located.",
                      "type": "object",
                      "required": [
                        "cloudService",
                        "continent",
                        "country",
                        "latitude",
                        "longitude",
                        "originId",
                        "percent"
                      ],
                      "properties": {
                        "city": {
                          "description": "The city in which the data center is located.",
                          "type": "string"
                        },
                        "cloudServerHostHeaderOverride": {
                          "description": "When set to `true`, overides the host header for load balancing in a cloud environment.",
                          "type": "boolean"
                        },
                        "cloudService": {
                          "description": "If `true` caching for the data center is updated at a certain interval, like it would for a cloud-based service.",
                          "type": "boolean"
                        },
                        "continent": {
                          "description": "The continent on which the data center is located. See [Continent Codes](https://control.akamai.com/dl/edgescape/continentCodes.csv) for a list of valid codes.",
                          "type": "string",
                          "enum": [
                            "AF",
                            "AS",
                            "EU",
                            "NA",
                            "OC",
                            "OT",
                            "SA"
                          ]
                        },
                        "country": {
                          "description": "The country in which the data center is located. See [Country Codes](https://control.akamai.com/dl/edgescape/cc2continent.csv) for a list of valid codes.",
                          "maxLength": 2,
                          "minLength": 2,
                          "type": "string"
                        },
                        "hostname": {
                          "description": "The name of the host that can be used as a conditional origin.",
                          "maxLength": 256,
                          "type": "string"
                        },
                        "latitude": {
                          "description": "The latitude value for the data center. This member supports six decimal places of precision.",
                          "maximum": 180,
                          "minimum": -180,
                          "type": "number"
                        },
                        "livenessHosts": {
                          "description": "An array of strings that represent the origin servers used to poll the data centers in an Application Load Balancer configuration. These servers support basic HTTP polling.",
                          "minItems": 1,
                          "type": "array",
                          "uniqueItems": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "longitude": {
                          "description": "The longitude value for the data center. This member supports six decimal places of precision.",
                          "maximum": 180,
                          "minimum": -180,
                          "type": "number"
                        },
                        "originId": {
                          "description": "The conditional origin's unique identifier.",
                          "maxLength": 128,
                          "type": "string"
                        },
                        "percent": {
                          "description": "The percent of traffic that is sent to the data center. The total for all `dataCenters` objects within the array must equal 100%.",
                          "maximum": 100,
                          "minimum": 0,
                          "type": "number"
                        },
                        "stateOrProvince": {
                          "description": "The state, province, or region where the data center is located. See [region codes](https://control.akamai.com/dl/edgescape/region_codes.txt).",
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/dataCenter.yaml"
                      }
                    }
                  },
                  "deleted": {
                    "description": "If `true`, the conditional origin version has been deleted. If you set this member to `false`, you can use this version again.",
                    "example": "{{deleted}}",
                    "type": "boolean"
                  },
                  "description": {
                    "description": "The description of the load balancing configuration provided by a user.",
                    "example": "{{description}}",
                    "type": "string"
                  },
                  "livenessSettings": {
                    "description": "The object containing information on the liveness settings for an Application Load Balancer implementation, as detailed [below](#livenesssettings).",
                    "type": "object"
                  },
                  "originId": {
                    "description": "The conditional origin's unique identifier.",
                    "example": "{{originId}}",
                    "maxLength": 62,
                    "minLength": 2,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/put-origin-version-request.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return details about origin version.",
            "content": {
              "application/json": {
                "example": {
                  "balancingType": "WEIGHTED",
                  "createdBy": "mrossi",
                  "createdDate": "2017-12-21T01:00:00.000Z",
                  "deleted": false,
                  "description": "Load Balancer version 3 *UPDATED*",
                  "immutable": false,
                  "lastModifiedBy": "mrossi",
                  "lastModifiedDate": "2017-12-21T01:00:00.000Z",
                  "originId": "loadBalancer1",
                  "version": 3,
                  "livenessSettings": {
                    "hostHeader": "www.example.com",
                    "interval": 25,
                    "path": "/status",
                    "peerCertificateVerification": true,
                    "port": 443,
                    "protocol": "HTTPS",
                    "status3xxFailure": false,
                    "status4xxFailure": true,
                    "status5xxFailure": false,
                    "timeout": 30
                  },
                  "dataCenters": [
                    {
                      "cloudServerHostHeaderOverride": false,
                      "cloudService": false,
                      "continent": "NA",
                      "country": "US",
                      "latitude": 102.78108,
                      "longitude": -116.07064,
                      "originId": "customerOrigin1",
                      "percent": 100,
                      "livenessHosts": [
                        "origin2.example.com"
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "TBD.",
                  "type": "object",
                  "properties": {
                    "balancingType": {
                      "description": "The type of load balancing being performed. Options include `WEIGHTED` and `PERFORMANCE`.",
                      "type": "string",
                      "enum": [
                        "PERFORMANCE",
                        "WEIGHTED"
                      ]
                    },
                    "createdBy": {
                      "description": "The name of the user who created this load balancing configuration.",
                      "type": "string"
                    },
                    "createdDate": {
                      "description": "The date and time, in ISO 8601 format, when this load balancing configuration was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "dataCenters": {
                      "description": "The object containing information on conditional origins being used as data centers for an Application Load Balancer implementation, as detailed [below](#datacenters). Only conditional origins with an `originType` of `CUSTOMER` or `NETSTORAGE` can be used as data centers in an Application Load Balancer configuration.",
                      "maxItems": 199,
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information about the data centers where the origins are located.",
                        "type": "object",
                        "required": [
                          "cloudService",
                          "continent",
                          "country",
                          "latitude",
                          "longitude",
                          "originId",
                          "percent"
                        ],
                        "properties": {
                          "city": {
                            "description": "The city in which the data center is located.",
                            "type": "string"
                          },
                          "cloudServerHostHeaderOverride": {
                            "description": "When set to `true`, overides the host header for load balancing in a cloud environment.",
                            "type": "boolean"
                          },
                          "cloudService": {
                            "description": "If `true` caching for the data center is updated at a certain interval, like it would for a cloud-based service.",
                            "type": "boolean"
                          },
                          "continent": {
                            "description": "The continent on which the data center is located. See [Continent Codes](https://control.akamai.com/dl/edgescape/continentCodes.csv) for a list of valid codes.",
                            "type": "string",
                            "enum": [
                              "AF",
                              "AS",
                              "EU",
                              "NA",
                              "OC",
                              "OT",
                              "SA"
                            ]
                          },
                          "country": {
                            "description": "The country in which the data center is located. See [Country Codes](https://control.akamai.com/dl/edgescape/cc2continent.csv) for a list of valid codes.",
                            "maxLength": 2,
                            "minLength": 2,
                            "type": "string"
                          },
                          "hostname": {
                            "description": "The name of the host that can be used as a conditional origin.",
                            "maxLength": 256,
                            "type": "string"
                          },
                          "latitude": {
                            "description": "The latitude value for the data center. This member supports six decimal places of precision.",
                            "maximum": 180,
                            "minimum": -180,
                            "type": "number"
                          },
                          "livenessHosts": {
                            "description": "An array of strings that represent the origin servers used to poll the data centers in an Application Load Balancer configuration. These servers support basic HTTP polling.",
                            "minItems": 1,
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                              "type": "string"
                            }
                          },
                          "longitude": {
                            "description": "The longitude value for the data center. This member supports six decimal places of precision.",
                            "maximum": 180,
                            "minimum": -180,
                            "type": "number"
                          },
                          "originId": {
                            "description": "The conditional origin's unique identifier.",
                            "maxLength": 128,
                            "type": "string"
                          },
                          "percent": {
                            "description": "The percent of traffic that is sent to the data center. The total for all `dataCenters` objects within the array must equal 100%.",
                            "maximum": 100,
                            "minimum": 0,
                            "type": "number"
                          },
                          "stateOrProvince": {
                            "description": "The state, province, or region where the data center is located. See [region codes](https://control.akamai.com/dl/edgescape/region_codes.txt).",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/dataCenter.yaml"
                        }
                      }
                    },
                    "deleted": {
                      "description": "If `true`, the conditional origin version has been deleted. If you set this member to `false`, you can use this version again.",
                      "type": "boolean"
                    },
                    "description": {
                      "description": "The description of the load balancing configuration provided by a user.",
                      "type": "string"
                    },
                    "immutable": {
                      "description": "Indicated whether you can edit the load balancing version. The default is `false`. It automatically becomes `true` when the load balancing version is activated for the first time.",
                      "type": "boolean"
                    },
                    "lastModifiedBy": {
                      "description": "The user who last modified the load balancing configuration.",
                      "type": "string"
                    },
                    "lastModifiedDate": {
                      "description": "The date and time, in ISO 8601 format, when the initial load balancing configuration was last modified.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "livenessSettings": {
                      "description": "The object containing information on the liveness settings for an Application Load Balancer implementation, as detailed [below](#livenesssettings).",
                      "type": "object"
                    },
                    "originId": {
                      "description": "The conditional origin's unique identifier.",
                      "maxLength": 62,
                      "minLength": 2,
                      "type": "string"
                    },
                    "version": {
                      "description": "The version number of the activated load balancing configuration.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "warnings": {
                      "description": "Provides error response data to help diagnose the problem that led to the error.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Provides error response data to help diagnose the problem that led to the error.",
                        "type": "object",
                        "required": [
                          "detail",
                          "title",
                          "type"
                        ],
                        "properties": {
                          "detail": {
                            "description": "Provides actionable instructions to diagnose the problem that caused the error.",
                            "type": "string"
                          },
                          "errors": {
                            "description": "Error objects that provide information for debugging.",
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Provides error response data to help diagnose the problem that led to the error.",
                              "type": "object",
                              "required": [
                                "detail",
                                "title",
                                "type"
                              ],
                              "properties": {
                                "detail": {
                                  "description": "Provides actionable instructions to diagnose the problem that caused the error.",
                                  "type": "string"
                                },
                                "errors": {
                                  "description": "Error objects that provide information for debugging.",
                                  "type": "array",
                                  "items": {
                                    "description": "A further-nested HTTP problem object.",
                                    "type": "object",
                                    "x-akamai": {
                                      "file-path": "schemas/http-problem-nested.yaml"
                                    }
                                  }
                                },
                                "jsonPointer": {
                                  "description": "The pointer to the error response JSON body.",
                                  "maxLength": 128,
                                  "type": "string"
                                },
                                "status": {
                                  "description": "The HTTP problem status code.",
                                  "type": "integer"
                                },
                                "title": {
                                  "description": "The descriptive label for the overall problem.",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "The error `type` uniquely identifies each distinct error case. An error can have multiple `types`.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "jsonPointer": {
                            "description": "The pointer to the error response JSON body.",
                            "maxLength": 128,
                            "type": "string"
                          },
                          "status": {
                            "description": "The HTTP problem status code.",
                            "type": "integer"
                          },
                          "title": {
                            "description": "The descriptive label for the overall problem.",
                            "type": "string"
                          },
                          "type": {
                            "description": "The error `type` uniquely identifies each distinct error case. An error can have multiple `types`.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/warning.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/put-origin-version-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "The version number of the policy.",
          "example": "{{version}}",
          "in": "path",
          "name": "version",
          "required": true,
          "schema": {
            "type": "number"
          },
          "x-akamai": {
            "file-path": "parameters/version-path.yaml"
          }
        },
        {
          "description": "Unique identifier for the origin.",
          "example": "{{originId}}",
          "in": "path",
          "name": "originId",
          "required": true,
          "schema": {
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/originId-path.yaml"
          }
        }
      ]
    },
    "/policies": {
      "post": {
        "description": "Create a new Cloudlet policy. If a policy already exists with the same policy name, you receive a 409 (Conflict) status response that contains data for the existing policy. New policies are automatically assigned version number 1.",
        "operationId": "post-policy",
        "summary": "Create a policy",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/post-policy"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "cloudletId": 0,
                "description": "Testing the creation of a policy",
                "groupId": 1234,
                "name": "TestCreatePolicy1"
              },
              "schema": {
                "additionalProperties": false,
                "description": "TBD.",
                "type": "object",
                "required": [
                  "cloudletId",
                  "name"
                ],
                "properties": {
                  "cloudletId": {
                    "description": "The ID of cloudlet that this policy is for. The `cloudletId` for Edge Redirector is `0`, Visitor Prioritization is `1`, Forward Rewrite is `3`, Request Control is `4`, API Prioritization is `5`, Audience Segmentation is `6`, Phased Release is `7`, and Application Load Balancer is `9`. To see the available Cloudlets, run the [List Cloudlets](https://techdocs.akamai.com/cloudlets/reference/get-cloudlets) operation.",
                    "example": "{{cloudletId}}",
                    "type": "integer",
                    "enum": [
                      0,
                      1,
                      3,
                      4,
                      5,
                      6,
                      7,
                      9
                    ]
                  },
                  "description": {
                    "description": "Description of the policy.",
                    "example": "{{description}}",
                    "type": "string"
                  },
                  "groupId": {
                    "description": "The group to place the policy in.",
                    "example": "{{groupId}}",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name of the policy.",
                    "example": "{{name}}",
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/post-policies-request.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The Cloudlet policy was created.",
            "content": {
              "application/json": {
                "example": {
                  "apiVersion": "2.0",
                  "cloudletCode": "ER",
                  "cloudletId": 0,
                  "createDate": 1428957069841,
                  "createdBy": "hgildong",
                  "deleted": false,
                  "description": "Testing the creation of a policy",
                  "groupId": 1234,
                  "lastModifiedBy": "jsmith",
                  "lastModifiedDate": 1428957070000,
                  "location": "/cloudlets/api/v2/policies/1002",
                  "name": "TestCreatePolicy1",
                  "policyId": 1000,
                  "propertyName": null,
                  "serviceVersion": null,
                  "activations": []
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Returns details of a policy.",
                  "type": "object",
                  "required": [
                    "policyId",
                    "cloudletId",
                    "cloudletCode",
                    "groupId",
                    "name",
                    "description",
                    "createdBy",
                    "createdDate",
                    "lastModifiedBy",
                    "lastModifiedDate",
                    "activations",
                    "location"
                  ],
                  "properties": {
                    "activations": {
                      "description": "List of activations associated with the policy.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Returns details of a policy activation.",
                        "type": "object",
                        "required": [
                          "network",
                          "policyInfo",
                          "propertyInfo"
                        ],
                        "properties": {
                          "apiVersion": {
                            "description": "The specific version of this API.",
                            "type": "string"
                          },
                          "network": {
                            "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.",
                            "type": "string",
                            "enum": [
                              "prod",
                              "staging"
                            ]
                          },
                          "policyInfo": {
                            "additionalProperties": false,
                            "description": "Returns details of a policy associated with policy activation.",
                            "type": "object",
                            "required": [
                              "policyId",
                              "name",
                              "version",
                              "status",
                              "statusDetail",
                              "activatedBy",
                              "activationDate"
                            ],
                            "properties": {
                              "activatedBy": {
                                "description": "User name who issued the activation.",
                                "type": "string"
                              },
                              "activationDate": {
                                "description": "Date of the activation in milliseconds.",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the policy.",
                                "type": "string"
                              },
                              "policyId": {
                                "description": "ID of the policy.",
                                "type": "integer"
                              },
                              "status": {
                                "description": "Value representing activation status.",
                                "type": "string",
                                "enum": [
                                  "INACTIVE",
                                  "PENDING",
                                  "ACTIVE",
                                  "FAILED",
                                  "DEACTIVATED"
                                ],
                                "x-akamai": {
                                  "file-path": "schemas/activation-status-enum.yaml"
                                }
                              },
                              "statusDetail": {
                                "description": "Details of the activation status.",
                                "type": "string"
                              },
                              "version": {
                                "description": "Version of the policy.",
                                "type": "integer"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/policy-activation-policy-info.yaml"
                            }
                          },
                          "propertyInfo": {
                            "additionalProperties": false,
                            "description": "Returns details of a property associated with policy activation.",
                            "type": "object",
                            "required": [
                              "name",
                              "version",
                              "groupId",
                              "status",
                              "activatedBy",
                              "activationDate",
                              "id"
                            ],
                            "properties": {
                              "activatedBy": {
                                "description": "User name who issued the activation.",
                                "type": "string"
                              },
                              "activationDate": {
                                "description": "Date of the activation in milliseconds.",
                                "type": "integer"
                              },
                              "groupId": {
                                "description": "Identifies the group where the property is placed.",
                                "type": "integer"
                              },
                              "id": {
                                "description": "ID of the property.",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the property.",
                                "type": "string"
                              },
                              "status": {
                                "description": "Value representing activation status.",
                                "type": "string",
                                "enum": [
                                  "INACTIVE",
                                  "PENDING",
                                  "ACTIVE",
                                  "FAILED",
                                  "DEACTIVATED"
                                ],
                                "x-akamai": {
                                  "file-path": "schemas/activation-status-enum.yaml"
                                }
                              },
                              "version": {
                                "description": "Version of the property.",
                                "type": "integer"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/policy-activation-property-info.yaml"
                            }
                          },
                          "serviceVersion": {
                            "description": "__Deprecated__ The build of the software running on the server. The value can be `null`.",
                            "nullable": true,
                            "type": "string",
                            "x-akamai": {
                              "status": "DEPRECATED"
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/policy-activation.yaml"
                        }
                      }
                    },
                    "apiVersion": {
                      "description": "The specific version of this API.",
                      "type": "string"
                    },
                    "cloudletCode": {
                      "description": "The type of Cloudlet that this policy is for. To see the available Cloudlets, run the [List Cloudlets](https://techdocs.akamai.com/cloudlets/reference/get-cloudlets) operation. Possible values include: `ALB` for Application Load Balancer, `AP` for API Prioritization, `AS` for Audience Segmentation, `CD` for Phased Release, `ER` for Edge Redirector, `FR` for Forward Rewrite, `IG` for Request Control, and `VP` for Visitor Prioritization.",
                      "type": "string",
                      "enum": [
                        "ALB",
                        "AP",
                        "AS",
                        "CD",
                        "ER",
                        "FR",
                        "IG",
                        "VP"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/cloudlet-code-enum.yaml"
                      }
                    },
                    "cloudletId": {
                      "description": "The ID of cloudlet that this policy is for. The `cloudletId` for Edge Redirector is `0`, Visitor Prioritization is `1`, Forward Rewrite is `3`, Request Control is `4`, API Prioritization is `5`, Audience Segmentation is `6`, Phased Release is `7`, and Application Load Balancer is `9`. To see the available Cloudlets, run the [List Cloudlets](https://techdocs.akamai.com/cloudlets/reference/get-cloudlets) operation.",
                      "type": "integer",
                      "enum": [
                        0,
                        1,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                      ]
                    },
                    "createDate": {
                      "description": "Date of the policy creation in milliseconds.",
                      "type": "integer"
                    },
                    "createdBy": {
                      "description": "User name who created the policy.",
                      "type": "string"
                    },
                    "deleted": {
                      "description": "Flag determining whether the policy is deleted or not.",
                      "type": "boolean"
                    },
                    "description": {
                      "description": "The description of the policy.",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "The ID of the group this policy is associated with.",
                      "type": "integer"
                    },
                    "lastModifiedBy": {
                      "description": "User name who recently modified the policy.",
                      "type": "string"
                    },
                    "lastModifiedDate": {
                      "description": "Date of the recent policy modification in milliseconds.",
                      "type": "integer"
                    },
                    "location": {
                      "description": "The navigable endpoint used for the object referred to in the operation.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the policy.",
                      "type": "string"
                    },
                    "policyId": {
                      "description": "ID of the policy.",
                      "type": "integer"
                    },
                    "propertyName": {
                      "deprecated": true,
                      "description": "This field now only returns `null`. It does not reflect the properties currently associated with this Cloudlets policy.",
                      "nullable": true,
                      "type": "string"
                    },
                    "serviceVersion": {
                      "description": "__Deprecated__ The build of the software running on the server. The value can be `null`.",
                      "nullable": true,
                      "type": "string",
                      "x-akamai": {
                        "status": "DEPRECATED"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/policy.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "If cloning an existing policy, this parameter is the ID of the policy (`policyId`) you want to clone. If there are attributes that you do _not_ want propagated from the source policy, you must provide the new values in the request.",
            "example": "{{clonePolicyId}}",
            "in": "query",
            "name": "clonePolicyId",
            "schema": {
              "type": "number"
            },
            "x-akamai": {
              "file-path": "parameters/clonePolicyId-query.yaml"
            }
          },
          {
            "description": "For POST operations, indicates the version of the existing policy to use for the new policy.  If not specified, the latest version of the existing policy is copied.",
            "example": "{{version}}",
            "in": "query",
            "name": "version",
            "schema": {
              "type": "number"
            },
            "x-akamai": {
              "file-path": "parameters/version-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Returns information for all available policies.",
        "operationId": "get-policies",
        "summary": "List policies",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-policies"
        },
        "responses": {
          "200": {
            "description": "Return list of policies.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "TBD.",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Returns details of a policy.",
                    "type": "object",
                    "required": [
                      "policyId",
                      "cloudletId",
                      "cloudletCode",
                      "groupId",
                      "name",
                      "description",
                      "createdBy",
                      "createdDate",
                      "lastModifiedBy",
                      "lastModifiedDate",
                      "activations",
                      "location"
                    ],
                    "properties": {
                      "activations": {
                        "description": "List of activations associated with the policy.",
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "Returns details of a policy activation.",
                          "type": "object",
                          "required": [
                            "network",
                            "policyInfo",
                            "propertyInfo"
                          ],
                          "properties": {
                            "apiVersion": {
                              "description": "The specific version of this API.",
                              "type": "string"
                            },
                            "network": {
                              "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.",
                              "type": "string",
                              "enum": [
                                "prod",
                                "staging"
                              ]
                            },
                            "policyInfo": {
                              "additionalProperties": false,
                              "description": "Returns details of a policy associated with policy activation.",
                              "type": "object",
                              "required": [
                                "policyId",
                                "name",
                                "version",
                                "status",
                                "statusDetail",
                                "activatedBy",
                                "activationDate"
                              ],
                              "properties": {
                                "activatedBy": {
                                  "description": "User name who issued the activation.",
                                  "type": "string"
                                },
                                "activationDate": {
                                  "description": "Date of the activation in milliseconds.",
                                  "type": "integer"
                                },
                                "name": {
                                  "description": "Name of the policy.",
                                  "type": "string"
                                },
                                "policyId": {
                                  "description": "ID of the policy.",
                                  "type": "integer"
                                },
                                "status": {
                                  "description": "Value representing activation status.",
                                  "type": "string",
                                  "enum": [
                                    "INACTIVE",
                                    "PENDING",
                                    "ACTIVE",
                                    "FAILED",
                                    "DEACTIVATED"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/activation-status-enum.yaml"
                                  }
                                },
                                "statusDetail": {
                                  "description": "Details of the activation status.",
                                  "type": "string"
                                },
                                "version": {
                                  "description": "Version of the policy.",
                                  "type": "integer"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/policy-activation-policy-info.yaml"
                              }
                            },
                            "propertyInfo": {
                              "additionalProperties": false,
                              "description": "Returns details of a property associated with policy activation.",
                              "type": "object",
                              "required": [
                                "name",
                                "version",
                                "groupId",
                                "status",
                                "activatedBy",
                                "activationDate",
                                "id"
                              ],
                              "properties": {
                                "activatedBy": {
                                  "description": "User name who issued the activation.",
                                  "type": "string"
                                },
                                "activationDate": {
                                  "description": "Date of the activation in milliseconds.",
                                  "type": "integer"
                                },
                                "groupId": {
                                  "description": "Identifies the group where the property is placed.",
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "ID of the property.",
                                  "type": "integer"
                                },
                                "name": {
                                  "description": "Name of the property.",
                                  "type": "string"
                                },
                                "status": {
                                  "description": "Value representing activation status.",
                                  "type": "string",
                                  "enum": [
                                    "INACTIVE",
                                    "PENDING",
                                    "ACTIVE",
                                    "FAILED",
                                    "DEACTIVATED"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/activation-status-enum.yaml"
                                  }
                                },
                                "version": {
                                  "description": "Version of the property.",
                                  "type": "integer"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/policy-activation-property-info.yaml"
                              }
                            },
                            "serviceVersion": {
                              "description": "__Deprecated__ The build of the software running on the server. The value can be `null`.",
                              "nullable": true,
                              "type": "string",
                              "x-akamai": {
                                "status": "DEPRECATED"
                              }
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/policy-activation.yaml"
                          }
                        }
                      },
                      "apiVersion": {
                        "description": "The specific version of this API.",
                        "type": "string"
                      },
                      "cloudletCode": {
                        "description": "The type of Cloudlet that this policy is for. To see the available Cloudlets, run the [List Cloudlets](https://techdocs.akamai.com/cloudlets/reference/get-cloudlets) operation. Possible values include: `ALB` for Application Load Balancer, `AP` for API Prioritization, `AS` for Audience Segmentation, `CD` for Phased Release, `ER` for Edge Redirector, `FR` for Forward Rewrite, `IG` for Request Control, and `VP` for Visitor Prioritization.",
                        "type": "string",
                        "enum": [
                          "ALB",
                          "AP",
                          "AS",
                          "CD",
                          "ER",
                          "FR",
                          "IG",
                          "VP"
                        ],
                        "x-akamai": {
                          "file-path": "schemas/cloudlet-code-enum.yaml"
                        }
                      },
                      "cloudletId": {
                        "description": "The ID of cloudlet that this policy is for. The `cloudletId` for Edge Redirector is `0`, Visitor Prioritization is `1`, Forward Rewrite is `3`, Request Control is `4`, API Prioritization is `5`, Audience Segmentation is `6`, Phased Release is `7`, and Application Load Balancer is `9`. To see the available Cloudlets, run the [List Cloudlets](https://techdocs.akamai.com/cloudlets/reference/get-cloudlets) operation.",
                        "type": "integer",
                        "enum": [
                          0,
                          1,
                          3,
                          4,
                          5,
                          6,
                          7,
                          9
                        ]
                      },
                      "createDate": {
                        "description": "Date of the policy creation in milliseconds.",
                        "type": "integer"
                      },
                      "createdBy": {
                        "description": "User name who created the policy.",
                        "type": "string"
                      },
                      "deleted": {
                        "description": "Flag determining whether the policy is deleted or not.",
                        "type": "boolean"
                      },
                      "description": {
                        "description": "The description of the policy.",
                        "type": "string"
                      },
                      "groupId": {
                        "description": "The ID of the group this policy is associated with.",
                        "type": "integer"
                      },
                      "lastModifiedBy": {
                        "description": "User name who recently modified the policy.",
                        "type": "string"
                      },
                      "lastModifiedDate": {
                        "description": "Date of the recent policy modification in milliseconds.",
                        "type": "integer"
                      },
                      "location": {
                        "description": "The navigable endpoint used for the object referred to in the operation.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the policy.",
                        "type": "string"
                      },
                      "policyId": {
                        "description": "ID of the policy.",
                        "type": "integer"
                      },
                      "propertyName": {
                        "deprecated": true,
                        "description": "This field now only returns `null`. It does not reflect the properties currently associated with this Cloudlets policy.",
                        "nullable": true,
                        "type": "string"
                      },
                      "serviceVersion": {
                        "description": "__Deprecated__ The build of the software running on the server. The value can be `null`.",
                        "nullable": true,
                        "type": "string",
                        "x-akamai": {
                          "status": "DEPRECATED"
                        }
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/policy.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-policies-response.yaml"
                  }
                },
                "example": [
                  {
                    "apiVersion": "2.0",
                    "cloudletCode": "CC",
                    "cloudletId": 99,
                    "createDate": 1400535431324,
                    "createdBy": "jsmith",
                    "description": "Custom cookie cutter",
                    "groupId": 1234,
                    "lastModifiedBy": "szhang",
                    "lastModifiedDate": 1441829042000,
                    "location": "/cloudlets/api/v2/policies/1001",
                    "name": "CookieCutter",
                    "policyId": 1001,
                    "propertyName": "www.example.org",
                    "serviceVersion": null,
                    "activations": [
                      {
                        "apiVersion": "2.0",
                        "network": "prod",
                        "serviceVersion": null,
                        "policyInfo": {
                          "activatedBy": "jsmith",
                          "activationDate": 1441829042000,
                          "detailCode": 0,
                          "name": "CookieCutter",
                          "policyId": 1001,
                          "status": "INACTIVE",
                          "statusDetail": "waiting to complete tests in test environment",
                          "version": 2
                        },
                        "propertyInfo": {
                          "activatedBy": "jdupont",
                          "activationDate": 1441137842000,
                          "groupId": 1234,
                          "id": 892212,
                          "name": "www.example.org",
                          "status": "INACTIVE",
                          "version": 2
                        }
                      },
                      {
                        "apiVersion": "2.0",
                        "network": "test",
                        "serviceVersion": null,
                        "policyInfo": {
                          "activatedBy": "jsmith",
                          "activationDate": 1400535431000,
                          "detailCode": 0,
                          "name": "CookieCutter",
                          "policyId": 1001,
                          "status": "ACTIVE",
                          "statusDetail": "testing",
                          "version": 22
                        },
                        "propertyInfo": {
                          "activatedBy": "jsmith",
                          "activationDate": 1441137842000,
                          "groupId": 1234,
                          "id": 5333913,
                          "name": "www.example.org",
                          "status": "ACTIVE",
                          "version": 22
                        }
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For GET operations, includes deleted policies in the results.",
            "example": "{{includeDeleted}}",
            "in": "query",
            "name": "includeDeleted",
            "schema": {
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/includeDeleted-query.yaml"
            }
          },
          {
            "description": "__Enum__ For GET operations, returns only policies for this particular `cloudletId`. The `cloudletId` for Edge Redirector is `0`, Visitor Prioritization is `1`, Forward Rewrite is `3`, Request Control is `4`, API Prioritization is `5`, Audience Segmentation is `6`, Phased Release is `7`, and Application Load Balancer is `9`.",
            "example": "{{cloudletId}}",
            "in": "query",
            "name": "cloudletId",
            "schema": {
              "type": "integer",
              "enum": [
                0,
                1,
                3,
                4,
                5,
                6,
                7,
                9
              ]
            },
            "x-akamai": {
              "file-path": "parameters/cloudletId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/policies/{policyId}": {
      "get": {
        "description": "Returns information about a specific Cloudlets policy.",
        "operationId": "get-policy",
        "summary": "Get a policy",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-policy"
        },
        "responses": {
          "200": {
            "description": "Provides data for the Cloudlets policy.",
            "content": {
              "application/json": {
                "example": {
                  "apiVersion": "2.0",
                  "cloudletCode": "CC",
                  "cloudletId": 99,
                  "createDate": 1428957070000,
                  "createdBy": "jsmith",
                  "description": "Custom cookie cutter",
                  "groupId": 1234,
                  "lastModifiedBy": "afero",
                  "lastModifiedDate": 1441829042000,
                  "location": "/cloudlets/api/v2/policies/1001",
                  "name": "CookieCutter",
                  "policyId": 1001,
                  "propertyName": "www.example.org",
                  "serviceVersion": null,
                  "activations": [
                    {
                      "apiVersion": "2.0",
                      "network": "prod",
                      "serviceVersion": null,
                      "policyInfo": {
                        "activatedBy": "jsmith",
                        "activationDate": 1433901173000,
                        "detailCode": 0,
                        "name": "CookieCutter",
                        "policyId": 1001,
                        "status": "INACTIVE",
                        "version": 2
                      },
                      "propertyInfo": {
                        "activatedBy": "jperez",
                        "activationDate": 1441829042000,
                        "groupId": 1234,
                        "id": 1846234,
                        "name": "www.example.org",
                        "status": "INACTIVE",
                        "version": 2
                      }
                    },
                    {
                      "apiVersion": "2.0",
                      "network": "staging",
                      "serviceVersion": null,
                      "policyInfo": {
                        "activatedBy": "jsmith",
                        "activationDate": 1433901173000,
                        "detailCode": 0,
                        "name": "CookieCutter",
                        "policyId": 1001,
                        "status": "ACTIVE",
                        "version": 22
                      },
                      "propertyInfo": {
                        "activatedBy": "jsmith",
                        "activationDate": 1441915442000,
                        "groupId": 1234,
                        "id": 10489133,
                        "name": "www.example.org",
                        "status": "ACTIVE",
                        "version": 22
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Returns details of a policy.",
                  "type": "object",
                  "required": [
                    "policyId",
                    "cloudletId",
                    "cloudletCode",
                    "groupId",
                    "name",
                    "description",
                    "createdBy",
                    "createdDate",
                    "lastModifiedBy",
                    "lastModifiedDate",
                    "activations",
                    "location"
                  ],
                  "properties": {
                    "activations": {
                      "description": "List of activations associated with the policy.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Returns details of a policy activation.",
                        "type": "object",
                        "required": [
                          "network",
                          "policyInfo",
                          "propertyInfo"
                        ],
                        "properties": {
                          "apiVersion": {
                            "description": "The specific version of this API.",
                            "type": "string"
                          },
                          "network": {
                            "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.",
                            "type": "string",
                            "enum": [
                              "prod",
                              "staging"
                            ]
                          },
                          "policyInfo": {
                            "additionalProperties": false,
                            "description": "Returns details of a policy associated with policy activation.",
                            "type": "object",
                            "required": [
                              "policyId",
                              "name",
                              "version",
                              "status",
                              "statusDetail",
                              "activatedBy",
                              "activationDate"
                            ],
                            "properties": {
                              "activatedBy": {
                                "description": "User name who issued the activation.",
                                "type": "string"
                              },
                              "activationDate": {
                                "description": "Date of the activation in milliseconds.",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the policy.",
                                "type": "string"
                              },
                              "policyId": {
                                "description": "ID of the policy.",
                                "type": "integer"
                              },
                              "status": {
                                "description": "Value representing activation status.",
                                "type": "string",
                                "enum": [
                                  "INACTIVE",
                                  "PENDING",
                                  "ACTIVE",
                                  "FAILED",
                                  "DEACTIVATED"
                                ],
                                "x-akamai": {
                                  "file-path": "schemas/activation-status-enum.yaml"
                                }
                              },
                              "statusDetail": {
                                "description": "Details of the activation status.",
                                "type": "string"
                              },
                              "version": {
                                "description": "Version of the policy.",
                                "type": "integer"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/policy-activation-policy-info.yaml"
                            }
                          },
                          "propertyInfo": {
                            "additionalProperties": false,
                            "description": "Returns details of a property associated with policy activation.",
                            "type": "object",
                            "required": [
                              "name",
                              "version",
                              "groupId",
                              "status",
                              "activatedBy",
                              "activationDate",
                              "id"
                            ],
                            "properties": {
                              "activatedBy": {
                                "description": "User name who issued the activation.",
                                "type": "string"
                              },
                              "activationDate": {
                                "description": "Date of the activation in milliseconds.",
                                "type": "integer"
                              },
                              "groupId": {
                                "description": "Identifies the group where the property is placed.",
                                "type": "integer"
                              },
                              "id": {
                                "description": "ID of the property.",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the property.",
                                "type": "string"
                              },
                              "status": {
                                "description": "Value representing activation status.",
                                "type": "string",
                                "enum": [
                                  "INACTIVE",
                                  "PENDING",
                                  "ACTIVE",
                                  "FAILED",
                                  "DEACTIVATED"
                                ],
                                "x-akamai": {
                                  "file-path": "schemas/activation-status-enum.yaml"
                                }
                              },
                              "version": {
                                "description": "Version of the property.",
                                "type": "integer"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/policy-activation-property-info.yaml"
                            }
                          },
                          "serviceVersion": {
                            "description": "__Deprecated__ The build of the software running on the server. The value can be `null`.",
                            "nullable": true,
                            "type": "string",
                            "x-akamai": {
                              "status": "DEPRECATED"
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/policy-activation.yaml"
                        }
                      }
                    },
                    "apiVersion": {
                      "description": "The specific version of this API.",
                      "type": "string"
                    },
                    "cloudletCode": {
                      "description": "The type of Cloudlet that this policy is for. To see the available Cloudlets, run the [List Cloudlets](https://techdocs.akamai.com/cloudlets/reference/get-cloudlets) operation. Possible values include: `ALB` for Application Load Balancer, `AP` for API Prioritization, `AS` for Audience Segmentation, `CD` for Phased Release, `ER` for Edge Redirector, `FR` for Forward Rewrite, `IG` for Request Control, and `VP` for Visitor Prioritization.",
                      "type": "string",
                      "enum": [
                        "ALB",
                        "AP",
                        "AS",
                        "CD",
                        "ER",
                        "FR",
                        "IG",
                        "VP"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/cloudlet-code-enum.yaml"
                      }
                    },
                    "cloudletId": {
                      "description": "The ID of cloudlet that this policy is for. The `cloudletId` for Edge Redirector is `0`, Visitor Prioritization is `1`, Forward Rewrite is `3`, Request Control is `4`, API Prioritization is `5`, Audience Segmentation is `6`, Phased Release is `7`, and Application Load Balancer is `9`. To see the available Cloudlets, run the [List Cloudlets](https://techdocs.akamai.com/cloudlets/reference/get-cloudlets) operation.",
                      "type": "integer",
                      "enum": [
                        0,
                        1,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                      ]
                    },
                    "createDate": {
                      "description": "Date of the policy creation in milliseconds.",
                      "type": "integer"
                    },
                    "createdBy": {
                      "description": "User name who created the policy.",
                      "type": "string"
                    },
                    "deleted": {
                      "description": "Flag determining whether the policy is deleted or not.",
                      "type": "boolean"
                    },
                    "description": {
                      "description": "The description of the policy.",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "The ID of the group this policy is associated with.",
                      "type": "integer"
                    },
                    "lastModifiedBy": {
                      "description": "User name who recently modified the policy.",
                      "type": "string"
                    },
                    "lastModifiedDate": {
                      "description": "Date of the recent policy modification in milliseconds.",
                      "type": "integer"
                    },
                    "location": {
                      "description": "The navigable endpoint used for the object referred to in the operation.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the policy.",
                      "type": "string"
                    },
                    "policyId": {
                      "description": "ID of the policy.",
                      "type": "integer"
                    },
                    "propertyName": {
                      "deprecated": true,
                      "description": "This field now only returns `null`. It does not reflect the properties currently associated with this Cloudlets policy.",
                      "nullable": true,
                      "type": "string"
                    },
                    "serviceVersion": {
                      "description": "__Deprecated__ The build of the software running on the server. The value can be `null`.",
                      "nullable": true,
                      "type": "string",
                      "x-akamai": {
                        "status": "DEPRECATED"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/policy.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Update attributes of an existing policy.",
        "operationId": "put-policy",
        "summary": "Update a policy",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/put-policy"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "description": "Testing the update of a policy"
              },
              "schema": {
                "additionalProperties": false,
                "description": "TBD.",
                "minProperties": 1,
                "type": "object",
                "properties": {
                  "deleted": {
                    "description": "Flag determining whether the policy is deleted or not.",
                    "example": "{{deleted}}",
                    "type": "boolean"
                  },
                  "description": {
                    "description": "Description of the policy.",
                    "example": "{{description}}",
                    "type": "string"
                  },
                  "groupId": {
                    "description": "Identifies the group the policy is placed in.",
                    "example": "{{groupId}}",
                    "type": "integer"
                  },
                  "name": {
                    "description": "Name of the policy.",
                    "example": "{{name}}",
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/put-policy-request.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response reflects the updated policy.",
            "content": {
              "application/json": {
                "example": {
                  "apiVersion": "2.0",
                  "cloudletCode": "CC",
                  "cloudletId": 99,
                  "createDate": 1428957070000,
                  "createdBy": "jperez",
                  "deleted": false,
                  "description": "Testing the update of a policy",
                  "groupId": 1234,
                  "lastModifiedBy": "jsmith",
                  "lastModifiedDate": 1431549070000,
                  "location": "/cloudlets/api/v2/policies/1002",
                  "name": "UpdatePolicyName",
                  "policyId": 1002,
                  "propertyName": null,
                  "serviceVersion": null,
                  "activations": []
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Returns details of a policy.",
                  "type": "object",
                  "required": [
                    "policyId",
                    "cloudletId",
                    "cloudletCode",
                    "groupId",
                    "name",
                    "description",
                    "createdBy",
                    "createdDate",
                    "lastModifiedBy",
                    "lastModifiedDate",
                    "activations",
                    "location"
                  ],
                  "properties": {
                    "activations": {
                      "description": "List of activations associated with the policy.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Returns details of a policy activation.",
                        "type": "object",
                        "required": [
                          "network",
                          "policyInfo",
                          "propertyInfo"
                        ],
                        "properties": {
                          "apiVersion": {
                            "description": "The specific version of this API.",
                            "type": "string"
                          },
                          "network": {
                            "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.",
                            "type": "string",
                            "enum": [
                              "prod",
                              "staging"
                            ]
                          },
                          "policyInfo": {
                            "additionalProperties": false,
                            "description": "Returns details of a policy associated with policy activation.",
                            "type": "object",
                            "required": [
                              "policyId",
                              "name",
                              "version",
                              "status",
                              "statusDetail",
                              "activatedBy",
                              "activationDate"
                            ],
                            "properties": {
                              "activatedBy": {
                                "description": "User name who issued the activation.",
                                "type": "string"
                              },
                              "activationDate": {
                                "description": "Date of the activation in milliseconds.",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the policy.",
                                "type": "string"
                              },
                              "policyId": {
                                "description": "ID of the policy.",
                                "type": "integer"
                              },
                              "status": {
                                "description": "Value representing activation status.",
                                "type": "string",
                                "enum": [
                                  "INACTIVE",
                                  "PENDING",
                                  "ACTIVE",
                                  "FAILED",
                                  "DEACTIVATED"
                                ],
                                "x-akamai": {
                                  "file-path": "schemas/activation-status-enum.yaml"
                                }
                              },
                              "statusDetail": {
                                "description": "Details of the activation status.",
                                "type": "string"
                              },
                              "version": {
                                "description": "Version of the policy.",
                                "type": "integer"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/policy-activation-policy-info.yaml"
                            }
                          },
                          "propertyInfo": {
                            "additionalProperties": false,
                            "description": "Returns details of a property associated with policy activation.",
                            "type": "object",
                            "required": [
                              "name",
                              "version",
                              "groupId",
                              "status",
                              "activatedBy",
                              "activationDate",
                              "id"
                            ],
                            "properties": {
                              "activatedBy": {
                                "description": "User name who issued the activation.",
                                "type": "string"
                              },
                              "activationDate": {
                                "description": "Date of the activation in milliseconds.",
                                "type": "integer"
                              },
                              "groupId": {
                                "description": "Identifies the group where the property is placed.",
                                "type": "integer"
                              },
                              "id": {
                                "description": "ID of the property.",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the property.",
                                "type": "string"
                              },
                              "status": {
                                "description": "Value representing activation status.",
                                "type": "string",
                                "enum": [
                                  "INACTIVE",
                                  "PENDING",
                                  "ACTIVE",
                                  "FAILED",
                                  "DEACTIVATED"
                                ],
                                "x-akamai": {
                                  "file-path": "schemas/activation-status-enum.yaml"
                                }
                              },
                              "version": {
                                "description": "Version of the property.",
                                "type": "integer"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/policy-activation-property-info.yaml"
                            }
                          },
                          "serviceVersion": {
                            "description": "__Deprecated__ The build of the software running on the server. The value can be `null`.",
                            "nullable": true,
                            "type": "string",
                            "x-akamai": {
                              "status": "DEPRECATED"
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/policy-activation.yaml"
                        }
                      }
                    },
                    "apiVersion": {
                      "description": "The specific version of this API.",
                      "type": "string"
                    },
                    "cloudletCode": {
                      "description": "The type of Cloudlet that this policy is for. To see the available Cloudlets, run the [List Cloudlets](https://techdocs.akamai.com/cloudlets/reference/get-cloudlets) operation. Possible values include: `ALB` for Application Load Balancer, `AP` for API Prioritization, `AS` for Audience Segmentation, `CD` for Phased Release, `ER` for Edge Redirector, `FR` for Forward Rewrite, `IG` for Request Control, and `VP` for Visitor Prioritization.",
                      "type": "string",
                      "enum": [
                        "ALB",
                        "AP",
                        "AS",
                        "CD",
                        "ER",
                        "FR",
                        "IG",
                        "VP"
                      ],
                      "x-akamai": {
                        "file-path": "schemas/cloudlet-code-enum.yaml"
                      }
                    },
                    "cloudletId": {
                      "description": "The ID of cloudlet that this policy is for. The `cloudletId` for Edge Redirector is `0`, Visitor Prioritization is `1`, Forward Rewrite is `3`, Request Control is `4`, API Prioritization is `5`, Audience Segmentation is `6`, Phased Release is `7`, and Application Load Balancer is `9`. To see the available Cloudlets, run the [List Cloudlets](https://techdocs.akamai.com/cloudlets/reference/get-cloudlets) operation.",
                      "type": "integer",
                      "enum": [
                        0,
                        1,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                      ]
                    },
                    "createDate": {
                      "description": "Date of the policy creation in milliseconds.",
                      "type": "integer"
                    },
                    "createdBy": {
                      "description": "User name who created the policy.",
                      "type": "string"
                    },
                    "deleted": {
                      "description": "Flag determining whether the policy is deleted or not.",
                      "type": "boolean"
                    },
                    "description": {
                      "description": "The description of the policy.",
                      "type": "string"
                    },
                    "groupId": {
                      "description": "The ID of the group this policy is associated with.",
                      "type": "integer"
                    },
                    "lastModifiedBy": {
                      "description": "User name who recently modified the policy.",
                      "type": "string"
                    },
                    "lastModifiedDate": {
                      "description": "Date of the recent policy modification in milliseconds.",
                      "type": "integer"
                    },
                    "location": {
                      "description": "The navigable endpoint used for the object referred to in the operation.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the policy.",
                      "type": "string"
                    },
                    "policyId": {
                      "description": "ID of the policy.",
                      "type": "integer"
                    },
                    "propertyName": {
                      "deprecated": true,
                      "description": "This field now only returns `null`. It does not reflect the properties currently associated with this Cloudlets policy.",
                      "nullable": true,
                      "type": "string"
                    },
                    "serviceVersion": {
                      "description": "__Deprecated__ The build of the software running on the server. The value can be `null`.",
                      "nullable": true,
                      "type": "string",
                      "x-akamai": {
                        "status": "DEPRECATED"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/policy.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Deletes an existing Cloudlets policy.",
        "operationId": "delete-policy",
        "summary": "Remove a policy",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/delete-policy"
        },
        "responses": {
          "204": {
            "description": "The Cloudlet policy is deleted.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "The ID of the policy.",
          "example": "{{policyId}}",
          "in": "path",
          "name": "policyId",
          "required": true,
          "schema": {
            "type": "number"
          },
          "x-akamai": {
            "file-path": "parameters/policyId-path.yaml"
          }
        }
      ]
    },
    "/policies/{policyId}/activations": {
      "get": {
        "description": "Returns the activation history for the policy. The policy activation history provides results for each property where the policy applies dating back up to one year. If no activations occurred within the year, only the latest activation data is returned.",
        "operationId": "get-policy-activations",
        "summary": "List policy activations",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-policy-activations"
        },
        "responses": {
          "200": {
            "description": "Returns the policy's activation history.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "TBD.",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Returns details of a policy activation.",
                    "type": "object",
                    "required": [
                      "network",
                      "policyInfo",
                      "propertyInfo"
                    ],
                    "properties": {
                      "apiVersion": {
                        "description": "The specific version of this API.",
                        "type": "string"
                      },
                      "network": {
                        "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.",
                        "type": "string",
                        "enum": [
                          "prod",
                          "staging"
                        ]
                      },
                      "policyInfo": {
                        "additionalProperties": false,
                        "description": "Returns details of a policy associated with policy activation.",
                        "type": "object",
                        "required": [
                          "policyId",
                          "name",
                          "version",
                          "status",
                          "statusDetail",
                          "activatedBy",
                          "activationDate"
                        ],
                        "properties": {
                          "activatedBy": {
                            "description": "User name who issued the activation.",
                            "type": "string"
                          },
                          "activationDate": {
                            "description": "Date of the activation in milliseconds.",
                            "type": "integer"
                          },
                          "name": {
                            "description": "Name of the policy.",
                            "type": "string"
                          },
                          "policyId": {
                            "description": "ID of the policy.",
                            "type": "integer"
                          },
                          "status": {
                            "description": "Value representing activation status.",
                            "type": "string",
                            "enum": [
                              "INACTIVE",
                              "PENDING",
                              "ACTIVE",
                              "FAILED",
                              "DEACTIVATED"
                            ],
                            "x-akamai": {
                              "file-path": "schemas/activation-status-enum.yaml"
                            }
                          },
                          "statusDetail": {
                            "description": "Details of the activation status.",
                            "type": "string"
                          },
                          "version": {
                            "description": "Version of the policy.",
                            "type": "integer"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/policy-activation-policy-info.yaml"
                        }
                      },
                      "propertyInfo": {
                        "additionalProperties": false,
                        "description": "Returns details of a property associated with policy activation.",
                        "type": "object",
                        "required": [
                          "name",
                          "version",
                          "groupId",
                          "status",
                          "activatedBy",
                          "activationDate",
                          "id"
                        ],
                        "properties": {
                          "activatedBy": {
                            "description": "User name who issued the activation.",
                            "type": "string"
                          },
                          "activationDate": {
                            "description": "Date of the activation in milliseconds.",
                            "type": "integer"
                          },
                          "groupId": {
                            "description": "Identifies the group where the property is placed.",
                            "type": "integer"
                          },
                          "id": {
                            "description": "ID of the property.",
                            "type": "integer"
                          },
                          "name": {
                            "description": "Name of the property.",
                            "type": "string"
                          },
                          "status": {
                            "description": "Value representing activation status.",
                            "type": "string",
                            "enum": [
                              "INACTIVE",
                              "PENDING",
                              "ACTIVE",
                              "FAILED",
                              "DEACTIVATED"
                            ],
                            "x-akamai": {
                              "file-path": "schemas/activation-status-enum.yaml"
                            }
                          },
                          "version": {
                            "description": "Version of the property.",
                            "type": "integer"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/policy-activation-property-info.yaml"
                        }
                      },
                      "serviceVersion": {
                        "description": "__Deprecated__ The build of the software running on the server. The value can be `null`.",
                        "nullable": true,
                        "type": "string",
                        "x-akamai": {
                          "status": "DEPRECATED"
                        }
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/policy-activation.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-policy-activations-response.yaml"
                  }
                },
                "example": [
                  {
                    "apiVersion": "2.0",
                    "network": "staging",
                    "serviceVersion": null,
                    "policyInfo": {
                      "activatedBy": "adevi",
                      "activationDate": 1427428800000,
                      "detailCode": 4000,
                      "name": "RequestControlPolicy",
                      "policyId": 2962,
                      "status": "ACTIVE",
                      "statusDetail": "File successfully deployed to Akamai's network",
                      "version": 1
                    },
                    "propertyInfo": {
                      "activatedBy": null,
                      "activationDate": 0,
                      "groupId": 40498,
                      "name": "www.rc-cloudlet.com",
                      "status": "INACTIVE",
                      "version": 0
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Returns only activations for the selected network, either `staging` or `prod`.",
            "example": "{{network}}",
            "in": "query",
            "name": "network",
            "schema": {
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/network-query.yaml"
            }
          },
          {
            "description": "Returns only activations for the selected property.",
            "example": "{{propertyName}}",
            "in": "query",
            "name": "propertyName",
            "schema": {
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/propertyName-query.yaml"
            }
          },
          {
            "description": "When requesting pages of data, `offset` is the record after which to start. Use `offset` with `pageSize`. For example: offset=25&pageSize=15 starts at record 26 and displays up to 15 records for each property the policy applies to.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "default": 0,
              "example": 25,
              "minimum": 0,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/offset-query.yaml"
            }
          },
          {
            "description": "The number of records to return. Use with `offset` to manage the number of records returned.",
            "example": "{{pageSize}}",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "schema": {
              "default": 100,
              "example": 15,
              "maximum": 1000,
              "minimum": 5,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageSize-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "The ID of the policy.",
          "example": "{{policyId}}",
          "in": "path",
          "name": "policyId",
          "required": true,
          "schema": {
            "type": "number"
          },
          "x-akamai": {
            "file-path": "parameters/policyId-path.yaml"
          }
        }
      ]
    },
    "/policies/{policyId}/properties": {
      "get": {
        "description": "Run this operation to return the complete list of property associations for a specific policy with a given `policyId`.",
        "operationId": "get-policy-properties",
        "summary": "Get associated properties for a policy",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-policy-properties"
        },
        "responses": {
          "200": {
            "description": "Returns information about the associated properties.",
            "content": {
              "application/json": {
                "example": {
                  "www.myproperty.com": {
                    "groupId": 40498,
                    "name": "www.example.com",
                    "newestVersion": {
                      "activatedBy": "jdupont",
                      "activationDate": "2018-01-01",
                      "version": 5,
                      "referencedPolicies": [
                        "fr_policy_1"
                      ],
                      "cloudletsOrigins": {
                        "customerOrigin1": {
                          "checksum": "691365709300c782c875ea43244a3d3f",
                          "hostname": "origin1.example.com",
                          "originId": "customerOrigin1",
                          "type": "CUSTOMER"
                        },
                        "customerOrigin2": {
                          "checksum": "da016ec7b425cc1b601352d6078d0b51",
                          "hostname": "origin2.example.com",
                          "originId": "customerOrigin2",
                          "type": "CUSTOMER"
                        }
                      }
                    },
                    "production": {
                      "activatedBy": "hgildong",
                      "activationDate": "2018-01-01",
                      "version": 5,
                      "referencedPolicies": [
                        "fr_policy_1"
                      ],
                      "cloudletsOrigins": {
                        "customerOrigin1": {
                          "checksum": "691365709300c782c875ea43244a3d3f",
                          "hostname": "origin1.example.com",
                          "originId": "customerOrigin1",
                          "type": "CUSTOMER"
                        },
                        "netStorageOrigin1": {
                          "checksum": "773636eb8f6c65f5dc01cc3d84f5c0a8",
                          "hostname": "download.akamai.com/12345",
                          "originId": "netStorageOrigin1",
                          "type": "NETSTORAGE"
                        }
                      }
                    },
                    "staging": {
                      "activatedBy": "hgildong",
                      "activationDate": "2018-01-01",
                      "version": 5,
                      "referencedPolicies": [
                        "fr_policy_1"
                      ],
                      "cloudletsOrigins": {
                        "customerOrigin1": {
                          "checksum": "691365709300c782c875ea43244a3d3f",
                          "hostname": "origin1.example.com",
                          "originId": "customerOrigin1",
                          "type": "CUSTOMER"
                        },
                        "customerOrigin2": {
                          "checksum": "da016ec7b425cc1b601352d6078d0b51",
                          "hostname": "origin2.example.com",
                          "originId": "customerOrigin2",
                          "type": "CUSTOMER"
                        },
                        "netStorageOrigin1": {
                          "checksum": "773636eb8f6c65f5dc01cc3d84f5c0a8",
                          "hostname": "download.akamai.com/12345",
                          "originId": "netStorageOrigin1",
                          "type": "NETSTORAGE"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about the newest property version and the property’s current configuration on the production and staging networks for a specific `policyId`.",
                  "type": "object",
                  "required": [
                    "groupId",
                    "name",
                    "newestVersion"
                  ],
                  "properties": {
                    "groupId": {
                      "description": "The group association for the property.",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The name of the property. This value also appears at the start of each separate property object.",
                      "type": "string"
                    },
                    "newestVersion": {
                      "description": "Contains information about the newest property version.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information about the newest property version and the property’s current configuration on the production and staging networks for a specific `policyId`.",
                        "type": "object",
                        "properties": {
                          "activatedBy": {
                            "description": "The name of the user who activated property.",
                            "type": "string"
                          },
                          "activationDate": {
                            "description": "The date, in ISO 8601 format indicating when the property was activated.",
                            "format": "date",
                            "type": "string"
                          },
                          "cloudletsOrigins": {
                            "description": "Contains information about each conditional origin.",
                            "type": "array",
                            "items": {
                              "description": "Schema for a Cloudlets Origin.",
                              "x-akamai": {
                                "file-path": "schemas/origin.yaml"
                              },
                              "anyOf": [
                                {
                                  "additionalProperties": false,
                                  "title": "APPLICATION_LOAD_BALANCER",
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.",
                                      "type": "string"
                                    },
                                    "description": {
                                      "description": "The description of the load balancing configuration provided by a user.",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "maxLength": 63,
                                      "minLength": 2,
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as. In this response the conditonal origin `type` is `APPLICATION_LOAD_BALANCER`.",
                                      "type": "string",
                                      "enum": [
                                        "APPLICATION_LOAD_BALANCER"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "title": "CUSTOMER",
                                  "required": [
                                    "hostname",
                                    "originId",
                                    "type"
                                  ],
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.",
                                      "type": "string"
                                    },
                                    "hostname": {
                                      "description": "The name of the host that can be used as a conditional origin.",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as, in this case `CUSTOMER`.",
                                      "type": "string",
                                      "enum": [
                                        "CUSTOMER"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "title": "NETSTORAGE",
                                  "required": [
                                    "hostname",
                                    "originId",
                                    "type"
                                  ],
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.",
                                      "type": "string"
                                    },
                                    "hostname": {
                                      "description": "The name of the host that can be used as a conditional origin.",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as, in this case `NETSTORAGE`.",
                                      "type": "string",
                                      "enum": [
                                        "NETSTORAGE"
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "referencedPolicies": {
                            "description": "The names of Cloudlets policies for this version of the property.",
                            "type": "string"
                          },
                          "version": {
                            "description": "The version number of the property.",
                            "type": "integer"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/property.yaml"
                        }
                      }
                    },
                    "production": {
                      "description": "Contains information about the property’s current configuration on the `production` network.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information about the newest property version and the property’s current configuration on the production and staging networks for a specific `policyId`.",
                        "type": "object",
                        "properties": {
                          "activatedBy": {
                            "description": "The name of the user who activated property.",
                            "type": "string"
                          },
                          "activationDate": {
                            "description": "The date, in ISO 8601 format indicating when the property was activated.",
                            "format": "date",
                            "type": "string"
                          },
                          "cloudletsOrigins": {
                            "description": "Contains information about each conditional origin.",
                            "type": "array",
                            "items": {
                              "description": "Schema for a Cloudlets Origin.",
                              "x-akamai": {
                                "file-path": "schemas/origin.yaml"
                              },
                              "anyOf": [
                                {
                                  "additionalProperties": false,
                                  "title": "APPLICATION_LOAD_BALANCER",
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.",
                                      "type": "string"
                                    },
                                    "description": {
                                      "description": "The description of the load balancing configuration provided by a user.",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "maxLength": 63,
                                      "minLength": 2,
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as. In this response the conditonal origin `type` is `APPLICATION_LOAD_BALANCER`.",
                                      "type": "string",
                                      "enum": [
                                        "APPLICATION_LOAD_BALANCER"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "title": "CUSTOMER",
                                  "required": [
                                    "hostname",
                                    "originId",
                                    "type"
                                  ],
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.",
                                      "type": "string"
                                    },
                                    "hostname": {
                                      "description": "The name of the host that can be used as a conditional origin.",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as, in this case `CUSTOMER`.",
                                      "type": "string",
                                      "enum": [
                                        "CUSTOMER"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "title": "NETSTORAGE",
                                  "required": [
                                    "hostname",
                                    "originId",
                                    "type"
                                  ],
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.",
                                      "type": "string"
                                    },
                                    "hostname": {
                                      "description": "The name of the host that can be used as a conditional origin.",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as, in this case `NETSTORAGE`.",
                                      "type": "string",
                                      "enum": [
                                        "NETSTORAGE"
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "referencedPolicies": {
                            "description": "The names of Cloudlets policies for this version of the property.",
                            "type": "string"
                          },
                          "version": {
                            "description": "The version number of the property.",
                            "type": "integer"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/property.yaml"
                        }
                      }
                    },
                    "staging": {
                      "description": "Contains information about the property’s current configuration on the `staging` network.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information about the newest property version and the property’s current configuration on the production and staging networks for a specific `policyId`.",
                        "type": "object",
                        "properties": {
                          "activatedBy": {
                            "description": "The name of the user who activated property.",
                            "type": "string"
                          },
                          "activationDate": {
                            "description": "The date, in ISO 8601 format indicating when the property was activated.",
                            "format": "date",
                            "type": "string"
                          },
                          "cloudletsOrigins": {
                            "description": "Contains information about each conditional origin.",
                            "type": "array",
                            "items": {
                              "description": "Schema for a Cloudlets Origin.",
                              "x-akamai": {
                                "file-path": "schemas/origin.yaml"
                              },
                              "anyOf": [
                                {
                                  "additionalProperties": false,
                                  "title": "APPLICATION_LOAD_BALANCER",
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.",
                                      "type": "string"
                                    },
                                    "description": {
                                      "description": "The description of the load balancing configuration provided by a user.",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "maxLength": 63,
                                      "minLength": 2,
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as. In this response the conditonal origin `type` is `APPLICATION_LOAD_BALANCER`.",
                                      "type": "string",
                                      "enum": [
                                        "APPLICATION_LOAD_BALANCER"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "title": "CUSTOMER",
                                  "required": [
                                    "hostname",
                                    "originId",
                                    "type"
                                  ],
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.",
                                      "type": "string"
                                    },
                                    "hostname": {
                                      "description": "The name of the host that can be used as a conditional origin.",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as, in this case `CUSTOMER`.",
                                      "type": "string",
                                      "enum": [
                                        "CUSTOMER"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "title": "NETSTORAGE",
                                  "required": [
                                    "hostname",
                                    "originId",
                                    "type"
                                  ],
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.",
                                      "type": "string"
                                    },
                                    "hostname": {
                                      "description": "The name of the host that can be used as a conditional origin.",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as, in this case `NETSTORAGE`.",
                                      "type": "string",
                                      "enum": [
                                        "NETSTORAGE"
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "referencedPolicies": {
                            "description": "The names of Cloudlets policies for this version of the property.",
                            "type": "string"
                          },
                          "version": {
                            "description": "The version number of the property.",
                            "type": "integer"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/property.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-policy-properties-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "The ID of the policy.",
          "example": "{{policyId}}",
          "in": "path",
          "name": "policyId",
          "required": true,
          "schema": {
            "type": "number"
          },
          "x-akamai": {
            "file-path": "parameters/policyId-path.yaml"
          }
        }
      ]
    },
    "/policies/{policyId}/versions": {
      "post": {
        "description": "Create a new policy version, where the version number will be incremented from the highest existing version.  With this operation you can change any modifiable policy or version attributes.",
        "operationId": "post-policy-versions",
        "summary": "Create a new policy version",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/post-policy-versions"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "description": "Testing the cloning of a policy",
                "matchRulesFormat": "1.0",
                "matchRules": []
              },
              "schema": {
                "additionalProperties": false,
                "description": "TBD.",
                "type": "object",
                "required": [
                  "description",
                  "matchRulesFormat",
                  "matchRules"
                ],
                "properties": {
                  "description": {
                    "description": "Description of the policy version.",
                    "example": "{{description}}",
                    "type": "string"
                  },
                  "matchRules": {
                    "description": "A list of Cloudlet-specific match rules for this policy.",
                    "type": "array",
                    "items": {
                      "description": "Contains information about match rules.",
                      "x-akamai": {
                        "file-path": "schemas/match-rule.yaml"
                      },
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Application Load Balancer.",
                          "title": "Application Load Balancer",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "forwardSettings": {
                              "additionalProperties": false,
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                              "type": "object",
                              "properties": {
                                "originId": {
                                  "description": "The conditional origin's unique identifier.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "pathAndQS": {
                                  "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                  "maxLength": 8192,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                  "type": "boolean"
                                }
                              }
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "nullable": true,
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "title": "Object match value",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use this for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.",
                              "type": "string",
                              "enum": [
                                "albMatchRule"
                              ]
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-alb.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for API Prioritization.",
                          "title": "API Prioritization",
                          "type": "object",
                          "required": [
                            "type",
                            "passThroughPercent"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "header",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "title": "Object match value",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use this for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "passThroughPercent": {
                              "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.",
                              "maximum": 100,
                              "minimum": -1,
                              "type": "number"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.",
                              "type": "string",
                              "enum": [
                                "apMatchRule"
                              ]
                            },
                            "useIncomingQueryString": {
                              "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                              "type": "boolean"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-ap.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Audience Segmentation.",
                          "title": "Audience Segmentation",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "forwardSettings": {
                              "additionalProperties": false,
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                              "type": "object",
                              "properties": {
                                "originId": {
                                  "description": "The conditional origin's unique identifier.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "pathAndQS": {
                                  "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                  "maxLength": 8192,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                  "type": "boolean"
                                }
                              }
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "range",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "title": "Object match value",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.",
                              "type": "string",
                              "enum": [
                                "asMatchRule"
                              ]
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-as.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Phased Release.",
                          "title": "Phased Release",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "forwardSettings": {
                              "additionalProperties": false,
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                              "type": "object",
                              "properties": {
                                "originId": {
                                  "description": "The conditional origin's unique identifier.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "pathAndQS": {
                                  "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                  "maxLength": 8192,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                  "type": "boolean"
                                }
                              }
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "nullable": true,
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "title": "Object match value",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use this for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.",
                              "type": "string",
                              "enum": [
                                "cdMatchRule"
                              ]
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-cd.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Edge Redirector.",
                          "title": "Edge Redirector",
                          "type": "object",
                          "required": [
                            "type",
                            "redirectURL",
                            "statusCode"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "nullable": true,
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "title": "Object match value",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "redirectURL": {
                              "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "statusCode": {
                              "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.",
                              "type": "integer",
                              "enum": [
                                301,
                                302,
                                303,
                                307,
                                308
                              ]
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.",
                              "type": "string",
                              "enum": [
                                "erMatchRule"
                              ]
                            },
                            "useIncomingQueryString": {
                              "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                              "type": "boolean"
                            },
                            "useIncomingSchemeAndHost": {
                              "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.",
                              "type": "boolean"
                            },
                            "useRelativeUrl": {
                              "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.",
                              "type": "string",
                              "enum": [
                                "none",
                                "copy_scheme_hostname",
                                "relative_url"
                              ]
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-er.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Forward Rewrite.",
                          "title": "Forward Rewrite",
                          "type": "object",
                          "required": [
                            "type",
                            "forwardSettings"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "forwardSettings": {
                              "additionalProperties": false,
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                              "type": "object",
                              "properties": {
                                "originId": {
                                  "description": "The conditional origin's unique identifier.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "pathAndQS": {
                                  "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                  "maxLength": 8192,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                  "type": "boolean"
                                }
                              }
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "title": "Object match value",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.",
                              "type": "string",
                              "enum": [
                                "frMatchRule"
                              ]
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-fr.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Request Control.",
                          "title": "Request Control",
                          "type": "object",
                          "required": [
                            "type",
                            "allowDeny"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "allowDeny": {
                              "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).",
                              "type": "string",
                              "enum": [
                                "allow",
                                "deny",
                                "denybranded"
                              ]
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "clientip",
                                      "continent",
                                      "cookie",
                                      "countrycode",
                                      "deviceCharacteristics",
                                      "extension",
                                      "header",
                                      "hostname",
                                      "method",
                                      "path",
                                      "protocol",
                                      "proxy",
                                      "query",
                                      "regioncode"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "title": "Object match value",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. Specify the `range` as a percentage.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.",
                              "type": "string",
                              "enum": [
                                "igMatchRule"
                              ]
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-ig.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Visitor Prioritization.",
                          "title": "Visitor Prioritization",
                          "type": "object",
                          "required": [
                            "type",
                            "passThroughPercent"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "header",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "title": "Object match value",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "passThroughPercent": {
                              "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.",
                              "maximum": 100,
                              "minimum": -1,
                              "type": "number"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.",
                              "type": "string",
                              "enum": [
                                "vpMatchRule"
                              ]
                            },
                            "useIncomingQueryString": {
                              "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.",
                              "type": "boolean"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-vp.yaml"
                          }
                        }
                      ]
                    },
                    "x-akamai": {
                      "file-path": "schemas/match-rules.yaml"
                    }
                  },
                  "matchRulesFormat": {
                    "description": "Match rules format.",
                    "example": "{{matchRulesFormat}}",
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/post-policy-versions-request.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns details of a policy version.",
            "content": {
              "application/json": {
                "example": {
                  "createDate": 1428957891084,
                  "createdBy": "szhang",
                  "deleted": false,
                  "description": "Testing the cloning of a policy",
                  "lastModifiedBy": "jsmith",
                  "lastModifiedDate": 1428957891084,
                  "policyId": 1002,
                  "revisionId": 12345,
                  "rulesLocked": false,
                  "version": 2,
                  "activations": [],
                  "matchRules": []
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "TBD.",
                  "type": "object",
                  "required": [
                    "activations",
                    "createdBy",
                    "createDate",
                    "deleted",
                    "description",
                    "lastModifiedBy",
                    "lastModifiedDate",
                    "location",
                    "matchRuleFormat",
                    "matchRules",
                    "policyId",
                    "revisionId",
                    "rulesLocked",
                    "version"
                  ],
                  "properties": {
                    "activations": {
                      "description": "List of activations related to the policy version.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Returns details of a policy activation.",
                        "type": "object",
                        "required": [
                          "network",
                          "policyInfo",
                          "propertyInfo"
                        ],
                        "properties": {
                          "apiVersion": {
                            "description": "The specific version of this API.",
                            "type": "string"
                          },
                          "network": {
                            "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.",
                            "type": "string",
                            "enum": [
                              "prod",
                              "staging"
                            ]
                          },
                          "policyInfo": {
                            "additionalProperties": false,
                            "description": "Returns details of a policy associated with policy activation.",
                            "type": "object",
                            "required": [
                              "policyId",
                              "name",
                              "version",
                              "status",
                              "statusDetail",
                              "activatedBy",
                              "activationDate"
                            ],
                            "properties": {
                              "activatedBy": {
                                "description": "User name who issued the activation.",
                                "type": "string"
                              },
                              "activationDate": {
                                "description": "Date of the activation in milliseconds.",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the policy.",
                                "type": "string"
                              },
                              "policyId": {
                                "description": "ID of the policy.",
                                "type": "integer"
                              },
                              "status": {
                                "description": "Value representing activation status.",
                                "type": "string",
                                "enum": [
                                  "INACTIVE",
                                  "PENDING",
                                  "ACTIVE",
                                  "FAILED",
                                  "DEACTIVATED"
                                ],
                                "x-akamai": {
                                  "file-path": "schemas/activation-status-enum.yaml"
                                }
                              },
                              "statusDetail": {
                                "description": "Details of the activation status.",
                                "type": "string"
                              },
                              "version": {
                                "description": "Version of the policy.",
                                "type": "integer"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/policy-activation-policy-info.yaml"
                            }
                          },
                          "propertyInfo": {
                            "additionalProperties": false,
                            "description": "Returns details of a property associated with policy activation.",
                            "type": "object",
                            "required": [
                              "name",
                              "version",
                              "groupId",
                              "status",
                              "activatedBy",
                              "activationDate",
                              "id"
                            ],
                            "properties": {
                              "activatedBy": {
                                "description": "User name who issued the activation.",
                                "type": "string"
                              },
                              "activationDate": {
                                "description": "Date of the activation in milliseconds.",
                                "type": "integer"
                              },
                              "groupId": {
                                "description": "Identifies the group where the property is placed.",
                                "type": "integer"
                              },
                              "id": {
                                "description": "ID of the property.",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the property.",
                                "type": "string"
                              },
                              "status": {
                                "description": "Value representing activation status.",
                                "type": "string",
                                "enum": [
                                  "INACTIVE",
                                  "PENDING",
                                  "ACTIVE",
                                  "FAILED",
                                  "DEACTIVATED"
                                ],
                                "x-akamai": {
                                  "file-path": "schemas/activation-status-enum.yaml"
                                }
                              },
                              "version": {
                                "description": "Version of the property.",
                                "type": "integer"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/policy-activation-property-info.yaml"
                            }
                          },
                          "serviceVersion": {
                            "description": "__Deprecated__ The build of the software running on the server. The value can be `null`.",
                            "nullable": true,
                            "type": "string",
                            "x-akamai": {
                              "status": "DEPRECATED"
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/policy-activation.yaml"
                        }
                      }
                    },
                    "createDate": {
                      "description": "Date of the policy version creation in milliseconds.",
                      "type": "integer"
                    },
                    "createdBy": {
                      "description": "User name who created the policy version.",
                      "type": "string"
                    },
                    "deleted": {
                      "description": "Flag determining whether the policy version is deleted or not.",
                      "type": "boolean"
                    },
                    "description": {
                      "description": "Description of the policy version.",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "User name who recently modified the policy version.",
                      "type": "string"
                    },
                    "lastModifiedDate": {
                      "description": "Date of the recent policy version modification in milliseconds.",
                      "type": "integer"
                    },
                    "location": {
                      "description": "The navigable endpoint used for the object referred to in the operation.",
                      "type": "string"
                    },
                    "matchRuleFormat": {
                      "description": "Match rule format.",
                      "type": "string"
                    },
                    "matchRules": {
                      "description": "A list of Cloudlet-specific match rules for this policy.",
                      "type": "array",
                      "items": {
                        "description": "Contains information about match rules.",
                        "x-akamai": {
                          "file-path": "schemas/match-rule.yaml"
                        },
                        "oneOf": [
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Application Load Balancer.",
                            "title": "Application Load Balancer",
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                "type": "object",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pathAndQS": {
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "useIncomingQueryString": {
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "nullable": true,
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use this for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "albMatchRule"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-alb.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for API Prioritization.",
                            "title": "API Prioritization",
                            "type": "object",
                            "required": [
                              "type",
                              "passThroughPercent"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "header",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use this for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "passThroughPercent": {
                                "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.",
                                "maximum": 100,
                                "minimum": -1,
                                "type": "number"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "apMatchRule"
                                ]
                              },
                              "useIncomingQueryString": {
                                "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                "type": "boolean"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-ap.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Audience Segmentation.",
                            "title": "Audience Segmentation",
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                "type": "object",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pathAndQS": {
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "useIncomingQueryString": {
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "range",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "asMatchRule"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-as.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Phased Release.",
                            "title": "Phased Release",
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                "type": "object",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pathAndQS": {
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "useIncomingQueryString": {
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "nullable": true,
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use this for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "cdMatchRule"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-cd.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Edge Redirector.",
                            "title": "Edge Redirector",
                            "type": "object",
                            "required": [
                              "type",
                              "redirectURL",
                              "statusCode"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "nullable": true,
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "redirectURL": {
                                "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "statusCode": {
                                "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.",
                                "type": "integer",
                                "enum": [
                                  301,
                                  302,
                                  303,
                                  307,
                                  308
                                ]
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "erMatchRule"
                                ]
                              },
                              "useIncomingQueryString": {
                                "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                "type": "boolean"
                              },
                              "useIncomingSchemeAndHost": {
                                "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.",
                                "type": "boolean"
                              },
                              "useRelativeUrl": {
                                "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.",
                                "type": "string",
                                "enum": [
                                  "none",
                                  "copy_scheme_hostname",
                                  "relative_url"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-er.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Forward Rewrite.",
                            "title": "Forward Rewrite",
                            "type": "object",
                            "required": [
                              "type",
                              "forwardSettings"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                "type": "object",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pathAndQS": {
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "useIncomingQueryString": {
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "frMatchRule"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-fr.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Request Control.",
                            "title": "Request Control",
                            "type": "object",
                            "required": [
                              "type",
                              "allowDeny"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "allowDeny": {
                                "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).",
                                "type": "string",
                                "enum": [
                                  "allow",
                                  "deny",
                                  "denybranded"
                                ]
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "clientip",
                                        "continent",
                                        "cookie",
                                        "countrycode",
                                        "deviceCharacteristics",
                                        "extension",
                                        "header",
                                        "hostname",
                                        "method",
                                        "path",
                                        "protocol",
                                        "proxy",
                                        "query",
                                        "regioncode"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. Specify the `range` as a percentage.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "igMatchRule"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-ig.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Visitor Prioritization.",
                            "title": "Visitor Prioritization",
                            "type": "object",
                            "required": [
                              "type",
                              "passThroughPercent"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "header",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "passThroughPercent": {
                                "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.",
                                "maximum": 100,
                                "minimum": -1,
                                "type": "number"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "vpMatchRule"
                                ]
                              },
                              "useIncomingQueryString": {
                                "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.",
                                "type": "boolean"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-vp.yaml"
                            }
                          }
                        ]
                      },
                      "x-akamai": {
                        "file-path": "schemas/match-rules.yaml"
                      }
                    },
                    "policyId": {
                      "description": "ID of the policy the version is associated to.",
                      "type": "integer"
                    },
                    "revisionId": {
                      "description": "ID of the revision.",
                      "type": "integer"
                    },
                    "rulesLocked": {
                      "description": "Flag determining whether the rules are locked or not.",
                      "type": "boolean"
                    },
                    "version": {
                      "description": "Version of the policy.",
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/post-policy-versions-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "If cloning an existing policy version, this parameter value is the number of the policy version you want to clone. If there are attributes that you do _not_ want propagated from the source policy version, you must provide the new values in the request.",
            "example": "{{cloneVersion}}",
            "in": "query",
            "name": "cloneVersion",
            "schema": {
              "type": "number"
            },
            "x-akamai": {
              "file-path": "parameters/cloneVersion-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Returns information about all versions of a policy.",
        "operationId": "get-policy-versions",
        "summary": "List policy versions",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-policy-versions"
        },
        "responses": {
          "200": {
            "description": "Returns all policy versions.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Returns all policy versions.",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Returns policy version details.",
                    "type": "object",
                    "required": [
                      "activations",
                      "createdBy",
                      "createDate",
                      "deleted",
                      "description",
                      "lastModifiedBy",
                      "lastModifiedDate",
                      "location",
                      "matchRuleFormat",
                      "matchRules",
                      "policyId",
                      "revisionId",
                      "rulesLocked",
                      "version"
                    ],
                    "properties": {
                      "activations": {
                        "description": "List of activations related to the policy version.",
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "Returns details of a policy activation.",
                          "type": "object",
                          "required": [
                            "network",
                            "policyInfo",
                            "propertyInfo"
                          ],
                          "properties": {
                            "apiVersion": {
                              "description": "The specific version of this API.",
                              "type": "string"
                            },
                            "network": {
                              "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.",
                              "type": "string",
                              "enum": [
                                "prod",
                                "staging"
                              ]
                            },
                            "policyInfo": {
                              "additionalProperties": false,
                              "description": "Returns details of a policy associated with policy activation.",
                              "type": "object",
                              "required": [
                                "policyId",
                                "name",
                                "version",
                                "status",
                                "statusDetail",
                                "activatedBy",
                                "activationDate"
                              ],
                              "properties": {
                                "activatedBy": {
                                  "description": "User name who issued the activation.",
                                  "type": "string"
                                },
                                "activationDate": {
                                  "description": "Date of the activation in milliseconds.",
                                  "type": "integer"
                                },
                                "name": {
                                  "description": "Name of the policy.",
                                  "type": "string"
                                },
                                "policyId": {
                                  "description": "ID of the policy.",
                                  "type": "integer"
                                },
                                "status": {
                                  "description": "Value representing activation status.",
                                  "type": "string",
                                  "enum": [
                                    "INACTIVE",
                                    "PENDING",
                                    "ACTIVE",
                                    "FAILED",
                                    "DEACTIVATED"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/activation-status-enum.yaml"
                                  }
                                },
                                "statusDetail": {
                                  "description": "Details of the activation status.",
                                  "type": "string"
                                },
                                "version": {
                                  "description": "Version of the policy.",
                                  "type": "integer"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/policy-activation-policy-info.yaml"
                              }
                            },
                            "propertyInfo": {
                              "additionalProperties": false,
                              "description": "Returns details of a property associated with policy activation.",
                              "type": "object",
                              "required": [
                                "name",
                                "version",
                                "groupId",
                                "status",
                                "activatedBy",
                                "activationDate",
                                "id"
                              ],
                              "properties": {
                                "activatedBy": {
                                  "description": "User name who issued the activation.",
                                  "type": "string"
                                },
                                "activationDate": {
                                  "description": "Date of the activation in milliseconds.",
                                  "type": "integer"
                                },
                                "groupId": {
                                  "description": "Identifies the group where the property is placed.",
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "ID of the property.",
                                  "type": "integer"
                                },
                                "name": {
                                  "description": "Name of the property.",
                                  "type": "string"
                                },
                                "status": {
                                  "description": "Value representing activation status.",
                                  "type": "string",
                                  "enum": [
                                    "INACTIVE",
                                    "PENDING",
                                    "ACTIVE",
                                    "FAILED",
                                    "DEACTIVATED"
                                  ],
                                  "x-akamai": {
                                    "file-path": "schemas/activation-status-enum.yaml"
                                  }
                                },
                                "version": {
                                  "description": "Version of the property.",
                                  "type": "integer"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/policy-activation-property-info.yaml"
                              }
                            },
                            "serviceVersion": {
                              "description": "__Deprecated__ The build of the software running on the server. The value can be `null`.",
                              "nullable": true,
                              "type": "string",
                              "x-akamai": {
                                "status": "DEPRECATED"
                              }
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/policy-activation.yaml"
                          }
                        }
                      },
                      "createDate": {
                        "description": "Date of the policy version creation in milliseconds.",
                        "type": "integer"
                      },
                      "createdBy": {
                        "description": "User name who created the policy version.",
                        "type": "string"
                      },
                      "deleted": {
                        "description": "Flag determining whether the policy version is deleted or not.",
                        "type": "boolean"
                      },
                      "description": {
                        "description": "Description of the policy version.",
                        "type": "string"
                      },
                      "lastModifiedBy": {
                        "description": "User name who recently modified the policy version.",
                        "type": "string"
                      },
                      "lastModifiedDate": {
                        "description": "Date of the recent policy version modification in milliseconds.",
                        "type": "integer"
                      },
                      "location": {
                        "description": "The navigable endpoint used for the object referred to in the operation.",
                        "type": "string"
                      },
                      "matchRuleFormat": {
                        "description": "Match rule format.",
                        "type": "string"
                      },
                      "matchRules": {
                        "description": "A list of Cloudlet-specific match rules for this policy.",
                        "type": "array",
                        "items": {
                          "description": "Contains information about match rules.",
                          "x-akamai": {
                            "file-path": "schemas/match-rule.yaml"
                          },
                          "oneOf": [
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Application Load Balancer.",
                              "title": "Application Load Balancer",
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "forwardSettings": {
                                  "additionalProperties": false,
                                  "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                  "type": "object",
                                  "properties": {
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "maxLength": 8192,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "pathAndQS": {
                                      "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "useIncomingQueryString": {
                                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "nullable": true,
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "header",
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "regex",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use this for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "albMatchRule"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-alb.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for API Prioritization.",
                              "title": "API Prioritization",
                              "type": "object",
                              "required": [
                                "type",
                                "passThroughPercent"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "header",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use this for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "passThroughPercent": {
                                  "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.",
                                  "maximum": 100,
                                  "minimum": -1,
                                  "type": "number"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "apMatchRule"
                                  ]
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                  "type": "boolean"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-ap.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Audience Segmentation.",
                              "title": "Audience Segmentation",
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "forwardSettings": {
                                  "additionalProperties": false,
                                  "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                  "type": "object",
                                  "properties": {
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "maxLength": 8192,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "pathAndQS": {
                                      "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "useIncomingQueryString": {
                                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "header",
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "range",
                                          "regex",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "asMatchRule"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-as.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Phased Release.",
                              "title": "Phased Release",
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "forwardSettings": {
                                  "additionalProperties": false,
                                  "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                  "type": "object",
                                  "properties": {
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "maxLength": 8192,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "pathAndQS": {
                                      "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "useIncomingQueryString": {
                                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "nullable": true,
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "header",
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use this for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "cdMatchRule"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-cd.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Edge Redirector.",
                              "title": "Edge Redirector",
                              "type": "object",
                              "required": [
                                "type",
                                "redirectURL",
                                "statusCode"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "nullable": true,
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "header",
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "regex",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "redirectURL": {
                                  "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.",
                                  "maxLength": 8192,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "statusCode": {
                                  "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.",
                                  "type": "integer",
                                  "enum": [
                                    301,
                                    302,
                                    303,
                                    307,
                                    308
                                  ]
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "erMatchRule"
                                  ]
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                  "type": "boolean"
                                },
                                "useIncomingSchemeAndHost": {
                                  "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.",
                                  "type": "boolean"
                                },
                                "useRelativeUrl": {
                                  "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.",
                                  "type": "string",
                                  "enum": [
                                    "none",
                                    "copy_scheme_hostname",
                                    "relative_url"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-er.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Forward Rewrite.",
                              "title": "Forward Rewrite",
                              "type": "object",
                              "required": [
                                "type",
                                "forwardSettings"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "forwardSettings": {
                                  "additionalProperties": false,
                                  "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                  "type": "object",
                                  "properties": {
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "maxLength": 8192,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "pathAndQS": {
                                      "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "useIncomingQueryString": {
                                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "header",
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "regex",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "frMatchRule"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-fr.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Request Control.",
                              "title": "Request Control",
                              "type": "object",
                              "required": [
                                "type",
                                "allowDeny"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "allowDeny": {
                                  "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).",
                                  "type": "string",
                                  "enum": [
                                    "allow",
                                    "deny",
                                    "denybranded"
                                  ]
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "clientip",
                                          "continent",
                                          "cookie",
                                          "countrycode",
                                          "deviceCharacteristics",
                                          "extension",
                                          "header",
                                          "hostname",
                                          "method",
                                          "path",
                                          "protocol",
                                          "proxy",
                                          "query",
                                          "regioncode"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. Specify the `range` as a percentage.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "igMatchRule"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-ig.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Visitor Prioritization.",
                              "title": "Visitor Prioritization",
                              "type": "object",
                              "required": [
                                "type",
                                "passThroughPercent"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "header",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "passThroughPercent": {
                                  "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.",
                                  "maximum": 100,
                                  "minimum": -1,
                                  "type": "number"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "vpMatchRule"
                                  ]
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.",
                                  "type": "boolean"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-vp.yaml"
                              }
                            }
                          ]
                        },
                        "x-akamai": {
                          "file-path": "schemas/match-rules.yaml"
                        }
                      },
                      "policyId": {
                        "description": "ID of the policy the version is associated to.",
                        "type": "integer"
                      },
                      "revisionId": {
                        "description": "ID of the revision.",
                        "type": "integer"
                      },
                      "rulesLocked": {
                        "description": "Flag determining whether the rules are locked or not.",
                        "type": "boolean"
                      },
                      "version": {
                        "description": "Version of the policy.",
                        "type": "integer"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/policy-version.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-policy-versions-response.yaml"
                  }
                },
                "example": [
                  {
                    "createDate": 1427133615439,
                    "createdBy": "jsmith",
                    "deleted": false,
                    "description": "test",
                    "lastModifiedBy": "hgildong",
                    "lastModifiedDate": 1427133651975,
                    "policyId": 1001,
                    "revisionId": 11868,
                    "rulesLocked": false,
                    "version": 1,
                    "activations": [],
                    "matchRules": []
                  },
                  {
                    "createDate": 1427133784903,
                    "createdBy": "jsmith",
                    "deleted": false,
                    "description": "v2",
                    "lastModifiedBy": "jsmith",
                    "lastModifiedDate": 1427133805767,
                    "policyId": 1001,
                    "revisionId": 11870,
                    "rulesLocked": false,
                    "version": 2,
                    "activations": [],
                    "matchRules": []
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Including match rules for all policy versions in the results is now disabled. You can get match rules for a single policy version using [Get a Policy Version](https://techdocs.akamai.com/cloudlets/v2/reference/get-policy-version).",
            "example": "{{includeRules}}",
            "in": "query",
            "name": "includeRules",
            "schema": {
              "default": false,
              "example": false,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/includeRules-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "The ID of the policy.",
          "example": "{{policyId}}",
          "in": "path",
          "name": "policyId",
          "required": true,
          "schema": {
            "type": "number"
          },
          "x-akamai": {
            "file-path": "parameters/policyId-path.yaml"
          }
        }
      ]
    },
    "/policies/{policyId}/versions/{version}": {
      "get": {
        "description": "Returns information about a specific Cloudlet policy version.",
        "operationId": "get-policy-version",
        "summary": "Get a policy version",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-policy-version"
        },
        "responses": {
          "200": {
            "description": "Returns details of a policy version.",
            "content": {
              "application/json": {
                "example": {
                  "createDate": 1427133784903,
                  "createdBy": "jsmith",
                  "deleted": false,
                  "description": "v2",
                  "lastModifiedBy": "adevi",
                  "lastModifiedDate": 1427133805767,
                  "policyId": 1001,
                  "revisionId": 11870,
                  "rulesLocked": false,
                  "version": 2,
                  "activations": [],
                  "matchRules": []
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "TBD.",
                  "type": "object",
                  "required": [
                    "activations",
                    "createdBy",
                    "createDate",
                    "deleted",
                    "description",
                    "lastModifiedBy",
                    "lastModifiedDate",
                    "location",
                    "matchRuleFormat",
                    "matchRules",
                    "policyId",
                    "revisionId",
                    "rulesLocked",
                    "version"
                  ],
                  "properties": {
                    "activations": {
                      "description": "List of activations related to the policy version.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Returns details of a policy activation.",
                        "type": "object",
                        "required": [
                          "network",
                          "policyInfo",
                          "propertyInfo"
                        ],
                        "properties": {
                          "apiVersion": {
                            "description": "The specific version of this API.",
                            "type": "string"
                          },
                          "network": {
                            "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.",
                            "type": "string",
                            "enum": [
                              "prod",
                              "staging"
                            ]
                          },
                          "policyInfo": {
                            "additionalProperties": false,
                            "description": "Returns details of a policy associated with policy activation.",
                            "type": "object",
                            "required": [
                              "policyId",
                              "name",
                              "version",
                              "status",
                              "statusDetail",
                              "activatedBy",
                              "activationDate"
                            ],
                            "properties": {
                              "activatedBy": {
                                "description": "User name who issued the activation.",
                                "type": "string"
                              },
                              "activationDate": {
                                "description": "Date of the activation in milliseconds.",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the policy.",
                                "type": "string"
                              },
                              "policyId": {
                                "description": "ID of the policy.",
                                "type": "integer"
                              },
                              "status": {
                                "description": "Value representing activation status.",
                                "type": "string",
                                "enum": [
                                  "INACTIVE",
                                  "PENDING",
                                  "ACTIVE",
                                  "FAILED",
                                  "DEACTIVATED"
                                ],
                                "x-akamai": {
                                  "file-path": "schemas/activation-status-enum.yaml"
                                }
                              },
                              "statusDetail": {
                                "description": "Details of the activation status.",
                                "type": "string"
                              },
                              "version": {
                                "description": "Version of the policy.",
                                "type": "integer"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/policy-activation-policy-info.yaml"
                            }
                          },
                          "propertyInfo": {
                            "additionalProperties": false,
                            "description": "Returns details of a property associated with policy activation.",
                            "type": "object",
                            "required": [
                              "name",
                              "version",
                              "groupId",
                              "status",
                              "activatedBy",
                              "activationDate",
                              "id"
                            ],
                            "properties": {
                              "activatedBy": {
                                "description": "User name who issued the activation.",
                                "type": "string"
                              },
                              "activationDate": {
                                "description": "Date of the activation in milliseconds.",
                                "type": "integer"
                              },
                              "groupId": {
                                "description": "Identifies the group where the property is placed.",
                                "type": "integer"
                              },
                              "id": {
                                "description": "ID of the property.",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the property.",
                                "type": "string"
                              },
                              "status": {
                                "description": "Value representing activation status.",
                                "type": "string",
                                "enum": [
                                  "INACTIVE",
                                  "PENDING",
                                  "ACTIVE",
                                  "FAILED",
                                  "DEACTIVATED"
                                ],
                                "x-akamai": {
                                  "file-path": "schemas/activation-status-enum.yaml"
                                }
                              },
                              "version": {
                                "description": "Version of the property.",
                                "type": "integer"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/policy-activation-property-info.yaml"
                            }
                          },
                          "serviceVersion": {
                            "description": "__Deprecated__ The build of the software running on the server. The value can be `null`.",
                            "nullable": true,
                            "type": "string",
                            "x-akamai": {
                              "status": "DEPRECATED"
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/policy-activation.yaml"
                        }
                      }
                    },
                    "createDate": {
                      "description": "Date of the policy version creation in milliseconds.",
                      "type": "integer"
                    },
                    "createdBy": {
                      "description": "User name who created the policy version.",
                      "type": "string"
                    },
                    "deleted": {
                      "description": "Flag determining whether the policy version is deleted or not.",
                      "type": "boolean"
                    },
                    "description": {
                      "description": "Description of the policy version.",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "User name who recently modified the policy version.",
                      "type": "string"
                    },
                    "lastModifiedDate": {
                      "description": "Date of the recent policy version modification in milliseconds.",
                      "type": "integer"
                    },
                    "location": {
                      "description": "The navigable endpoint used for the object referred to in the operation.",
                      "type": "string"
                    },
                    "matchRuleFormat": {
                      "description": "Match rule format.",
                      "type": "string"
                    },
                    "matchRules": {
                      "description": "A list of Cloudlet-specific match rules for this policy.",
                      "type": "array",
                      "items": {
                        "description": "Contains information about match rules.",
                        "x-akamai": {
                          "file-path": "schemas/match-rule.yaml"
                        },
                        "oneOf": [
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Application Load Balancer.",
                            "title": "Application Load Balancer",
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                "type": "object",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pathAndQS": {
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "useIncomingQueryString": {
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "nullable": true,
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use this for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "albMatchRule"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-alb.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for API Prioritization.",
                            "title": "API Prioritization",
                            "type": "object",
                            "required": [
                              "type",
                              "passThroughPercent"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "header",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use this for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "passThroughPercent": {
                                "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.",
                                "maximum": 100,
                                "minimum": -1,
                                "type": "number"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "apMatchRule"
                                ]
                              },
                              "useIncomingQueryString": {
                                "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                "type": "boolean"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-ap.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Audience Segmentation.",
                            "title": "Audience Segmentation",
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                "type": "object",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pathAndQS": {
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "useIncomingQueryString": {
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "range",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "asMatchRule"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-as.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Phased Release.",
                            "title": "Phased Release",
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                "type": "object",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pathAndQS": {
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "useIncomingQueryString": {
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "nullable": true,
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use this for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "cdMatchRule"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-cd.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Edge Redirector.",
                            "title": "Edge Redirector",
                            "type": "object",
                            "required": [
                              "type",
                              "redirectURL",
                              "statusCode"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "nullable": true,
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "redirectURL": {
                                "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "statusCode": {
                                "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.",
                                "type": "integer",
                                "enum": [
                                  301,
                                  302,
                                  303,
                                  307,
                                  308
                                ]
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "erMatchRule"
                                ]
                              },
                              "useIncomingQueryString": {
                                "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                "type": "boolean"
                              },
                              "useIncomingSchemeAndHost": {
                                "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.",
                                "type": "boolean"
                              },
                              "useRelativeUrl": {
                                "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.",
                                "type": "string",
                                "enum": [
                                  "none",
                                  "copy_scheme_hostname",
                                  "relative_url"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-er.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Forward Rewrite.",
                            "title": "Forward Rewrite",
                            "type": "object",
                            "required": [
                              "type",
                              "forwardSettings"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                "type": "object",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pathAndQS": {
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "useIncomingQueryString": {
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "frMatchRule"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-fr.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Request Control.",
                            "title": "Request Control",
                            "type": "object",
                            "required": [
                              "type",
                              "allowDeny"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "allowDeny": {
                                "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).",
                                "type": "string",
                                "enum": [
                                  "allow",
                                  "deny",
                                  "denybranded"
                                ]
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "clientip",
                                        "continent",
                                        "cookie",
                                        "countrycode",
                                        "deviceCharacteristics",
                                        "extension",
                                        "header",
                                        "hostname",
                                        "method",
                                        "path",
                                        "protocol",
                                        "proxy",
                                        "query",
                                        "regioncode"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. Specify the `range` as a percentage.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "igMatchRule"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-ig.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Visitor Prioritization.",
                            "title": "Visitor Prioritization",
                            "type": "object",
                            "required": [
                              "type",
                              "passThroughPercent"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "header",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "passThroughPercent": {
                                "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.",
                                "maximum": 100,
                                "minimum": -1,
                                "type": "number"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "vpMatchRule"
                                ]
                              },
                              "useIncomingQueryString": {
                                "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.",
                                "type": "boolean"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-vp.yaml"
                            }
                          }
                        ]
                      },
                      "x-akamai": {
                        "file-path": "schemas/match-rules.yaml"
                      }
                    },
                    "policyId": {
                      "description": "ID of the policy the version is associated to.",
                      "type": "integer"
                    },
                    "revisionId": {
                      "description": "ID of the revision.",
                      "type": "integer"
                    },
                    "rulesLocked": {
                      "description": "Flag determining whether the rules are locked or not.",
                      "type": "boolean"
                    },
                    "version": {
                      "description": "Version of the policy.",
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-policy-version-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Excludes the match rules from the results. Defaults to `false`.",
            "example": "{{omitRules}}",
            "in": "query",
            "name": "omitRules",
            "schema": {
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/omitRules-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Update attributes of an existing policy version.",
        "operationId": "put-policy-version",
        "summary": "Update a policy version",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/put-policy-version"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "description": "v1 for Q1 sales"
              },
              "schema": {
                "additionalProperties": false,
                "type": "object",
                "required": [
                  "description"
                ],
                "properties": {
                  "description": {
                    "description": "Description of the policy version.",
                    "example": "{{description}}",
                    "type": "string"
                  },
                  "matchRules": {
                    "description": "Cloudlet-specific match rules for this policy.",
                    "type": "array",
                    "items": {
                      "description": "Contains information about match rules.",
                      "x-akamai": {
                        "file-path": "schemas/match-rule.yaml"
                      },
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Application Load Balancer.",
                          "title": "Application Load Balancer",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "forwardSettings": {
                              "additionalProperties": false,
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                              "type": "object",
                              "properties": {
                                "originId": {
                                  "description": "The conditional origin's unique identifier.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "pathAndQS": {
                                  "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                  "maxLength": 8192,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                  "type": "boolean"
                                }
                              }
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "nullable": true,
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "title": "Object match value",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use this for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.",
                              "type": "string",
                              "enum": [
                                "albMatchRule"
                              ]
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-alb.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for API Prioritization.",
                          "title": "API Prioritization",
                          "type": "object",
                          "required": [
                            "type",
                            "passThroughPercent"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "header",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "title": "Object match value",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use this for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "passThroughPercent": {
                              "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.",
                              "maximum": 100,
                              "minimum": -1,
                              "type": "number"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.",
                              "type": "string",
                              "enum": [
                                "apMatchRule"
                              ]
                            },
                            "useIncomingQueryString": {
                              "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                              "type": "boolean"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-ap.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Audience Segmentation.",
                          "title": "Audience Segmentation",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "forwardSettings": {
                              "additionalProperties": false,
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                              "type": "object",
                              "properties": {
                                "originId": {
                                  "description": "The conditional origin's unique identifier.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "pathAndQS": {
                                  "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                  "maxLength": 8192,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                  "type": "boolean"
                                }
                              }
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "range",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "title": "Object match value",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.",
                              "type": "string",
                              "enum": [
                                "asMatchRule"
                              ]
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-as.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Phased Release.",
                          "title": "Phased Release",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "forwardSettings": {
                              "additionalProperties": false,
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                              "type": "object",
                              "properties": {
                                "originId": {
                                  "description": "The conditional origin's unique identifier.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "pathAndQS": {
                                  "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                  "maxLength": 8192,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                  "type": "boolean"
                                }
                              }
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "nullable": true,
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "title": "Object match value",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use this for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.",
                              "type": "string",
                              "enum": [
                                "cdMatchRule"
                              ]
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-cd.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Edge Redirector.",
                          "title": "Edge Redirector",
                          "type": "object",
                          "required": [
                            "type",
                            "redirectURL",
                            "statusCode"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "nullable": true,
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "title": "Object match value",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "redirectURL": {
                              "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "statusCode": {
                              "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.",
                              "type": "integer",
                              "enum": [
                                301,
                                302,
                                303,
                                307,
                                308
                              ]
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.",
                              "type": "string",
                              "enum": [
                                "erMatchRule"
                              ]
                            },
                            "useIncomingQueryString": {
                              "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                              "type": "boolean"
                            },
                            "useIncomingSchemeAndHost": {
                              "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.",
                              "type": "boolean"
                            },
                            "useRelativeUrl": {
                              "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.",
                              "type": "string",
                              "enum": [
                                "none",
                                "copy_scheme_hostname",
                                "relative_url"
                              ]
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-er.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Forward Rewrite.",
                          "title": "Forward Rewrite",
                          "type": "object",
                          "required": [
                            "type",
                            "forwardSettings"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "forwardSettings": {
                              "additionalProperties": false,
                              "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                              "type": "object",
                              "properties": {
                                "originId": {
                                  "description": "The conditional origin's unique identifier.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "pathAndQS": {
                                  "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                  "maxLength": 8192,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                  "type": "boolean"
                                }
                              }
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "header",
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "regex",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "title": "Object match value",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.",
                              "type": "string",
                              "enum": [
                                "frMatchRule"
                              ]
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-fr.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Request Control.",
                          "title": "Request Control",
                          "type": "object",
                          "required": [
                            "type",
                            "allowDeny"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "allowDeny": {
                              "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).",
                              "type": "string",
                              "enum": [
                                "allow",
                                "deny",
                                "denybranded"
                              ]
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "clientip",
                                      "continent",
                                      "cookie",
                                      "countrycode",
                                      "deviceCharacteristics",
                                      "extension",
                                      "header",
                                      "hostname",
                                      "method",
                                      "path",
                                      "protocol",
                                      "proxy",
                                      "query",
                                      "regioncode"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "title": "Object match value",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. Specify the `range` as a percentage.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.",
                              "type": "string",
                              "enum": [
                                "igMatchRule"
                              ]
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-ig.yaml"
                          }
                        },
                        {
                          "additionalProperties": false,
                          "description": "Contains match rule information for Visitor Prioritization.",
                          "title": "Visitor Prioritization",
                          "type": "object",
                          "required": [
                            "type",
                            "passThroughPercent"
                          ],
                          "properties": {
                            "akaRuleId": {
                              "description": "The rule's unique identifier.",
                              "type": "string"
                            },
                            "disabled": {
                              "default": false,
                              "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                              "type": "boolean"
                            },
                            "end": {
                              "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "id": {
                              "description": "__Internal__ Akamai internal use only.",
                              "nullable": true,
                              "type": "integer",
                              "x-akamai": {
                                "status": "INTERNAL"
                              }
                            },
                            "matchURL": {
                              "description": "The URL the Cloudlet uses to match the incoming request.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "matches": {
                              "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "The match rule criteria.",
                                "type": "object",
                                "properties": {
                                  "caseSensitive": {
                                    "description": "If `true`, the match is case sensitive.",
                                    "type": "boolean"
                                  },
                                  "checkIPs": {
                                    "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                    "type": "string",
                                    "enum": [
                                      "CONNECTING_IP",
                                      "XFF_HEADERS",
                                      "CONNECTING_IP XFF_HEADERS"
                                    ]
                                  },
                                  "matchOperator": {
                                    "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                    "type": "string",
                                    "enum": [
                                      "contains",
                                      "exists",
                                      "equals"
                                    ]
                                  },
                                  "matchType": {
                                    "description": "The type of match used.",
                                    "type": "string",
                                    "enum": [
                                      "hostname",
                                      "path",
                                      "extension",
                                      "query",
                                      "cookie",
                                      "deviceCharacteristics",
                                      "clientip",
                                      "continent",
                                      "countrycode",
                                      "regioncode",
                                      "protocol",
                                      "header",
                                      "method",
                                      "proxy"
                                    ]
                                  },
                                  "matchValue": {
                                    "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "negate": {
                                    "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                    "type": "boolean"
                                  },
                                  "objectMatchValue": {
                                    "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                    "title": "Object match value",
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "additionalProperties": false,
                                        "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                        "title": "Range",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `range`.",
                                            "type": "string",
                                            "enum": [
                                              "range"
                                            ]
                                          },
                                          "value": {
                                            "description": "An inclusive range comprised of two numbers to match on.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `simple` array option when adding an array of string-based values.",
                                        "title": "Simple",
                                        "type": "object",
                                        "required": [
                                          "type",
                                          "value"
                                        ],
                                        "properties": {
                                          "type": {
                                            "description": "The object type, which is `simple`.",
                                            "type": "string",
                                            "enum": [
                                              "simple"
                                            ]
                                          },
                                          "value": {
                                            "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                            "nullable": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "additionalProperties": false,
                                        "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                        "title": "Object",
                                        "type": "object",
                                        "required": [
                                          "name",
                                          "type"
                                        ],
                                        "properties": {
                                          "options": {
                                            "additionalProperties": false,
                                            "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                            "type": "object",
                                            "properties": {
                                              "value": {
                                                "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "valueCaseSensitive": {
                                                "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                "type": "boolean"
                                              },
                                              "valueEscaped": {
                                                "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                "type": "boolean"
                                              },
                                              "valueHasWildcard": {
                                                "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "name": {
                                            "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                            "maxLength": 8192,
                                            "minLength": 1,
                                            "type": "string"
                                          },
                                          "nameCaseSensitive": {
                                            "description": "When set to `true`, the `name` match is case-sensitive.",
                                            "type": "boolean"
                                          },
                                          "nameHasWildcard": {
                                            "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                            "type": "boolean"
                                          },
                                          "type": {
                                            "description": "The array type, which is `object`.",
                                            "type": "string",
                                            "enum": [
                                              "object"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "oneOf": [
                                  {
                                    "required": [
                                      "matchType",
                                      "matchValue"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "matchType",
                                      "objectMatchValue"
                                    ]
                                  }
                                ]
                              }
                            },
                            "matchesAlways": {
                              "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                              "type": "boolean"
                            },
                            "name": {
                              "description": "The name of the rule.",
                              "maxLength": 8192,
                              "nullable": true,
                              "type": "string"
                            },
                            "passThroughPercent": {
                              "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.",
                              "maximum": 100,
                              "minimum": -1,
                              "type": "number"
                            },
                            "start": {
                              "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                              "minimum": 0,
                              "type": "integer"
                            },
                            "type": {
                              "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.",
                              "type": "string",
                              "enum": [
                                "vpMatchRule"
                              ]
                            },
                            "useIncomingQueryString": {
                              "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.",
                              "type": "boolean"
                            }
                          },
                          "x-akamai": {
                            "file-path": "schemas/match-rule-vp.yaml"
                          }
                        }
                      ]
                    },
                    "x-akamai": {
                      "file-path": "schemas/match-rules.yaml"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/put-policy-version-request.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns details of a policy version.",
            "content": {
              "application/json": {
                "example": {
                  "createDate": 1427133784903,
                  "createdBy": "tyamada",
                  "deleted": true,
                  "description": "v1 for Q1 sales",
                  "lastModifiedBy": "tyamada",
                  "lastModifiedDate": 1427133805767,
                  "policyId": 1001,
                  "revisionId": 11870,
                  "rulesLocked": false,
                  "version": 1,
                  "activations": [],
                  "matchRules": []
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "TBD.",
                  "type": "object",
                  "required": [
                    "activations",
                    "createdBy",
                    "createDate",
                    "deleted",
                    "description",
                    "lastModifiedBy",
                    "lastModifiedDate",
                    "location",
                    "matchRuleFormat",
                    "matchRules",
                    "policyId",
                    "revisionId",
                    "rulesLocked",
                    "version"
                  ],
                  "properties": {
                    "activations": {
                      "description": "List of activations related to the policy version.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Returns details of a policy activation.",
                        "type": "object",
                        "required": [
                          "network",
                          "policyInfo",
                          "propertyInfo"
                        ],
                        "properties": {
                          "apiVersion": {
                            "description": "The specific version of this API.",
                            "type": "string"
                          },
                          "network": {
                            "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.",
                            "type": "string",
                            "enum": [
                              "prod",
                              "staging"
                            ]
                          },
                          "policyInfo": {
                            "additionalProperties": false,
                            "description": "Returns details of a policy associated with policy activation.",
                            "type": "object",
                            "required": [
                              "policyId",
                              "name",
                              "version",
                              "status",
                              "statusDetail",
                              "activatedBy",
                              "activationDate"
                            ],
                            "properties": {
                              "activatedBy": {
                                "description": "User name who issued the activation.",
                                "type": "string"
                              },
                              "activationDate": {
                                "description": "Date of the activation in milliseconds.",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the policy.",
                                "type": "string"
                              },
                              "policyId": {
                                "description": "ID of the policy.",
                                "type": "integer"
                              },
                              "status": {
                                "description": "Value representing activation status.",
                                "type": "string",
                                "enum": [
                                  "INACTIVE",
                                  "PENDING",
                                  "ACTIVE",
                                  "FAILED",
                                  "DEACTIVATED"
                                ],
                                "x-akamai": {
                                  "file-path": "schemas/activation-status-enum.yaml"
                                }
                              },
                              "statusDetail": {
                                "description": "Details of the activation status.",
                                "type": "string"
                              },
                              "version": {
                                "description": "Version of the policy.",
                                "type": "integer"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/policy-activation-policy-info.yaml"
                            }
                          },
                          "propertyInfo": {
                            "additionalProperties": false,
                            "description": "Returns details of a property associated with policy activation.",
                            "type": "object",
                            "required": [
                              "name",
                              "version",
                              "groupId",
                              "status",
                              "activatedBy",
                              "activationDate",
                              "id"
                            ],
                            "properties": {
                              "activatedBy": {
                                "description": "User name who issued the activation.",
                                "type": "string"
                              },
                              "activationDate": {
                                "description": "Date of the activation in milliseconds.",
                                "type": "integer"
                              },
                              "groupId": {
                                "description": "Identifies the group where the property is placed.",
                                "type": "integer"
                              },
                              "id": {
                                "description": "ID of the property.",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the property.",
                                "type": "string"
                              },
                              "status": {
                                "description": "Value representing activation status.",
                                "type": "string",
                                "enum": [
                                  "INACTIVE",
                                  "PENDING",
                                  "ACTIVE",
                                  "FAILED",
                                  "DEACTIVATED"
                                ],
                                "x-akamai": {
                                  "file-path": "schemas/activation-status-enum.yaml"
                                }
                              },
                              "version": {
                                "description": "Version of the property.",
                                "type": "integer"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/policy-activation-property-info.yaml"
                            }
                          },
                          "serviceVersion": {
                            "description": "__Deprecated__ The build of the software running on the server. The value can be `null`.",
                            "nullable": true,
                            "type": "string",
                            "x-akamai": {
                              "status": "DEPRECATED"
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/policy-activation.yaml"
                        }
                      }
                    },
                    "createDate": {
                      "description": "Date of the policy version creation in milliseconds.",
                      "type": "integer"
                    },
                    "createdBy": {
                      "description": "User name who created the policy version.",
                      "type": "string"
                    },
                    "deleted": {
                      "description": "Flag determining whether the policy version is deleted or not.",
                      "type": "boolean"
                    },
                    "description": {
                      "description": "Description of the policy version.",
                      "type": "string"
                    },
                    "lastModifiedBy": {
                      "description": "User name who recently modified the policy version.",
                      "type": "string"
                    },
                    "lastModifiedDate": {
                      "description": "Date of the recent policy version modification in milliseconds.",
                      "type": "integer"
                    },
                    "location": {
                      "description": "The navigable endpoint used for the object referred to in the operation.",
                      "type": "string"
                    },
                    "matchRuleFormat": {
                      "description": "Match rule format.",
                      "type": "string"
                    },
                    "matchRules": {
                      "description": "A list of Cloudlet-specific match rules for this policy.",
                      "type": "array",
                      "items": {
                        "description": "Contains information about match rules.",
                        "x-akamai": {
                          "file-path": "schemas/match-rule.yaml"
                        },
                        "oneOf": [
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Application Load Balancer.",
                            "title": "Application Load Balancer",
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                "type": "object",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pathAndQS": {
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "useIncomingQueryString": {
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "nullable": true,
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use this for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "albMatchRule"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-alb.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for API Prioritization.",
                            "title": "API Prioritization",
                            "type": "object",
                            "required": [
                              "type",
                              "passThroughPercent"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "header",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use this for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "passThroughPercent": {
                                "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.",
                                "maximum": 100,
                                "minimum": -1,
                                "type": "number"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "apMatchRule"
                                ]
                              },
                              "useIncomingQueryString": {
                                "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                "type": "boolean"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-ap.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Audience Segmentation.",
                            "title": "Audience Segmentation",
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                "type": "object",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pathAndQS": {
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "useIncomingQueryString": {
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "range",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "asMatchRule"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-as.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Phased Release.",
                            "title": "Phased Release",
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                "type": "object",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pathAndQS": {
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "useIncomingQueryString": {
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "nullable": true,
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use this for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "cdMatchRule"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-cd.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Edge Redirector.",
                            "title": "Edge Redirector",
                            "type": "object",
                            "required": [
                              "type",
                              "redirectURL",
                              "statusCode"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "nullable": true,
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "redirectURL": {
                                "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.",
                                "maxLength": 8192,
                                "minLength": 1,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "statusCode": {
                                "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.",
                                "type": "integer",
                                "enum": [
                                  301,
                                  302,
                                  303,
                                  307,
                                  308
                                ]
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "erMatchRule"
                                ]
                              },
                              "useIncomingQueryString": {
                                "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                "type": "boolean"
                              },
                              "useIncomingSchemeAndHost": {
                                "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.",
                                "type": "boolean"
                              },
                              "useRelativeUrl": {
                                "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.",
                                "type": "string",
                                "enum": [
                                  "none",
                                  "copy_scheme_hostname",
                                  "relative_url"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-er.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Forward Rewrite.",
                            "title": "Forward Rewrite",
                            "type": "object",
                            "required": [
                              "type",
                              "forwardSettings"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "forwardSettings": {
                                "additionalProperties": false,
                                "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                "type": "object",
                                "properties": {
                                  "originId": {
                                    "description": "The conditional origin's unique identifier.",
                                    "maxLength": 8192,
                                    "nullable": true,
                                    "type": "string"
                                  },
                                  "pathAndQS": {
                                    "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                    "maxLength": 8192,
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "useIncomingQueryString": {
                                    "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "header",
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "regex",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "frMatchRule"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-fr.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Request Control.",
                            "title": "Request Control",
                            "type": "object",
                            "required": [
                              "type",
                              "allowDeny"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "allowDeny": {
                                "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).",
                                "type": "string",
                                "enum": [
                                  "allow",
                                  "deny",
                                  "denybranded"
                                ]
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "clientip",
                                        "continent",
                                        "cookie",
                                        "countrycode",
                                        "deviceCharacteristics",
                                        "extension",
                                        "header",
                                        "hostname",
                                        "method",
                                        "path",
                                        "protocol",
                                        "proxy",
                                        "query",
                                        "regioncode"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. Specify the `range` as a percentage.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "igMatchRule"
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-ig.yaml"
                            }
                          },
                          {
                            "additionalProperties": false,
                            "description": "Contains match rule information for Visitor Prioritization.",
                            "title": "Visitor Prioritization",
                            "type": "object",
                            "required": [
                              "type",
                              "passThroughPercent"
                            ],
                            "properties": {
                              "akaRuleId": {
                                "description": "The rule's unique identifier.",
                                "type": "string"
                              },
                              "disabled": {
                                "default": false,
                                "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                "type": "boolean"
                              },
                              "end": {
                                "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "id": {
                                "description": "__Internal__ Akamai internal use only.",
                                "nullable": true,
                                "type": "integer",
                                "x-akamai": {
                                  "status": "INTERNAL"
                                }
                              },
                              "matchURL": {
                                "description": "The URL the Cloudlet uses to match the incoming request.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "matches": {
                                "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                "nullable": true,
                                "type": "array",
                                "items": {
                                  "additionalProperties": false,
                                  "description": "The match rule criteria.",
                                  "type": "object",
                                  "properties": {
                                    "caseSensitive": {
                                      "description": "If `true`, the match is case sensitive.",
                                      "type": "boolean"
                                    },
                                    "checkIPs": {
                                      "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                      "type": "string",
                                      "enum": [
                                        "CONNECTING_IP",
                                        "XFF_HEADERS",
                                        "CONNECTING_IP XFF_HEADERS"
                                      ]
                                    },
                                    "matchOperator": {
                                      "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                      "type": "string",
                                      "enum": [
                                        "contains",
                                        "exists",
                                        "equals"
                                      ]
                                    },
                                    "matchType": {
                                      "description": "The type of match used.",
                                      "type": "string",
                                      "enum": [
                                        "hostname",
                                        "path",
                                        "extension",
                                        "query",
                                        "cookie",
                                        "deviceCharacteristics",
                                        "clientip",
                                        "continent",
                                        "countrycode",
                                        "regioncode",
                                        "protocol",
                                        "header",
                                        "method",
                                        "proxy"
                                      ]
                                    },
                                    "matchValue": {
                                      "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "negate": {
                                      "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                      "type": "boolean"
                                    },
                                    "objectMatchValue": {
                                      "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                      "title": "Object match value",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "additionalProperties": false,
                                          "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                          "title": "Range",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `range`.",
                                              "type": "string",
                                              "enum": [
                                                "range"
                                              ]
                                            },
                                            "value": {
                                              "description": "An inclusive range comprised of two numbers to match on.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "integer"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `simple` array option when adding an array of string-based values.",
                                          "title": "Simple",
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "value"
                                          ],
                                          "properties": {
                                            "type": {
                                              "description": "The object type, which is `simple`.",
                                              "type": "string",
                                              "enum": [
                                                "simple"
                                              ]
                                            },
                                            "value": {
                                              "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                              "nullable": true,
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "additionalProperties": false,
                                          "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                          "title": "Object",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "type"
                                          ],
                                          "properties": {
                                            "options": {
                                              "additionalProperties": false,
                                              "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                              "type": "object",
                                              "properties": {
                                                "value": {
                                                  "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                  "nullable": true,
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "valueCaseSensitive": {
                                                  "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                  "type": "boolean"
                                                },
                                                "valueEscaped": {
                                                  "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                  "type": "boolean"
                                                },
                                                "valueHasWildcard": {
                                                  "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "name": {
                                              "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                              "maxLength": 8192,
                                              "minLength": 1,
                                              "type": "string"
                                            },
                                            "nameCaseSensitive": {
                                              "description": "When set to `true`, the `name` match is case-sensitive.",
                                              "type": "boolean"
                                            },
                                            "nameHasWildcard": {
                                              "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                              "type": "boolean"
                                            },
                                            "type": {
                                              "description": "The array type, which is `object`.",
                                              "type": "string",
                                              "enum": [
                                                "object"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "oneOf": [
                                    {
                                      "required": [
                                        "matchType",
                                        "matchValue"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "matchType",
                                        "objectMatchValue"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "matchesAlways": {
                                "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "The name of the rule.",
                                "maxLength": 8192,
                                "nullable": true,
                                "type": "string"
                              },
                              "passThroughPercent": {
                                "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.",
                                "maximum": 100,
                                "minimum": -1,
                                "type": "number"
                              },
                              "start": {
                                "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                "minimum": 0,
                                "type": "integer"
                              },
                              "type": {
                                "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.",
                                "type": "string",
                                "enum": [
                                  "vpMatchRule"
                                ]
                              },
                              "useIncomingQueryString": {
                                "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.",
                                "type": "boolean"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/match-rule-vp.yaml"
                            }
                          }
                        ]
                      },
                      "x-akamai": {
                        "file-path": "schemas/match-rules.yaml"
                      }
                    },
                    "policyId": {
                      "description": "ID of the policy the version is associated to.",
                      "type": "integer"
                    },
                    "revisionId": {
                      "description": "ID of the revision.",
                      "type": "integer"
                    },
                    "rulesLocked": {
                      "description": "Flag determining whether the rules are locked or not.",
                      "type": "boolean"
                    },
                    "version": {
                      "description": "Version of the policy.",
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/put-policy-version-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "You have the option of removing policy versions, including those that are currently active on either the staging or production network.",
        "operationId": "delete-policy-version",
        "summary": "Remove a policy version",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/delete-policy-version"
        },
        "responses": {
          "204": {
            "description": "The policy version is deleted.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "The version number of the policy.",
          "example": "{{version}}",
          "in": "path",
          "name": "version",
          "required": true,
          "schema": {
            "type": "number"
          },
          "x-akamai": {
            "file-path": "parameters/version-path.yaml"
          }
        },
        {
          "description": "The ID of the policy.",
          "example": "{{policyId}}",
          "in": "path",
          "name": "policyId",
          "required": true,
          "schema": {
            "type": "number"
          },
          "x-akamai": {
            "file-path": "parameters/policyId-path.yaml"
          }
        }
      ]
    },
    "/policies/{policyId}/versions/{version}/activations": {
      "post": {
        "description": "Activate the selected cloudlet policy version.  After activation completes, the Cloudlets policy is ready for use.",
        "operationId": "post-policy-version-activations",
        "summary": "Activate a policy version",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/post-policy-version-activations"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "network": "staging",
                "additionalPropertyNames": [
                  "Ion-Premier-Demo-Property"
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "TBD.",
                "type": "object",
                "properties": {
                  "additionalPropertyNames": {
                    "description": "An array of one or more additional properties that you want to activate with the Cloudlet policy. Once activated, the property and policy are permanently linked.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "network": {
                    "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.",
                    "example": "{{network}}",
                    "type": "string",
                    "enum": [
                      "prod",
                      "staging"
                    ]
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/post-policy-version-activations-request.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the activation history for the policy.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "TBD.",
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Returns details of a policy activation.",
                    "type": "object",
                    "required": [
                      "network",
                      "policyInfo",
                      "propertyInfo"
                    ],
                    "properties": {
                      "apiVersion": {
                        "description": "The specific version of this API.",
                        "type": "string"
                      },
                      "network": {
                        "description": "The network, either `STAGING`, `PRODUCTION`, or `prod` as shorthand, on which a load balancing configuration for Application Load Balancer has been activated. Values are case-insensitive in requests.",
                        "type": "string",
                        "enum": [
                          "prod",
                          "staging"
                        ]
                      },
                      "policyInfo": {
                        "additionalProperties": false,
                        "description": "Returns details of a policy associated with policy activation.",
                        "type": "object",
                        "required": [
                          "policyId",
                          "name",
                          "version",
                          "status",
                          "statusDetail",
                          "activatedBy",
                          "activationDate"
                        ],
                        "properties": {
                          "activatedBy": {
                            "description": "User name who issued the activation.",
                            "type": "string"
                          },
                          "activationDate": {
                            "description": "Date of the activation in milliseconds.",
                            "type": "integer"
                          },
                          "name": {
                            "description": "Name of the policy.",
                            "type": "string"
                          },
                          "policyId": {
                            "description": "ID of the policy.",
                            "type": "integer"
                          },
                          "status": {
                            "description": "Value representing activation status.",
                            "type": "string",
                            "enum": [
                              "INACTIVE",
                              "PENDING",
                              "ACTIVE",
                              "FAILED",
                              "DEACTIVATED"
                            ],
                            "x-akamai": {
                              "file-path": "schemas/activation-status-enum.yaml"
                            }
                          },
                          "statusDetail": {
                            "description": "Details of the activation status.",
                            "type": "string"
                          },
                          "version": {
                            "description": "Version of the policy.",
                            "type": "integer"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/policy-activation-policy-info.yaml"
                        }
                      },
                      "propertyInfo": {
                        "additionalProperties": false,
                        "description": "Returns details of a property associated with policy activation.",
                        "type": "object",
                        "required": [
                          "name",
                          "version",
                          "groupId",
                          "status",
                          "activatedBy",
                          "activationDate",
                          "id"
                        ],
                        "properties": {
                          "activatedBy": {
                            "description": "User name who issued the activation.",
                            "type": "string"
                          },
                          "activationDate": {
                            "description": "Date of the activation in milliseconds.",
                            "type": "integer"
                          },
                          "groupId": {
                            "description": "Identifies the group where the property is placed.",
                            "type": "integer"
                          },
                          "id": {
                            "description": "ID of the property.",
                            "type": "integer"
                          },
                          "name": {
                            "description": "Name of the property.",
                            "type": "string"
                          },
                          "status": {
                            "description": "Value representing activation status.",
                            "type": "string",
                            "enum": [
                              "INACTIVE",
                              "PENDING",
                              "ACTIVE",
                              "FAILED",
                              "DEACTIVATED"
                            ],
                            "x-akamai": {
                              "file-path": "schemas/activation-status-enum.yaml"
                            }
                          },
                          "version": {
                            "description": "Version of the property.",
                            "type": "integer"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/policy-activation-property-info.yaml"
                        }
                      },
                      "serviceVersion": {
                        "description": "__Deprecated__ The build of the software running on the server. The value can be `null`.",
                        "nullable": true,
                        "type": "string",
                        "x-akamai": {
                          "status": "DEPRECATED"
                        }
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/policy-activation.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/post-policy-version-activations-response.yaml"
                  }
                },
                "example": [
                  {
                    "apiVersion": "2.0",
                    "network": "staging",
                    "serviceVersion": null,
                    "policyInfo": {
                      "activatedBy": "jsmith",
                      "activationDate": 1427428800000,
                      "detailCode": 4000,
                      "name": "RequestControlPolicy",
                      "policyId": 2962,
                      "status": "ACTIVE",
                      "statusDetail": "File successfully deployed to Akamai's network",
                      "version": 1
                    },
                    "propertyInfo": {
                      "activatedBy": null,
                      "activationDate": 0,
                      "groupId": 40498,
                      "name": "www.rc-cloudlet.com",
                      "status": "INACTIVE",
                      "version": 0
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "The version number of the policy.",
          "example": "{{version}}",
          "in": "path",
          "name": "version",
          "required": true,
          "schema": {
            "type": "number"
          },
          "x-akamai": {
            "file-path": "parameters/version-path.yaml"
          }
        },
        {
          "description": "The ID of the policy.",
          "example": "{{policyId}}",
          "in": "path",
          "name": "policyId",
          "required": true,
          "schema": {
            "type": "number"
          },
          "x-akamai": {
            "file-path": "parameters/policyId-path.yaml"
          }
        },
        {
          "description": "Set `async` to `true` for policy activations on multiple properties to reduce API response time and let the policy activation continue asynchronously in the background. Default is `false`.",
          "example": "{{async}}",
          "in": "query",
          "name": "async",
          "schema": {
            "default": false,
            "example": true,
            "type": "boolean"
          },
          "x-akamai": {
            "file-path": "parameters/async-query.yaml"
          }
        }
      ]
    },
    "/policies/{policyId}/versions/{version}/rules": {
      "post": {
        "description": "Add a new rule to an existing policy version. You can only add one rule at a time.",
        "operationId": "post-policy-version-rules",
        "summary": "Add a version rule",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/post-policy-version-rules"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "disabled": "false",
                "end": 0,
                "id": null,
                "name": "Q1Sales",
                "start": 0,
                "type": "asMatchRule",
                "forwardSettings": {
                  "originId": "originremote2",
                  "pathAndQS": "/sales/Q1/",
                  "useIncomingQueryString": true
                },
                "matches": [
                  {
                    "caseSensitive": false,
                    "matchOperator": "equals",
                    "matchType": "range",
                    "negate": false,
                    "objectMatchValue": {
                      "type": "range",
                      "value": [
                        1,
                        25
                      ]
                    }
                  }
                ]
              },
              "schema": {
                "description": "Contains information that you need to provide to add match rule to policy version.",
                "x-akamai": {
                  "file-path": "schemas/policy-version-match-rule-create-request.yaml"
                },
                "oneOf": [
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Application Load Balancer.",
                    "title": "Application Load Balancer",
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "akaRuleId": {
                        "description": "The rule's unique identifier.",
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                        "type": "boolean"
                      },
                      "end": {
                        "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "forwardSettings": {
                        "additionalProperties": false,
                        "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                        "type": "object",
                        "properties": {
                          "originId": {
                            "description": "The conditional origin's unique identifier.",
                            "maxLength": 8192,
                            "nullable": true,
                            "type": "string"
                          },
                          "pathAndQS": {
                            "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "useIncomingQueryString": {
                            "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                            "type": "boolean"
                          }
                        }
                      },
                      "id": {
                        "description": "__Internal__ Akamai internal use only.",
                        "nullable": true,
                        "type": "integer",
                        "x-akamai": {
                          "status": "INTERNAL"
                        }
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                        "nullable": true,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.",
                          "type": "object",
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                              "nullable": true,
                              "type": "string",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ]
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                              "type": "string",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ]
                            },
                            "matchType": {
                              "description": "The type of match used.",
                              "type": "string",
                              "enum": [
                                "header",
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "regex",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "method",
                                "proxy"
                              ]
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                              "title": "Object match value",
                              "type": "object",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                  "title": "Range",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `range`.",
                                      "type": "string",
                                      "enum": [
                                        "range"
                                      ]
                                    },
                                    "value": {
                                      "description": "An inclusive range comprised of two numbers to match on.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "integer"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.",
                                  "title": "Simple",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.",
                                      "type": "string",
                                      "enum": [
                                        "simple"
                                      ]
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use this for more complex match criteria.",
                                  "title": "Object",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "properties": {
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                          "nullable": true,
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.",
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                      "type": "boolean"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.",
                                      "type": "string",
                                      "enum": [
                                        "object"
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ]
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ]
                            }
                          ]
                        }
                      },
                      "matchesAlways": {
                        "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the rule.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "start": {
                        "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.",
                        "type": "string",
                        "enum": [
                          "albMatchRule"
                        ]
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/match-rule-alb.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for API Prioritization.",
                    "title": "API Prioritization",
                    "type": "object",
                    "required": [
                      "type",
                      "passThroughPercent"
                    ],
                    "properties": {
                      "akaRuleId": {
                        "description": "The rule's unique identifier.",
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                        "type": "boolean"
                      },
                      "end": {
                        "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "id": {
                        "description": "__Internal__ Akamai internal use only.",
                        "nullable": true,
                        "type": "integer",
                        "x-akamai": {
                          "status": "INTERNAL"
                        }
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                        "nullable": true,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.",
                          "type": "object",
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                              "type": "string",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ]
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                              "type": "string",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ]
                            },
                            "matchType": {
                              "description": "The type of match used.",
                              "type": "string",
                              "enum": [
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "header",
                                "method",
                                "proxy"
                              ]
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                              "title": "Object match value",
                              "type": "object",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                  "title": "Range",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `range`.",
                                      "type": "string",
                                      "enum": [
                                        "range"
                                      ]
                                    },
                                    "value": {
                                      "description": "An inclusive range comprised of two numbers to match on.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "integer"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.",
                                  "title": "Simple",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.",
                                      "type": "string",
                                      "enum": [
                                        "simple"
                                      ]
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use this for more complex match criteria.",
                                  "title": "Object",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "properties": {
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                          "nullable": true,
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.",
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                      "type": "boolean"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.",
                                      "type": "string",
                                      "enum": [
                                        "object"
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ]
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ]
                            }
                          ]
                        }
                      },
                      "matchesAlways": {
                        "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the rule.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "passThroughPercent": {
                        "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.",
                        "maximum": 100,
                        "minimum": -1,
                        "type": "number"
                      },
                      "start": {
                        "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.",
                        "type": "string",
                        "enum": [
                          "apMatchRule"
                        ]
                      },
                      "useIncomingQueryString": {
                        "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                        "type": "boolean"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/match-rule-ap.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Audience Segmentation.",
                    "title": "Audience Segmentation",
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "akaRuleId": {
                        "description": "The rule's unique identifier.",
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                        "type": "boolean"
                      },
                      "end": {
                        "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "forwardSettings": {
                        "additionalProperties": false,
                        "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                        "type": "object",
                        "properties": {
                          "originId": {
                            "description": "The conditional origin's unique identifier.",
                            "maxLength": 8192,
                            "nullable": true,
                            "type": "string"
                          },
                          "pathAndQS": {
                            "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "useIncomingQueryString": {
                            "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                            "type": "boolean"
                          }
                        }
                      },
                      "id": {
                        "description": "__Internal__ Akamai internal use only.",
                        "nullable": true,
                        "type": "integer",
                        "x-akamai": {
                          "status": "INTERNAL"
                        }
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                        "nullable": true,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.",
                          "type": "object",
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                              "type": "string",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ]
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                              "type": "string",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ]
                            },
                            "matchType": {
                              "description": "The type of match used.",
                              "type": "string",
                              "enum": [
                                "header",
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "range",
                                "regex",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "method",
                                "proxy"
                              ]
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                              "title": "Object match value",
                              "type": "object",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                  "title": "Range",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `range`.",
                                      "type": "string",
                                      "enum": [
                                        "range"
                                      ]
                                    },
                                    "value": {
                                      "description": "An inclusive range comprised of two numbers to match on.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "integer"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.",
                                  "title": "Simple",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.",
                                      "type": "string",
                                      "enum": [
                                        "simple"
                                      ]
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                  "title": "Object",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "properties": {
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                          "nullable": true,
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.",
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                      "type": "boolean"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.",
                                      "type": "string",
                                      "enum": [
                                        "object"
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ]
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ]
                            }
                          ]
                        }
                      },
                      "matchesAlways": {
                        "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the rule.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "start": {
                        "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.",
                        "type": "string",
                        "enum": [
                          "asMatchRule"
                        ]
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/match-rule-as.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Phased Release.",
                    "title": "Phased Release",
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "akaRuleId": {
                        "description": "The rule's unique identifier.",
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                        "type": "boolean"
                      },
                      "end": {
                        "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "forwardSettings": {
                        "additionalProperties": false,
                        "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                        "type": "object",
                        "properties": {
                          "originId": {
                            "description": "The conditional origin's unique identifier.",
                            "maxLength": 8192,
                            "nullable": true,
                            "type": "string"
                          },
                          "pathAndQS": {
                            "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "useIncomingQueryString": {
                            "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                            "type": "boolean"
                          }
                        }
                      },
                      "id": {
                        "description": "__Internal__ Akamai internal use only.",
                        "nullable": true,
                        "type": "integer",
                        "x-akamai": {
                          "status": "INTERNAL"
                        }
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                        "nullable": true,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.",
                          "type": "object",
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                              "nullable": true,
                              "type": "string",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ]
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                              "type": "string",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ]
                            },
                            "matchType": {
                              "description": "The type of match used.",
                              "type": "string",
                              "enum": [
                                "header",
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "method",
                                "proxy"
                              ]
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                              "title": "Object match value",
                              "type": "object",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                  "title": "Range",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `range`.",
                                      "type": "string",
                                      "enum": [
                                        "range"
                                      ]
                                    },
                                    "value": {
                                      "description": "An inclusive range comprised of two numbers to match on.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "integer"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.",
                                  "title": "Simple",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.",
                                      "type": "string",
                                      "enum": [
                                        "simple"
                                      ]
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use this for more complex match criteria.",
                                  "title": "Object",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "properties": {
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                          "nullable": true,
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.",
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                      "type": "boolean"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.",
                                      "type": "string",
                                      "enum": [
                                        "object"
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ]
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ]
                            }
                          ]
                        }
                      },
                      "matchesAlways": {
                        "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the rule.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "start": {
                        "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.",
                        "type": "string",
                        "enum": [
                          "cdMatchRule"
                        ]
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/match-rule-cd.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Edge Redirector.",
                    "title": "Edge Redirector",
                    "type": "object",
                    "required": [
                      "type",
                      "redirectURL",
                      "statusCode"
                    ],
                    "properties": {
                      "akaRuleId": {
                        "description": "The rule's unique identifier.",
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                        "type": "boolean"
                      },
                      "end": {
                        "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "id": {
                        "description": "__Internal__ Akamai internal use only.",
                        "nullable": true,
                        "type": "integer",
                        "x-akamai": {
                          "status": "INTERNAL"
                        }
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                        "nullable": true,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.",
                          "type": "object",
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                              "nullable": true,
                              "type": "string",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ]
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                              "type": "string",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ]
                            },
                            "matchType": {
                              "description": "The type of match used.",
                              "type": "string",
                              "enum": [
                                "header",
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "regex",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "method",
                                "proxy"
                              ]
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                              "title": "Object match value",
                              "type": "object",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                  "title": "Range",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `range`.",
                                      "type": "string",
                                      "enum": [
                                        "range"
                                      ]
                                    },
                                    "value": {
                                      "description": "An inclusive range comprised of two numbers to match on.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "integer"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.",
                                  "title": "Simple",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.",
                                      "type": "string",
                                      "enum": [
                                        "simple"
                                      ]
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                  "title": "Object",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "properties": {
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                          "nullable": true,
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.",
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                      "type": "boolean"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.",
                                      "type": "string",
                                      "enum": [
                                        "object"
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ]
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ]
                            }
                          ]
                        }
                      },
                      "matchesAlways": {
                        "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the rule.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "redirectURL": {
                        "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.",
                        "maxLength": 8192,
                        "minLength": 1,
                        "type": "string"
                      },
                      "start": {
                        "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "statusCode": {
                        "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.",
                        "type": "integer",
                        "enum": [
                          301,
                          302,
                          303,
                          307,
                          308
                        ]
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.",
                        "type": "string",
                        "enum": [
                          "erMatchRule"
                        ]
                      },
                      "useIncomingQueryString": {
                        "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                        "type": "boolean"
                      },
                      "useIncomingSchemeAndHost": {
                        "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.",
                        "type": "boolean"
                      },
                      "useRelativeUrl": {
                        "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.",
                        "type": "string",
                        "enum": [
                          "none",
                          "copy_scheme_hostname",
                          "relative_url"
                        ]
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/match-rule-er.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Forward Rewrite.",
                    "title": "Forward Rewrite",
                    "type": "object",
                    "required": [
                      "type",
                      "forwardSettings"
                    ],
                    "properties": {
                      "akaRuleId": {
                        "description": "The rule's unique identifier.",
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                        "type": "boolean"
                      },
                      "end": {
                        "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "forwardSettings": {
                        "additionalProperties": false,
                        "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                        "type": "object",
                        "properties": {
                          "originId": {
                            "description": "The conditional origin's unique identifier.",
                            "maxLength": 8192,
                            "nullable": true,
                            "type": "string"
                          },
                          "pathAndQS": {
                            "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "useIncomingQueryString": {
                            "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                            "type": "boolean"
                          }
                        }
                      },
                      "id": {
                        "description": "__Internal__ Akamai internal use only.",
                        "nullable": true,
                        "type": "integer",
                        "x-akamai": {
                          "status": "INTERNAL"
                        }
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                        "nullable": true,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.",
                          "type": "object",
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                              "type": "string",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ]
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                              "type": "string",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ]
                            },
                            "matchType": {
                              "description": "The type of match used.",
                              "type": "string",
                              "enum": [
                                "header",
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "regex",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "method",
                                "proxy"
                              ]
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                              "title": "Object match value",
                              "type": "object",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                  "title": "Range",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `range`.",
                                      "type": "string",
                                      "enum": [
                                        "range"
                                      ]
                                    },
                                    "value": {
                                      "description": "An inclusive range comprised of two numbers to match on.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "integer"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.",
                                  "title": "Simple",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.",
                                      "type": "string",
                                      "enum": [
                                        "simple"
                                      ]
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                  "title": "Object",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "properties": {
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                          "nullable": true,
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.",
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                      "type": "boolean"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.",
                                      "type": "string",
                                      "enum": [
                                        "object"
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ]
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ]
                            }
                          ]
                        }
                      },
                      "matchesAlways": {
                        "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the rule.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "start": {
                        "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.",
                        "type": "string",
                        "enum": [
                          "frMatchRule"
                        ]
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/match-rule-fr.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Request Control.",
                    "title": "Request Control",
                    "type": "object",
                    "required": [
                      "type",
                      "allowDeny"
                    ],
                    "properties": {
                      "akaRuleId": {
                        "description": "The rule's unique identifier.",
                        "type": "string"
                      },
                      "allowDeny": {
                        "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).",
                        "type": "string",
                        "enum": [
                          "allow",
                          "deny",
                          "denybranded"
                        ]
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                        "type": "boolean"
                      },
                      "end": {
                        "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "id": {
                        "description": "__Internal__ Akamai internal use only.",
                        "nullable": true,
                        "type": "integer",
                        "x-akamai": {
                          "status": "INTERNAL"
                        }
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                        "nullable": true,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.",
                          "type": "object",
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                              "type": "string",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ]
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                              "type": "string",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ]
                            },
                            "matchType": {
                              "description": "The type of match used.",
                              "type": "string",
                              "enum": [
                                "clientip",
                                "continent",
                                "cookie",
                                "countrycode",
                                "deviceCharacteristics",
                                "extension",
                                "header",
                                "hostname",
                                "method",
                                "path",
                                "protocol",
                                "proxy",
                                "query",
                                "regioncode"
                              ]
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                              "title": "Object match value",
                              "type": "object",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. Specify the `range` as a percentage.",
                                  "title": "Range",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `range`.",
                                      "type": "string",
                                      "enum": [
                                        "range"
                                      ]
                                    },
                                    "value": {
                                      "description": "An inclusive range comprised of two numbers to match on.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "integer"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.",
                                  "title": "Simple",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.",
                                      "type": "string",
                                      "enum": [
                                        "simple"
                                      ]
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                  "title": "Object",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "properties": {
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                          "nullable": true,
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.",
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                      "type": "boolean"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.",
                                      "type": "string",
                                      "enum": [
                                        "object"
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ]
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ]
                            }
                          ]
                        }
                      },
                      "matchesAlways": {
                        "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the rule.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "start": {
                        "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.",
                        "type": "string",
                        "enum": [
                          "igMatchRule"
                        ]
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/match-rule-ig.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Visitor Prioritization.",
                    "title": "Visitor Prioritization",
                    "type": "object",
                    "required": [
                      "type",
                      "passThroughPercent"
                    ],
                    "properties": {
                      "akaRuleId": {
                        "description": "The rule's unique identifier.",
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                        "type": "boolean"
                      },
                      "end": {
                        "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "id": {
                        "description": "__Internal__ Akamai internal use only.",
                        "nullable": true,
                        "type": "integer",
                        "x-akamai": {
                          "status": "INTERNAL"
                        }
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                        "nullable": true,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.",
                          "type": "object",
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                              "type": "string",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ]
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                              "type": "string",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ]
                            },
                            "matchType": {
                              "description": "The type of match used.",
                              "type": "string",
                              "enum": [
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "header",
                                "method",
                                "proxy"
                              ]
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                              "title": "Object match value",
                              "type": "object",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                  "title": "Range",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `range`.",
                                      "type": "string",
                                      "enum": [
                                        "range"
                                      ]
                                    },
                                    "value": {
                                      "description": "An inclusive range comprised of two numbers to match on.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "integer"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.",
                                  "title": "Simple",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.",
                                      "type": "string",
                                      "enum": [
                                        "simple"
                                      ]
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                  "title": "Object",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "properties": {
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                          "nullable": true,
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.",
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                      "type": "boolean"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.",
                                      "type": "string",
                                      "enum": [
                                        "object"
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ]
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ]
                            }
                          ]
                        }
                      },
                      "matchesAlways": {
                        "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the rule.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "passThroughPercent": {
                        "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.",
                        "maximum": 100,
                        "minimum": -1,
                        "type": "number"
                      },
                      "start": {
                        "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.",
                        "type": "string",
                        "enum": [
                          "vpMatchRule"
                        ]
                      },
                      "useIncomingQueryString": {
                        "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.",
                        "type": "boolean"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/match-rule-vp.yaml"
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns details of a policy version match rule.",
            "content": {
              "application/json": {
                "example": {
                  "akaRuleId": "5db847a66e0566ad",
                  "disabled": "false",
                  "end": 0,
                  "id": null,
                  "location": "/cloudlets/api/v2/policies/1002/versions/2/rules/5db847a66e0566ad",
                  "name": "Q1Sales",
                  "start": 0,
                  "type": "asMatchRule",
                  "forwardSettings": {
                    "originId": "originremote2",
                    "pathAndQS": "/sales/Q1/",
                    "useIncomingQueryString": true
                  },
                  "matches": [
                    {
                      "caseSensitive": false,
                      "matchOperator": "equals",
                      "matchType": "range",
                      "negate": false,
                      "objectMatchValue": {
                        "type": "range",
                        "value": [
                          1,
                          25
                        ]
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Provides information on the new rule that was added to an existing policy version.",
                  "type": "object",
                  "required": [
                    "akaRuleId",
                    "version",
                    "policyId"
                  ],
                  "properties": {
                    "akaRuleId": {
                      "description": "The rule's unique identifier.",
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                      "type": "boolean"
                    },
                    "end": {
                      "description": "The end time for this match rule in epoch seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "forwardSettings": {
                      "additionalProperties": false,
                      "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL.",
                      "type": "object",
                      "properties": {
                        "originId": {
                          "description": "The conditional origin's unique identifier.",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "pathAndQS": {
                          "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                          "maxLength": 8192,
                          "minLength": 1,
                          "type": "string"
                        },
                        "percent": {
                          "description": "The percent of traffic that is sent to the data center.",
                          "maximum": 100,
                          "minimum": 0,
                          "type": "number"
                        },
                        "useIncomingQueryString": {
                          "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                          "type": "boolean"
                        }
                      }
                    },
                    "id": {
                      "description": "__Internal__ Akamai internal use only.",
                      "nullable": true,
                      "type": "integer",
                      "x-akamai": {
                        "status": "INTERNAL"
                      }
                    },
                    "location": {
                      "description": "The navigable endpoint used for the object referred to in the operation.",
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` for the rule. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                      "items": {
                        "description": "A list of Cloudlet-specific match rules for this policy.",
                        "type": "array",
                        "items": {
                          "description": "Contains information about match rules.",
                          "x-akamai": {
                            "file-path": "schemas/match-rule.yaml"
                          },
                          "oneOf": [
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Application Load Balancer.",
                              "title": "Application Load Balancer",
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "forwardSettings": {
                                  "additionalProperties": false,
                                  "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                  "type": "object",
                                  "properties": {
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "maxLength": 8192,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "pathAndQS": {
                                      "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "useIncomingQueryString": {
                                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "nullable": true,
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "header",
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "regex",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use this for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "albMatchRule"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-alb.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for API Prioritization.",
                              "title": "API Prioritization",
                              "type": "object",
                              "required": [
                                "type",
                                "passThroughPercent"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "header",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use this for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "passThroughPercent": {
                                  "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.",
                                  "maximum": 100,
                                  "minimum": -1,
                                  "type": "number"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "apMatchRule"
                                  ]
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                  "type": "boolean"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-ap.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Audience Segmentation.",
                              "title": "Audience Segmentation",
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "forwardSettings": {
                                  "additionalProperties": false,
                                  "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                  "type": "object",
                                  "properties": {
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "maxLength": 8192,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "pathAndQS": {
                                      "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "useIncomingQueryString": {
                                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "header",
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "range",
                                          "regex",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "asMatchRule"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-as.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Phased Release.",
                              "title": "Phased Release",
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "forwardSettings": {
                                  "additionalProperties": false,
                                  "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                  "type": "object",
                                  "properties": {
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "maxLength": 8192,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "pathAndQS": {
                                      "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "useIncomingQueryString": {
                                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "nullable": true,
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "header",
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use this for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "cdMatchRule"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-cd.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Edge Redirector.",
                              "title": "Edge Redirector",
                              "type": "object",
                              "required": [
                                "type",
                                "redirectURL",
                                "statusCode"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "nullable": true,
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "header",
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "regex",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "redirectURL": {
                                  "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.",
                                  "maxLength": 8192,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "statusCode": {
                                  "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.",
                                  "type": "integer",
                                  "enum": [
                                    301,
                                    302,
                                    303,
                                    307,
                                    308
                                  ]
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "erMatchRule"
                                  ]
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                  "type": "boolean"
                                },
                                "useIncomingSchemeAndHost": {
                                  "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.",
                                  "type": "boolean"
                                },
                                "useRelativeUrl": {
                                  "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.",
                                  "type": "string",
                                  "enum": [
                                    "none",
                                    "copy_scheme_hostname",
                                    "relative_url"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-er.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Forward Rewrite.",
                              "title": "Forward Rewrite",
                              "type": "object",
                              "required": [
                                "type",
                                "forwardSettings"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "forwardSettings": {
                                  "additionalProperties": false,
                                  "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                  "type": "object",
                                  "properties": {
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "maxLength": 8192,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "pathAndQS": {
                                      "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "useIncomingQueryString": {
                                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "header",
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "regex",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "frMatchRule"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-fr.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Request Control.",
                              "title": "Request Control",
                              "type": "object",
                              "required": [
                                "type",
                                "allowDeny"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "allowDeny": {
                                  "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).",
                                  "type": "string",
                                  "enum": [
                                    "allow",
                                    "deny",
                                    "denybranded"
                                  ]
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "clientip",
                                          "continent",
                                          "cookie",
                                          "countrycode",
                                          "deviceCharacteristics",
                                          "extension",
                                          "header",
                                          "hostname",
                                          "method",
                                          "path",
                                          "protocol",
                                          "proxy",
                                          "query",
                                          "regioncode"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. Specify the `range` as a percentage.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "igMatchRule"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-ig.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Visitor Prioritization.",
                              "title": "Visitor Prioritization",
                              "type": "object",
                              "required": [
                                "type",
                                "passThroughPercent"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "header",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "passThroughPercent": {
                                  "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.",
                                  "maximum": 100,
                                  "minimum": -1,
                                  "type": "number"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "vpMatchRule"
                                  ]
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.",
                                  "type": "boolean"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-vp.yaml"
                              }
                            }
                          ]
                        },
                        "x-akamai": {
                          "file-path": "schemas/match-rules.yaml"
                        }
                      }
                    },
                    "name": {
                      "description": "The name of the rule.",
                      "type": "string"
                    },
                    "start": {
                      "description": "The start time for this match rule in epoch seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for; Application Load Balancer is `albMatchRule`, API Prioritization is `apMatchRule`, Audience Segmentation is `asMatchRule`, Phased Release is `cdMatchRule`, Edge Redirector is `erMatchRule`, Forward Rewrite is`frMatchRule`, Request Control is `igMatchRule`, and Visitor Prioritization is  `vpMatchRule`.",
                      "type": "string",
                      "enum": [
                        "albMatchRule",
                        "apMatchRule",
                        "asMatchRule",
                        "cdMatchRule",
                        "erMatchRule",
                        "frMatchRule",
                        "igMatchRule",
                        "vpMatchRule"
                      ]
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/post-policy-version-rules-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The order within the current list of rules where you want to add the new rule. If you do not set this parameter, the new rule is added to the end of the current rule list. For Cloudlets, the first rule listed is the first rule evaluated.",
            "example": "{{index}}",
            "in": "query",
            "name": "index",
            "schema": {
              "type": "number"
            },
            "x-akamai": {
              "file-path": "parameters/index-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "The version number of the policy.",
          "example": "{{version}}",
          "in": "path",
          "name": "version",
          "required": true,
          "schema": {
            "type": "number"
          },
          "x-akamai": {
            "file-path": "parameters/version-path.yaml"
          }
        },
        {
          "description": "The ID of the policy.",
          "example": "{{policyId}}",
          "in": "path",
          "name": "policyId",
          "required": true,
          "schema": {
            "type": "number"
          },
          "x-akamai": {
            "file-path": "parameters/policyId-path.yaml"
          }
        }
      ]
    },
    "/policies/{policyId}/versions/{version}/rules/{akaRuleId}": {
      "get": {
        "description": "Returns information for a specific rule within a policy version.",
        "operationId": "get-policy-version-rule",
        "summary": "Get a version rule",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-policy-version-rule"
        },
        "responses": {
          "200": {
            "description": "Returns details of a policy version match rule.",
            "content": {
              "application/json": {
                "example": {
                  "akaRuleId": "5db847a66e0566ad",
                  "disabled": "true",
                  "end": 0,
                  "id": null,
                  "location": "/cloudlets/api/v2/policies/1002/versions/2/rules/5db847a66e0566ad",
                  "name": "Q1Sales",
                  "start": 0,
                  "type": "asMatchRule",
                  "forwardSettings": {
                    "originId": "originremote2",
                    "pathAndQS": "/sales/Q1/",
                    "useIncomingQueryString": true
                  },
                  "matches": [
                    {
                      "caseSensitive": false,
                      "matchOperator": "equals",
                      "matchType": "range",
                      "negate": false,
                      "objectMatchValue": {
                        "type": "range",
                        "value": [
                          1,
                          25
                        ]
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Returns information about a specific rule within a policy version.",
                  "type": "object",
                  "required": [
                    "akaRuleId",
                    "version",
                    "policyId"
                  ],
                  "properties": {
                    "akaRuleId": {
                      "description": "The rule's unique identifier.",
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                      "type": "boolean"
                    },
                    "end": {
                      "description": "The end time for this match rule in epoch seconds. When the rule is set to `matchAlways`, the `end` time displays as `0`.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "forwardSettings": {
                      "additionalProperties": false,
                      "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL.",
                      "type": "object",
                      "properties": {
                        "originId": {
                          "description": "The conditional origin's unique identifier.",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "pathAndQS": {
                          "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                          "maxLength": 8192,
                          "minLength": 1,
                          "type": "string"
                        },
                        "percent": {
                          "description": "The percent of traffic that is sent to the data center.",
                          "maximum": 100,
                          "minimum": 0,
                          "type": "number"
                        },
                        "useIncomingQueryString": {
                          "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                          "type": "boolean"
                        }
                      }
                    },
                    "id": {
                      "description": "__Internal__ Akamai internal use only.",
                      "nullable": true,
                      "type": "integer",
                      "x-akamai": {
                        "status": "INTERNAL"
                      }
                    },
                    "location": {
                      "description": "The navigable endpoint used for the object referred to in the operation.",
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` for the rule. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                      "items": {
                        "description": "A list of Cloudlet-specific match rules for this policy.",
                        "type": "array",
                        "items": {
                          "description": "Contains information about match rules.",
                          "x-akamai": {
                            "file-path": "schemas/match-rule.yaml"
                          },
                          "oneOf": [
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Application Load Balancer.",
                              "title": "Application Load Balancer",
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "forwardSettings": {
                                  "additionalProperties": false,
                                  "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                  "type": "object",
                                  "properties": {
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "maxLength": 8192,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "pathAndQS": {
                                      "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "useIncomingQueryString": {
                                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "nullable": true,
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "header",
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "regex",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use this for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "albMatchRule"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-alb.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for API Prioritization.",
                              "title": "API Prioritization",
                              "type": "object",
                              "required": [
                                "type",
                                "passThroughPercent"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "header",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use this for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "passThroughPercent": {
                                  "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.",
                                  "maximum": 100,
                                  "minimum": -1,
                                  "type": "number"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "apMatchRule"
                                  ]
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                  "type": "boolean"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-ap.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Audience Segmentation.",
                              "title": "Audience Segmentation",
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "forwardSettings": {
                                  "additionalProperties": false,
                                  "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                  "type": "object",
                                  "properties": {
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "maxLength": 8192,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "pathAndQS": {
                                      "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "useIncomingQueryString": {
                                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "header",
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "range",
                                          "regex",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "asMatchRule"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-as.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Phased Release.",
                              "title": "Phased Release",
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "forwardSettings": {
                                  "additionalProperties": false,
                                  "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                  "type": "object",
                                  "properties": {
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "maxLength": 8192,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "pathAndQS": {
                                      "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "useIncomingQueryString": {
                                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "nullable": true,
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "header",
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use this for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "cdMatchRule"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-cd.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Edge Redirector.",
                              "title": "Edge Redirector",
                              "type": "object",
                              "required": [
                                "type",
                                "redirectURL",
                                "statusCode"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "nullable": true,
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "header",
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "regex",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "redirectURL": {
                                  "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.",
                                  "maxLength": 8192,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "statusCode": {
                                  "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.",
                                  "type": "integer",
                                  "enum": [
                                    301,
                                    302,
                                    303,
                                    307,
                                    308
                                  ]
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "erMatchRule"
                                  ]
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                  "type": "boolean"
                                },
                                "useIncomingSchemeAndHost": {
                                  "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.",
                                  "type": "boolean"
                                },
                                "useRelativeUrl": {
                                  "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.",
                                  "type": "string",
                                  "enum": [
                                    "none",
                                    "copy_scheme_hostname",
                                    "relative_url"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-er.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Forward Rewrite.",
                              "title": "Forward Rewrite",
                              "type": "object",
                              "required": [
                                "type",
                                "forwardSettings"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "forwardSettings": {
                                  "additionalProperties": false,
                                  "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                  "type": "object",
                                  "properties": {
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "maxLength": 8192,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "pathAndQS": {
                                      "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "useIncomingQueryString": {
                                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "header",
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "regex",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "frMatchRule"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-fr.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Request Control.",
                              "title": "Request Control",
                              "type": "object",
                              "required": [
                                "type",
                                "allowDeny"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "allowDeny": {
                                  "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).",
                                  "type": "string",
                                  "enum": [
                                    "allow",
                                    "deny",
                                    "denybranded"
                                  ]
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "clientip",
                                          "continent",
                                          "cookie",
                                          "countrycode",
                                          "deviceCharacteristics",
                                          "extension",
                                          "header",
                                          "hostname",
                                          "method",
                                          "path",
                                          "protocol",
                                          "proxy",
                                          "query",
                                          "regioncode"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. Specify the `range` as a percentage.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "igMatchRule"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-ig.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Visitor Prioritization.",
                              "title": "Visitor Prioritization",
                              "type": "object",
                              "required": [
                                "type",
                                "passThroughPercent"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "header",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "passThroughPercent": {
                                  "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.",
                                  "maximum": 100,
                                  "minimum": -1,
                                  "type": "number"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "vpMatchRule"
                                  ]
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.",
                                  "type": "boolean"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-vp.yaml"
                              }
                            }
                          ]
                        },
                        "x-akamai": {
                          "file-path": "schemas/match-rules.yaml"
                        }
                      }
                    },
                    "name": {
                      "description": "The name of the rule.",
                      "type": "string"
                    },
                    "start": {
                      "description": "The start time for this match rule in epoch seconds. When the rule is set to `matchAlways`, the `start` time displays as `0`.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for; Application Load Balancer is `albMatchRule`, API Prioritization is `apMatchRule`, Audience Segmentation is `asMatchRule`, Phased Release is `cdMatchRule`, Edge Redirector is `erMatchRule`, Forward Rewrite is`frMatchRule`, Request Control is `igMatchRule` and Visitor Prioritization is  `vpMatchRule`.",
                      "type": "string",
                      "enum": [
                        "albMatchRule",
                        "apMatchRule",
                        "asMatchRule",
                        "cdMatchRule",
                        "erMatchRule",
                        "frMatchRule",
                        "igMatchRule",
                        "vpMatchRule"
                      ]
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-policy-version-rule-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates attributes of an existing rule within a policy version. When updating a rule, set `disabled` to `true` to prevent the rule from being evaluated against incoming requests.",
        "operationId": "put-policy-version-rule",
        "summary": "Update a version rule",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/put-policy-version-rule"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "disabled": "true",
                "end": 0,
                "id": null,
                "name": "Q1Sales",
                "start": 0,
                "type": "asMatchRule",
                "forwardSettings": {
                  "originId": "originremote2",
                  "pathAndQS": "/sales/Q1/",
                  "useIncomingQueryString": true
                },
                "matches": [
                  {
                    "caseSensitive": false,
                    "matchOperator": "equals",
                    "matchType": "range",
                    "negate": false,
                    "objectMatchValue": {
                      "type": "range",
                      "value": [
                        1,
                        25
                      ]
                    }
                  }
                ]
              },
              "schema": {
                "description": "Contains information that you need to provide to update policy version match rule.",
                "x-akamai": {
                  "file-path": "schemas/policy-version-match-rule-update-request.yaml"
                },
                "oneOf": [
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Application Load Balancer.",
                    "title": "Application Load Balancer",
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "akaRuleId": {
                        "description": "The rule's unique identifier.",
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                        "type": "boolean"
                      },
                      "end": {
                        "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "forwardSettings": {
                        "additionalProperties": false,
                        "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                        "type": "object",
                        "properties": {
                          "originId": {
                            "description": "The conditional origin's unique identifier.",
                            "maxLength": 8192,
                            "nullable": true,
                            "type": "string"
                          },
                          "pathAndQS": {
                            "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "useIncomingQueryString": {
                            "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                            "type": "boolean"
                          }
                        }
                      },
                      "id": {
                        "description": "__Internal__ Akamai internal use only.",
                        "nullable": true,
                        "type": "integer",
                        "x-akamai": {
                          "status": "INTERNAL"
                        }
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                        "nullable": true,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.",
                          "type": "object",
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                              "nullable": true,
                              "type": "string",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ]
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                              "type": "string",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ]
                            },
                            "matchType": {
                              "description": "The type of match used.",
                              "type": "string",
                              "enum": [
                                "header",
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "regex",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "method",
                                "proxy"
                              ]
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                              "title": "Object match value",
                              "type": "object",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                  "title": "Range",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `range`.",
                                      "type": "string",
                                      "enum": [
                                        "range"
                                      ]
                                    },
                                    "value": {
                                      "description": "An inclusive range comprised of two numbers to match on.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "integer"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.",
                                  "title": "Simple",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.",
                                      "type": "string",
                                      "enum": [
                                        "simple"
                                      ]
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use this for more complex match criteria.",
                                  "title": "Object",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "properties": {
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                          "nullable": true,
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.",
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                      "type": "boolean"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.",
                                      "type": "string",
                                      "enum": [
                                        "object"
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ]
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ]
                            }
                          ]
                        }
                      },
                      "matchesAlways": {
                        "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the rule.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "start": {
                        "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.",
                        "type": "string",
                        "enum": [
                          "albMatchRule"
                        ]
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/match-rule-alb.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for API Prioritization.",
                    "title": "API Prioritization",
                    "type": "object",
                    "required": [
                      "type",
                      "passThroughPercent"
                    ],
                    "properties": {
                      "akaRuleId": {
                        "description": "The rule's unique identifier.",
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                        "type": "boolean"
                      },
                      "end": {
                        "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "id": {
                        "description": "__Internal__ Akamai internal use only.",
                        "nullable": true,
                        "type": "integer",
                        "x-akamai": {
                          "status": "INTERNAL"
                        }
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                        "nullable": true,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.",
                          "type": "object",
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                              "type": "string",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ]
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                              "type": "string",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ]
                            },
                            "matchType": {
                              "description": "The type of match used.",
                              "type": "string",
                              "enum": [
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "header",
                                "method",
                                "proxy"
                              ]
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                              "title": "Object match value",
                              "type": "object",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                  "title": "Range",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `range`.",
                                      "type": "string",
                                      "enum": [
                                        "range"
                                      ]
                                    },
                                    "value": {
                                      "description": "An inclusive range comprised of two numbers to match on.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "integer"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.",
                                  "title": "Simple",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.",
                                      "type": "string",
                                      "enum": [
                                        "simple"
                                      ]
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use this for more complex match criteria.",
                                  "title": "Object",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "properties": {
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                          "nullable": true,
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.",
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                      "type": "boolean"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.",
                                      "type": "string",
                                      "enum": [
                                        "object"
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ]
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ]
                            }
                          ]
                        }
                      },
                      "matchesAlways": {
                        "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the rule.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "passThroughPercent": {
                        "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.",
                        "maximum": 100,
                        "minimum": -1,
                        "type": "number"
                      },
                      "start": {
                        "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.",
                        "type": "string",
                        "enum": [
                          "apMatchRule"
                        ]
                      },
                      "useIncomingQueryString": {
                        "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                        "type": "boolean"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/match-rule-ap.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Audience Segmentation.",
                    "title": "Audience Segmentation",
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "akaRuleId": {
                        "description": "The rule's unique identifier.",
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                        "type": "boolean"
                      },
                      "end": {
                        "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "forwardSettings": {
                        "additionalProperties": false,
                        "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                        "type": "object",
                        "properties": {
                          "originId": {
                            "description": "The conditional origin's unique identifier.",
                            "maxLength": 8192,
                            "nullable": true,
                            "type": "string"
                          },
                          "pathAndQS": {
                            "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "useIncomingQueryString": {
                            "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                            "type": "boolean"
                          }
                        }
                      },
                      "id": {
                        "description": "__Internal__ Akamai internal use only.",
                        "nullable": true,
                        "type": "integer",
                        "x-akamai": {
                          "status": "INTERNAL"
                        }
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                        "nullable": true,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.",
                          "type": "object",
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                              "type": "string",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ]
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                              "type": "string",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ]
                            },
                            "matchType": {
                              "description": "The type of match used.",
                              "type": "string",
                              "enum": [
                                "header",
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "range",
                                "regex",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "method",
                                "proxy"
                              ]
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                              "title": "Object match value",
                              "type": "object",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                  "title": "Range",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `range`.",
                                      "type": "string",
                                      "enum": [
                                        "range"
                                      ]
                                    },
                                    "value": {
                                      "description": "An inclusive range comprised of two numbers to match on.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "integer"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.",
                                  "title": "Simple",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.",
                                      "type": "string",
                                      "enum": [
                                        "simple"
                                      ]
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                  "title": "Object",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "properties": {
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                          "nullable": true,
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.",
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                      "type": "boolean"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.",
                                      "type": "string",
                                      "enum": [
                                        "object"
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ]
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ]
                            }
                          ]
                        }
                      },
                      "matchesAlways": {
                        "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the rule.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "start": {
                        "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.",
                        "type": "string",
                        "enum": [
                          "asMatchRule"
                        ]
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/match-rule-as.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Phased Release.",
                    "title": "Phased Release",
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "akaRuleId": {
                        "description": "The rule's unique identifier.",
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                        "type": "boolean"
                      },
                      "end": {
                        "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "forwardSettings": {
                        "additionalProperties": false,
                        "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                        "type": "object",
                        "properties": {
                          "originId": {
                            "description": "The conditional origin's unique identifier.",
                            "maxLength": 8192,
                            "nullable": true,
                            "type": "string"
                          },
                          "pathAndQS": {
                            "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "useIncomingQueryString": {
                            "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                            "type": "boolean"
                          }
                        }
                      },
                      "id": {
                        "description": "__Internal__ Akamai internal use only.",
                        "nullable": true,
                        "type": "integer",
                        "x-akamai": {
                          "status": "INTERNAL"
                        }
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                        "nullable": true,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.",
                          "type": "object",
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                              "nullable": true,
                              "type": "string",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ]
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                              "type": "string",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ]
                            },
                            "matchType": {
                              "description": "The type of match used.",
                              "type": "string",
                              "enum": [
                                "header",
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "method",
                                "proxy"
                              ]
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                              "title": "Object match value",
                              "type": "object",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                  "title": "Range",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `range`.",
                                      "type": "string",
                                      "enum": [
                                        "range"
                                      ]
                                    },
                                    "value": {
                                      "description": "An inclusive range comprised of two numbers to match on.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "integer"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.",
                                  "title": "Simple",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.",
                                      "type": "string",
                                      "enum": [
                                        "simple"
                                      ]
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use this for more complex match criteria.",
                                  "title": "Object",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "properties": {
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                          "nullable": true,
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.",
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                      "type": "boolean"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.",
                                      "type": "string",
                                      "enum": [
                                        "object"
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ]
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ]
                            }
                          ]
                        }
                      },
                      "matchesAlways": {
                        "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the rule.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "start": {
                        "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.",
                        "type": "string",
                        "enum": [
                          "cdMatchRule"
                        ]
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/match-rule-cd.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Edge Redirector.",
                    "title": "Edge Redirector",
                    "type": "object",
                    "required": [
                      "type",
                      "redirectURL",
                      "statusCode"
                    ],
                    "properties": {
                      "akaRuleId": {
                        "description": "The rule's unique identifier.",
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                        "type": "boolean"
                      },
                      "end": {
                        "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "id": {
                        "description": "__Internal__ Akamai internal use only.",
                        "nullable": true,
                        "type": "integer",
                        "x-akamai": {
                          "status": "INTERNAL"
                        }
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                        "nullable": true,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.",
                          "type": "object",
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                              "nullable": true,
                              "type": "string",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ]
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                              "type": "string",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ]
                            },
                            "matchType": {
                              "description": "The type of match used.",
                              "type": "string",
                              "enum": [
                                "header",
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "regex",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "method",
                                "proxy"
                              ]
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                              "title": "Object match value",
                              "type": "object",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                  "title": "Range",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `range`.",
                                      "type": "string",
                                      "enum": [
                                        "range"
                                      ]
                                    },
                                    "value": {
                                      "description": "An inclusive range comprised of two numbers to match on.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "integer"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.",
                                  "title": "Simple",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.",
                                      "type": "string",
                                      "enum": [
                                        "simple"
                                      ]
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                  "title": "Object",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "properties": {
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                          "nullable": true,
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.",
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                      "type": "boolean"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.",
                                      "type": "string",
                                      "enum": [
                                        "object"
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ]
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ]
                            }
                          ]
                        }
                      },
                      "matchesAlways": {
                        "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the rule.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "redirectURL": {
                        "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.",
                        "maxLength": 8192,
                        "minLength": 1,
                        "type": "string"
                      },
                      "start": {
                        "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "statusCode": {
                        "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.",
                        "type": "integer",
                        "enum": [
                          301,
                          302,
                          303,
                          307,
                          308
                        ]
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.",
                        "type": "string",
                        "enum": [
                          "erMatchRule"
                        ]
                      },
                      "useIncomingQueryString": {
                        "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                        "type": "boolean"
                      },
                      "useIncomingSchemeAndHost": {
                        "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.",
                        "type": "boolean"
                      },
                      "useRelativeUrl": {
                        "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.",
                        "type": "string",
                        "enum": [
                          "none",
                          "copy_scheme_hostname",
                          "relative_url"
                        ]
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/match-rule-er.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Forward Rewrite.",
                    "title": "Forward Rewrite",
                    "type": "object",
                    "required": [
                      "type",
                      "forwardSettings"
                    ],
                    "properties": {
                      "akaRuleId": {
                        "description": "The rule's unique identifier.",
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                        "type": "boolean"
                      },
                      "end": {
                        "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "forwardSettings": {
                        "additionalProperties": false,
                        "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                        "type": "object",
                        "properties": {
                          "originId": {
                            "description": "The conditional origin's unique identifier.",
                            "maxLength": 8192,
                            "nullable": true,
                            "type": "string"
                          },
                          "pathAndQS": {
                            "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                            "maxLength": 8192,
                            "minLength": 1,
                            "type": "string"
                          },
                          "useIncomingQueryString": {
                            "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                            "type": "boolean"
                          }
                        }
                      },
                      "id": {
                        "description": "__Internal__ Akamai internal use only.",
                        "nullable": true,
                        "type": "integer",
                        "x-akamai": {
                          "status": "INTERNAL"
                        }
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                        "nullable": true,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.",
                          "type": "object",
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                              "type": "string",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ]
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                              "type": "string",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ]
                            },
                            "matchType": {
                              "description": "The type of match used.",
                              "type": "string",
                              "enum": [
                                "header",
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "regex",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "method",
                                "proxy"
                              ]
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                              "title": "Object match value",
                              "type": "object",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                  "title": "Range",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `range`.",
                                      "type": "string",
                                      "enum": [
                                        "range"
                                      ]
                                    },
                                    "value": {
                                      "description": "An inclusive range comprised of two numbers to match on.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "integer"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.",
                                  "title": "Simple",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.",
                                      "type": "string",
                                      "enum": [
                                        "simple"
                                      ]
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                  "title": "Object",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "properties": {
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                          "nullable": true,
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.",
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                      "type": "boolean"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.",
                                      "type": "string",
                                      "enum": [
                                        "object"
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ]
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ]
                            }
                          ]
                        }
                      },
                      "matchesAlways": {
                        "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the rule.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "start": {
                        "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.",
                        "type": "string",
                        "enum": [
                          "frMatchRule"
                        ]
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/match-rule-fr.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Request Control.",
                    "title": "Request Control",
                    "type": "object",
                    "required": [
                      "type",
                      "allowDeny"
                    ],
                    "properties": {
                      "akaRuleId": {
                        "description": "The rule's unique identifier.",
                        "type": "string"
                      },
                      "allowDeny": {
                        "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).",
                        "type": "string",
                        "enum": [
                          "allow",
                          "deny",
                          "denybranded"
                        ]
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                        "type": "boolean"
                      },
                      "end": {
                        "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "id": {
                        "description": "__Internal__ Akamai internal use only.",
                        "nullable": true,
                        "type": "integer",
                        "x-akamai": {
                          "status": "INTERNAL"
                        }
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                        "nullable": true,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.",
                          "type": "object",
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                              "type": "string",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ]
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                              "type": "string",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ]
                            },
                            "matchType": {
                              "description": "The type of match used.",
                              "type": "string",
                              "enum": [
                                "clientip",
                                "continent",
                                "cookie",
                                "countrycode",
                                "deviceCharacteristics",
                                "extension",
                                "header",
                                "hostname",
                                "method",
                                "path",
                                "protocol",
                                "proxy",
                                "query",
                                "regioncode"
                              ]
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                              "title": "Object match value",
                              "type": "object",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. Specify the `range` as a percentage.",
                                  "title": "Range",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `range`.",
                                      "type": "string",
                                      "enum": [
                                        "range"
                                      ]
                                    },
                                    "value": {
                                      "description": "An inclusive range comprised of two numbers to match on.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "integer"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.",
                                  "title": "Simple",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.",
                                      "type": "string",
                                      "enum": [
                                        "simple"
                                      ]
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                  "title": "Object",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "properties": {
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                          "nullable": true,
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.",
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                      "type": "boolean"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.",
                                      "type": "string",
                                      "enum": [
                                        "object"
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ]
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ]
                            }
                          ]
                        }
                      },
                      "matchesAlways": {
                        "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the rule.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "start": {
                        "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.",
                        "type": "string",
                        "enum": [
                          "igMatchRule"
                        ]
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/match-rule-ig.yaml"
                    }
                  },
                  {
                    "additionalProperties": false,
                    "description": "Contains match rule information for Visitor Prioritization.",
                    "title": "Visitor Prioritization",
                    "type": "object",
                    "required": [
                      "type",
                      "passThroughPercent"
                    ],
                    "properties": {
                      "akaRuleId": {
                        "description": "The rule's unique identifier.",
                        "type": "string"
                      },
                      "disabled": {
                        "default": false,
                        "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                        "type": "boolean"
                      },
                      "end": {
                        "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "id": {
                        "description": "__Internal__ Akamai internal use only.",
                        "nullable": true,
                        "type": "integer",
                        "x-akamai": {
                          "status": "INTERNAL"
                        }
                      },
                      "matchURL": {
                        "description": "The URL the Cloudlet uses to match the incoming request.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "matches": {
                        "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                        "nullable": true,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "The match rule criteria.",
                          "type": "object",
                          "properties": {
                            "caseSensitive": {
                              "description": "If `true`, the match is case sensitive.",
                              "type": "boolean"
                            },
                            "checkIPs": {
                              "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                              "type": "string",
                              "enum": [
                                "CONNECTING_IP",
                                "XFF_HEADERS",
                                "CONNECTING_IP XFF_HEADERS"
                              ]
                            },
                            "matchOperator": {
                              "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                              "type": "string",
                              "enum": [
                                "contains",
                                "exists",
                                "equals"
                              ]
                            },
                            "matchType": {
                              "description": "The type of match used.",
                              "type": "string",
                              "enum": [
                                "hostname",
                                "path",
                                "extension",
                                "query",
                                "cookie",
                                "deviceCharacteristics",
                                "clientip",
                                "continent",
                                "countrycode",
                                "regioncode",
                                "protocol",
                                "header",
                                "method",
                                "proxy"
                              ]
                            },
                            "matchValue": {
                              "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                              "maxLength": 8192,
                              "minLength": 1,
                              "type": "string"
                            },
                            "negate": {
                              "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                              "type": "boolean"
                            },
                            "objectMatchValue": {
                              "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                              "title": "Object match value",
                              "type": "object",
                              "oneOf": [
                                {
                                  "additionalProperties": false,
                                  "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                  "title": "Range",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `range`.",
                                      "type": "string",
                                      "enum": [
                                        "range"
                                      ]
                                    },
                                    "value": {
                                      "description": "An inclusive range comprised of two numbers to match on.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "integer"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `simple` array option when adding an array of string-based values.",
                                  "title": "Simple",
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "value"
                                  ],
                                  "properties": {
                                    "type": {
                                      "description": "The object type, which is `simple`.",
                                      "type": "string",
                                      "enum": [
                                        "simple"
                                      ]
                                    },
                                    "value": {
                                      "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                      "nullable": true,
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                  "title": "Object",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "type"
                                  ],
                                  "properties": {
                                    "options": {
                                      "additionalProperties": false,
                                      "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                      "type": "object",
                                      "properties": {
                                        "value": {
                                          "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                          "nullable": true,
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "valueCaseSensitive": {
                                          "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                          "type": "boolean"
                                        },
                                        "valueEscaped": {
                                          "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                          "type": "boolean"
                                        },
                                        "valueHasWildcard": {
                                          "description": "Set to `true` if the entries for `value` includes wildcards.",
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "name": {
                                      "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "nameCaseSensitive": {
                                      "description": "When set to `true`, the `name` match is case-sensitive.",
                                      "type": "boolean"
                                    },
                                    "nameHasWildcard": {
                                      "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                      "type": "boolean"
                                    },
                                    "type": {
                                      "description": "The array type, which is `object`.",
                                      "type": "string",
                                      "enum": [
                                        "object"
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "oneOf": [
                            {
                              "required": [
                                "matchType",
                                "matchValue"
                              ]
                            },
                            {
                              "required": [
                                "matchType",
                                "objectMatchValue"
                              ]
                            }
                          ]
                        }
                      },
                      "matchesAlways": {
                        "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the rule.",
                        "maxLength": 8192,
                        "nullable": true,
                        "type": "string"
                      },
                      "passThroughPercent": {
                        "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.",
                        "maximum": 100,
                        "minimum": -1,
                        "type": "number"
                      },
                      "start": {
                        "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.",
                        "type": "string",
                        "enum": [
                          "vpMatchRule"
                        ]
                      },
                      "useIncomingQueryString": {
                        "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.",
                        "type": "boolean"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/match-rule-vp.yaml"
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns details of a policy version match rule.",
            "content": {
              "application/json": {
                "example": {
                  "akaRuleId": "5db847a66e0566ad",
                  "disabled": "true",
                  "end": 0,
                  "id": null,
                  "location": "/cloudlets/api/v2/policies/1002/versions/2/rules/5db847a66e0566ad",
                  "name": "Q1Sales",
                  "start": 0,
                  "type": "asMatchRule",
                  "forwardSettings": {
                    "originId": "originremote2",
                    "pathAndQS": "/sales/Q1/",
                    "useIncomingQueryString": true
                  },
                  "matches": [
                    {
                      "caseSensitive": false,
                      "matchOperator": "equals",
                      "matchType": "range",
                      "negate": false,
                      "objectMatchValue": {
                        "type": "range",
                        "value": [
                          1,
                          25
                        ]
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Shows the updated attributes of an existing rule within a policy version.",
                  "type": "object",
                  "required": [
                    "akaRuleId",
                    "version",
                    "policyId"
                  ],
                  "properties": {
                    "akaRuleId": {
                      "description": "The rule's unique identifier.",
                      "type": "string"
                    },
                    "disabled": {
                      "default": false,
                      "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                      "type": "boolean"
                    },
                    "end": {
                      "description": "The end time for this match rule in epoch seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "forwardSettings": {
                      "additionalProperties": false,
                      "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL.",
                      "type": "object",
                      "properties": {
                        "originId": {
                          "description": "The conditional origin's unique identifier.",
                          "maxLength": 8192,
                          "nullable": true,
                          "type": "string"
                        },
                        "pathAndQS": {
                          "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                          "maxLength": 8192,
                          "minLength": 1,
                          "type": "string"
                        },
                        "percent": {
                          "description": "The percent of traffic that is sent to the data center.",
                          "maximum": 100,
                          "minimum": 0,
                          "type": "number"
                        },
                        "useIncomingQueryString": {
                          "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                          "type": "boolean"
                        }
                      }
                    },
                    "id": {
                      "description": "__Internal__ Akamai internal use only.",
                      "nullable": true,
                      "type": "integer",
                      "x-akamai": {
                        "status": "INTERNAL"
                      }
                    },
                    "location": {
                      "description": "The navigable endpoint used for the object referred to in the operation.",
                      "type": "string"
                    },
                    "matches": {
                      "description": "The `matchType` and the `matchValue` or `objectMatchValue` for the rule. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                      "items": {
                        "description": "A list of Cloudlet-specific match rules for this policy.",
                        "type": "array",
                        "items": {
                          "description": "Contains information about match rules.",
                          "x-akamai": {
                            "file-path": "schemas/match-rule.yaml"
                          },
                          "oneOf": [
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Application Load Balancer.",
                              "title": "Application Load Balancer",
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "forwardSettings": {
                                  "additionalProperties": false,
                                  "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                  "type": "object",
                                  "properties": {
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "maxLength": 8192,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "pathAndQS": {
                                      "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "useIncomingQueryString": {
                                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "nullable": true,
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "header",
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "regex",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use this for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Application Load Balancer is `albMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "albMatchRule"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-alb.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for API Prioritization.",
                              "title": "API Prioritization",
                              "type": "object",
                              "required": [
                                "type",
                                "passThroughPercent"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "header",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use this for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "passThroughPercent": {
                                  "description": "The percentage of requests that pass through to the origin, with `100` indicating the request always passes through to the origin. For Visitor Prioritization, a value of -1 sends everyone to the waiting room.",
                                  "maximum": 100,
                                  "minimum": -1,
                                  "type": "number"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for API Prioritization is `apMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "apMatchRule"
                                  ]
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                  "type": "boolean"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-ap.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Audience Segmentation.",
                              "title": "Audience Segmentation",
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "forwardSettings": {
                                  "additionalProperties": false,
                                  "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                  "type": "object",
                                  "properties": {
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "maxLength": 8192,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "pathAndQS": {
                                      "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "useIncomingQueryString": {
                                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "header",
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "range",
                                          "regex",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Audience Segmentation is `asMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "asMatchRule"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-as.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Phased Release.",
                              "title": "Phased Release",
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "forwardSettings": {
                                  "additionalProperties": false,
                                  "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                  "type": "object",
                                  "properties": {
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "maxLength": 8192,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "pathAndQS": {
                                      "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "useIncomingQueryString": {
                                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "nullable": true,
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "header",
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use this for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Phased Release is `cdMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "cdMatchRule"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-cd.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Edge Redirector.",
                              "title": "Edge Redirector",
                              "type": "object",
                              "required": [
                                "type",
                                "redirectURL",
                                "statusCode"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "nullable": true,
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "header",
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "regex",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "redirectURL": {
                                  "description": "The URL Edge Redirector redirects the request to. If using `useRelativeUrl`, you can enter a path for the value. If `useRelativeUrl` is not used or set to `none`, then the `redirectUrl` should be a fully qualified URL.",
                                  "maxLength": 8192,
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "statusCode": {
                                  "description": "The HTTP response redirect type status code: `301` for permanent redirect, `302` for temporary redirect, `303` for temporary using GET, `307` for temporary retain method, or `308` for permanent retain method.",
                                  "type": "integer",
                                  "enum": [
                                    301,
                                    302,
                                    303,
                                    307,
                                    308
                                  ]
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Edge Redirector is `erMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "erMatchRule"
                                  ]
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                  "type": "boolean"
                                },
                                "useIncomingSchemeAndHost": {
                                  "description": "If set to `true`, the Cloudlet copies both the scheme and the hostname from the incoming request to use in the redirect URL.",
                                  "type": "boolean"
                                },
                                "useRelativeUrl": {
                                  "description": "If set to `relative_url`, takes the path entered for the `redirectUrl` and sets it in the response’s `Location` header. The client browser receiving the request decides which protocol and hostname to use. If set to `copy_scheme_hostname`, it creates an absolute path by taking the protocol and hostname from the incoming request and combining them with path information entered for the `redirectUrl`. This absolute path is set in the response’s `Location` header. If you don't include `useRelativeUrl`, or if you set it to `none`, then specify the `redirectUrl` as a fully qualified URL.",
                                  "type": "string",
                                  "enum": [
                                    "none",
                                    "copy_scheme_hostname",
                                    "relative_url"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-er.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Forward Rewrite.",
                              "title": "Forward Rewrite",
                              "type": "object",
                              "required": [
                                "type",
                                "forwardSettings"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "forwardSettings": {
                                  "additionalProperties": false,
                                  "description": "Defines data used to construct a new request URL. If all set conditions are true, the edge server returns an HTTP response from the rewritten URL. You can specify any of the following with this object: `originId`, `pathAndQS`, and `useIncomingQueryString`.",
                                  "type": "object",
                                  "properties": {
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "maxLength": 8192,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "pathAndQS": {
                                      "description": "If a value is provided and match conditions are met, this is the URL path to rewrite the incoming request's URL. The URL may include additional query parameters.",
                                      "maxLength": 8192,
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "useIncomingQueryString": {
                                      "description": "If set to `true`, the Cloudlet includes the requests' query string in the rewritten or forwarded URL.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "header",
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "regex",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Forward Rewrite is `frMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "frMatchRule"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-fr.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Request Control.",
                              "title": "Request Control",
                              "type": "object",
                              "required": [
                                "type",
                                "allowDeny"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "allowDeny": {
                                  "description": "If set to `allow`, the request is sent to origin when all conditions are true. If `deny`, the request is denied when all conditions are true. If `denybranded`, the request is denied and rerouted according to the configuration of the [Request Control behavior](https://techdocs.akamai.com/property-mgr/reference/latest-request-control).",
                                  "type": "string",
                                  "enum": [
                                    "allow",
                                    "deny",
                                    "denybranded"
                                  ]
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "clientip",
                                          "continent",
                                          "cookie",
                                          "countrycode",
                                          "deviceCharacteristics",
                                          "extension",
                                          "header",
                                          "hostname",
                                          "method",
                                          "path",
                                          "protocol",
                                          "proxy",
                                          "query",
                                          "regioncode"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. Specify the `range` as a percentage.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Request Control is `igMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "igMatchRule"
                                  ]
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-ig.yaml"
                              }
                            },
                            {
                              "additionalProperties": false,
                              "description": "Contains match rule information for Visitor Prioritization.",
                              "title": "Visitor Prioritization",
                              "type": "object",
                              "required": [
                                "type",
                                "passThroughPercent"
                              ],
                              "properties": {
                                "akaRuleId": {
                                  "description": "The rule's unique identifier.",
                                  "type": "string"
                                },
                                "disabled": {
                                  "default": false,
                                  "description": "If `true`, disables a rule so it's not evaluated against incoming requests. The default setting is `false`.",
                                  "type": "boolean"
                                },
                                "end": {
                                  "description": "The end time for this match rule. When `matchesAlways` is `false`, enter the `end` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "id": {
                                  "description": "__Internal__ Akamai internal use only.",
                                  "nullable": true,
                                  "type": "integer",
                                  "x-akamai": {
                                    "status": "INTERNAL"
                                  }
                                },
                                "matchURL": {
                                  "description": "The URL the Cloudlet uses to match the incoming request.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "matches": {
                                  "description": "The `matchType` and the `matchValue` or `objectMatchValue` used to conditionally pass through the request. Plus additional criteria to match on, like case sensitivity (`caseSensitive`).",
                                  "nullable": true,
                                  "type": "array",
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "The match rule criteria.",
                                    "type": "object",
                                    "properties": {
                                      "caseSensitive": {
                                        "description": "If `true`, the match is case sensitive.",
                                        "type": "boolean"
                                      },
                                      "checkIPs": {
                                        "description": "For `clientip`, `continent`, `countrycode`, `proxy`, and `regioncode` match types, the part of the request that determines the IP address to use. Values include the connecting IP address (`CONNECTING_IP`) and the `X-Forwarded-For` header (`XFF_HEADERS`). To select both, enter the two values separated by a space delimiter. When you include both values, the connecting IP address evaluates first.",
                                        "type": "string",
                                        "enum": [
                                          "CONNECTING_IP",
                                          "XFF_HEADERS",
                                          "CONNECTING_IP XFF_HEADERS"
                                        ]
                                      },
                                      "matchOperator": {
                                        "description": "This checks the incoming request to see if it `contains` or `equals` the `matchValue`, or if the request `header` you want to match on `exists`. With the exception of `hostname`, when using a wildcard, you need to set `matchOperator` to `contains`. For `hostname`, you don't need `contains`. Asterisks (`*`) in the `hostname` behave as wildcards. For example, `*.example.com` can match many subdomains.",
                                        "type": "string",
                                        "enum": [
                                          "contains",
                                          "exists",
                                          "equals"
                                        ]
                                      },
                                      "matchType": {
                                        "description": "The type of match used.",
                                        "type": "string",
                                        "enum": [
                                          "hostname",
                                          "path",
                                          "extension",
                                          "query",
                                          "cookie",
                                          "deviceCharacteristics",
                                          "clientip",
                                          "continent",
                                          "countrycode",
                                          "regioncode",
                                          "protocol",
                                          "header",
                                          "method",
                                          "proxy"
                                        ]
                                      },
                                      "matchValue": {
                                        "description": "The `matchValue` depends on the `matchType`. For example if the `matchType` is `hostname`, then `matchValue` is the fully qualified domain name, like `www.akamai.com`.",
                                        "maxLength": 8192,
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "negate": {
                                        "description": "Whether the match should be ignored (`negate` is `true`) or if the match should be acted on (`negate` is `false`).",
                                        "type": "boolean"
                                      },
                                      "objectMatchValue": {
                                        "description": "The match rule value to match on. The object match value subtypes include `simple`, `range`, and `object` arrays. Use `object` for more complex match criteria. Use the `simple` array option when adding an array of string-based values to match on. Use `range` when the match is true for incoming requests within an inclusive range of two numbers.",
                                        "title": "Object match value",
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "additionalProperties": false,
                                            "description": "When setting up a range match, enter the two numbers that comprise the range. If the value assigned to an incoming request falls within this inclusive range, the match is true. The specified `range` needs to be a percentage from 1 to 100.",
                                            "title": "Range",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `range`.",
                                                "type": "string",
                                                "enum": [
                                                  "range"
                                                ]
                                              },
                                              "value": {
                                                "description": "An inclusive range comprised of two numbers to match on.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "integer"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `simple` array option when adding an array of string-based values.",
                                            "title": "Simple",
                                            "type": "object",
                                            "required": [
                                              "type",
                                              "value"
                                            ],
                                            "properties": {
                                              "type": {
                                                "description": "The object type, which is `simple`.",
                                                "type": "string",
                                                "enum": [
                                                  "simple"
                                                ]
                                              },
                                              "value": {
                                                "description": "The `simple` array values for incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                "nullable": true,
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "additionalProperties": false,
                                            "description": "Use the `objectMatchValueObjectSubtype` for more complex match criteria.",
                                            "title": "Object",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "options": {
                                                "additionalProperties": false,
                                                "description": "If using the `object` match value subtype, use this array to list the values to match on.",
                                                "type": "object",
                                                "properties": {
                                                  "value": {
                                                    "description": "If using the `simple` or `range` match value subtypes, enter the value attributes in the incoming request to match on. Valid entries vary by match type. For example, GET and POST are valid entries for the `method` match type.",
                                                    "nullable": true,
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "valueCaseSensitive": {
                                                    "description": "Set to `true` if the entries for `value` should be evaluated based on case sensitivity.",
                                                    "type": "boolean"
                                                  },
                                                  "valueEscaped": {
                                                    "description": "Set to `true` if the entries for `value` includes escaped characters.",
                                                    "type": "boolean"
                                                  },
                                                  "valueHasWildcard": {
                                                    "description": "Set to `true` if the entries for `value` includes wildcards.",
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "name": {
                                                "description": "If using a match type that supports `name` attributes, enter the value in the incoming request to match on. The following match types support this property: `cookie`, `header`, `parameter`, and `query`.",
                                                "maxLength": 8192,
                                                "minLength": 1,
                                                "type": "string"
                                              },
                                              "nameCaseSensitive": {
                                                "description": "When set to `true`, the `name` match is case-sensitive.",
                                                "type": "boolean"
                                              },
                                              "nameHasWildcard": {
                                                "description": "When set to `true`, `name` matches can include `*` and `?` wildcards.",
                                                "type": "boolean"
                                              },
                                              "type": {
                                                "description": "The array type, which is `object`.",
                                                "type": "string",
                                                "enum": [
                                                  "object"
                                                ]
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "matchType",
                                          "matchValue"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "matchType",
                                          "objectMatchValue"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "matchesAlways": {
                                  "description": "The match rule is always on when `true`. When `false`, the rule is applied according to the `start` and `end` times.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the rule.",
                                  "maxLength": 8192,
                                  "nullable": true,
                                  "type": "string"
                                },
                                "passThroughPercent": {
                                  "description": "The range `0.000: 99.000` specifies the percentage of requests that pass through to the origin. The value of `100` means the request always passes through to the origin. For Visitor Prioritization, a value of `-1` means send everyone to the waiting room.",
                                  "maximum": 100,
                                  "minimum": -1,
                                  "type": "number"
                                },
                                "start": {
                                  "description": "The start time for this match rule. When `matchesAlways` is `false`, enter the `start` value in epoch seconds.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "type": {
                                  "description": "The type of Cloudlet the rule is for. For example, the string for Visitor Prioritization is `vpMatchRule`.",
                                  "type": "string",
                                  "enum": [
                                    "vpMatchRule"
                                  ]
                                },
                                "useIncomingQueryString": {
                                  "description": "If set to `true`, the Cloudlet includes the request's query string in the rewritten or forwarded URL.",
                                  "type": "boolean"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/match-rule-vp.yaml"
                              }
                            }
                          ]
                        },
                        "x-akamai": {
                          "file-path": "schemas/match-rules.yaml"
                        }
                      }
                    },
                    "name": {
                      "description": "The name of the rule.",
                      "type": "string"
                    },
                    "start": {
                      "description": "The start time for this match rule in epoch seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "type": {
                      "description": "The type of Cloudlet the rule is for; Application Load Balancer is `albMatchRule`, API Prioritization is `apMatchRule`, Audience Segmentation is `asMatchRule`, Phased Release is `cdMatchRule`, Edge Redirector is `erMatchRule`, Forward Rewrite is`frMatchRule`, Request Control is `igMatchRule` and Visitor Prioritization is  `vpMatchRule`.",
                      "type": "string",
                      "enum": [
                        "albMatchRule",
                        "apMatchRule",
                        "asMatchRule",
                        "cdMatchRule",
                        "erMatchRule",
                        "frMatchRule",
                        "igMatchRule",
                        "vpMatchRule"
                      ]
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/put-policy-version-rule-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "The ID of the rule within the policy version.",
          "example": "{{akaRuleId}}",
          "in": "path",
          "name": "akaRuleId",
          "required": true,
          "schema": {
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/akaRuleId-path.yaml"
          }
        },
        {
          "description": "The version number of the policy.",
          "example": "{{version}}",
          "in": "path",
          "name": "version",
          "required": true,
          "schema": {
            "type": "number"
          },
          "x-akamai": {
            "file-path": "parameters/version-path.yaml"
          }
        },
        {
          "description": "The ID of the policy.",
          "example": "{{policyId}}",
          "in": "path",
          "name": "policyId",
          "required": true,
          "schema": {
            "type": "number"
          },
          "x-akamai": {
            "file-path": "parameters/policyId-path.yaml"
          }
        }
      ]
    },
    "/properties": {
      "get": {
        "description": "Run this operation to return the complete list of the associated properties.",
        "operationId": "get-properties",
        "summary": "List associated properties",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-properties"
        },
        "responses": {
          "200": {
            "description": "Returns information about the associated properties.",
            "content": {
              "application/json": {
                "example": {
                  "www.myproperty.com": {
                    "groupId": 40498,
                    "name": "www.example.com",
                    "newestVersion": {
                      "activatedBy": "jperez",
                      "activationDate": "2018-01-01",
                      "version": 5,
                      "referencedPolicies": [
                        "fr_policy_1"
                      ],
                      "cloudletsOrigins": {
                        "customerOrigin1": {
                          "checksum": "691365709300c782c875ea43244a3d3f",
                          "hostname": "origin1.example.com",
                          "originId": "customerOrigin1",
                          "type": "CUSTOMER"
                        },
                        "customerOrigin2": {
                          "checksum": "da016ec7b425cc1b601352d6078d0b51",
                          "hostname": "origin2.example.com",
                          "originId": "customerOrigin2",
                          "type": "CUSTOMER"
                        }
                      }
                    },
                    "production": {
                      "activatedBy": "szhang",
                      "activationDate": "2018-01-01",
                      "version": 5,
                      "referencedPolicies": [
                        "fr_policy_1"
                      ],
                      "cloudletsOrigins": {
                        "customerOrigin1": {
                          "checksum": "691365709300c782c875ea43244a3d3f",
                          "hostname": "origin1.example.com",
                          "originId": "customerOrigin1",
                          "type": "CUSTOMER"
                        },
                        "netStorageOrigin1": {
                          "checksum": "773636eb8f6c65f5dc01cc3d84f5c0a8",
                          "hostname": "download.akamai.com/12345",
                          "originId": "netStorageOrigin1",
                          "type": "NETSTORAGE"
                        }
                      }
                    },
                    "staging": {
                      "activatedBy": "afero",
                      "activationDate": "2018-01-01",
                      "version": 5,
                      "referencedPolicies": [
                        "fr_policy_1"
                      ],
                      "cloudletsOrigins": {
                        "customerOrigin1": {
                          "checksum": "691365709300c782c875ea43244a3d3f",
                          "hostname": "origin1.example.com",
                          "originId": "customerOrigin1",
                          "type": "CUSTOMER"
                        },
                        "customerOrigin2": {
                          "checksum": "da016ec7b425cc1b601352d6078d0b51",
                          "hostname": "origin2.example.com",
                          "originId": "customerOrigin2",
                          "type": "CUSTOMER"
                        },
                        "netStorageOrigin1": {
                          "checksum": "773636eb8f6c65f5dc01cc3d84f5c0a8",
                          "hostname": "download.akamai.com/12345",
                          "originId": "netStorageOrigin1",
                          "type": "NETSTORAGE"
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about the newest property version and the property’s current configuration on the production and staging networks.",
                  "type": "object",
                  "required": [
                    "groupId",
                    "name",
                    "newestVersion"
                  ],
                  "properties": {
                    "groupId": {
                      "description": "The group association for the property.",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The name of the property. This value also appears at the start of each separate property object.",
                      "type": "string"
                    },
                    "newestVersion": {
                      "description": "Contains information about the newest property version.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information about the newest property version and the property’s current configuration on the production and staging networks for a specific `policyId`.",
                        "type": "object",
                        "properties": {
                          "activatedBy": {
                            "description": "The name of the user who activated property.",
                            "type": "string"
                          },
                          "activationDate": {
                            "description": "The date, in ISO 8601 format indicating when the property was activated.",
                            "format": "date",
                            "type": "string"
                          },
                          "cloudletsOrigins": {
                            "description": "Contains information about each conditional origin.",
                            "type": "array",
                            "items": {
                              "description": "Schema for a Cloudlets Origin.",
                              "x-akamai": {
                                "file-path": "schemas/origin.yaml"
                              },
                              "anyOf": [
                                {
                                  "additionalProperties": false,
                                  "title": "APPLICATION_LOAD_BALANCER",
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.",
                                      "type": "string"
                                    },
                                    "description": {
                                      "description": "The description of the load balancing configuration provided by a user.",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "maxLength": 63,
                                      "minLength": 2,
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as. In this response the conditonal origin `type` is `APPLICATION_LOAD_BALANCER`.",
                                      "type": "string",
                                      "enum": [
                                        "APPLICATION_LOAD_BALANCER"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "title": "CUSTOMER",
                                  "required": [
                                    "hostname",
                                    "originId",
                                    "type"
                                  ],
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.",
                                      "type": "string"
                                    },
                                    "hostname": {
                                      "description": "The name of the host that can be used as a conditional origin.",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as, in this case `CUSTOMER`.",
                                      "type": "string",
                                      "enum": [
                                        "CUSTOMER"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "title": "NETSTORAGE",
                                  "required": [
                                    "hostname",
                                    "originId",
                                    "type"
                                  ],
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.",
                                      "type": "string"
                                    },
                                    "hostname": {
                                      "description": "The name of the host that can be used as a conditional origin.",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as, in this case `NETSTORAGE`.",
                                      "type": "string",
                                      "enum": [
                                        "NETSTORAGE"
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "referencedPolicies": {
                            "description": "The names of Cloudlets policies for this version of the property.",
                            "type": "string"
                          },
                          "version": {
                            "description": "The version number of the property.",
                            "type": "integer"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/property.yaml"
                        }
                      }
                    },
                    "production": {
                      "description": "Contains information about the property’s current configuration on the `production` network.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information about the newest property version and the property’s current configuration on the production and staging networks for a specific `policyId`.",
                        "type": "object",
                        "properties": {
                          "activatedBy": {
                            "description": "The name of the user who activated property.",
                            "type": "string"
                          },
                          "activationDate": {
                            "description": "The date, in ISO 8601 format indicating when the property was activated.",
                            "format": "date",
                            "type": "string"
                          },
                          "cloudletsOrigins": {
                            "description": "Contains information about each conditional origin.",
                            "type": "array",
                            "items": {
                              "description": "Schema for a Cloudlets Origin.",
                              "x-akamai": {
                                "file-path": "schemas/origin.yaml"
                              },
                              "anyOf": [
                                {
                                  "additionalProperties": false,
                                  "title": "APPLICATION_LOAD_BALANCER",
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.",
                                      "type": "string"
                                    },
                                    "description": {
                                      "description": "The description of the load balancing configuration provided by a user.",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "maxLength": 63,
                                      "minLength": 2,
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as. In this response the conditonal origin `type` is `APPLICATION_LOAD_BALANCER`.",
                                      "type": "string",
                                      "enum": [
                                        "APPLICATION_LOAD_BALANCER"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "title": "CUSTOMER",
                                  "required": [
                                    "hostname",
                                    "originId",
                                    "type"
                                  ],
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.",
                                      "type": "string"
                                    },
                                    "hostname": {
                                      "description": "The name of the host that can be used as a conditional origin.",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as, in this case `CUSTOMER`.",
                                      "type": "string",
                                      "enum": [
                                        "CUSTOMER"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "title": "NETSTORAGE",
                                  "required": [
                                    "hostname",
                                    "originId",
                                    "type"
                                  ],
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.",
                                      "type": "string"
                                    },
                                    "hostname": {
                                      "description": "The name of the host that can be used as a conditional origin.",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as, in this case `NETSTORAGE`.",
                                      "type": "string",
                                      "enum": [
                                        "NETSTORAGE"
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "referencedPolicies": {
                            "description": "The names of Cloudlets policies for this version of the property.",
                            "type": "string"
                          },
                          "version": {
                            "description": "The version number of the property.",
                            "type": "integer"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/property.yaml"
                        }
                      }
                    },
                    "staging": {
                      "description": "Contains information about the property’s current configuration on the `staging` network.",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information about the newest property version and the property’s current configuration on the production and staging networks for a specific `policyId`.",
                        "type": "object",
                        "properties": {
                          "activatedBy": {
                            "description": "The name of the user who activated property.",
                            "type": "string"
                          },
                          "activationDate": {
                            "description": "The date, in ISO 8601 format indicating when the property was activated.",
                            "format": "date",
                            "type": "string"
                          },
                          "cloudletsOrigins": {
                            "description": "Contains information about each conditional origin.",
                            "type": "array",
                            "items": {
                              "description": "Schema for a Cloudlets Origin.",
                              "x-akamai": {
                                "file-path": "schemas/origin.yaml"
                              },
                              "anyOf": [
                                {
                                  "additionalProperties": false,
                                  "title": "APPLICATION_LOAD_BALANCER",
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.",
                                      "type": "string"
                                    },
                                    "description": {
                                      "description": "The description of the load balancing configuration provided by a user.",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "maxLength": 63,
                                      "minLength": 2,
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as. In this response the conditonal origin `type` is `APPLICATION_LOAD_BALANCER`.",
                                      "type": "string",
                                      "enum": [
                                        "APPLICATION_LOAD_BALANCER"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "title": "CUSTOMER",
                                  "required": [
                                    "hostname",
                                    "originId",
                                    "type"
                                  ],
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.",
                                      "type": "string"
                                    },
                                    "hostname": {
                                      "description": "The name of the host that can be used as a conditional origin.",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as, in this case `CUSTOMER`.",
                                      "type": "string",
                                      "enum": [
                                        "CUSTOMER"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "additionalProperties": false,
                                  "title": "NETSTORAGE",
                                  "required": [
                                    "hostname",
                                    "originId",
                                    "type"
                                  ],
                                  "properties": {
                                    "checksum": {
                                      "description": "The checksum that distinguishes this conditional origin from any others that might share the same name.",
                                      "type": "string"
                                    },
                                    "hostname": {
                                      "description": "The name of the host that can be used as a conditional origin.",
                                      "type": "string"
                                    },
                                    "originId": {
                                      "description": "The conditional origin's unique identifier.",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of origin this conditional origin is set up as, in this case `NETSTORAGE`.",
                                      "type": "string",
                                      "enum": [
                                        "NETSTORAGE"
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "referencedPolicies": {
                            "description": "The names of Cloudlets policies for this version of the property.",
                            "type": "string"
                          },
                          "version": {
                            "description": "The version number of the property.",
                            "type": "integer"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/property.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-properties-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/schemas": {
      "get": {
        "description": "Get links to all the JSON schemas by Cloudlet type (`cloudletCode`) to validate different requests used with this API. See [List Cloudlets](https://techdocs.akamai.com/cloudlets/reference/get-cloudlets) for information on how to obtain the `cloudletCode`.",
        "operationId": "get-schemas",
        "summary": "List schemas per Cloudlet",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-schemas"
        },
        "responses": {
          "200": {
            "description": "Returns the list of schemas.",
            "content": {
              "application/json": {
                "example": {
                  "schemas": [
                    {
                      "additionalDescription": "null",
                      "description": "applied to create/update match rule requests for ER cloudlets, where requests are of the form: POST|PUT /api/v2/policies/{policyId}/versions/{versionId}/rules/{ruleId}",
                      "location": "/cloudlets/api/v2/schemas/match_rule-ER-1.0.json",
                      "title": "EDGE REDIRECTOR MATCH RULE",
                      "version": "1.0"
                    },
                    {
                      "additionalDescription": "applied to policy version requests for ER cloudlets",
                      "description": "applied to create/clone policy version requests of form: POST /policies/{policyId}/versions ",
                      "location": "/cloudlets/api/v2/schemas/create-nimbus_policy_version-ER-1.0.json",
                      "title": "CREATE/CLONE POLICY VERSION",
                      "version": "1.0"
                    },
                    {
                      "additionalDescription": "applied to policy version requests for ER cloudlets",
                      "description": "applied to update policy version requests of form: PUT /policies/{policyId}/versions/{versionId} ",
                      "location": "/cloudlets/api/v2/schemas/update-nimbus_policy_version-ER-1.0.json",
                      "title": "UPDATE POLICY VERSION",
                      "version": "1.0"
                    },
                    {
                      "additionalDescription": "null",
                      "description": "applied to requests to create policies of the form: POST /cloudlets/api/v2/policies",
                      "location": "/cloudlets/api/v2/schemas/create-policy.json",
                      "title": "CREATE POLICY",
                      "version": "1.0"
                    },
                    {
                      "additionalDescription": "null",
                      "description": "applied to all requests to update policies of the form: PUT /cloudlets/api/v2/policies/{policyId}",
                      "location": "/cloudlets/api/v2/schemas/update-policy.json",
                      "title": "UPDATE POLICY",
                      "version": "1.0"
                    },
                    {
                      "additionalDescription": "null",
                      "description": "applied to requests to clone policies of the form: POST /cloudlets/api/v2/policies?clonePolicyId=***",
                      "location": "/cloudlets/api/v2/schemas/clone-policy.json",
                      "title": "CLONE POLICY",
                      "version": "1.0"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "JSON schemas for Cloudlet policies.",
                  "type": "object",
                  "properties": {
                    "schemas": {
                      "description": "Returns the JSON schemas available for this API. Available schemas include; `create-policy.json`, `update-policy.json`, `clone-policy.json`, `create-nimbus_policy_version-{cloudletType}-1.0.json`, `update-nimbus_policy_version-{cloudletType}-1.0.json`, and `match_rule-{cloudletType}-1.0.json`.",
                      "type": "array",
                      "items": {
                        "additionalProperties": true,
                        "description": "Return schema.",
                        "type": "object",
                        "properties": {
                          "additionalDescription": {
                            "description": "Cloudlet-specific information for the JSON schema.",
                            "type": "string"
                          },
                          "description": {
                            "description": "A description of when the JSON schema is applied.",
                            "type": "string"
                          },
                          "location": {
                            "description": "The network path for the JSON schema.",
                            "type": "string"
                          },
                          "title": {
                            "description": "The title of the JSON schema; `CREATE POLICY`, `UPDATE POLICY VERSION`, `CLONE POLICY`, `CREATE/CLONE POLICY VERSION`, `UPDATE POLICY VERSION`, or `{cloudletType} MATCH RULE`",
                            "type": "string"
                          },
                          "version": {
                            "description": "The specific version of the JSON schema.",
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/schema.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-schemas-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The two- or three- letter code of the Cloudlet you want to view all schemas for. This value corresponds to the `cloudletCode` member available from [List Cloudlets](https://techdocs.akamai.com/cloudlets/reference/get-cloudlets).",
            "example": "{{cloudletType}}",
            "in": "query",
            "name": "cloudletType",
            "schema": {
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/cloudletType-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/schemas/{schemaName}": {
      "get": {
        "description": "Get a JSON schema for interacting with policies to validate different requests used with this API.",
        "operationId": "get-schemas-schemaname",
        "summary": "Get a schema",
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Cloudlets API",
          "url": "https://techdocs.akamai.com/cloudlets/reference/get-schemas-schemaname"
        },
        "responses": {
          "200": {
            "description": "Return schema.",
            "content": {
              "application/json": {
                "example": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "additionalProperties": false,
                  "description": "applied to requests to create policies of the form: POST /cloudlets/api/v2/policies",
                  "location": "/cloudlets/api/v2/schemas/create-policy.json",
                  "title": "CREATE POLICY",
                  "type": "object",
                  "version": "1.0",
                  "required": [
                    "cloudletId",
                    "name"
                  ],
                  "properties": {
                    "cloudletId": {
                      "type": "integer",
                      "enum": [
                        0,
                        1,
                        3,
                        4,
                        5,
                        6,
                        7,
                        9
                      ]
                    },
                    "description": {
                      "maxLength": 255,
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "groupId": {
                      "type": "integer"
                    },
                    "name": {
                      "maxLength": 64,
                      "pattern": "^[a-z_A-Z0-9]+$",
                      "type": "string"
                    },
                    "propertyName": {
                      "pattern": "^[a-z_A-Z0-9\\.\\-]+$",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "TBD.",
                  "type": "object",
                  "properties": {
                    "additionalDescription": {
                      "description": "Cloudlet-specific information for the JSON schema.",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of when the JSON schema is applied.",
                      "type": "string"
                    },
                    "location": {
                      "description": "The network path for the JSON schema.",
                      "type": "string"
                    },
                    "title": {
                      "description": "The title of the JSON schema.",
                      "type": "string"
                    },
                    "version": {
                      "description": "The specific version of the JSON schema.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/get-schemas-schemaname-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "The name of the JSON schema file. JSON schema filenames include; `create-policy.json`, `update-policy.json`, `clone-policy.json`, `create-nimbus_policy_version-{cloudletCode}-1.0.json`, `update-nimbus_policy_version-{cloudletCode}-1.0.json`, and `match_rule-{cloudletCode}-1.0.json`. The value for `cloudletCode` is either `ALB`, `AP`, `AS`, `CD`, `ER`, `FR`, `IG`, or `VP`.",
          "example": "{{schemaName}}",
          "in": "path",
          "name": "schemaName",
          "required": true,
          "schema": {
            "example": "create-nimbus_policy_version-AS-1.0.json",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/schemaName-path.yaml"
          }
        }
      ]
    }
  },
  "x-readme": {
    "samples-languages": [
      "curl",
      "python",
      "node"
    ]
  },
  "servers": [
    {
      "url": "https://{hostname}/cloudlets/api/v2"
    }
  ]
}