type: object
description: |-
  Contains information that you need to provide when creating a key collection version.
  
x-akamai:
  file-path: schemas/pemPublicKeysRequest.yaml
additionalProperties: false
required:
- primaryKey
properties:
  description:
    type: string
    description: |
      A descriptive label for the key collection version.
  primaryKey:
    type: string
    description: |
      The primary public key that you want to use to validate JWT signatures. You can use an RSA key that's between 1024 and 4096 bits long, an ECDSA key that uses the P-256 (secp256k1) curve. Use a key in PEM format, which presents base64-encoded data between the begin header and the end footer. Make sure to use the same  encryption algorithm for the public keys in the `primaryKey` and `secondaryKey` members, either `RSA` or `ECDSA_P_256`. See [Keys and JWT signing algorithms](ref:keys-and-jwt-signing-algorithms).
  secondaryKey:
    type: string
    description: |
      The secondary public key that you want to use to validate JWT signatures in case `primaryKey` fails. You can use an RSA key that's between 1024 and 4096  bits long, an ECDSA key that uses the P-256 (secp256k1) curve. Use a key in PEM format, which presents base64-encoded data between the begin header and the end footer. Make sure to use the same encryption algorithm for the public keys in the `primaryKey` and `secondaryKey` members, either `RSA` or `ECDSA_P_256`. See [Key rotation](ref:rotate-public-keys) and [Keys and JWT signing algorithms](ref:keys-and-jwt-signing-algorithms).
