{
  "openapi": "3.0.0",
  "externalDocs": {
    "description": "See documentation for Akamai's Enterprise Application Access API",
    "url": "https://techdocs.akamai.com/eaa-api/reference"
  },
  "info": {
    "title": "Akamai: Enterprise Application Access API",
    "version": "1",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "paths": {
    "/device-posture/inventory/device-history/{deviceId}": {
      "get": {
        "description": "Lists device history for a particular device.",
        "operationId": "get-device-history",
        "summary": "Get device history",
        "tags": [
          "Device history"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-device-history"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 2
                  },
                  "objects": [
                    {
                      "client_version": "1.3.2",
                      "device_name": "test-device",
                      "etp_client_status": "installed",
                      "firewall_status": "poor",
                      "idp_username": "username@akamai.com",
                      "os_auto_update": true,
                      "os_name": "Microsoft Windows 10 Pro",
                      "os_update_timestamp": "2019-10-09T00:00:00Z",
                      "os_version": "10.0.18362.239",
                      "signal_timestamp": "2019-10-16T16:52:47.116999+00:00",
                      "system_disk_encryption": false,
                      "user_id": "Administrator",
                      "anti_malware_running": [
                        "McAfee VirusScan Enterprise",
                        "CrowdStrike Falcon Sensor"
                      ],
                      "anti_malware_info": [
                        {
                          "name": "McAfee VirusScan Enterprise",
                          "passed": true
                        },
                        {
                          "name": "CrowdStrike Falcon Sensor",
                          "passed": true
                        }
                      ],
                      "anti_malware_status": [
                        {
                          "name": "Any Vendor",
                          "passed": true
                        },
                        {
                          "name": "Anti-Malware EMEA",
                          "passed": false
                        }
                      ],
                      "browsers": [
                        {
                          "name": "Edge",
                          "version": "44.18362.1.0"
                        },
                        {
                          "name": "Chrome",
                          "version": "77.0.3865.120"
                        },
                        {
                          "name": "Internet Explorer",
                          "version": "11.0.135"
                        }
                      ]
                    },
                    {
                      "client_version": "1.3.2",
                      "device_name": "test-device",
                      "etp_client_status": "installed",
                      "firewall_status": "poor",
                      "idp_username": "username@akamai.com",
                      "os_auto_update": true,
                      "os_name": "Microsoft Windows 10 Pro",
                      "os_update_timestamp": "2019-10-09T00:00:00Z",
                      "os_version": "10.0.18362.239",
                      "signal_timestamp": "2019-10-15T20:38:28.981016+00:00",
                      "system_disk_encryption": false,
                      "user_id": "Administrator",
                      "anti_malware_running": [
                        "McAfee VirusScan Enterprise"
                      ],
                      "anti_malware_info": [
                        {
                          "name": "McAfee VirusScan Enterprise",
                          "passed": true
                        },
                        {
                          "name": "CrowdStrike Falcon Sensor",
                          "passed": false
                        }
                      ],
                      "anti_malware_status": [
                        {
                          "name": "Any Vendor",
                          "passed": true
                        },
                        {
                          "name": "Anti-Malware Profile Example 1",
                          "passed": false
                        },
                        {
                          "name": "Anti-Malware Profile Example 2",
                          "passed": true
                        },
                        {
                          "name": "Anti-Malware Profile Example 3",
                          "passed": false
                        }
                      ],
                      "browsers": [
                        {
                          "name": "Edge",
                          "version": "44.18362.1.0"
                        },
                        {
                          "name": "Firefox",
                          "version": "60.9.0"
                        },
                        {
                          "name": "Internet Explorer",
                          "version": "11.0.135"
                        }
                      ]
                    },
                    {
                      "client_version": "1.3.2",
                      "device_name": "test-device",
                      "etp_client_status": "not-installed",
                      "firewall_status": "poor",
                      "idp_username": "username@akamai.com",
                      "os_auto_update": true,
                      "os_name": "Microsoft Windows 10 Pro",
                      "os_update_timestamp": "2019-09-12T00:00:00Z",
                      "os_version": "10.0.18362.239",
                      "signal_timestamp": "2019-10-09T01:18:41.082591+00:00",
                      "system_disk_encryption": false,
                      "user_id": "Administrator",
                      "anti_malware_running": [
                        "McAfee VirusScan Enterprise"
                      ],
                      "anti_malware_info": [
                        {
                          "name": "McAfee VirusScan Enterprise",
                          "passed": true
                        },
                        {
                          "name": "CrowdStrike Falcon Sensor",
                          "passed": false
                        }
                      ],
                      "anti_malware_status": [
                        {
                          "name": "Any Vendor",
                          "passed": true
                        },
                        {
                          "name": "Anti-Malware Profile Example 3",
                          "passed": false
                        }
                      ],
                      "browsers": [
                        {
                          "name": "Edge",
                          "version": "44.18362.1.0"
                        },
                        {
                          "name": "Chrome",
                          "version": "77.0.3865.90"
                        }
                      ]
                    },
                    {
                      "client_version": "1.3.2",
                      "device_name": "test-device",
                      "etp_client_status": "installed",
                      "firewall_status": "poor",
                      "idp_username": "username@akamai.com",
                      "os_auto_update": true,
                      "os_name": "Microsoft Windows 10 Pro",
                      "os_update_timestamp": "2019-09-12T00:00:00Z",
                      "os_version": "10.0.18362.239",
                      "signal_timestamp": "2019-10-03T21:27:20.510988+00:00",
                      "system_disk_encryption": false,
                      "user_id": "",
                      "anti_malware_running": [
                        "McAfee VirusScan Enterprise"
                      ],
                      "anti_malware_info": [
                        {
                          "name": "McAfee VirusScan Enterprise",
                          "passed": true
                        },
                        {
                          "name": "CrowdStrike Falcon Sensor",
                          "passed": false
                        }
                      ],
                      "anti_malware_status": [
                        {
                          "name": "Any Vendor",
                          "passed": true
                        },
                        {
                          "name": "Anti-Malware Profile Example 3",
                          "passed": false
                        }
                      ],
                      "browsers": [
                        {
                          "name": "Firefox",
                          "version": "60.9.0"
                        },
                        {
                          "name": "Internet Explorer",
                          "version": "11.0.135"
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "type": "object",
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "Contains device history information.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Device history information.",
                        "type": "object",
                        "properties": {
                          "anti_malware_info": {
                            "description": "Anti-malware details for a device.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Anti-malware name and status for a device.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "The name of the anti-malware software.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "status": {
                                  "description": "The status of the device for that anti-malware software, could be `true`, `false`, or `Unknown`.",
                                  "oneOf": [
                                    {
                                      "minLength": 1,
                                      "title": "String",
                                      "type": "string"
                                    },
                                    {
                                      "title": "Boolean",
                                      "type": "boolean"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "anti_malware_running": {
                            "description": "The anti-malware software that's active on the device.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "description": "Names of anti-malware software that's active on the device.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "anti_malware_status": {
                            "description": "The anti-malware profile status details for a device.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "The anti-malware profile name and status for a device.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "The name of the anti-malware profile.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "status": {
                                  "description": "The status of the device for that anti-malware profile.",
                                  "type": "boolean"
                                }
                              }
                            }
                          },
                          "browsers": {
                            "description": "Browser that's active on the device.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains browser details for a device.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "The name of the browser.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "version": {
                                  "description": "The version of the browser.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "client_version": {
                            "description": "The version of the client.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "device_name": {
                            "description": "The name of the device.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "etp_client_status": {
                            "description": "Whether ETP client is `installed` or `not-installed`.",
                            "type": "string",
                            "enum": [
                              "installed",
                              "not-installed"
                            ]
                          },
                          "firewall_status": {
                            "description": "The status of the firewall. Either `poor` or `good`.",
                            "type": "string",
                            "enum": [
                              "poor",
                              "good"
                            ]
                          },
                          "idp_username": {
                            "description": "A unique identifier for the IDP username.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "os_auto_update": {
                            "description": "Enables the device's operating system automatic updates feature.",
                            "type": "boolean"
                          },
                          "os_name": {
                            "description": "The name of the operating system.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "os_update_timestamp": {
                            "description": "ISO 8601 timestamp marking when the last operating system update occurred.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "os_version": {
                            "description": "The version of the Operating System.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "signal_timestamp": {
                            "description": "ISO 8601 timestamp of the latest signal received from the device.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "system_disk_encryption": {
                            "description": "Whether the device's disk is encrypted.",
                            "type": "boolean"
                          },
                          "user_id": {
                            "description": "The user for the device.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/deviceHistory.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for a particular device.",
          "example": "{{deviceId}}",
          "in": "path",
          "name": "deviceId",
          "required": true,
          "schema": {
            "example": 134,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/deviceId-path.yaml"
          }
        }
      ]
    },
    "/device-posture/inventory/device/{deviceId}/op/clear": {
      "put": {
        "description": "Marks a device as safe and clear from ETP threats.",
        "operationId": "put-device-clear",
        "summary": "Update device status to clear",
        "tags": [
          "Device"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-device-clear"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for a particular device.",
          "example": "{{deviceId}}",
          "in": "path",
          "name": "deviceId",
          "required": true,
          "schema": {
            "example": 134,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/deviceId-path.yaml"
          }
        }
      ]
    },
    "/device-posture/inventory/list": {
      "get": {
        "description": "Lists device inventories.",
        "operationId": "get-device-posture-inventory",
        "summary": "List device inventory",
        "tags": [
          "Device inventory"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-device-posture-inventory"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": "?limit=20&offset=40",
                    "offset": 20,
                    "previous": "?limit=20&offset=0",
                    "total_count": 5
                  },
                  "objects": [
                    {
                      "client_version": "0.3.0",
                      "device_id": "472d4ebbf2a9e9b05c6b1c366fb7df801d0fe59d18cf74e3a15476ba42549c6f",
                      "device_name": "mac-device-1",
                      "etp_client_status": "not-installed",
                      "firewall_status": "poor",
                      "idp_username": "username@akamai.com",
                      "mobile_device": false,
                      "os_auto_update": true,
                      "os_name": "Mac OS X",
                      "os_update_timestamp": "2018-07-30T16:08:42Z",
                      "os_version": "10.13.5",
                      "signal_timestamp": "2019-07-11T13:11:39.552703+00:00",
                      "system_disk_encryption": false,
                      "user_id": "test_user",
                      "anti_malware_running": [
                        "Carbon Black",
                        "CrowdStrike Falcon Sensor"
                      ],
                      "carbon_black": {
                        "last_contact": null,
                        "policy_id": "N/A",
                        "policy_name": "policyA",
                        "sensor_version": "version123",
                        "status": "Active"
                      },
                      "crowdstrike": {
                        "agent_status": "Healthy",
                        "aid": "7445e54fef9f49059c1b08c72skdhfjk",
                        "cid": "b8d9a8c2c8734cf8ab68c0a9rehfuegf",
                        "last_contact": "2020-08-26T03:10:46+00:00",
                        "sensor_version": "5.34.11501.0",
                        "validity": "Valid"
                      },
                      "etp_signals": {
                        "threat_detected": false
                      },
                      "anti_malware_info": [
                        {
                          "name": "Carbon Black",
                          "passed": true
                        },
                        {
                          "name": "CrowdStrike Falcon Sensor",
                          "passed": true
                        }
                      ],
                      "anti_malware_status": [
                        {
                          "name": "Any Vendor",
                          "passed": true
                        },
                        {
                          "name": "McAfee VirusScan Enterprise",
                          "passed": false
                        }
                      ],
                      "browsers": [
                        {
                          "name": "Safari",
                          "version": "11.1.1"
                        }
                      ],
                      "certificate_profile": [
                        {
                          "name": "Certificate Profile 1",
                          "passed": false
                        },
                        {
                          "name": "Certificate Profile 2",
                          "passed": false
                        },
                        {
                          "name": "Certificate Profile 3",
                          "passed": true
                        }
                      ],
                      "risk_posture_tags": [
                        {
                          "id": 412,
                          "name": "WindowsOS_Preferred",
                          "passed": false,
                          "tier": false,
                          "remediations": [
                            "Operating system version is out of date. Update your operating system to version 10.14.5."
                          ]
                        },
                        {
                          "id": 410,
                          "name": "MacOS_ONLY",
                          "passed": false,
                          "tier": false,
                          "remediations": [
                            "Operating system version is out of date. Update your operating system to version 10.14.5."
                          ]
                        }
                      ]
                    },
                    {
                      "client_version": "0.3.0",
                      "device_id": "1c962e601cf36b2874ac1112117ccb6d179b3f5d0da7bf4d880d1a3707e0e761",
                      "device_name": "mac-device-2",
                      "etp_client_status": "installed",
                      "firewall_status": "good",
                      "idp_username": "username@akamai.com",
                      "mobile_device": false,
                      "os_auto_update": true,
                      "os_name": "Mac OS X",
                      "os_update_timestamp": "2018-10-30T19:28:50Z",
                      "os_version": "10.13.6",
                      "signal_timestamp": "2019-07-11T13:30:59.907087+00:00",
                      "system_disk_encryption": true,
                      "user_id": "test_user",
                      "anti_malware_running": [
                        "McAfee VirusScan Enterprise"
                      ],
                      "carbon_black": {
                        "last_contact": null,
                        "policy_id": "N/A",
                        "policy_name": "policyA",
                        "sensor_version": "version123",
                        "status": "Active"
                      },
                      "crowdstrike": {
                        "agent_status": "Unhealthy",
                        "aid": "7445e54fef9f49059c1b08c72skdhfjk",
                        "cid": "b8d9a8c2c8734cf8ab68c0a9rehfuegf",
                        "last_contact": null,
                        "sensor_version": "N/A",
                        "validity": "Invalid"
                      },
                      "etp_signals": {
                        "threat_detected": false
                      },
                      "anti_malware_info": [
                        {
                          "name": "McAfee VirusScan Enterprise",
                          "passed": true
                        },
                        {
                          "name": "CrowdStrike Falcon Sensor",
                          "passed": false
                        }
                      ],
                      "anti_malware_status": [
                        {
                          "name": "Any Vendor",
                          "passed": true
                        },
                        {
                          "name": "MS Defender",
                          "passed": false
                        }
                      ],
                      "browsers": [
                        {
                          "name": "Chrome",
                          "version": "75.0.3770.100"
                        },
                        {
                          "name": "Safari",
                          "version": "12.1.1"
                        }
                      ],
                      "certificate_profile": [
                        {
                          "name": "Certificate Profile 1",
                          "passed": true
                        },
                        {
                          "name": "Certificate Profile 2",
                          "passed": true
                        },
                        {
                          "name": "Certificate Profile 3",
                          "passed": true
                        }
                      ],
                      "risk_posture_tags": [
                        {
                          "id": 395,
                          "name": "Finance Tag",
                          "passed": false,
                          "tier": false,
                          "remediations": [
                            "Operating system version is out of date. Update your operating system to version 10.14.5."
                          ]
                        },
                        {
                          "id": 412,
                          "name": "WindowsOS_Preferred",
                          "passed": false,
                          "tier": false,
                          "remediations": [
                            "Operating system version is out of date. Update your operating system to version 10.14.5."
                          ]
                        }
                      ],
                      "risk_posture_tiers": [
                        {
                          "id": 430,
                          "name": "Low",
                          "passed": false,
                          "tier": true,
                          "remediations": [
                            "Operating system version is out of date. Update your operating system to version 10.14.5."
                          ]
                        },
                        {
                          "id": 429,
                          "name": "Medium",
                          "passed": true,
                          "tier": true
                        }
                      ]
                    },
                    {
                      "client_version": "0.3.0",
                      "device_id": "369b5c8a97e0085f813720f7cbc9753e8b667d8112e49e656713fbaa0dbe5115",
                      "device_name": "mac-device-3",
                      "etp_client_status": "installed",
                      "firewall_status": "good",
                      "idp_username": "username@akamai.com",
                      "mobile_device": false,
                      "os_auto_update": true,
                      "os_name": "Mac OS X",
                      "os_update_timestamp": "2019-05-23T03:13:44Z",
                      "os_version": "10.14.5",
                      "signal_timestamp": "2019-07-11T13:36:42.587985+00:00",
                      "system_disk_encryption": true,
                      "user_id": "test_user",
                      "anti_malware_running": [
                        "Carbon Black"
                      ],
                      "carbon_black": {
                        "last_contact": null,
                        "policy_id": "N/A",
                        "policy_name": "policyA",
                        "sensor_version": "version123",
                        "status": "Active"
                      },
                      "crowdstrike": {
                        "agent_status": "Unhealthy",
                        "aid": "N/A",
                        "cid": "N/A",
                        "last_contact": null,
                        "sensor_version": "N/A",
                        "validity": "Invalid"
                      },
                      "etp_signals": {
                        "threat_detected": false
                      },
                      "anti_malware_info": [
                        {
                          "name": "Carbon Black",
                          "passed": true
                        },
                        {
                          "name": "CrowdStrike Falcon Sensor",
                          "passed": false
                        }
                      ],
                      "anti_malware_status": [
                        {
                          "name": "Any Vendor",
                          "passed": true
                        },
                        {
                          "name": "McAfee",
                          "passed": false
                        }
                      ],
                      "browsers": [
                        {
                          "name": "Chrome",
                          "version": "75.0.3770.90"
                        },
                        {
                          "name": "Safari",
                          "version": "12.1.1"
                        }
                      ],
                      "certificate_profile": [
                        {
                          "name": "Certificate Profile 1",
                          "passed": false
                        },
                        {
                          "name": "Certificate Profile 2",
                          "passed": true
                        },
                        {
                          "name": "Certificate Profile 3",
                          "passed": true
                        }
                      ],
                      "risk_posture_tags": [
                        {
                          "id": 411,
                          "name": "WindowsOS_only",
                          "passed": false,
                          "tier": false,
                          "remediations": [
                            "Unsupported operating system."
                          ]
                        },
                        {
                          "id": 396,
                          "name": "Win_server_east",
                          "passed": true,
                          "tier": false
                        }
                      ],
                      "risk_posture_tiers": [
                        {
                          "id": 430,
                          "name": "Low",
                          "passed": false,
                          "tier": true,
                          "remediations": [
                            "Safari is out of date or not supported. Update your version of Safari browser or use a supported browser."
                          ]
                        },
                        {
                          "id": 429,
                          "name": "Medium",
                          "passed": true,
                          "tier": true
                        }
                      ]
                    },
                    {
                      "client_version": "0.9",
                      "device_biometric": true,
                      "device_id": "4B1CF385-01F3-4711-96B7-3A3DD7E354F9",
                      "device_jailbroken": false,
                      "device_name": "iPhone",
                      "device_screen_lock": true,
                      "idp_username": "username@akamai.com",
                      "mobile_device": true,
                      "os_auto_update": null,
                      "os_build": "16F203",
                      "os_name": "iOS",
                      "os_update_timestamp": null,
                      "os_version": "12.3.1",
                      "signal_timestamp": "2019-07-12T18:55:04.240586+00:00",
                      "user_id": "245c5c846caad74f21e2e44f5df2a49d",
                      "browsers": [],
                      "risk_posture_tags": [
                        {
                          "id": 410,
                          "name": "MacOS_ONLY",
                          "passed": false,
                          "tier": false,
                          "remediations": [
                            "Unsupported operating system."
                          ]
                        },
                        {
                          "id": 451,
                          "name": "mobile",
                          "passed": true,
                          "tier": false
                        }
                      ],
                      "risk_posture_tiers": [
                        {
                          "id": 430,
                          "name": "Low",
                          "passed": true,
                          "tier": true
                        }
                      ]
                    },
                    {
                      "client_version": "0.9",
                      "device_biometric": true,
                      "device_id": "128DCDE5-ACB0-411A-8428-5BEAAD983D0C",
                      "device_jailbroken": false,
                      "device_name": "iPhone",
                      "device_screen_lock": true,
                      "idp_username": "username@akamai.com",
                      "mobile_device": true,
                      "os_auto_update": null,
                      "os_build": "16F203",
                      "os_name": "iOS",
                      "os_update_timestamp": null,
                      "os_version": "12.3.1",
                      "signal_timestamp": "2019-07-12T00:07:04.899075+00:00",
                      "user_id": "245c5c846caad74f21e2e44f5df2a49d",
                      "browsers": [],
                      "risk_posture_tags": [
                        {
                          "id": 382,
                          "name": "E2E-tag",
                          "passed": false,
                          "tier": false,
                          "remediations": [
                            "Unsupported operating system."
                          ]
                        },
                        {
                          "id": 411,
                          "name": "WindowsOS_only",
                          "passed": false,
                          "tier": false,
                          "remediations": [
                            "Unsupported operating system."
                          ]
                        }
                      ],
                      "risk_posture_tiers": [
                        {
                          "id": 430,
                          "name": "Low",
                          "passed": true,
                          "tier": true
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "type": "object",
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "Device inventory data.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Device inventory anti-malware information.",
                        "type": "object",
                        "properties": {
                          "anti_malware_info": {
                            "description": "The device's set of anti-malware software.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "The anti-malware name and status for a device.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "The name of the anti-malware software.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "status": {
                                  "description": "The status of the device for that anti-malware software, could be `true`, `false`, or `Unknown`.",
                                  "oneOf": [
                                    {
                                      "minLength": 1,
                                      "title": "String",
                                      "type": "string"
                                    },
                                    {
                                      "title": "Boolean",
                                      "type": "boolean"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "anti_malware_running": {
                            "description": "The device's currently active set of anti-malware software.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "description": "Details of anti-malware software that's active on the device.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "anti_malware_status": {
                            "description": "Names of anti-malware software currently active on the device.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "A device's anti-malware profile name and status.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "The name of the anti-malware profile.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "status": {
                                  "description": "The status of the device for that anti-malware profile.",
                                  "type": "boolean"
                                }
                              }
                            }
                          },
                          "browsers": {
                            "description": "Browser that's active on the device.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains browser information for a device.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "The name of the browser.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "version": {
                                  "description": "The version of the browser.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "carbon_black": {
                            "additionalProperties": false,
                            "description": "Contains Carbon Black information for a device.",
                            "type": "object",
                            "properties": {
                              "last_contact": {
                                "description": "ISO 8601 timestamp marking the last communication between the device's Carbon Black client and the Carbon Black server.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "policy_id": {
                                "description": "Identifies the Carbon Black policy assigned to the device.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "policy_name": {
                                "description": "The name of the Carbon Black policy assigned to the device.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sensor_version": {
                                "description": "The version of Carbon Black installed on the device.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "status": {
                                "description": "The status of the Carbon Black client as returned by the Carbon Black server. Either `Active` or `Inactive`.",
                                "minLength": 1,
                                "type": "string",
                                "enum": [
                                  "Active",
                                  "Inactive"
                                ]
                              }
                            }
                          },
                          "certificate_profile": {
                            "description": "The certificate profile name and status for a device.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "The certificate profile name and status for a device.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "The name of the certificate profile.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "passed": {
                                  "description": "The status of the device for the certificate profile.",
                                  "type": "boolean"
                                }
                              }
                            }
                          },
                          "client_version": {
                            "description": "The version of the client.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "crowdstrike": {
                            "additionalProperties": false,
                            "description": "Contains CrowdStrike information for a device.",
                            "type": "object",
                            "properties": {
                              "agent_status": {
                                "description": "The health status of the Crowdstrike Falcon Sensor as assessed by the Device Posture Service. Either `Healthy` or `Unhealthy`.",
                                "type": "string",
                                "enum": [
                                  "Healthy",
                                  "Unhealthy"
                                ]
                              },
                              "aid": {
                                "description": "The connector ID of the unique CrowdStrike Falcon Sensor for every device of that organization.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "cid": {
                                "description": "The Customer ID of the CrowdStrike Falcon Sensor used by all devices in an organization.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "last_contact": {
                                "description": "ISO 8601 timestamp marking the last communication between the CrowdStrike Falcon Sensor and the CrowdStrike server.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "sensor_version": {
                                "description": "The version of CrowdStrike Falcon Sensor installed on the device.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "validity": {
                                "description": "The validity of the agent ID and customer ID.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "device_biometric": {
                            "description": "Enables biometrics on the device.",
                            "type": "boolean"
                          },
                          "device_id": {
                            "description": "A unique identifier for the device.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "device_jailbroken": {
                            "description": "Whether the device is running a modified or unauthorized version of the operating system.",
                            "type": "boolean"
                          },
                          "device_name": {
                            "description": "The name of the device.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "device_screen_lock": {
                            "description": "Enables the device's screen lock functionality.",
                            "type": "boolean"
                          },
                          "etp_client_status": {
                            "description": "Whether ETP client is `installed` or `not-installed`.",
                            "type": "string",
                            "enum": [
                              "installed",
                              "not-installed"
                            ]
                          },
                          "etp_signals": {
                            "additionalProperties": false,
                            "description": "Contains signal information from Enterprise Threat Protector (ETP).",
                            "type": "object",
                            "properties": {
                              "threat_detected": {
                                "description": "Whether ETP threats have been detected for the device.",
                                "type": "boolean"
                              }
                            }
                          },
                          "firewall_status": {
                            "description": "The status of the firewall. Either `good` or `poor`.",
                            "type": "string",
                            "enum": [
                              "poor",
                              "good"
                            ]
                          },
                          "idp_username": {
                            "description": "A unique identifier for the IDP username.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "mobile_device": {
                            "description": "Whether the device is a mobile device.",
                            "type": "boolean"
                          },
                          "os_auto_update": {
                            "description": "Enables the device's operating system Auto Update feature.",
                            "type": "boolean"
                          },
                          "os_build": {
                            "description": "The build of the operating system version.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "os_name": {
                            "description": "The name of the operating system.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "os_update_timestamp": {
                            "description": "ISO 8601 timestamp marking when the last operating system update occurred.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "os_version": {
                            "description": "The version of the operating system.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "risk_posture_tags": {
                            "description": "The device's pass or fail status and the available risk tags for the configuration.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "description": "Device risk assessment rule information.",
                              "minItems": 1,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "tier",
                                  "count",
                                  "id",
                                  "name"
                                ],
                                "properties": {
                                  "count": {
                                    "description": "The number of devices passing the criteria specified for this risk assessment rule.",
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  "id": {
                                    "description": "A unique identifier for this risk assessment rule.",
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "The name of the risk assessment rule.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "tier": {
                                    "description": "Whether the rule is a tier.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/device-summary-risk-assessment.yaml"
                              }
                            }
                          },
                          "risk_posture_tiers": {
                            "description": "The device's pass or fail status and the available risk tiers for the configuration.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "description": "Device risk assessment rule information.",
                              "minItems": 1,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "type": "object",
                                "required": [
                                  "tier",
                                  "count",
                                  "id",
                                  "name"
                                ],
                                "properties": {
                                  "count": {
                                    "description": "The number of devices passing the criteria specified for this risk assessment rule.",
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  "id": {
                                    "description": "A unique identifier for this risk assessment rule.",
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "The name of the risk assessment rule.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "tier": {
                                    "description": "Whether the rule is a tier.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/device-summary-risk-assessment.yaml"
                              }
                            }
                          },
                          "signal_timestamp": {
                            "description": "ISO 8601 timestamp marking the latest signal received from the device.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "system_disk_encryption": {
                            "description": "Whether the device's disk is encrypted.",
                            "type": "boolean"
                          },
                          "user_id": {
                            "description": "The user for the device.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/deviceInventory.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Filter records by device ID.",
            "example": "{{deviceId}}",
            "in": "query",
            "name": "deviceId",
            "schema": {
              "example": 134,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/deviceId-query.yaml"
            }
          },
          {
            "description": "__Enum__ Filter records by operating system. Either `mac`, `windows`, `ios`, or `android`.",
            "example": "{{os}}",
            "in": "query",
            "name": "os",
            "schema": {
              "example": "mac",
              "type": "string",
              "enum": [
                "mac",
                "windows",
                "ios",
                "android"
              ]
            },
            "x-akamai": {
              "file-path": "parameters/os-query.yaml"
            }
          },
          {
            "description": "__Enum__ Filter records by browser. Either `edge`, `firefox`, `chrome`, or `safari`.",
            "example": "{{browser}}",
            "in": "query",
            "name": "browser",
            "schema": {
              "example": "chrome",
              "type": "string",
              "enum": [
                "edge",
                "firefox",
                "chrome",
                "safari"
              ]
            },
            "x-akamai": {
              "file-path": "parameters/browser-query.yaml"
            }
          },
          {
            "description": "Filter records by risk rule ID.",
            "example": "{{riskRule}}",
            "in": "query",
            "name": "riskRule",
            "schema": {
              "example": 12345678,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/riskRule-query.yaml"
            }
          },
          {
            "description": "__Enum__ Filter records by firewall status. Either `good` or `poor`.",
            "example": "{{firewall}}",
            "in": "query",
            "name": "firewall",
            "schema": {
              "example": "good",
              "type": "string",
              "enum": [
                "good",
                "poor"
              ]
            },
            "x-akamai": {
              "file-path": "parameters/firewall-query.yaml"
            }
          },
          {
            "description": "__Enum__ Filter records by anti-malware status. Either `good` or `poor`.",
            "example": "{{antiMalware}}",
            "in": "query",
            "name": "antiMalware",
            "schema": {
              "example": "good",
              "type": "string",
              "enum": [
                "good",
                "poor"
              ]
            },
            "x-akamai": {
              "file-path": "parameters/antiMalware-query.yaml"
            }
          },
          {
            "description": "Filter records by client version.",
            "example": "{{clientVersion}}",
            "in": "query",
            "name": "clientVersion",
            "schema": {
              "example": "0.3.0",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/clientVersion-query.yaml"
            }
          },
          {
            "description": "When enabled, returns only mobile device records in the response.",
            "example": "{{mobile}}",
            "in": "query",
            "name": "mobile",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/mobile-query.yaml"
            }
          },
          {
            "description": "When enabled, returns only devices with screen lock enabled in the response.",
            "example": "{{screenlock}}",
            "in": "query",
            "name": "screenlock",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/screenlock-query.yaml"
            }
          },
          {
            "description": "When enabled, returns only devices with biometrics enabled in the response.",
            "example": "{{biometric}}",
            "in": "query",
            "name": "biometric",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/biometric-query.yaml"
            }
          },
          {
            "description": "When enabled, the response returns only jailbroken devices.",
            "example": "{{jailbroken}}",
            "in": "query",
            "name": "jailbroken",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/jailbroken-query.yaml"
            }
          },
          {
            "description": "When enabled, returns only devices with disk encryption in the response.",
            "example": "{{diskEncryption}}",
            "in": "query",
            "name": "diskEncryption",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/diskEncryption-query.yaml"
            }
          },
          {
            "description": "When enabled, returns only devices with ETP threats in the response.",
            "example": "{{etpThreatDetected}}",
            "in": "query",
            "name": "etpThreatDetected",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/etpThreatDetected-query.yaml"
            }
          },
          {
            "description": "When enabled, returns only devices with Carbon Black running in the response.",
            "example": "{{cbHealthy}}",
            "in": "query",
            "name": "cbHealthy",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/cbHealthy-query.yaml"
            }
          },
          {
            "description": "Filter records by Carbon Black policy.",
            "example": "{{cbPolicy}}",
            "in": "query",
            "name": "cbPolicy",
            "schema": {
              "example": "default_policy",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/cbPolicy-query.yaml"
            }
          },
          {
            "description": "When enabled, returns only devices with CrowdStrike running in the response.",
            "example": "{{crowdstrikeHealthy}}",
            "in": "query",
            "name": "crowdstrikeHealthy",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/crowdstrikeHealthy-query.yaml"
            }
          },
          {
            "description": "__Enum__ Filter records by ETP client installation status. Either `installed` or `not-installed`.",
            "example": "{{etpClientStatus}}",
            "in": "query",
            "name": "etpClientStatus",
            "schema": {
              "example": "not-installed",
              "type": "string",
              "enum": [
                "installed",
                "not-installed"
              ]
            },
            "x-akamai": {
              "file-path": "parameters/etpClientStatus-query.yaml"
            }
          },
          {
            "description": "__Enum__ Filter records by certificate profiles, Values are a comma separated list of IDs of the certificate profiles configured like `<Cert profile id 1>`, `<Cert profile id 2>`, `<Cert profile id 3>`.",
            "example": "{{certProfile}}",
            "in": "query",
            "name": "certProfile",
            "schema": {
              "example": "<Cert profile id 1>",
              "type": "string",
              "enum": [
                "<Cert profile id 1>",
                "<Cert profile id 2>",
                "<Cert profile id 3>"
              ]
            },
            "x-akamai": {
              "file-path": "parameters/certProfile-query.yaml"
            }
          },
          {
            "description": "Filter records by anti-malware profiles. Use a comma-separated list of IDs of anti-malware profiles.",
            "example": "{{antiMalwareProfile}}",
            "explode": false,
            "in": "query",
            "name": "antiMalwareProfile",
            "schema": {
              "example": "<AM profile id 2>,<AM profile id 3>",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/antiMalwareProfile-query.yaml"
            }
          },
          {
            "description": "Filter records by a user specified value.",
            "example": "{{search}}",
            "in": "query",
            "name": "search",
            "schema": {
              "example": "device_name",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/search-query.yaml"
            }
          },
          {
            "description": "__Enum__ Column name to sort the record set by. Either `deviceName`, `deviceId`, `userName`, `os`, `timestamp`, `idpUserName`, or `id`.",
            "example": "{{sortBy}}",
            "in": "query",
            "name": "sortBy",
            "schema": {
              "example": "timestamp",
              "type": "string",
              "enum": [
                "deviceName",
                "deviceId",
                "userName",
                "os",
                "timestamp",
                "id"
              ]
            },
            "x-akamai": {
              "file-path": "parameters/sortBy-query.yaml"
            }
          },
          {
            "description": "__Enum__ The sort direction for the column. Either `ASC` or `DESC`.",
            "example": "{{sortOrder}}",
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "example": "DESC",
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            "x-akamai": {
              "file-path": "parameters/sortOrder-query.yaml"
            }
          },
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/inventory/summary/anti-malware-status": {
      "get": {
        "description": "Lists anti-malware status signals metrics acquired from device application access. The response groups statuses by `value` and sums by `count`.",
        "operationId": "get-anti-malware-status",
        "summary": "List anti-malware status",
        "tags": [
          "Device inventory"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-anti-malware-status"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Device signal information.",
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "count",
                      "value"
                    ],
                    "properties": {
                      "count": {
                        "description": "The number of devices that meet the specified criteria for this signal rule.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "value": {
                        "description": "The name of the signal rule.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/signalSummary.yaml"
                  }
                },
                "example": [
                  {
                    "count": 129,
                    "value": "good"
                  },
                  {
                    "count": 122,
                    "value": "poor"
                  }
                ]
              }
            },
            "x-akamai": {
              "file-path": "errors/signalSummaryRequest_200.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/inventory/summary/browsers": {
      "get": {
        "description": "Lists installed browser activity metrics for devices connecting to your applications.",
        "operationId": "get-summary-browsers",
        "summary": "List browser activity",
        "tags": [
          "Device inventory"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-summary-browsers"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Device activity information.",
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "name",
                      "latest",
                      "custom",
                      "outdated"
                    ],
                    "properties": {
                      "custom": {
                        "description": "The number of browsers running custom versions.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "latest": {
                        "description": "The total number of browsers running the latest version set by the policy rules.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "name": {
                        "description": "The name of the browser.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "outdated": {
                        "description": "The total number of browsers running an outdated version set by the policy rules.",
                        "minimum": 0,
                        "type": "integer"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/browsers.yaml"
                  }
                },
                "example": [
                  {
                    "custom": 12,
                    "latest": 11100,
                    "name": "Chrome",
                    "outdated": 124
                  },
                  {
                    "custom": 3594,
                    "latest": 36,
                    "name": "Edge",
                    "outdated": 6143
                  },
                  {
                    "custom": 42,
                    "latest": 1349,
                    "name": "Firefox",
                    "outdated": 1483
                  },
                  {
                    "custom": 0,
                    "latest": 11525,
                    "name": "Internet Explorer",
                    "outdated": 180
                  },
                  {
                    "custom": 7,
                    "latest": 72,
                    "name": "Opera",
                    "outdated": 0
                  },
                  {
                    "custom": 2,
                    "latest": 18,
                    "name": "Safari",
                    "outdated": 0
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/inventory/summary/device-biometric": {
      "get": {
        "description": "Lists activity metrics for biometrics signals acquired from devices accessing your applications. The response groups statuses by `value` and sums by `count`.",
        "operationId": "get-device-biometric",
        "summary": "List devices with biometrics",
        "tags": [
          "Device inventory"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-device-biometric"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Device signal information.",
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "count",
                      "value"
                    ],
                    "properties": {
                      "count": {
                        "description": "The number of devices that meet the specified criteria for this signal rule.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "value": {
                        "description": "The name of the signal rule.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/signalSummary.yaml"
                  }
                },
                "example": [
                  {
                    "count": 129,
                    "value": "good"
                  },
                  {
                    "count": 122,
                    "value": "poor"
                  }
                ]
              }
            },
            "x-akamai": {
              "file-path": "errors/signalSummaryRequest_200.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/inventory/summary/device-jailbroken": {
      "get": {
        "description": "Lists jailbroken device signal metrics acquired from device application access. The response groups statuses by `value` and sums by `count`.",
        "operationId": "get-device-jailbroken",
        "summary": "List jailbroken devices",
        "tags": [
          "Device inventory"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-device-jailbroken"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Device signal information.",
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "count",
                      "value"
                    ],
                    "properties": {
                      "count": {
                        "description": "The number of devices that meet the specified criteria for this signal rule.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "value": {
                        "description": "The name of the signal rule.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/signalSummary.yaml"
                  }
                },
                "example": [
                  {
                    "count": 129,
                    "value": "good"
                  },
                  {
                    "count": 122,
                    "value": "poor"
                  }
                ]
              }
            },
            "x-akamai": {
              "file-path": "errors/signalSummaryRequest_200.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/inventory/summary/device-roll-ups": {
      "get": {
        "description": "Lists activity metrics of devices connecting  to your applications.",
        "operationId": "get-device-roll-ups",
        "summary": "List device activity",
        "tags": [
          "Device inventory"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-device-roll-ups"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Device activity information.",
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "check_in_count",
                      "device_count",
                      "timestamp"
                    ],
                    "properties": {
                      "check_in_count": {
                        "description": "The number of device check-ins.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "device_count": {
                        "description": "The number of unique devices.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "timestamp": {
                        "description": "ISO 8601 timestamp marking the signal's acquisition.",
                        "format": "date-time",
                        "type": "string"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/rollUps.yaml"
                  }
                },
                "example": [
                  {
                    "check_in_count": 40,
                    "device_count": 250,
                    "timestamp": "2019-03-19T21:00:00+00:00"
                  },
                  {
                    "check_in_count": 45,
                    "device_count": 250,
                    "timestamp": "2019-03-20T00:00:00+00:00"
                  },
                  {
                    "check_in_count": 50,
                    "device_count": 250,
                    "timestamp": "2019-03-20T13:00:00+00:00"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/inventory/summary/device-screen-lock": {
      "get": {
        "description": "Lists device screen lock signal metrics acquired from device application access. The response groups statuses by `value` and sums by `count`.",
        "operationId": "get-device-screen-lock",
        "summary": "List device screen lock",
        "tags": [
          "Device inventory"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-device-screen-lock"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Device signal information.",
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "count",
                      "value"
                    ],
                    "properties": {
                      "count": {
                        "description": "The number of devices that meet the specified criteria for this signal rule.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "value": {
                        "description": "The name of the signal rule.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/signalSummary.yaml"
                  }
                },
                "example": [
                  {
                    "count": 129,
                    "value": "good"
                  },
                  {
                    "count": 122,
                    "value": "poor"
                  }
                ]
              }
            },
            "x-akamai": {
              "file-path": "errors/signalSummaryRequest_200.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/inventory/summary/firewall-status": {
      "get": {
        "description": "Lists activity metrics for firewall status signals acquired from devices accessing your applications. The response groups statuses by `value` and sums by `count`.",
        "operationId": "get-firewall-status",
        "summary": "List firewall status",
        "tags": [
          "Device inventory"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-firewall-status"
        },
        "responses": {
          "200": {
            "description": "Successful response. ",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Device signal information.",
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "count",
                      "value"
                    ],
                    "properties": {
                      "count": {
                        "description": "The number of devices that meet the specified criteria for this signal rule.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "value": {
                        "description": "The name of the signal rule.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/signalSummary.yaml"
                  }
                },
                "example": [
                  {
                    "count": 129,
                    "value": "good"
                  },
                  {
                    "count": 122,
                    "value": "poor"
                  }
                ]
              }
            },
            "x-akamai": {
              "file-path": "errors/signalSummaryRequest_200.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/inventory/summary/os": {
      "get": {
        "description": "Lists activity metrics for installed operating  systems of devices connecting to your applications.",
        "operationId": "get-summary-os",
        "summary": "List operating system activity",
        "tags": [
          "Device inventory"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-summary-os"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Device operating system (OS) information.",
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "custom",
                      "name",
                      "latest",
                      "outdated",
                      "updated"
                    ],
                    "properties": {
                      "custom": {
                        "description": "The number of devices with a custom OS on a valid version as set by the policy rules.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "latest": {
                        "description": "The number of devices with the latest OS version set by the policy rules.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "name": {
                        "description": "The name of the operating system.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "outdated": {
                        "description": "The number of devices with an outdated OS version set by the policy rules.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "updated": {
                        "description": "The number of devices with an updated OSversion set by the policy rules.",
                        "minimum": 0,
                        "type": "integer"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/operatingSystems.yaml"
                  }
                },
                "example": [
                  {
                    "custom": 191,
                    "latest": 33,
                    "name": "Mac OS X",
                    "outdated": 65,
                    "updated": 26
                  },
                  {
                    "custom": 0,
                    "latest": 61,
                    "name": "Windows 10",
                    "outdated": 0,
                    "updated": 3
                  },
                  {
                    "custom": 5,
                    "latest": 63,
                    "name": "iOS",
                    "outdated": 0,
                    "updated": 0
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/inventory/summary/risk-assessment": {
      "get": {
        "description": "Lists activity metrics for risk assessment rules of devices connected to your applications.",
        "operationId": "get-risk-assessment",
        "summary": "List device risk assessment",
        "tags": [
          "Device inventory"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-risk-assessment"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Device risk assessment rule information.",
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "id",
                      "count",
                      "name",
                      "tier"
                    ],
                    "properties": {
                      "count": {
                        "description": "The total number of devices that pass the criteria specified for this risk assessment rule.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "id": {
                        "description": "A unique identifier for this risk assessment rule.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "name": {
                        "description": "The name of the risk assessment rule.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "tier": {
                        "description": "Whether the rule is a tier.",
                        "type": "boolean"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/riskAssessment.yaml"
                  }
                },
                "example": [
                  {
                    "count": 19,
                    "id": 298,
                    "name": "Finance Tag",
                    "tier": false
                  },
                  {
                    "count": 57,
                    "id": 299,
                    "name": "Engineering Tag",
                    "tier": false
                  },
                  {
                    "count": 86,
                    "id": 255,
                    "name": "Low",
                    "tier": true
                  },
                  {
                    "count": 15,
                    "id": 256,
                    "name": "Medium",
                    "tier": true
                  },
                  {
                    "count": 150,
                    "id": 257,
                    "name": "High",
                    "tier": true
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/inventory/summary/system-disk-encryption": {
      "get": {
        "description": "Lists activity metrics for disk encryption signals acquired from devices accessing your applications. The response groups statuses by `value` and sums by `count`.",
        "operationId": "get-disk-encryption",
        "summary": "List system disk encryption",
        "tags": [
          "Device inventory"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-disk-encryption"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Device signal information.",
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "count",
                      "value"
                    ],
                    "properties": {
                      "count": {
                        "description": "The number of devices that meet the specified criteria for this signal rule.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "value": {
                        "description": "The name of the signal rule.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/signalSummary.yaml"
                  }
                },
                "example": [
                  {
                    "count": 129,
                    "value": "good"
                  },
                  {
                    "count": 122,
                    "value": "poor"
                  }
                ]
              }
            },
            "x-akamai": {
              "file-path": "errors/signalSummaryRequest_200.yaml"
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/risk-assessment/available-browsers": {
      "get": {
        "description": "Lists supported browser versions for risk assessment. Unlisted browsers aren't supported for risk assessment.",
        "operationId": "get-available-browsers",
        "summary": "List available browser versions",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-available-browsers"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Web browsers available for the version.",
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "latest",
                      "name",
                      "date"
                    ],
                    "properties": {
                      "date": {
                        "description": "ISO 8601 timestamp marking the version's release date.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "latest": {
                        "description": "Newest major version of the web browser.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the web browser.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/availableBrowserVer.yaml"
                  }
                },
                "example": [
                  {
                    "date": "2020-04-27",
                    "latest": "81.0.4044.129",
                    "name": "Chrome"
                  },
                  {
                    "date": "2020-04-06",
                    "latest": "75.0",
                    "name": "Firefox"
                  },
                  {
                    "date": "2020-04-29",
                    "latest": "68.0.3618.63",
                    "name": "Opera"
                  },
                  {
                    "date": "2020-03-24",
                    "latest": "13.1",
                    "name": "Safari"
                  },
                  {
                    "date": "2020-01-16",
                    "latest": "79.0.309.68",
                    "name": "Edge"
                  },
                  {
                    "date": "2020-04-14",
                    "latest": "11.0.185",
                    "name": "Internet Explorer"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/risk-assessment/available-client-ver": {
      "get": {
        "description": "Lists supported client versions for risk assessment. Unlisted client versions aren't supported for risk assessment.",
        "operationId": "get-client-versions",
        "summary": "List available client versions",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-client-versions"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "date": "2020-11-10",
                  "latest": "2.1.1",
                  "perOSVersions": [
                    {
                      "date": "2020-11-12",
                      "latest": "2.1.2",
                      "platform": "macOS",
                      "upToDate": [
                        {
                          "date": "2020-11-05",
                          "version": "2.1.1"
                        },
                        {
                          "date": "2019-10-29",
                          "version": "2.0.4"
                        }
                      ]
                    },
                    {
                      "date": "2020-11-10",
                      "latest": "2.1.2",
                      "platform": "Windows",
                      "upToDate": [
                        {
                          "date": "2020-11-10",
                          "version": "2.0.4"
                        },
                        {
                          "date": "2020-11-10",
                          "version": "1.4.0"
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Available client versions for configuration.",
                  "type": "object",
                  "required": [
                    "latest",
                    "date",
                    "perOSVersions"
                  ],
                  "properties": {
                    "date": {
                      "description": "The date of release of latest available version of the client that's supported by the product.",
                      "format": "date",
                      "type": "string"
                    },
                    "latest": {
                      "description": "The latest available version of the client that's supported by the product.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "perOSVersions": {
                      "description": "Available client versions for each platform.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Available client version details for each platform.",
                        "type": "object",
                        "required": [
                          "date"
                        ],
                        "properties": {
                          "date": {
                            "description": "The date of release of latest available version of the client.",
                            "format": "date",
                            "type": "string"
                          },
                          "latest": {
                            "description": "The latest available version of the client that's supported by the product for the platform.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "platform": {
                            "description": "The platform of the client.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "upToDate": {
                            "description": "Information on fully patched releases of all major versions supported by the OS vendor.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Up-to-date OS version. Required only for macOS or Windows platforms.",
                              "type": "object",
                              "properties": {
                                "date": {
                                  "description": "The release date of the version number.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "version": {
                                  "description": "Up-to-date version number.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/availableClientVer.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/risk-assessment/available-os-ver": {
      "get": {
        "description": "Lists supported operating system versions  for risk assessment. Unlisted versions aren't supported for risk assessment.",
        "operationId": "get-os-versions",
        "summary": "List available operating system versions",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-os-versions"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Operating system versions available for the version.",
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "latest",
                      "mobile",
                      "name",
                      "upToDate"
                    ],
                    "properties": {
                      "latest": {
                        "description": "The operating system's latest supported version.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "mobile": {
                        "description": "Indicates a mobile device operating system.",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the operating system.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "upToDate": {
                        "description": "Fully patched releases of all supported major versions.",
                        "minItems": 1,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "Fully patched releases of all major versions supported by the OS vendor.",
                          "type": "object",
                          "required": [
                            "version",
                            "date"
                          ],
                          "properties": {
                            "date": {
                              "description": "ISO 8601 timestamp marking the version's release.",
                              "format": "date-time",
                              "type": "string"
                            },
                            "version": {
                              "description": "The operating system version.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/availableOsVer.yaml"
                  }
                },
                "example": [
                  {
                    "date": "2019-09-03",
                    "latest": "10",
                    "name": "Android",
                    "upToDate": [
                      {
                        "date": "2018-08-06",
                        "version": "9.0"
                      }
                    ]
                  },
                  {
                    "date": "2020-04-07",
                    "latest": "13.4.1 (17E262)",
                    "name": "iOS",
                    "upToDate": [
                      {
                        "date": "2019-09-26",
                        "version": "12.4.2 (16G114)"
                      },
                      {
                        "date": "2018-05-29",
                        "version": "11.4 (15F79)"
                      }
                    ]
                  },
                  {
                    "date": "2021-02-01",
                    "latest": "Big Sur 11.2 (20D64)",
                    "name": "macOS",
                    "upToDate": [
                      {
                        "date": "2021-02-01",
                        "version": "Catalina 10.15.7 (19H512)"
                      },
                      {
                        "date": "2021-02-01",
                        "version": "Mojave 10.14.6 (18G8012)"
                      }
                    ]
                  },
                  {
                    "date": "2020-04-21",
                    "latest": "1909 (18363.815)",
                    "name": "Windows",
                    "upToDate": [
                      {
                        "date": "2020-04-21",
                        "version": "1903 (18362.815)"
                      },
                      {
                        "date": "2020-04-21",
                        "version": "1809 (17763.1192)"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/risk-assessment/ca-ocsp": {
      "get": {
        "description": "Get CA and OCSP information for use in certificate profiles.",
        "operationId": "get-ca-ocsp",
        "summary": "Get CA and OCSP information",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-ca-ocsp"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "ca": [
                    {
                      "id": "BQWK7x1cdaiTKC-9cfEANu",
                      "name": "primary CA"
                    },
                    {
                      "id": "glq7Av4Vq2TT--3tDp9Mej",
                      "name": "CA 2"
                    }
                  ],
                  "ocsp": [
                    {
                      "id": "rOe8GyLtRuWSRkPWqHz6AA",
                      "name": "OCSP 1"
                    },
                    {
                      "id": "wp9edkDYWrruqRULe71ALg",
                      "name": "OCSP 2"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The configuration's Certificate Authority and Online Certificate Status Protocol information.",
                  "type": "object",
                  "required": [
                    "ca",
                    "ocsp"
                  ],
                  "properties": {
                    "ca": {
                      "description": "Contains certificate authority information.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Unique identifier for the CA.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the CA.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "ocsp": {
                      "description": "Contains OCSP server information.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Unique identifier of the OCSP server.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the OCSP server.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/allCaOcsp.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/risk-assessment/certificate-profiles": {
      "post": {
        "description": "Creates a new Certificate profile.",
        "operationId": "post-certificate-profile",
        "summary": "Create certificate profile",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-certificate-profile"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "caId": "5_hSGHsNzEsfUfsQ8-7yMo",
                "name": "Certificate Profile Example",
                "ocspId": "lLEPQoo3QyA-IHrRwy7I5w",
                "revocationStatus": true,
                "tpmAttested": true
              },
              "schema": {
                "additionalProperties": false,
                "description": "Certificate profile information.",
                "type": "object",
                "required": [
                  "name",
                  "caId"
                ],
                "properties": {
                  "caId": {
                    "description": "The ID of the CA used with the certificate profile.",
                    "example": "{{caId}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the certificate profile.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "ocspId": {
                    "description": "The ID of the OCSP used with the certificate profile.",
                    "example": "{{ocspId}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "revocationStatus": {
                    "description": "Enable or disable the OCSP check.",
                    "example": "{{revocationStatus}}",
                    "type": "boolean"
                  },
                  "tpmAttested": {
                    "description": "Enables the trusted platform module (TPM) check.",
                    "example": "{{tpmAttested}}",
                    "type": "boolean"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/certificateProfile.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "id": 1
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The ID of the certificate profile created.",
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "description": "The unique identifier of the created certificate profile.",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/certificateProfileId.yaml"
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "description": "The unique identifier for the newly created resource. Append this ID to a subsequent GET call to view the resource details. ",
                "schema": {
                  "example": 1100,
                  "type": "integer"
                },
                "x-akamai": {
                  "file-path": "headers/location-header.yaml"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists the existing certificate profiles.",
        "operationId": "get-certificate-profiles",
        "summary": "List certificate profiles",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-certificate-profiles"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "A list of certificate profiles for the contract ID.",
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "caId": {
                        "description": "Unique identifier of the CA.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "id": {
                        "description": "Unique identifier of the certificate profile.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "name": {
                        "description": "Name of the certificate profile.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "ocspId": {
                        "description": "Unique identifier of the OCSP server.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "revocationStatus": {
                        "description": "Enables the OCSP check.",
                        "type": "boolean"
                      },
                      "tpmAttested": {
                        "description": "Enables the trusted platform module (TPM) check.",
                        "type": "boolean"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/certificateProfileList.yaml"
                  }
                },
                "example": [
                  {
                    "caId": "5_hSGHsNzEsfUfsQ8-7yMo",
                    "id": 1,
                    "name": "Certificate Profile Example 1",
                    "ocspId": "lLEPQoo3QyA-IHrRwy7I5w",
                    "revocationStatus": true,
                    "tpmAttested": false
                  },
                  {
                    "caId": "5_hSGHsNzEsfUfsQ8-7yMo",
                    "id": 2,
                    "name": "Certificate Profile Example 2",
                    "ocspId": "llwoyIHyEQ7IRQPo-5LrA3w",
                    "revocationStatus": true,
                    "tpmAttested": true
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/risk-assessment/certificate-profiles/{certificateProfileId}": {
      "get": {
        "description": "Get a certificate profile by its id.",
        "operationId": "get-certificate-profile",
        "summary": "Get certificate profile",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-certificate-profile"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "caId": "BQWK7x1cdaiTKC-9cfEANu",
                  "id": 1,
                  "name": "Certificate Profile Example",
                  "ocspId": "lLEPQoo3QyA-IHrRwy7I5w",
                  "revocationStatus": true,
                  "tpmAttested": true
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "certificate profile information.",
                  "type": "object",
                  "required": [
                    "name",
                    "caId"
                  ],
                  "properties": {
                    "caId": {
                      "description": "The ID of the CA used with the certificate profile.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "id": {
                      "description": "The unique identifier of the created certificate profile.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "name": {
                      "description": "The name of the certificate profile.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "ocspId": {
                      "description": "The ID of the OCSP used with the certificate profile.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "revocationStatus": {
                      "description": "Enable or disable the OCSP check.",
                      "type": "boolean"
                    },
                    "tpmAttested": {
                      "description": "Enables the trusted platform module (TPM) check.",
                      "type": "boolean"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/certificateProfileWithId.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Update a certificate profile.",
        "operationId": "put-certificate-profile",
        "summary": "Update certificate profile",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-certificate-profile"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "caId": "5_hSGHsNzEsfUfsQ8-7yMo",
                "name": "Certificate Profile Example",
                "ocspId": "lLEPQoo3QyA-IHrRwy7I5w",
                "revocationStatus": true,
                "tpmAttested": true
              },
              "schema": {
                "additionalProperties": false,
                "description": "Certificate profile information.",
                "type": "object",
                "required": [
                  "name",
                  "caId"
                ],
                "properties": {
                  "caId": {
                    "description": "The ID of the CA used with the certificate profile.",
                    "example": "{{caId}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the certificate profile.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "ocspId": {
                    "description": "The ID of the OCSP used with the certificate profile.",
                    "example": "{{ocspId}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "revocationStatus": {
                    "description": "Enable or disable the OCSP check.",
                    "example": "{{revocationStatus}}",
                    "type": "boolean"
                  },
                  "tpmAttested": {
                    "description": "Enables the trusted platform module (TPM) check.",
                    "example": "{{tpmAttested}}",
                    "type": "boolean"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/certificateProfile.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Delete a certificate profile.",
        "operationId": "delete-certificate-profile",
        "summary": "Delete certificate profile",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-certificate-profile"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for the certificate profile.",
          "example": "{{certificateProfileId}}",
          "in": "path",
          "name": "certificateProfileId",
          "required": true,
          "schema": {
            "example": 123,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/certificateProfileId-path.yaml"
          }
        }
      ]
    },
    "/device-posture/risk-assessment/certificate-usage/anti-malware-profiles": {
      "post": {
        "description": "Creates a new anti-malware profile.",
        "operationId": "post-anti-malware-profile",
        "summary": "Create an anti-malware profile",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-anti-malware-profile"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "mac": "Avast",
                "name": "Anti-Malware Profile 1",
                "windows": "Avast"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Anti-malware profile information.",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "mac": {
                    "description": "Name of the anti-malware vendor on macOS devices.",
                    "example": "{{mac}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the anti-malware profile.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "windows": {
                    "description": "Name of the anti-malware vendor on Windows devices.",
                    "example": "{{windows}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/antiMalwareProfile.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "id": 2
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "ID of the anti-malware profile created.",
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "description": "The unique identifier of the created anti-malware profile.",
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/antiMalwareProfileId.yaml"
                  }
                }
              }
            },
            "headers": {
              "Location": {
                "description": "The unique identifier for the newly created resource. Append this ID to a subsequent GET call to view the resource details. ",
                "schema": {
                  "example": 1100,
                  "type": "integer"
                },
                "x-akamai": {
                  "file-path": "headers/location-header.yaml"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists the existing anti-malware profiles.",
        "operationId": "get-anti-malware-profiles",
        "summary": "List anti-malware profiles",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-anti-malware-profiles"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Anti-malware profiles for your account.",
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Unique identifier of the anti-malware profile.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "mac": {
                        "description": "Name of the anti-malware vendor on macOS devices.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the anti-malware profile.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "windows": {
                        "description": "Name of the anti-malware vendor on Windows devices.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/antiMalwareProfileList.yaml"
                  }
                },
                "example": [
                  {
                    "id": 1,
                    "mac": "Any Vendor",
                    "name": "Any Vendor",
                    "windows": "Any Vendor"
                  },
                  {
                    "id": 2,
                    "mac": "Avast",
                    "name": "Anti-Malware Profile Example 1",
                    "windows": "Avast"
                  },
                  {
                    "id": 3,
                    "mac": "N/A",
                    "name": "Anti-Malware Profile Example 2",
                    "windows": "McAfee"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/risk-assessment/certificate-usage/anti-malware-profiles/{antiMalwareProfileId}": {
      "get": {
        "description": "Get an anti-malware profile.",
        "operationId": "get-anti-malware-profile",
        "summary": "Get an anti-malware profile",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-anti-malware-profile"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "id": 2,
                  "mac": "Avast",
                  "name": "Anti-Malware Profile Example 1",
                  "windows": "Avast"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Anti-malware profile information.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "id": {
                      "description": "The unique identifier of the created anti-malware profile.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "mac": {
                      "description": "Name of the anti-malware vendor on macOS devices.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the anti-malware profile.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "windows": {
                      "description": "Name of the anti-malware vendor on Windows devices.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/antiMalwareProfileWithId.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Update an Anti-Malware profile.",
        "operationId": "put-anti-malware-profile",
        "summary": "Update an anti-malware profile",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-anti-malware-profile"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "mac": "Avast",
                "name": "Anti-Malware Profile 1",
                "windows": "Avast"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Anti-malware profile information.",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "mac": {
                    "description": "Name of the anti-malware vendor on macOS devices.",
                    "example": "{{mac}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the anti-malware profile.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "windows": {
                    "description": "Name of the anti-malware vendor on Windows devices.",
                    "example": "{{windows}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/antiMalwareProfile.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Delete an anti-malware profile.",
        "operationId": "delete-anti-malware-profile",
        "summary": "Delete an anti-malware profile",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-anti-malware-profile"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "The unique identifier of the anti-malware profile.",
          "example": "{{antiMalwareProfileId}}",
          "in": "path",
          "name": "antiMalwareProfileId",
          "required": true,
          "schema": {
            "example": 352,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/antiMalwareProfileId-path.yaml"
          }
        }
      ]
    },
    "/device-posture/risk-assessment/certificate-usage/ca": {
      "get": {
        "description": "Lists CA usage information.",
        "operationId": "get-certificate-usage-ca",
        "summary": "Get CA information",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-certificate-usage-ca"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "description": "EMEA CA risk cert",
                  "in_use": true
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "CA usage information.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "Certificate profiles that use the CA.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "in_use": {
                      "description": "The in-user property of the configured CA.",
                      "type": "boolean"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/caUsage.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/risk-assessment/certificate-usage/ocsp": {
      "get": {
        "description": "Lists OCSP usage information.",
        "operationId": "get-certificate-usage-ocsp",
        "summary": "Get OCSP information",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-certificate-usage-ocsp"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "description": "Prod OCSP risk cert",
                  "in_use": true
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "OCSP usage information.",
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "Certificate profiles that use the OCSP server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "in_use": {
                      "description": "The in-user property of the configured OCSP server.",
                      "type": "boolean"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/ocspUsage.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/risk-assessment/chosen-versions": {
      "get": {
        "description": "Lists the chosen versions of different risk assessment dimensions.",
        "operationId": "get-chosen-versions",
        "summary": "List chosen versions",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-chosen-versions"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "client": {
                    "gracePeriod": 1,
                    "name": "EAA Client"
                  },
                  "browsers": [
                    {
                      "gracePeriod": 180,
                      "name": "Internet Explorer",
                      "custom": [
                        "11.0.155"
                      ]
                    },
                    {
                      "gracePeriod": 180,
                      "name": "Opera",
                      "custom": []
                    }
                  ],
                  "eaaclient": [
                    {
                      "gracePeriod": 180,
                      "platform": "Android",
                      "custom": []
                    },
                    {
                      "gracePeriod": 180,
                      "platform": "macOS",
                      "custom": [],
                      "upToDate": [
                        "10.13.7"
                      ]
                    },
                    {
                      "gracePeriod": 180,
                      "platform": "windows",
                      "custom": [],
                      "upToDate": [
                        "2.1.1"
                      ]
                    }
                  ],
                  "os": [
                    {
                      "gracePeriod": 180,
                      "name": "Android",
                      "custom": []
                    },
                    {
                      "gracePeriod": 180,
                      "name": "macOS",
                      "custom": [
                        "17F77",
                        "18A391",
                        "18G1012",
                        "18G84",
                        "18G95",
                        "18G103"
                      ],
                      "upToDate": [
                        "Catalina 10.15.7 (19H15)",
                        "Mojave 10.14.6 (18G1012)"
                      ]
                    },
                    {
                      "gracePeriod": 180,
                      "name": "Windows",
                      "custom": [
                        "18362.239",
                        "7601.24511",
                        "18362.295",
                        "18362.356"
                      ],
                      "upToDate": [
                        "2004 (19041.630)",
                        "1909 (18363.1198)"
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The versions selected for different dimensions of device risk assessment.",
                  "type": "object",
                  "required": [
                    "browsers",
                    "client",
                    "os",
                    "eaaclient"
                  ],
                  "properties": {
                    "browsers": {
                      "description": "The browser version details.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information on the selected browser versions.",
                        "type": "object",
                        "required": [
                          "custom",
                          "gracePeriod",
                          "name"
                        ],
                        "properties": {
                          "custom": {
                            "description": "Custom combinations of different versions.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "description": "The version of the web browser.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "gracePeriod": {
                            "description": "The number of days the previous version is valid until it's deprecated.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "name": {
                            "description": "The name of the web browser.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "client": {
                      "additionalProperties": false,
                      "description": "Contains information about the selected client versions.",
                      "type": "object",
                      "required": [
                        "gracePeriod",
                        "name"
                      ],
                      "properties": {
                        "gracePeriod": {
                          "description": "The number of days the previous version is valid until it's deprecated.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the client.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "eaaclient": {
                      "description": "Contains client version details.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information about the per-os selections for EAA clients.",
                        "type": "object",
                        "properties": {
                          "custom": {
                            "description": "Custom combinations of different versions.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "description": "The version of the operating system.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "gracePeriod": {
                            "description": "The number of days the previous version is valid.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "platform": {
                            "description": "The platform on which the EAA client runs.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "upToDate": {
                            "description": "Latest up-to-date OS version. Required only for macOS or Windows platforms.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "description": "The version of the operating system.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "os": {
                      "description": "The operating system version details.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information about the selected OS versions.",
                        "type": "object",
                        "required": [
                          "custom",
                          "gracePeriod",
                          "name"
                        ],
                        "properties": {
                          "custom": {
                            "description": "Custom combinations of different versions.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "description": "The OS version. For macOS this would be the build number, such as `19H15` for macOS Catalina 10.15.7.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "gracePeriod": {
                            "description": "The number of days the previous version is valid until it's deprecated.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "name": {
                            "description": "The name of the operating system.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/chosenVersions.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates the chosen versions selection of different risk assessment dimensions.",
        "operationId": "put-chosen-versions",
        "summary": "Modify chosen versions",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-chosen-versions"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "client": {
                  "gracePeriod": 1,
                  "name": "EAA Client"
                },
                "browsers": [
                  {
                    "gracePeriod": 180,
                    "name": "Internet Explorer",
                    "custom": [
                      "11.0.155"
                    ]
                  },
                  {
                    "gracePeriod": 180,
                    "name": "Opera",
                    "custom": []
                  }
                ],
                "eaaclient": [
                  {
                    "gracePeriod": 180,
                    "platform": "Android",
                    "custom": []
                  },
                  {
                    "gracePeriod": 180,
                    "platform": "macOS",
                    "custom": [],
                    "upToDate": [
                      "10.13.7"
                    ]
                  },
                  {
                    "gracePeriod": 180,
                    "platform": "windows",
                    "custom": [],
                    "upToDate": [
                      "2.1.1"
                    ]
                  }
                ],
                "os": [
                  {
                    "gracePeriod": 180,
                    "name": "Android",
                    "custom": []
                  },
                  {
                    "gracePeriod": 180,
                    "name": "macOS",
                    "custom": [
                      "17F77",
                      "18A391",
                      "18G1012",
                      "18G84",
                      "18G95",
                      "18G103"
                    ],
                    "upToDate": [
                      "Catalina 10.15.7 (19H15)",
                      "Mojave 10.14.6 (18G1012)"
                    ]
                  },
                  {
                    "gracePeriod": 180,
                    "name": "Windows",
                    "custom": [
                      "18362.239",
                      "7601.24511",
                      "18362.295",
                      "18362.356"
                    ],
                    "upToDate": [
                      "2004 (19041.630)",
                      "1909 (18363.1198)"
                    ]
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "The versions selected for different dimensions of device risk assessment.",
                "type": "object",
                "required": [
                  "browsers",
                  "client",
                  "os",
                  "eaaclient"
                ],
                "properties": {
                  "browsers": {
                    "description": "The browser version details.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Contains information on the selected browser versions.",
                      "type": "object",
                      "required": [
                        "custom",
                        "gracePeriod",
                        "name"
                      ],
                      "properties": {
                        "custom": {
                          "description": "Custom combinations of different versions.",
                          "minItems": 1,
                          "type": "array",
                          "items": {
                            "description": "The version of the web browser.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "gracePeriod": {
                          "description": "The number of days the previous version is valid until it's deprecated.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the web browser.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "client": {
                    "additionalProperties": false,
                    "description": "Contains information about the selected client versions.",
                    "type": "object",
                    "required": [
                      "gracePeriod",
                      "name"
                    ],
                    "properties": {
                      "gracePeriod": {
                        "description": "The number of days the previous version is valid until it's deprecated.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "name": {
                        "description": "The name of the client.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "eaaclient": {
                    "description": "Contains client version details.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Contains information about the per-os selections for EAA clients.",
                      "type": "object",
                      "properties": {
                        "custom": {
                          "description": "Custom combinations of different versions.",
                          "minItems": 1,
                          "type": "array",
                          "items": {
                            "description": "The version of the operating system.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "gracePeriod": {
                          "description": "The number of days the previous version is valid.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "platform": {
                          "description": "The platform on which the EAA client runs.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "upToDate": {
                          "description": "Latest up-to-date OS version. Required only for macOS or Windows platforms.",
                          "minItems": 1,
                          "type": "array",
                          "items": {
                            "description": "The version of the operating system.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "os": {
                    "description": "The operating system version details.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Contains information about the selected OS versions.",
                      "type": "object",
                      "required": [
                        "custom",
                        "gracePeriod",
                        "name"
                      ],
                      "properties": {
                        "custom": {
                          "description": "Custom combinations of different versions.",
                          "minItems": 1,
                          "type": "array",
                          "items": {
                            "description": "The OS version. For macOS this would be the build number, such as `19H15` for macOS Catalina 10.15.7.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "gracePeriod": {
                          "description": "The number of days the previous version is valid until it's deprecated.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the operating system.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/chosenVersions.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/risk-assessment/chosen-versions/test": {
      "post": {
        "description": "Tests the selected versions against the existing risk assessment rules.",
        "operationId": "post-chosen-versions-test",
        "summary": "Test chosen versions",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-chosen-versions-test"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "client": {
                  "gracePeriod": 1,
                  "name": "EAA Client"
                },
                "browsers": [
                  {
                    "gracePeriod": 180,
                    "name": "Internet Explorer",
                    "custom": [
                      "11.0.155"
                    ]
                  },
                  {
                    "gracePeriod": 180,
                    "name": "Opera",
                    "custom": []
                  }
                ],
                "eaaclient": [
                  {
                    "gracePeriod": 180,
                    "platform": "Android",
                    "custom": []
                  },
                  {
                    "gracePeriod": 180,
                    "platform": "macOS",
                    "custom": [],
                    "upToDate": [
                      "10.13.7"
                    ]
                  },
                  {
                    "gracePeriod": 180,
                    "platform": "windows",
                    "custom": [],
                    "upToDate": [
                      "2.1.1"
                    ]
                  }
                ],
                "os": [
                  {
                    "gracePeriod": 180,
                    "name": "Android",
                    "custom": []
                  },
                  {
                    "gracePeriod": 180,
                    "name": "macOS",
                    "custom": [
                      "17F77",
                      "18A391",
                      "18G1012",
                      "18G84",
                      "18G95",
                      "18G103"
                    ],
                    "upToDate": [
                      "Catalina 10.15.7 (19H15)",
                      "Mojave 10.14.6 (18G1012)"
                    ]
                  },
                  {
                    "gracePeriod": 180,
                    "name": "Windows",
                    "custom": [
                      "18362.239",
                      "7601.24511",
                      "18362.295",
                      "18362.356"
                    ],
                    "upToDate": [
                      "2004 (19041.630)",
                      "1909 (18363.1198)"
                    ]
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "The versions selected for different dimensions of device risk assessment.",
                "type": "object",
                "required": [
                  "browsers",
                  "client",
                  "os",
                  "eaaclient"
                ],
                "properties": {
                  "browsers": {
                    "description": "The browser version details.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Contains information on the selected browser versions.",
                      "type": "object",
                      "required": [
                        "custom",
                        "gracePeriod",
                        "name"
                      ],
                      "properties": {
                        "custom": {
                          "description": "Custom combinations of different versions.",
                          "minItems": 1,
                          "type": "array",
                          "items": {
                            "description": "The version of the web browser.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "gracePeriod": {
                          "description": "The number of days the previous version is valid until it's deprecated.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the web browser.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "client": {
                    "additionalProperties": false,
                    "description": "Contains information about the selected client versions.",
                    "type": "object",
                    "required": [
                      "gracePeriod",
                      "name"
                    ],
                    "properties": {
                      "gracePeriod": {
                        "description": "The number of days the previous version is valid until it's deprecated.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "name": {
                        "description": "The name of the client.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "eaaclient": {
                    "description": "Contains client version details.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Contains information about the per-os selections for EAA clients.",
                      "type": "object",
                      "properties": {
                        "custom": {
                          "description": "Custom combinations of different versions.",
                          "minItems": 1,
                          "type": "array",
                          "items": {
                            "description": "The version of the operating system.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "gracePeriod": {
                          "description": "The number of days the previous version is valid.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "platform": {
                          "description": "The platform on which the EAA client runs.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "upToDate": {
                          "description": "Latest up-to-date OS version. Required only for macOS or Windows platforms.",
                          "minItems": 1,
                          "type": "array",
                          "items": {
                            "description": "The version of the operating system.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "os": {
                    "description": "The operating system version details.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Contains information about the selected OS versions.",
                      "type": "object",
                      "required": [
                        "custom",
                        "gracePeriod",
                        "name"
                      ],
                      "properties": {
                        "custom": {
                          "description": "Custom combinations of different versions.",
                          "minItems": 1,
                          "type": "array",
                          "items": {
                            "description": "The OS version. For macOS this would be the build number, such as `19H15` for macOS Catalina 10.15.7.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "gracePeriod": {
                          "description": "The number of days the previous version is valid until it's deprecated.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the operating system.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/chosenVersions.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Device risk assessment rule information.",
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "id",
                      "count",
                      "name",
                      "tier"
                    ],
                    "properties": {
                      "count": {
                        "description": "The total number of devices that pass the criteria specified for this risk assessment rule.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "id": {
                        "description": "A unique identifier for this risk assessment rule.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "name": {
                        "description": "The name of the risk assessment rule.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "tier": {
                        "description": "Whether the rule is a tier.",
                        "type": "boolean"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/riskAssessment.yaml"
                  }
                },
                "example": [
                  {
                    "count": 19,
                    "id": 298,
                    "name": "Finance Tag",
                    "tier": false
                  },
                  {
                    "count": 57,
                    "id": 299,
                    "name": "Engineering Tag",
                    "tier": false
                  },
                  {
                    "count": 86,
                    "id": 255,
                    "name": "Low",
                    "tier": true
                  },
                  {
                    "count": 15,
                    "id": 256,
                    "name": "Medium",
                    "tier": true
                  },
                  {
                    "count": 150,
                    "id": 257,
                    "name": "High",
                    "tier": true
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/risk-assessment/os-names": {
      "get": {
        "description": "Lists supported operating systems for risk assessment. Unlisted operating systems aren't supported for risk assessment.",
        "operationId": "get-os-names",
        "summary": "List available operating systems",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-os-names"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Operating systems that are available for the product.",
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "mobile",
                      "name"
                    ],
                    "properties": {
                      "mobile": {
                        "description": "Indicates a mobile device operating system.",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The name of the operating system.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/availableOs.yaml"
                  }
                },
                "example": [
                  {
                    "mobile": false,
                    "name": "Mac OS X"
                  },
                  {
                    "mobile": false,
                    "name": "Windows"
                  },
                  {
                    "mobile": true,
                    "name": "iOS"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/risk-assessment/partner/carbon-black": {
      "post": {
        "description": "Adds a new Carbon Black integration.",
        "operationId": "post-partner-carbon-black",
        "summary": "Create a new Carbon Black integration",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-partner-carbon-black"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Carbon Black integration information.",
                "minItems": 1,
                "type": "array",
                "items": {
                  "additionalProperties": false,
                  "description": "Carbon Black integration properties.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the integration property. Either `name`, `host`, `api-key`, `api-id` or `org-key`.",
                      "type": "string",
                      "enum": [
                        "name",
                        "host",
                        "api-key",
                        "api-id",
                        "org-key"
                      ]
                    },
                    "value": {
                      "description": "The value of the integration property.",
                      "minLength": 1,
                      "type": "string"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/carbonBlackIntegration.yaml"
                }
              },
              "example": [
                {
                  "name": "host",
                  "value": "https://api-url.akam-integration.net"
                },
                {
                  "name": "name",
                  "value": "CarbonBlack Integration"
                },
                {
                  "name": "api-id",
                  "value": "ABC"
                },
                {
                  "name": "api-key",
                  "value": "DEF"
                },
                {
                  "name": "org-key",
                  "value": "PQR"
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists the details of existing Carbon Black integration entries.",
        "operationId": "get-partner-carbon-black",
        "summary": "List Carbon Black integrations",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-partner-carbon-black"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": [
                  [
                    {
                      "name": "host",
                      "value": "https://api-url.akam-integration.net"
                    },
                    {
                      "name": "name",
                      "value": "CarbonBlack Integration"
                    },
                    {
                      "name": "api-id",
                      "value": "ABC"
                    },
                    {
                      "name": "api-key",
                      "value": "******"
                    },
                    {
                      "name": "org-key",
                      "value": "PQR"
                    },
                    {
                      "name": "integration-id",
                      "value": "15690021"
                    }
                  ],
                  [
                    {
                      "name": "host",
                      "value": "https://api-url.akam-integration.net"
                    },
                    {
                      "name": "name",
                      "value": "CarbonBlack Integration II"
                    },
                    {
                      "name": "api-id",
                      "value": "ABC"
                    },
                    {
                      "name": "api-key",
                      "value": "******"
                    },
                    {
                      "name": "org-key",
                      "value": "PQR"
                    },
                    {
                      "name": "integration-id",
                      "value": "28932400"
                    }
                  ]
                ],
                "schema": {
                  "description": "Information about all Carbon Black integration entries present.",
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the integration property. Either `name`, `host`, `api-key`, `api-id`, `org-key` or `integration-id`.",
                          "type": "string",
                          "enum": [
                            "name",
                            "host",
                            "api-key",
                            "api-id",
                            "org-key",
                            "integration-id"
                          ]
                        },
                        "value": {
                          "description": "The value of the integration property.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/carbonBlackGetIntegrations.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/risk-assessment/partner/carbon-black/status": {
      "get": {
        "description": "Get current status of Carbon Black integration.",
        "operationId": "get-partner-carbon-black-status",
        "summary": "Get Carbon Black integration status",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-partner-carbon-black-status"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "enabled": true
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Partner status updates.",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "description": "Overall status for a partner. Used for both CrowdStrike and Carbon Black.",
                      "type": "boolean"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/partnerIntegrationStatus.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Update current status of Carbon Black integration to either enabled or disabled.",
        "operationId": "put-partner-carbon-black-status",
        "summary": "Update Carbon Black integration status",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-partner-carbon-black-status"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "enabled": true
              },
              "schema": {
                "additionalProperties": false,
                "description": "Partner status updates.",
                "type": "object",
                "properties": {
                  "enabled": {
                    "description": "Overall status for a partner. Used for both CrowdStrike and Carbon Black.",
                    "example": "{{enabled}}",
                    "type": "boolean"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/partnerIntegrationStatus.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/risk-assessment/partner/carbon-black/test": {
      "post": {
        "description": "Creates a Carbon Black integration to test against your Device Posture configuration.",
        "operationId": "post-partner-carbon-black-test",
        "summary": "Create a Carbon Black integration",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-partner-carbon-black-test"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Carbon Black integration information.",
                "minItems": 1,
                "type": "array",
                "items": {
                  "additionalProperties": false,
                  "description": "Carbon Black integration properties.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the integration property. Either `name`, `host`, `api-key`, `api-id` or `org-key`.",
                      "type": "string",
                      "enum": [
                        "name",
                        "host",
                        "api-key",
                        "api-id",
                        "org-key"
                      ]
                    },
                    "value": {
                      "description": "The value of the integration property.",
                      "minLength": 1,
                      "type": "string"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/carbonBlackIntegration.yaml"
                }
              },
              "example": [
                {
                  "name": "host",
                  "value": "https://api-url.akam-integration.net"
                },
                {
                  "name": "name",
                  "value": "CarbonBlack Integration"
                },
                {
                  "name": "api-id",
                  "value": "ABC"
                },
                {
                  "name": "api-key",
                  "value": "DEF"
                },
                {
                  "name": "org-key",
                  "value": "PQR"
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/risk-assessment/partner/carbon-black/test/{integration_id}": {
      "put": {
        "description": "Tests an existing Carbon Black integration against your device posture configuration.",
        "operationId": "put-partner-carbon-black-test",
        "summary": "Creates a Carbon Black integration for testing",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-partner-carbon-black-test"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Carbon Black integration information.",
                "minItems": 1,
                "type": "array",
                "items": {
                  "additionalProperties": false,
                  "description": "Carbon Black integration properties.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the integration property. Either `name`, `host`, `api-key`, `api-id` or `org-key`.",
                      "type": "string",
                      "enum": [
                        "name",
                        "host",
                        "api-key",
                        "api-id",
                        "org-key"
                      ]
                    },
                    "value": {
                      "description": "The value of the integration property.",
                      "minLength": 1,
                      "type": "string"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/carbonBlackIntegration.yaml"
                }
              },
              "example": [
                {
                  "name": "host",
                  "value": "https://prod05.deployme.net"
                },
                {
                  "name": "name",
                  "value": "CarbonBlack Integration"
                },
                {
                  "name": "api-id",
                  "value": "ABC"
                },
                {
                  "name": "api-key",
                  "value": "******"
                },
                {
                  "name": "org-key",
                  "value": "PQR"
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "The unique identifier for your anti-malware integration.",
          "example": "{{integration_id}}",
          "in": "path",
          "name": "integration_id",
          "required": true,
          "schema": {
            "example": "98031801715761581230135214904202585480279",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/integrationId-path.yaml"
          }
        }
      ]
    },
    "/device-posture/risk-assessment/partner/carbon-black/{integration_id}": {
      "get": {
        "description": "Lists the details a specific Carbon Black integration.",
        "operationId": "get-partner-carbon-black-integration",
        "summary": "Get a Carbon Black integration",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-partner-carbon-black-integration"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Carbon Black integration information.",
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Carbon Black integration properties.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the integration property. Either `name`, `host`, `api-key`, `api-id` or `org-key`.",
                        "type": "string",
                        "enum": [
                          "name",
                          "host",
                          "api-key",
                          "api-id",
                          "org-key"
                        ]
                      },
                      "value": {
                        "description": "The value of the integration property.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/carbonBlackIntegration.yaml"
                  }
                },
                "example": [
                  {
                    "name": "host",
                    "value": "https://api-url.akam-integration.net"
                  },
                  {
                    "name": "name",
                    "value": "CarbonBlack Integration"
                  },
                  {
                    "name": "api-id",
                    "value": "ABC"
                  },
                  {
                    "name": "api-key",
                    "value": "******"
                  },
                  {
                    "name": "org-key",
                    "value": "PQR"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates details for a specific Carbon Black integration.",
        "operationId": "put-partner-carbon-black-integration",
        "summary": "Modify a Carbon Black integration",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-partner-carbon-black-integration"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "Carbon Black integration information.",
                "minItems": 1,
                "type": "array",
                "items": {
                  "additionalProperties": false,
                  "description": "Carbon Black integration properties.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the integration property. Either `name`, `host`, `api-key`, `api-id` or `org-key`.",
                      "type": "string",
                      "enum": [
                        "name",
                        "host",
                        "api-key",
                        "api-id",
                        "org-key"
                      ]
                    },
                    "value": {
                      "description": "The value of the integration property.",
                      "minLength": 1,
                      "type": "string"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/carbonBlackIntegration.yaml"
                }
              },
              "example": [
                {
                  "name": "host",
                  "value": "https://prod05.deployme.net"
                },
                {
                  "name": "name",
                  "value": "CarbonBlack Integration"
                },
                {
                  "name": "api-id",
                  "value": "ABC"
                },
                {
                  "name": "api-key",
                  "value": "******"
                },
                {
                  "name": "org-key",
                  "value": "PQR"
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Deletes a specific Carbon Black integration.",
        "operationId": "delete-partner-carbon-black-integration",
        "summary": "Delete a Carbon Black integration",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-partner-carbon-black-integration"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "The unique identifier for your anti-malware integration.",
          "example": "{{integration_id}}",
          "in": "path",
          "name": "integration_id",
          "required": true,
          "schema": {
            "example": "98031801715761581230135214904202585480279",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/integrationId-path.yaml"
          }
        }
      ]
    },
    "/device-posture/risk-assessment/partner/crowdstrike": {
      "post": {
        "description": "Adds a new CrowdStrike integration entry.",
        "operationId": "post-partner-crowdstrike",
        "summary": "Create a new CrowdStrike integration",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-partner-crowdstrike"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "CrowdStrike integration information.",
                "minItems": 1,
                "type": "array",
                "items": {
                  "additionalProperties": false,
                  "description": "Crowdstrike integration rule information.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the integration property. Either `name`, `host`, `client-id`, or `client-secret`.",
                      "type": "string",
                      "enum": [
                        "name",
                        "host",
                        "client-id",
                        "client-secret"
                      ]
                    },
                    "value": {
                      "description": "The value of the integration property.",
                      "minLength": 1,
                      "type": "string"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/crowdstrikeIntegration.yaml"
                }
              },
              "example": [
                {
                  "name": "host",
                  "value": "https://api-url.akam-integration.net"
                },
                {
                  "name": "name",
                  "value": "CS SANDBOX II"
                },
                {
                  "name": "client-id",
                  "value": "ABC"
                },
                {
                  "name": "client-secret",
                  "value": "PQR"
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists details of existing CrowdStrike integrations.",
        "operationId": "get-partner-crowdstrike",
        "summary": "List CrowdStrike integrations",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-partner-crowdstrike"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": [
                  [
                    {
                      "name": "host",
                      "value": "https://api-url.akam-integration.net"
                    },
                    {
                      "name": "name",
                      "value": "CS SANDBOX ONE"
                    },
                    {
                      "name": "client-id",
                      "value": "ABC"
                    },
                    {
                      "name": "client-secret",
                      "value": "******"
                    },
                    {
                      "name": "integration-id",
                      "value": "912933"
                    }
                  ],
                  [
                    {
                      "name": "host",
                      "value": "https://api-url.akam-integration.net"
                    },
                    {
                      "name": "name",
                      "value": "CS SANDBOX TWO"
                    },
                    {
                      "name": "client-id",
                      "value": "PQR"
                    },
                    {
                      "name": "client-secret",
                      "value": "******"
                    },
                    {
                      "name": "integration-id",
                      "value": "274703"
                    }
                  ],
                  [
                    {
                      "name": "host",
                      "value": "https://api-url.akam-integration.net"
                    },
                    {
                      "name": "name",
                      "value": "CS SANDBOX THREE"
                    },
                    {
                      "name": "client-id",
                      "value": "ABC"
                    },
                    {
                      "name": "client-secret",
                      "value": "******"
                    },
                    {
                      "name": "integration-id",
                      "value": "285089"
                    }
                  ]
                ],
                "schema": {
                  "description": "CrowdStrike integration entries.",
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the integration property. Either `name`, `host`, `client-id`, `client-secret`, or `integration-id`.",
                          "type": "string",
                          "enum": [
                            "name",
                            "host",
                            "client-id",
                            "client-secret",
                            "integration-id"
                          ]
                        },
                        "value": {
                          "description": "The value of the integration property.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/crowdstrikeGetIntegrations.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/risk-assessment/partner/crowdstrike/status": {
      "get": {
        "description": "Get current status of CrowdStrike integration.",
        "operationId": "get-partner-crowdstrike-status",
        "summary": "Get CrowdStrike integration status",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-partner-crowdstrike-status"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "enabled": true
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Partner status updates.",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "description": "Overall status for a partner. Used for both CrowdStrike and Carbon Black.",
                      "type": "boolean"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/partnerIntegrationStatus.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates current status of CrowdStrike integration to either enabled or disabled.",
        "operationId": "put-partner-crowdstrike-status",
        "summary": "Update CrowdStrike integration status",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-partner-crowdstrike-status"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "enabled": true
              },
              "schema": {
                "additionalProperties": false,
                "description": "Partner status updates.",
                "type": "object",
                "properties": {
                  "enabled": {
                    "description": "Overall status for a partner. Used for both CrowdStrike and Carbon Black.",
                    "example": "{{enabled}}",
                    "type": "boolean"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/partnerIntegrationStatus.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/risk-assessment/partner/crowdstrike/test": {
      "post": {
        "description": "Create a CrowdStrike integration to test against your device posture configuration.",
        "operationId": "post-partner-crowdstrike-test",
        "summary": "Create a CrowdStrike integration",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-partner-crowdstrike-test"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "CrowdStrike integration information.",
                "minItems": 1,
                "type": "array",
                "items": {
                  "additionalProperties": false,
                  "description": "Crowdstrike integration rule information.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the integration property. Either `name`, `host`, `client-id`, or `client-secret`.",
                      "type": "string",
                      "enum": [
                        "name",
                        "host",
                        "client-id",
                        "client-secret"
                      ]
                    },
                    "value": {
                      "description": "The value of the integration property.",
                      "minLength": 1,
                      "type": "string"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/crowdstrikeIntegration.yaml"
                }
              },
              "example": [
                {
                  "name": "host",
                  "value": "https://api-url.akam-integration.net"
                },
                {
                  "name": "name",
                  "value": "CS SANDBOX II"
                },
                {
                  "name": "client-id",
                  "value": "ABC"
                },
                {
                  "name": "client-secret",
                  "value": "PQR"
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/risk-assessment/partner/crowdstrike/test/{integration_id}": {
      "put": {
        "description": "Test an existing CrowdStrike integration against your device posture configuration.",
        "operationId": "put-partner-crowdstrike-test",
        "summary": "Creates a CrowdStrike integration for testing",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-partner-crowdstrike-test"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "CrowdStrike integration information.",
                "minItems": 1,
                "type": "array",
                "items": {
                  "additionalProperties": false,
                  "description": "Crowdstrike integration rule information.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the integration property. Either `name`, `host`, `client-id`, or `client-secret`.",
                      "type": "string",
                      "enum": [
                        "name",
                        "host",
                        "client-id",
                        "client-secret"
                      ]
                    },
                    "value": {
                      "description": "The value of the integration property.",
                      "minLength": 1,
                      "type": "string"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/crowdstrikeIntegration.yaml"
                }
              },
              "example": [
                {
                  "name": "host",
                  "value": "https://api-url.akam-integration.net"
                },
                {
                  "name": "name",
                  "value": "CS SANDBOX II"
                },
                {
                  "name": "client-id",
                  "value": "h2ef5e3ecdf5400c990d7ba37d17drs2"
                },
                {
                  "name": "client-secret",
                  "value": "******"
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "The unique identifier for your anti-malware integration.",
          "example": "{{integration_id}}",
          "in": "path",
          "name": "integration_id",
          "required": true,
          "schema": {
            "example": "98031801715761581230135214904202585480279",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/integrationId-path.yaml"
          }
        }
      ]
    },
    "/device-posture/risk-assessment/partner/crowdstrike/{integration_id}": {
      "get": {
        "description": "Lists details a specific CrowdStrike integration.",
        "operationId": "get-partner-crowdstrike-integration",
        "summary": "Get a CrowdStrike integration",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-partner-crowdstrike-integration"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "CrowdStrike integration information.",
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Crowdstrike integration rule information.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the integration property. Either `name`, `host`, `client-id`, or `client-secret`.",
                        "type": "string",
                        "enum": [
                          "name",
                          "host",
                          "client-id",
                          "client-secret"
                        ]
                      },
                      "value": {
                        "description": "The value of the integration property.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/crowdstrikeIntegration.yaml"
                  }
                },
                "example": [
                  {
                    "name": "host",
                    "value": "https://api-url.akam-integration.net"
                  },
                  {
                    "name": "name",
                    "value": "CrowdStrike Integration 1"
                  },
                  {
                    "name": "client-id",
                    "value": "PQR"
                  },
                  {
                    "name": "client-secret",
                    "value": "******"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates details for a specific integration entry.",
        "operationId": "put-partner-crowdstrike-integration",
        "summary": "Modify a CrowdStrike integration",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-partner-crowdstrike-integration"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "CrowdStrike integration information.",
                "minItems": 1,
                "type": "array",
                "items": {
                  "additionalProperties": false,
                  "description": "Crowdstrike integration rule information.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the integration property. Either `name`, `host`, `client-id`, or `client-secret`.",
                      "type": "string",
                      "enum": [
                        "name",
                        "host",
                        "client-id",
                        "client-secret"
                      ]
                    },
                    "value": {
                      "description": "The value of the integration property.",
                      "minLength": 1,
                      "type": "string"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/crowdstrikeIntegration.yaml"
                }
              },
              "example": [
                {
                  "name": "host",
                  "value": "https://api-url.akam-integration.net"
                },
                {
                  "name": "name",
                  "value": "CS SANDBOX II"
                },
                {
                  "name": "client-id",
                  "value": "h2ef5e3ecdf5400c990d7ba37d17drs2"
                },
                {
                  "name": "client-secret",
                  "value": "******"
                }
              ]
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Deletes a specific CrowdStrike integration.",
        "operationId": "delete-partner-crowdstrike-integration",
        "summary": "Delete a CrowdStrike integration",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-partner-crowdstrike-integration"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "The unique identifier for your anti-malware integration.",
          "example": "{{integration_id}}",
          "in": "path",
          "name": "integration_id",
          "required": true,
          "schema": {
            "example": "98031801715761581230135214904202585480279",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/integrationId-path.yaml"
          }
        }
      ]
    },
    "/device-posture/risk-assessment/signal-names": {
      "get": {
        "description": "Lists supported signal names for risk assessment. Unlisted signals aren't supported for risk assessment.",
        "operationId": "get-signal-names",
        "summary": "List signal names",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-signal-names"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Signal definitions available in the product.",
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "type",
                      "mobile",
                      "name",
                      "options"
                    ],
                    "properties": {
                      "options": {
                        "description": "Available signal value options.",
                        "minItems": 1,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "Available signal value options.",
                          "type": "object",
                          "required": [
                            "value"
                          ],
                          "properties": {
                            "name": {
                              "description": "Option name (label).",
                              "minLength": 1,
                              "type": "string"
                            },
                            "value": {
                              "description": "Option value.",
                              "oneOf": [
                                {
                                  "minLength": 1,
                                  "title": "String",
                                  "type": "string"
                                },
                                {
                                  "title": "Boolean",
                                  "type": "boolean"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "mobile": {
                        "description": "Indicates a mobile operating system.",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "The signal name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "type": {
                        "description": "Signal type. Either `boolean`, `age_lte`, `input`, `mselect`, or `select`.",
                        "type": "string",
                        "enum": [
                          "boolean",
                          "age_lte",
                          "input",
                          "mselect",
                          "select"
                        ]
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/signalNames.yaml"
                  }
                },
                "example": [
                  {
                    "mobile": false,
                    "name": "anti-malware",
                    "type": "select",
                    "options": []
                  },
                  {
                    "mobile": false,
                    "name": "disk-encryption",
                    "type": "boolean",
                    "options": [
                      {
                        "value": true
                      }
                    ]
                  },
                  {
                    "mobile": false,
                    "name": "firewall",
                    "type": "boolean",
                    "options": [
                      {
                        "value": true
                      }
                    ]
                  },
                  {
                    "mobile": null,
                    "name": "dp-client-healthy",
                    "type": "boolean",
                    "options": [
                      {
                        "value": true
                      }
                    ]
                  },
                  {
                    "mobile": false,
                    "name": "browser-version",
                    "type": "mselect",
                    "options": [
                      {
                        "name": "Latest",
                        "value": "latest"
                      },
                      {
                        "name": "Custom",
                        "value": "custom"
                      }
                    ]
                  },
                  {
                    "mobile": false,
                    "name": "client-version",
                    "type": "select",
                    "options": [
                      {
                        "name": "Latest",
                        "value": "latest"
                      }
                    ]
                  },
                  {
                    "mobile": null,
                    "name": "os-version",
                    "type": "mselect",
                    "options": [
                      {
                        "name": "Up to date",
                        "value": "up-to-date"
                      },
                      {
                        "name": "Custom",
                        "value": "custom"
                      }
                    ]
                  },
                  {
                    "mobile": true,
                    "name": "biometrics",
                    "type": "boolean",
                    "options": [
                      {
                        "value": true
                      }
                    ]
                  },
                  {
                    "mobile": true,
                    "name": "jailbroken",
                    "type": "boolean",
                    "options": [
                      {
                        "value": false
                      }
                    ]
                  },
                  {
                    "mobile": true,
                    "name": "screen-lock",
                    "type": "boolean",
                    "options": [
                      {
                        "value": true
                      }
                    ]
                  },
                  {
                    "mobile": false,
                    "name": "certificate-profiles",
                    "type": "mselect",
                    "options": []
                  },
                  {
                    "mobile": false,
                    "name": "etp-threat",
                    "type": "boolean",
                    "options": [
                      {
                        "value": false
                      }
                    ]
                  },
                  {
                    "mobile": false,
                    "name": "crowdstrike-healthy",
                    "type": "boolean",
                    "options": [
                      {
                        "value": true
                      }
                    ]
                  },
                  {
                    "mobile": true,
                    "name": "mobile-client-version",
                    "type": "mselect",
                    "options": [
                      {
                        "name": "Custom",
                        "value": "custom"
                      }
                    ]
                  },
                  {
                    "mobile": false,
                    "name": "etp-client-status",
                    "type": "boolean",
                    "options": [
                      {
                        "value": true
                      }
                    ]
                  },
                  {
                    "mobile": false,
                    "name": "cb-healthy",
                    "type": "boolean",
                    "options": [
                      {
                        "value": true
                      }
                    ]
                  },
                  {
                    "mobile": false,
                    "name": "cb-policy",
                    "type": "input",
                    "options": []
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/risk-assessment/tags": {
      "post": {
        "description": "Creates a new risk tag.",
        "operationId": "post-tag",
        "summary": "Create risk tag",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-tag"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "id": 12345678,
                "name": "Stash",
                "version": "2018-12",
                "rules": [
                  {
                    "os": [
                      "Mac OS X"
                    ],
                    "signals": [
                      {
                        "name": "anti_malware",
                        "value": 1
                      }
                    ]
                  },
                  {
                    "os": [
                      "Windows"
                    ],
                    "signals": [
                      {
                        "name": "firewall",
                        "value": true
                      }
                    ]
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Configurable risk rules.",
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "rules",
                  "version"
                ],
                "properties": {
                  "id": {
                    "description": "A unique identifier for this risk rule.",
                    "example": "{{id}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "name": {
                    "description": "The name of the risk rule.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "rank": {
                    "description": "The rank of the risk rule. Present only in tiers.",
                    "example": "{{rank}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "rules": {
                    "description": "Available risk assessment criteria rules.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Available criteria rules.",
                      "type": "object",
                      "required": [
                        "os",
                        "signals"
                      ],
                      "properties": {
                        "os": {
                          "description": "Operating systems.",
                          "minItems": 1,
                          "type": "array",
                          "items": {
                            "description": "The name of the operating system.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "signals": {
                          "description": "Available risk assessment signals.",
                          "minItems": 1,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "Available signal values.",
                            "type": "object",
                            "required": [
                              "name",
                              "value"
                            ],
                            "properties": {
                              "name": {
                                "description": "The name of the signal.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "value": {
                                "description": "The signal value. Either a single value with a type of string, integer, or boolean, or an array of similar type values.",
                                "oneOf": [
                                  {
                                    "minLength": 1,
                                    "title": "String",
                                    "type": "string"
                                  },
                                  {
                                    "title": "Boolean",
                                    "type": "boolean"
                                  },
                                  {
                                    "minimum": 0,
                                    "title": "Integer",
                                    "type": "integer"
                                  },
                                  {
                                    "minItems": 0,
                                    "title": "Array",
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "minLength": 1,
                                          "title": "String",
                                          "type": "string"
                                        },
                                        {
                                          "title": "Boolean",
                                          "type": "boolean"
                                        },
                                        {
                                          "title": "Integer",
                                          "type": "integer"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "version": {
                    "description": "Risk rule schema version.",
                    "example": "{{version}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/riskRule.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            },
            "headers": {
              "Location": {
                "description": "The unique identifier for the newly created resource. Append this ID to a subsequent GET call to view the resource details. ",
                "schema": {
                  "example": 1100,
                  "type": "integer"
                },
                "x-akamai": {
                  "file-path": "headers/location-header.yaml"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists supported risk tags for risk assessment.",
        "operationId": "get-tags",
        "summary": "List risk tags",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-tags"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Encapsulated information about Risk Rules that are available in the product.",
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Configurable risk rule information.",
                    "type": "object",
                    "required": [
                      "rules",
                      "version",
                      "id",
                      "name"
                    ],
                    "properties": {
                      "id": {
                        "description": "A unique identifier for this risk rule.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "name": {
                        "description": "The name of the risk rule.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "rank": {
                        "description": "The rank of the risk rule. Present only in tiers.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "rules": {
                        "description": "Available risk assessment criteria rules.",
                        "minItems": 1,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "Available criteria rules.",
                          "type": "object",
                          "required": [
                            "signals",
                            "os"
                          ],
                          "properties": {
                            "os": {
                              "description": "Operating systems.",
                              "minItems": 1,
                              "type": "array",
                              "items": {
                                "description": "The name of the operating system.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "signals": {
                              "description": "Available risk assessment signals.",
                              "minItems": 1,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "Available signal values.",
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "The name of the signal.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The signal values. Either a single value with a type of string, integer, or boolean, or an array of similar type values.",
                                    "oneOf": [
                                      {
                                        "minLength": 1,
                                        "title": "String",
                                        "type": "string"
                                      },
                                      {
                                        "title": "Boolean",
                                        "type": "boolean"
                                      },
                                      {
                                        "minimum": 0,
                                        "title": "Integer",
                                        "type": "integer"
                                      },
                                      {
                                        "minItems": 0,
                                        "title": "Array",
                                        "type": "array",
                                        "items": {
                                          "oneOf": [
                                            {
                                              "minLength": 1,
                                              "title": "Strings",
                                              "type": "string"
                                            },
                                            {
                                              "title": "Booleans",
                                              "type": "boolean"
                                            },
                                            {
                                              "title": "Integers",
                                              "type": "integer"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "version": {
                        "description": "Risk rule schema version.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/risk-assessment-rule.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/riskRules.yaml"
                  }
                },
                "example": [
                  {
                    "id": 159,
                    "name": "Low",
                    "rank": 0,
                    "version": "2019",
                    "rules": [
                      {
                        "os": [
                          "Mac OS X",
                          "Windows"
                        ],
                        "signals": [
                          {
                            "name": "anti-malware",
                            "value": 1
                          },
                          {
                            "name": "firewall",
                            "value": true
                          },
                          {
                            "name": "browser-version",
                            "value": [
                              "latest",
                              "custom",
                              "latest+"
                            ]
                          },
                          {
                            "name": "os-version",
                            "value": [
                              "latest",
                              "custom"
                            ]
                          },
                          {
                            "name": "dp-client-healthy",
                            "value": true
                          },
                          {
                            "name": "client-version",
                            "value": "latest"
                          },
                          {
                            "name": "disk-encryption",
                            "value": true
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "id": 160,
                    "name": "Medium",
                    "rank": 50,
                    "version": "2019",
                    "rules": [
                      {
                        "os": [
                          "Mac OS X"
                        ],
                        "signals": [
                          {
                            "name": "anti-malware",
                            "value": 1
                          },
                          {
                            "name": "os-version",
                            "value": [
                              "up-to-date",
                              "up-to-date+",
                              "custom"
                            ]
                          },
                          {
                            "name": "dp-client-healthy",
                            "value": true
                          },
                          {
                            "name": "firewall",
                            "value": true
                          }
                        ]
                      },
                      {
                        "os": [
                          "Windows"
                        ],
                        "signals": [
                          {
                            "name": "anti-malware",
                            "value": 1
                          },
                          {
                            "name": "os-version",
                            "value": [
                              "up-to-date",
                              "up-to-date+",
                              "custom"
                            ]
                          },
                          {
                            "name": "dp-client-healthy",
                            "value": true
                          },
                          {
                            "name": "firewall",
                            "value": true
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "id": 161,
                    "name": "High",
                    "rank": 100,
                    "version": "2019",
                    "rules": []
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/risk-assessment/tags/{ruleId}": {
      "get": {
        "description": "Lists details for a specific risk tag.",
        "operationId": "get-tag",
        "summary": "Get a risk tag",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-tag"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "id": 12345678,
                  "name": "Stash",
                  "version": "2018-12",
                  "rules": [
                    {
                      "os": [
                        "Mac OS X"
                      ],
                      "signals": [
                        {
                          "name": "anti_malware",
                          "value": 1
                        }
                      ]
                    },
                    {
                      "os": [
                        "Windows"
                      ],
                      "signals": [
                        {
                          "name": "firewall",
                          "value": true
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Configurable risk rules.",
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "rules",
                    "version"
                  ],
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this risk rule.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "name": {
                      "description": "The name of the risk rule.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "rank": {
                      "description": "The rank of the risk rule. Present only in tiers.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "rules": {
                      "description": "Available risk assessment criteria rules.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Available criteria rules.",
                        "type": "object",
                        "required": [
                          "os",
                          "signals"
                        ],
                        "properties": {
                          "os": {
                            "description": "Operating systems.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "description": "The name of the operating system.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "signals": {
                            "description": "Available risk assessment signals.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Available signal values.",
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "name": {
                                  "description": "The name of the signal.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The signal value. Either a single value with a type of string, integer, or boolean, or an array of similar type values.",
                                  "oneOf": [
                                    {
                                      "minLength": 1,
                                      "title": "String",
                                      "type": "string"
                                    },
                                    {
                                      "title": "Boolean",
                                      "type": "boolean"
                                    },
                                    {
                                      "minimum": 0,
                                      "title": "Integer",
                                      "type": "integer"
                                    },
                                    {
                                      "minItems": 0,
                                      "title": "Array",
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "minLength": 1,
                                            "title": "String",
                                            "type": "string"
                                          },
                                          {
                                            "title": "Boolean",
                                            "type": "boolean"
                                          },
                                          {
                                            "title": "Integer",
                                            "type": "integer"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "version": {
                      "description": "Risk rule schema version.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/riskRule.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates the details for a specific risk tag.",
        "operationId": "put-tag",
        "summary": "Modify a risk tag",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-tag"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "id": 12345678,
                "name": "Stash",
                "version": "2018-12",
                "rules": [
                  {
                    "os": [
                      "Mac OS X"
                    ],
                    "signals": [
                      {
                        "name": "anti_malware",
                        "value": 1
                      }
                    ]
                  },
                  {
                    "os": [
                      "Windows"
                    ],
                    "signals": [
                      {
                        "name": "firewall",
                        "value": true
                      }
                    ]
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Configurable risk rules.",
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "rules",
                  "version"
                ],
                "properties": {
                  "id": {
                    "description": "A unique identifier for this risk rule.",
                    "example": "{{id}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "name": {
                    "description": "The name of the risk rule.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "rank": {
                    "description": "The rank of the risk rule. Present only in tiers.",
                    "example": "{{rank}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "rules": {
                    "description": "Available risk assessment criteria rules.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Available criteria rules.",
                      "type": "object",
                      "required": [
                        "os",
                        "signals"
                      ],
                      "properties": {
                        "os": {
                          "description": "Operating systems.",
                          "minItems": 1,
                          "type": "array",
                          "items": {
                            "description": "The name of the operating system.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "signals": {
                          "description": "Available risk assessment signals.",
                          "minItems": 1,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "Available signal values.",
                            "type": "object",
                            "required": [
                              "name",
                              "value"
                            ],
                            "properties": {
                              "name": {
                                "description": "The name of the signal.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "value": {
                                "description": "The signal value. Either a single value with a type of string, integer, or boolean, or an array of similar type values.",
                                "oneOf": [
                                  {
                                    "minLength": 1,
                                    "title": "String",
                                    "type": "string"
                                  },
                                  {
                                    "title": "Boolean",
                                    "type": "boolean"
                                  },
                                  {
                                    "minimum": 0,
                                    "title": "Integer",
                                    "type": "integer"
                                  },
                                  {
                                    "minItems": 0,
                                    "title": "Array",
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "minLength": 1,
                                          "title": "String",
                                          "type": "string"
                                        },
                                        {
                                          "title": "Boolean",
                                          "type": "boolean"
                                        },
                                        {
                                          "title": "Integer",
                                          "type": "integer"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "version": {
                    "description": "Risk rule schema version.",
                    "example": "{{version}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/riskRule.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Removes a risk tag from your device posture configuration.",
        "operationId": "delete-tag",
        "summary": "Delete a tag",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-tag"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for this risk tier.",
          "example": "{{ruleId}}",
          "in": "path",
          "name": "ruleId",
          "required": true,
          "schema": {
            "example": 12345,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/ruleId-path.yaml"
          }
        }
      ]
    },
    "/device-posture/risk-assessment/test/{ruleId}": {
      "put": {
        "description": "Tests the specified risk rule against existing devices.",
        "operationId": "put-test-ruleid",
        "summary": "Test risk rule",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-test-ruleid"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "id": 12345678,
                "name": "Stash",
                "version": "2018-12",
                "rules": [
                  {
                    "os": [
                      "Mac OS X"
                    ],
                    "signals": [
                      {
                        "name": "anti_malware",
                        "value": 1
                      }
                    ]
                  },
                  {
                    "os": [
                      "Windows"
                    ],
                    "signals": [
                      {
                        "name": "firewall",
                        "value": true
                      }
                    ]
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Configurable risk rules.",
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "rules",
                  "version"
                ],
                "properties": {
                  "id": {
                    "description": "A unique identifier for this risk rule.",
                    "example": "{{id}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "name": {
                    "description": "The name of the risk rule.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "rank": {
                    "description": "The rank of the risk rule. Present only in tiers.",
                    "example": "{{rank}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "rules": {
                    "description": "Available risk assessment criteria rules.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Available criteria rules.",
                      "type": "object",
                      "required": [
                        "os",
                        "signals"
                      ],
                      "properties": {
                        "os": {
                          "description": "Operating systems.",
                          "minItems": 1,
                          "type": "array",
                          "items": {
                            "description": "The name of the operating system.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "signals": {
                          "description": "Available risk assessment signals.",
                          "minItems": 1,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "Available signal values.",
                            "type": "object",
                            "required": [
                              "name",
                              "value"
                            ],
                            "properties": {
                              "name": {
                                "description": "The name of the signal.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "value": {
                                "description": "The signal value. Either a single value with a type of string, integer, or boolean, or an array of similar type values.",
                                "oneOf": [
                                  {
                                    "minLength": 1,
                                    "title": "String",
                                    "type": "string"
                                  },
                                  {
                                    "title": "Boolean",
                                    "type": "boolean"
                                  },
                                  {
                                    "minimum": 0,
                                    "title": "Integer",
                                    "type": "integer"
                                  },
                                  {
                                    "minItems": 0,
                                    "title": "Array",
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "minLength": 1,
                                          "title": "String",
                                          "type": "string"
                                        },
                                        {
                                          "title": "Boolean",
                                          "type": "boolean"
                                        },
                                        {
                                          "title": "Integer",
                                          "type": "integer"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "version": {
                    "description": "Risk rule schema version.",
                    "example": "{{version}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/riskRule.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Device risk assessment rule information.",
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "required": [
                      "id",
                      "count",
                      "name",
                      "tier"
                    ],
                    "properties": {
                      "count": {
                        "description": "The total number of devices that pass the criteria specified for this risk assessment rule.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "id": {
                        "description": "A unique identifier for this risk assessment rule.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "name": {
                        "description": "The name of the risk assessment rule.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "tier": {
                        "description": "Whether the rule is a tier.",
                        "type": "boolean"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/riskAssessment.yaml"
                  }
                },
                "example": [
                  {
                    "count": 19,
                    "id": 298,
                    "name": "Finance Tag",
                    "tier": false
                  },
                  {
                    "count": 57,
                    "id": 299,
                    "name": "Engineering Tag",
                    "tier": false
                  },
                  {
                    "count": 86,
                    "id": 255,
                    "name": "Low",
                    "tier": true
                  },
                  {
                    "count": 15,
                    "id": 256,
                    "name": "Medium",
                    "tier": true
                  },
                  {
                    "count": 150,
                    "id": 257,
                    "name": "High",
                    "tier": true
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for this risk tier.",
          "example": "{{ruleId}}",
          "in": "path",
          "name": "ruleId",
          "required": true,
          "schema": {
            "example": 12345,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/ruleId-path.yaml"
          }
        }
      ]
    },
    "/device-posture/risk-assessment/tiers": {
      "get": {
        "description": "Lists supported risk tiers for risk assessment.",
        "operationId": "get-tiers",
        "summary": "List risk tiers",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-tiers"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Encapsulated information about Risk Rules that are available in the product.",
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "additionalProperties": false,
                    "description": "Configurable risk rule information.",
                    "type": "object",
                    "required": [
                      "rules",
                      "version",
                      "id",
                      "name"
                    ],
                    "properties": {
                      "id": {
                        "description": "A unique identifier for this risk rule.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "name": {
                        "description": "The name of the risk rule.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "rank": {
                        "description": "The rank of the risk rule. Present only in tiers.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "rules": {
                        "description": "Available risk assessment criteria rules.",
                        "minItems": 1,
                        "type": "array",
                        "items": {
                          "additionalProperties": false,
                          "description": "Available criteria rules.",
                          "type": "object",
                          "required": [
                            "signals",
                            "os"
                          ],
                          "properties": {
                            "os": {
                              "description": "Operating systems.",
                              "minItems": 1,
                              "type": "array",
                              "items": {
                                "description": "The name of the operating system.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "signals": {
                              "description": "Available risk assessment signals.",
                              "minItems": 1,
                              "type": "array",
                              "items": {
                                "additionalProperties": false,
                                "description": "Available signal values.",
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "The name of the signal.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The signal values. Either a single value with a type of string, integer, or boolean, or an array of similar type values.",
                                    "oneOf": [
                                      {
                                        "minLength": 1,
                                        "title": "String",
                                        "type": "string"
                                      },
                                      {
                                        "title": "Boolean",
                                        "type": "boolean"
                                      },
                                      {
                                        "minimum": 0,
                                        "title": "Integer",
                                        "type": "integer"
                                      },
                                      {
                                        "minItems": 0,
                                        "title": "Array",
                                        "type": "array",
                                        "items": {
                                          "oneOf": [
                                            {
                                              "minLength": 1,
                                              "title": "Strings",
                                              "type": "string"
                                            },
                                            {
                                              "title": "Booleans",
                                              "type": "boolean"
                                            },
                                            {
                                              "title": "Integers",
                                              "type": "integer"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "version": {
                        "description": "Risk rule schema version.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/risk-assessment-rule.yaml"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/riskRules.yaml"
                  }
                },
                "example": [
                  {
                    "id": 1515,
                    "name": "Anti-malware",
                    "version": "2018-12",
                    "rules": [
                      {
                        "os": [
                          "Windows"
                        ],
                        "signals": [
                          {
                            "name": "anti-malware",
                            "value": true
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "id": 1516,
                    "name": "Firewall",
                    "version": "2018-12",
                    "rules": [
                      {
                        "os": [
                          "Windows"
                        ],
                        "signals": [
                          {
                            "name": "firewall",
                            "value": true
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "id": 1888,
                    "name": "EAAClient-latest",
                    "version": "2018-12",
                    "rules": [
                      {
                        "os": [
                          "Mac OS X",
                          "Windows"
                        ],
                        "signals": [
                          {
                            "name": "client-version",
                            "value": "latest"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/device-posture/risk-assessment/tiers/{ruleId}": {
      "get": {
        "description": "Lists details for a specific risk tier.",
        "operationId": "get-tier",
        "summary": "Get a risk tier",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-tier"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "id": 12345,
                  "name": "Low",
                  "rank": 0,
                  "version": "2018-12",
                  "rules": [
                    {
                      "os": [
                        "Mac OS X"
                      ],
                      "signals": [
                        {
                          "name": "anti_malware",
                          "value": 1
                        },
                        {
                          "name": "browser_version",
                          "value": [
                            "Latest",
                            "Custom"
                          ]
                        }
                      ]
                    },
                    {
                      "os": [
                        "Windows"
                      ],
                      "signals": [
                        {
                          "name": "firewall",
                          "value": true
                        },
                        {
                          "name": "os_version",
                          "value": [
                            "Latest",
                            "Custom"
                          ]
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Configurable risk rules.",
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "rules",
                    "version"
                  ],
                  "properties": {
                    "id": {
                      "description": "A unique identifier for this risk rule.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "name": {
                      "description": "The name of the risk rule.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "rank": {
                      "description": "The rank of the risk rule. Present only in tiers.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "rules": {
                      "description": "Available risk assessment criteria rules.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Available criteria rules.",
                        "type": "object",
                        "required": [
                          "os",
                          "signals"
                        ],
                        "properties": {
                          "os": {
                            "description": "Operating systems.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "description": "The name of the operating system.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "signals": {
                            "description": "Available risk assessment signals.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Available signal values.",
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "name": {
                                  "description": "The name of the signal.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The signal value. Either a single value with a type of string, integer, or boolean, or an array of similar type values.",
                                  "oneOf": [
                                    {
                                      "minLength": 1,
                                      "title": "String",
                                      "type": "string"
                                    },
                                    {
                                      "title": "Boolean",
                                      "type": "boolean"
                                    },
                                    {
                                      "minimum": 0,
                                      "title": "Integer",
                                      "type": "integer"
                                    },
                                    {
                                      "minItems": 0,
                                      "title": "Array",
                                      "type": "array",
                                      "items": {
                                        "oneOf": [
                                          {
                                            "minLength": 1,
                                            "title": "String",
                                            "type": "string"
                                          },
                                          {
                                            "title": "Boolean",
                                            "type": "boolean"
                                          },
                                          {
                                            "title": "Integer",
                                            "type": "integer"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "version": {
                      "description": "Risk rule schema version.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/riskRule.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates details for a specific risk tier.",
        "operationId": "put-tier",
        "summary": "Modify risk tier",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-tier"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "id": 12345,
                "name": "Low",
                "rank": 0,
                "version": "2018-12",
                "rules": [
                  {
                    "os": [
                      "Mac OS X"
                    ],
                    "signals": [
                      {
                        "name": "anti_malware",
                        "value": 1
                      },
                      {
                        "name": "browser_version",
                        "value": [
                          "Latest",
                          "Custom"
                        ]
                      }
                    ]
                  },
                  {
                    "os": [
                      "Windows"
                    ],
                    "signals": [
                      {
                        "name": "firewall",
                        "value": true
                      },
                      {
                        "name": "os_version",
                        "value": [
                          "Latest",
                          "Custom"
                        ]
                      }
                    ]
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Configurable risk rules.",
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "rules",
                  "version"
                ],
                "properties": {
                  "id": {
                    "description": "A unique identifier for this risk rule.",
                    "example": "{{id}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "name": {
                    "description": "The name of the risk rule.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "rank": {
                    "description": "The rank of the risk rule. Present only in tiers.",
                    "example": "{{rank}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "rules": {
                    "description": "Available risk assessment criteria rules.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Available criteria rules.",
                      "type": "object",
                      "required": [
                        "os",
                        "signals"
                      ],
                      "properties": {
                        "os": {
                          "description": "Operating systems.",
                          "minItems": 1,
                          "type": "array",
                          "items": {
                            "description": "The name of the operating system.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "signals": {
                          "description": "Available risk assessment signals.",
                          "minItems": 1,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "description": "Available signal values.",
                            "type": "object",
                            "required": [
                              "name",
                              "value"
                            ],
                            "properties": {
                              "name": {
                                "description": "The name of the signal.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "value": {
                                "description": "The signal value. Either a single value with a type of string, integer, or boolean, or an array of similar type values.",
                                "oneOf": [
                                  {
                                    "minLength": 1,
                                    "title": "String",
                                    "type": "string"
                                  },
                                  {
                                    "title": "Boolean",
                                    "type": "boolean"
                                  },
                                  {
                                    "minimum": 0,
                                    "title": "Integer",
                                    "type": "integer"
                                  },
                                  {
                                    "minItems": 0,
                                    "title": "Array",
                                    "type": "array",
                                    "items": {
                                      "oneOf": [
                                        {
                                          "minLength": 1,
                                          "title": "String",
                                          "type": "string"
                                        },
                                        {
                                          "title": "Boolean",
                                          "type": "boolean"
                                        },
                                        {
                                          "title": "Integer",
                                          "type": "integer"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "version": {
                    "description": "Risk rule schema version.",
                    "example": "{{version}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/riskRule.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for this risk tier.",
          "example": "{{ruleId}}",
          "in": "path",
          "name": "ruleId",
          "required": true,
          "schema": {
            "example": 12345,
            "type": "integer"
          },
          "x-akamai": {
            "file-path": "parameters/ruleId-path.yaml"
          }
        }
      ]
    },
    "/device-posture/risk-assessment/versions/client_version": {
      "get": {
        "description": "Lists supported client versions for risk assessment. Risk assessment doesn't support unlisted client versions.",
        "operationId": "get-client-version",
        "summary": "List client versions",
        "tags": [
          "Risk assessment"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-client-version"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Client versions that are available in the product.",
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "description": "Client version.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "x-akamai": {
                    "file-path": "schemas/clientVersions.yaml"
                  }
                },
                "example": [
                  {
                    "date": "2020-04-27",
                    "latest": "81.0.4044.129",
                    "name": "Chrome"
                  },
                  {
                    "date": "2020-04-06",
                    "latest": "75.0",
                    "name": "Firefox"
                  },
                  {
                    "date": "2020-04-29",
                    "latest": "68.0.3618.63",
                    "name": "Opera"
                  },
                  {
                    "date": "2020-03-24",
                    "latest": "13.1",
                    "name": "Safari"
                  },
                  {
                    "date": "2020-01-16",
                    "latest": "79.0.309.68",
                    "name": "Edge"
                  },
                  {
                    "date": "2020-04-14",
                    "latest": "11.0.185",
                    "name": "Internet Explorer"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/optionalContractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/mgmt-pop/adminevents-reports/ops/reports": {
      "get": {
        "description": "Lists a set of admin event reports with optional custom filters.",
        "operationId": "get-adminevents-reports",
        "summary": "List admin event reports",
        "tags": [
          "Admin events reports"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-adminevents-reports"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "x-akamai": {
                    "file-path": "schemas/need-schema-here.yaml"
                  }
                },
                "example": [
                  {
                    "count": 34,
                    "0": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1608214229086,
                      "uid": "user7@example.com"
                    },
                    "1": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1608195749063,
                      "uid": "user7@example.com"
                    },
                    "10": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1608004808832,
                      "uid": "user7@example.com"
                    },
                    "11": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1607918059702,
                      "uid": "user7@example.com"
                    },
                    "12": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1607671237477,
                      "uid": "user7@example.com"
                    },
                    "13": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1607576420203,
                      "uid": "user7@example.com"
                    },
                    "14": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1607573341324,
                      "uid": "user7@example.com"
                    },
                    "15": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1607517930313,
                      "uid": "user7@example.com"
                    },
                    "16": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1607427276904,
                      "uid": "user7@example.com"
                    },
                    "17": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1607419553378,
                      "uid": "user7@example.com"
                    },
                    "18": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1606978068677,
                      "uid": "user7@example.com"
                    },
                    "19": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1606978021799,
                      "uid": "user7@example.com"
                    },
                    "2": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1608192618254,
                      "uid": "user7@example.com"
                    },
                    "20": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1606973368315,
                      "uid": "user7@example.com"
                    },
                    "21": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1606968281479,
                      "uid": "user7@example.com"
                    },
                    "22": {
                      "event": "logout",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1606968272247,
                      "uid": "user7@example.com"
                    },
                    "23": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1606968268669,
                      "uid": "user7@example.com"
                    },
                    "24": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1606968261734,
                      "uid": "user7@example.com"
                    },
                    "25": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1606910122687,
                      "uid": "user7@example.com"
                    },
                    "26": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1606823877647,
                      "uid": "user7@example.com"
                    },
                    "27": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1606714458185,
                      "uid": "user7@example.com"
                    },
                    "28": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1606713477219,
                      "uid": "user7@example.com"
                    },
                    "29": {
                      "event": "changepasswd",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1606707715310,
                      "uid": "user7@example.com"
                    },
                    "3": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1608182790422,
                      "uid": "user7@example.com"
                    },
                    "30": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1606707696606,
                      "uid": "user7@example.com"
                    },
                    "31": {
                      "event": "changepasswd",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1606707672537,
                      "uid": "user7@example.com"
                    },
                    "32": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1606707606377,
                      "uid": "user7@example.com"
                    },
                    "33": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1606705348966,
                      "uid": "user7@example.com"
                    },
                    "4": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1608181757056,
                      "uid": "user7@example.com"
                    },
                    "5": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1608098653099,
                      "uid": "user7@example.com"
                    },
                    "6": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1608092605635,
                      "uid": "user7@example.com"
                    },
                    "7": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1608035054699,
                      "uid": "user7@example.com"
                    },
                    "8": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1608028345871,
                      "uid": "user7@example.com"
                    },
                    "9": {
                      "event": "login",
                      "event_ty": "login",
                      "res_id": "wsJ7xkh2QGOoIHF8q7wfMg",
                      "res_name": "user7@example.com",
                      "res_ty": "users",
                      "tnid": "xzai569",
                      "ts": 1608019454975,
                      "uid": "user7@example.com"
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "Start epoch timestamp of the report duration.",
            "example": "{{sts}}",
            "in": "query",
            "name": "sts",
            "required": true,
            "schema": {
              "example": 1563129000000,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/sts-query.yaml"
            }
          },
          {
            "description": "End epoch timestamp of the report duration.",
            "example": "{{ets}}",
            "in": "query",
            "name": "ets",
            "required": true,
            "schema": {
              "example": 1563355505606,
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/ets-query.yaml"
            }
          },
          {
            "description": "__Enum__ Name of the event type. Either `login`, `config`, or `system`.",
            "example": "{{event_type}}",
            "in": "query",
            "name": "event_type",
            "required": true,
            "schema": {
              "example": "login",
              "type": "string",
              "enum": [
                "config",
                "login",
                "system"
              ]
            },
            "x-akamai": {
              "file-path": "parameters/event_type-query.yaml"
            }
          },
          {
            "description": "__Enum__ Name of the resource type. Either `user`, `application`, or `group`.",
            "example": "{{res_type}}",
            "in": "query",
            "name": "res_type",
            "required": true,
            "schema": {
              "example": "user",
              "type": "string",
              "enum": [
                "user",
                "application",
                "group"
              ]
            },
            "x-akamai": {
              "file-path": "parameters/res_type-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/mgmt-pop/agents": {
      "post": {
        "description": "Creates a new connector.",
        "operationId": "post-connector",
        "summary": "Create a connector",
        "tags": [
          "Connectors"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-connector"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "auth_service": true,
                "data_service": true,
                "debug_channel_permitted": true,
                "description": "OPEN API",
                "name": "VM_OPEN_API",
                "package": 1,
                "status": 1,
                "advanced_settings": {
                  "network_info": [
                    "192.0.2.142/24"
                  ]
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "Enterprise connector data.",
                "type": "object",
                "required": [
                  "auth_service",
                  "data_service",
                  "description",
                  "name",
                  "package"
                ],
                "properties": {
                  "advanced_settings": {
                    "additionalProperties": false,
                    "description": "Advanced settings for the connnector.",
                    "type": "object",
                    "properties": {
                      "network_info": {
                        "description": "The network subnets for the connector, with a CIDR netmask, such as `192.168.0.0/24`.",
                        "minItems": 1,
                        "type": "array",
                        "items": {
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "auth_service": {
                    "description": "Enables authorization service.",
                    "example": "{{auth_service}}",
                    "type": "boolean"
                  },
                  "data_service": {
                    "description": "Enables data service.",
                    "example": "{{data_service}}",
                    "type": "boolean"
                  },
                  "debug_channel_permitted": {
                    "default": false,
                    "description": "Enables Akamai Support to run commands on the connector through the debug channel. Set to `false` by default.    ",
                    "example": "{{debug_channel_permitted}}",
                    "type": "boolean"
                  },
                  "description": {
                    "description": "A description for the connector.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the connector. For example, `VMConnector1`.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "package": {
                    "description": "Type of package for the connector. Refer to [Connector package types](https://techdocs.akamai.com/eaa-api/reference/connector-package-types)",
                    "example": "{{package}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7,
                      8,
                      9,
                      10,
                      11
                    ]
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/agent-create.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "agent_type": 1,
                  "agent_upgrade_enabled": true,
                  "agent_upgrade_suspended": false,
                  "agent_version": null,
                  "auth_service": true,
                  "cpu": null,
                  "created_at": "2021-05-25T14:22:44.194287",
                  "data_service": true,
                  "debug_channel_permitted": true,
                  "description": "OPEN API",
                  "dhcp": "enabled",
                  "disk_size": null,
                  "dns_server": null,
                  "download_url": null,
                  "gateway": null,
                  "geo_location": null,
                  "hostname": null,
                  "ip_addr": null,
                  "last_checkin": null,
                  "load_status": null,
                  "logging_settings": "[]",
                  "mac": null,
                  "manual_override": false,
                  "modified_at": "2021-05-25T14:22:44.229816",
                  "name": "VM_OPEN_API",
                  "os_upgrades_up_to_date": true,
                  "os_version": null,
                  "package": 1,
                  "policy": "M2vY1fQbQpyokVzCMIuw2Q",
                  "private_ip": null,
                  "public_ip": null,
                  "pwd_comments": null,
                  "pwdsyncflag": false,
                  "ram_size": null,
                  "reach": 0,
                  "region": null,
                  "setpwd_attempt": 1,
                  "state": 0,
                  "status": 1,
                  "subnet": null,
                  "tz": null,
                  "uuid_url": "5CA1blgXRqmxlMzHC4UCCA",
                  "advanced_settings": {
                    "network_info": [
                      "192.0.2.170/24"
                    ]
                  },
                  "resource_uri": {
                    "href": "/api/v1/agents/5CA1blgXRqmxlMzHC4UCCA"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise connector data.",
                  "type": "object",
                  "required": [
                    "name",
                    "package"
                  ],
                  "properties": {
                    "admin_pwd": {
                      "description": "Hash of the admin password.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "agent_type": {
                      "default": 1,
                      "description": "The type of connector. Either `1` for VM, `2` for IPSEC, or `3` for GRE.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3
                      ]
                    },
                    "agent_upgrade_enabled": {
                      "description": "Whether the connector is upgradeable.",
                      "type": "boolean"
                    },
                    "agent_upgrade_suspended": {
                      "description": "Suspends upgrades for a connector.",
                      "type": "boolean"
                    },
                    "agent_version": {
                      "description": "The connector software version currently installed in the connector. For example, `AGENT-4.3.0-2449+`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "auth_service": {
                      "description": "Enables the authorization service.",
                      "type": "boolean"
                    },
                    "cpu": {
                      "description": "CPU of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the connector's creation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "data_service": {
                      "description": "Enables the data service.",
                      "type": "boolean"
                    },
                    "debug_channel_permitted": {
                      "description": "Enables Akamai Support to run commands on the connector through the debug channel.",
                      "type": "boolean"
                    },
                    "description": {
                      "description": "A description for the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "dhcp": {
                      "description": "Enables DHCP for the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "disk_size": {
                      "description": "The disk size of the connector.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "dns_server": {
                      "description": "DNS Server of the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "download_url": {
                      "description": "S3 URL to download the package. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "gateway": {
                      "description": "Gateway of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "hostname": {
                      "description": "Machine name of the connector. ",
                      "format": "hostname",
                      "type": "string"
                    },
                    "ip_addr": {
                      "description": "IP address of the connector. Specify `null` if you want to provide this later.",
                      "format": "ipv4",
                      "nullable": true,
                      "type": "string"
                    },
                    "last_checkin": {
                      "description": "ISO 8601 timestamp marking when the connector last checked in with the server.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "last_stage_status": {
                      "description": "Status of the last staging. Either `1` for success or `4` for failure.",
                      "type": "integer",
                      "enum": [
                        1,
                        4
                      ]
                    },
                    "last_upgrade_failed_date": {
                      "description": "ISO 8601 timestamp marking the last upgrade failure.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "last_upgrade_failed_in": {
                      "description": "Location of the last upgrade failure, expressed as a string-formatted integer. Either `1` for none, `2` for pending, `3` for downloading, `4` for verifying, `5` for upgrade in progress, `6` for cleaning up, `7` for rollback in progress, `8` for completed, or `9` for metadata. Specify `null` if not applicable.",
                      "nullable": true,
                      "type": "string",
                      "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9"
                      ]
                    },
                    "last_upgrade_status": {
                      "description": "Status of the last upgrade. Either `1` for success or `4` for failure.",
                      "type": "integer",
                      "enum": [
                        1,
                        4
                      ]
                    },
                    "last_upgrade_success_date": {
                      "description": "ISO 8601 timestamp marking the last successful upgrade.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "last_upgrade_success_version": {
                      "description": "Last version of connector software successfully installed in the connector. Specify `null` if not applicable.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_stage_attempt_date": {
                      "description": "ISO 8601 timestamp of the last staging attempt. Specify `null` if not applicable.",
                      "format": "date-time",
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_stage_attempt_version": {
                      "description": "Latest connector binary version staging attempted. Specify `null` if not applicable.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_upgrade_attempt_date": {
                      "description": "ISO 8601 timestamp of the last upgrade attempt. Specify `null` if not applicable.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "latest_upgrade_attempt_state": {
                      "description": "Status of the last upgrade attempt on the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "latest_upgrade_attempt_version": {
                      "description": "Last version of connector software attempted on the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "logging_settings": {
                      "description": "JSON logging settings.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mac": {
                      "description": "MAC address of the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "manual_override": {
                      "description": "When `true`, the connector cannot be upgraded.",
                      "type": "boolean"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the connector configuration's last modification.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the connector. ",
                      "minLength": 1,
                      "type": "string"
                    },
                    "os_version": {
                      "description": "OS version of the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "package": {
                      "description": "Type of package for the connector. Refer to [Connector package types](https://techdocs.akamai.com/eaa-api/reference/connector-package-types) for available values.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11
                      ]
                    },
                    "policy": {
                      "description": "The schedule policy ID for the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "private_ip": {
                      "description": "Private IP address of the connector.",
                      "format": "ipv4",
                      "type": "string"
                    },
                    "public_ip": {
                      "description": "Public IP address of the connector.",
                      "format": "ipv4",
                      "type": "string"
                    },
                    "pwd_comments": {
                      "description": "Status of the set password attempt on the connector. Either `Success` or `Failed`.",
                      "type": "string",
                      "enum": [
                        "Success",
                        "Failed"
                      ]
                    },
                    "pwdsyncflag": {
                      "description": "Syncs the connector password with the back-end database.",
                      "type": "boolean"
                    },
                    "ram_size": {
                      "description": "RAM size of the connector. Specify `null` if you want to provide this later. ",
                      "minimum": 0,
                      "nullable": true,
                      "type": "integer"
                    },
                    "reach": {
                      "default": 1,
                      "description": "Connector reachability status. Either `0` for unreachable or `1` for reachable.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "region": {
                      "description": "The region of the connector. For example, `Central`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Contains resource locations for the connector.",
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "The location of connector details.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "setpwd_attempt": {
                      "description": "The number of unique password setting attempts.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "state": {
                      "default": 0,
                      "description": "State of the connector. Either `0` for not created, `1` for created, `2` for not installed, `3` for not verified, `4` for verified, `5` for unenrolled, `6` for enrolled, `7` for not configured, or `8` for configured.",
                      "type": "integer",
                      "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8
                      ]
                    },
                    "status": {
                      "description": "Status of the connector. Either `0` for disabled or `1` for enabled.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "subnet": {
                      "description": "Subnet of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "tz": {
                      "description": "Time zone of the connector. For example, `America/Los_Angeles`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the connector.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/agent.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists connectors.",
        "operationId": "get-connectors",
        "summary": "List connectors",
        "tags": [
          "Connectors"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-connectors"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 10,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 9
                  },
                  "objects": [
                    {
                      "agent_type": 1,
                      "agent_upgrade_enabled": true,
                      "agent_upgrade_suspended": false,
                      "agent_version": null,
                      "auth_service": true,
                      "cpu": null,
                      "created_at": "2020-04-27T10:59:52.751874",
                      "data_service": true,
                      "debug_channel_permitted": true,
                      "description": "IDP connector",
                      "dhcp": "enabled",
                      "disk_size": null,
                      "dns_server": null,
                      "down_apps_count": 0,
                      "down_dir_count": 0,
                      "download_url": "https://s3.amazonaws.com/soha-agents-prod/11f77d70-eccb-4ae3-ab3a-e1aab9dda8f0.template?Signature=vLZbtqay15UYxcluMQz%2FASMrnjo%3D&Expires=1590577193&AWSAccessKeyId=AKIAJ6H33WWAXIOUBCNQ",
                      "gateway": null,
                      "geo_location": null,
                      "hostname": null,
                      "ip_addr": null,
                      "last_checkin": null,
                      "load_status": null,
                      "logging_settings": "[]",
                      "mac": null,
                      "manual_override": false,
                      "modified_at": "2020-04-27T10:59:53.143317",
                      "name": "IDP_connector",
                      "os_upgrades_up_to_date": true,
                      "os_version": null,
                      "package": 3,
                      "policy": "M2vY1fQbQpyokVzCMIuw2Q",
                      "private_ip": null,
                      "public_ip": null,
                      "pwd_comments": null,
                      "pwdsyncflag": false,
                      "ram_size": null,
                      "reach": 0,
                      "region": null,
                      "setpwd_attempt": 1,
                      "state": 1,
                      "status": 1,
                      "subnet": null,
                      "tz": null,
                      "up_apps_count": 0,
                      "up_dir_count": 0,
                      "uuid_url": "0ghE7BU_Q9uSVR0ZPxP7Fg",
                      "advanced_settings": {
                        "network_info": [
                          "192.0.2.38/24"
                        ]
                      },
                      "capacity": {
                        "remaining-capacity": 999,
                        "capacity-multipliers": {
                          "rdp": 2
                        }
                      },
                      "resource_uri": {
                        "href": "/api/v1/agents/0ghE7BU_Q9uSVR0ZPxP7Fg"
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise connector data.",
                  "type": "object",
                  "required": [
                    "name",
                    "package"
                  ],
                  "properties": {
                    "admin_pwd": {
                      "description": "Hash of the admin password.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "agent_type": {
                      "default": 1,
                      "description": "The type of connector. Either `1` for VM, `2` for IPSEC, or `3` for GRE.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3
                      ]
                    },
                    "agent_upgrade_enabled": {
                      "description": "Whether the connector is upgradeable.",
                      "type": "boolean"
                    },
                    "agent_upgrade_suspended": {
                      "description": "Suspends upgrades for a connector.",
                      "type": "boolean"
                    },
                    "agent_version": {
                      "description": "The connector software version currently installed in the connector. For example, `AGENT-4.3.0-2449+`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "auth_service": {
                      "description": "Enables the authorization service.",
                      "type": "boolean"
                    },
                    "cpu": {
                      "description": "CPU of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the connector's creation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "data_service": {
                      "description": "Enables the data service.",
                      "type": "boolean"
                    },
                    "debug_channel_permitted": {
                      "description": "Enables Akamai Support to run commands on the connector through the debug channel.",
                      "type": "boolean"
                    },
                    "description": {
                      "description": "A description for the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "dhcp": {
                      "description": "Enables DHCP for the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "disk_size": {
                      "description": "The disk size of the connector.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "dns_server": {
                      "description": "DNS Server of the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "download_url": {
                      "description": "S3 URL to download the package. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "gateway": {
                      "description": "Gateway of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "hostname": {
                      "description": "Machine name of the connector. ",
                      "format": "hostname",
                      "type": "string"
                    },
                    "ip_addr": {
                      "description": "IP address of the connector. Specify `null` if you want to provide this later.",
                      "format": "ipv4",
                      "nullable": true,
                      "type": "string"
                    },
                    "last_checkin": {
                      "description": "ISO 8601 timestamp marking when the connector last checked in with the server.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "last_stage_status": {
                      "description": "Status of the last staging. Either `1` for success or `4` for failure.",
                      "type": "integer",
                      "enum": [
                        1,
                        4
                      ]
                    },
                    "last_upgrade_failed_date": {
                      "description": "ISO 8601 timestamp marking the last upgrade failure.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "last_upgrade_failed_in": {
                      "description": "Location of the last upgrade failure, expressed as a string-formatted integer. Either `1` for none, `2` for pending, `3` for downloading, `4` for verifying, `5` for upgrade in progress, `6` for cleaning up, `7` for rollback in progress, `8` for completed, or `9` for metadata. Specify `null` if not applicable.",
                      "nullable": true,
                      "type": "string",
                      "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9"
                      ]
                    },
                    "last_upgrade_status": {
                      "description": "Status of the last upgrade. Either `1` for success or `4` for failure.",
                      "type": "integer",
                      "enum": [
                        1,
                        4
                      ]
                    },
                    "last_upgrade_success_date": {
                      "description": "ISO 8601 timestamp marking the last successful upgrade.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "last_upgrade_success_version": {
                      "description": "Last version of connector software successfully installed in the connector. Specify `null` if not applicable.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_stage_attempt_date": {
                      "description": "ISO 8601 timestamp of the last staging attempt. Specify `null` if not applicable.",
                      "format": "date-time",
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_stage_attempt_version": {
                      "description": "Latest connector binary version staging attempted. Specify `null` if not applicable.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_upgrade_attempt_date": {
                      "description": "ISO 8601 timestamp of the last upgrade attempt. Specify `null` if not applicable.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "latest_upgrade_attempt_state": {
                      "description": "Status of the last upgrade attempt on the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "latest_upgrade_attempt_version": {
                      "description": "Last version of connector software attempted on the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "logging_settings": {
                      "description": "JSON logging settings.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mac": {
                      "description": "MAC address of the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "manual_override": {
                      "description": "When `true`, the connector cannot be upgraded.",
                      "type": "boolean"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the connector configuration's last modification.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the connector. ",
                      "minLength": 1,
                      "type": "string"
                    },
                    "os_version": {
                      "description": "OS version of the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "package": {
                      "description": "Type of package for the connector. Refer to [Connector package types](https://techdocs.akamai.com/eaa-api/reference/connector-package-types) for available values.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11
                      ]
                    },
                    "policy": {
                      "description": "The schedule policy ID for the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "private_ip": {
                      "description": "Private IP address of the connector.",
                      "format": "ipv4",
                      "type": "string"
                    },
                    "public_ip": {
                      "description": "Public IP address of the connector.",
                      "format": "ipv4",
                      "type": "string"
                    },
                    "pwd_comments": {
                      "description": "Status of the set password attempt on the connector. Either `Success` or `Failed`.",
                      "type": "string",
                      "enum": [
                        "Success",
                        "Failed"
                      ]
                    },
                    "pwdsyncflag": {
                      "description": "Syncs the connector password with the back-end database.",
                      "type": "boolean"
                    },
                    "ram_size": {
                      "description": "RAM size of the connector. Specify `null` if you want to provide this later. ",
                      "minimum": 0,
                      "nullable": true,
                      "type": "integer"
                    },
                    "reach": {
                      "default": 1,
                      "description": "Connector reachability status. Either `0` for unreachable or `1` for reachable.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "region": {
                      "description": "The region of the connector. For example, `Central`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Contains resource locations for the connector.",
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "The location of connector details.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "setpwd_attempt": {
                      "description": "The number of unique password setting attempts.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "state": {
                      "default": 0,
                      "description": "State of the connector. Either `0` for not created, `1` for created, `2` for not installed, `3` for not verified, `4` for verified, `5` for unenrolled, `6` for enrolled, `7` for not configured, or `8` for configured.",
                      "type": "integer",
                      "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8
                      ]
                    },
                    "status": {
                      "description": "Status of the connector. Either `0` for disabled or `1` for enabled.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "subnet": {
                      "description": "Subnet of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "tz": {
                      "description": "Time zone of the connector. For example, `America/Los_Angeles`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the connector.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/agent.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/mgmt-pop/agents/{agentId}": {
      "get": {
        "description": "Retrieves a single connector by ID.",
        "operationId": "get-connector",
        "summary": "Get a connector",
        "tags": [
          "Connectors"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-connector"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "agent_type": 1,
                  "agent_upgrade_enabled": true,
                  "agent_upgrade_suspended": false,
                  "agent_version": null,
                  "auth_service": true,
                  "cpu": null,
                  "created_at": "2021-05-25T14:22:44.194287",
                  "data_service": true,
                  "debug_channel_permitted": true,
                  "description": "OPEN API",
                  "dhcp": "enabled",
                  "disk_size": null,
                  "dns_server": null,
                  "download_url": null,
                  "gateway": null,
                  "geo_location": null,
                  "hostname": null,
                  "ip_addr": null,
                  "last_checkin": null,
                  "load_status": null,
                  "logging_settings": "[]",
                  "mac": null,
                  "manual_override": false,
                  "modified_at": "2021-05-25T14:22:44.229816",
                  "name": "VM_OPEN_API",
                  "os_upgrades_up_to_date": true,
                  "os_version": null,
                  "package": 1,
                  "policy": "M2vY1fQbQpyokVzCMIuw2Q",
                  "private_ip": null,
                  "public_ip": null,
                  "pwd_comments": null,
                  "pwdsyncflag": false,
                  "ram_size": null,
                  "reach": 0,
                  "region": null,
                  "setpwd_attempt": 1,
                  "state": 0,
                  "status": 1,
                  "subnet": null,
                  "tz": null,
                  "uuid_url": "5CA1blgXRqmxlMzHC4UCCA",
                  "advanced_settings": {
                    "network_info": [
                      "192.0.2.220/24"
                    ]
                  },
                  "resource_uri": {
                    "href": "/api/v1/agents/5CA1blgXRqmxlMzHC4UCCA"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise connector data.",
                  "type": "object",
                  "required": [
                    "name",
                    "package"
                  ],
                  "properties": {
                    "admin_pwd": {
                      "description": "Hash of the admin password.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "agent_type": {
                      "default": 1,
                      "description": "The type of connector. Either `1` for VM, `2` for IPSEC, or `3` for GRE.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3
                      ]
                    },
                    "agent_upgrade_enabled": {
                      "description": "Whether the connector is upgradeable.",
                      "type": "boolean"
                    },
                    "agent_upgrade_suspended": {
                      "description": "Suspends upgrades for a connector.",
                      "type": "boolean"
                    },
                    "agent_version": {
                      "description": "The connector software version currently installed in the connector. For example, `AGENT-4.3.0-2449+`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "auth_service": {
                      "description": "Enables the authorization service.",
                      "type": "boolean"
                    },
                    "cpu": {
                      "description": "CPU of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the connector's creation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "data_service": {
                      "description": "Enables the data service.",
                      "type": "boolean"
                    },
                    "debug_channel_permitted": {
                      "description": "Enables Akamai Support to run commands on the connector through the debug channel.",
                      "type": "boolean"
                    },
                    "description": {
                      "description": "A description for the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "dhcp": {
                      "description": "Enables DHCP for the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "disk_size": {
                      "description": "The disk size of the connector.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "dns_server": {
                      "description": "DNS Server of the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "download_url": {
                      "description": "S3 URL to download the package. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "gateway": {
                      "description": "Gateway of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "hostname": {
                      "description": "Machine name of the connector. ",
                      "format": "hostname",
                      "type": "string"
                    },
                    "ip_addr": {
                      "description": "IP address of the connector. Specify `null` if you want to provide this later.",
                      "format": "ipv4",
                      "nullable": true,
                      "type": "string"
                    },
                    "last_checkin": {
                      "description": "ISO 8601 timestamp marking when the connector last checked in with the server.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "last_stage_status": {
                      "description": "Status of the last staging. Either `1` for success or `4` for failure.",
                      "type": "integer",
                      "enum": [
                        1,
                        4
                      ]
                    },
                    "last_upgrade_failed_date": {
                      "description": "ISO 8601 timestamp marking the last upgrade failure.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "last_upgrade_failed_in": {
                      "description": "Location of the last upgrade failure, expressed as a string-formatted integer. Either `1` for none, `2` for pending, `3` for downloading, `4` for verifying, `5` for upgrade in progress, `6` for cleaning up, `7` for rollback in progress, `8` for completed, or `9` for metadata. Specify `null` if not applicable.",
                      "nullable": true,
                      "type": "string",
                      "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9"
                      ]
                    },
                    "last_upgrade_status": {
                      "description": "Status of the last upgrade. Either `1` for success or `4` for failure.",
                      "type": "integer",
                      "enum": [
                        1,
                        4
                      ]
                    },
                    "last_upgrade_success_date": {
                      "description": "ISO 8601 timestamp marking the last successful upgrade.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "last_upgrade_success_version": {
                      "description": "Last version of connector software successfully installed in the connector. Specify `null` if not applicable.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_stage_attempt_date": {
                      "description": "ISO 8601 timestamp of the last staging attempt. Specify `null` if not applicable.",
                      "format": "date-time",
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_stage_attempt_version": {
                      "description": "Latest connector binary version staging attempted. Specify `null` if not applicable.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_upgrade_attempt_date": {
                      "description": "ISO 8601 timestamp of the last upgrade attempt. Specify `null` if not applicable.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "latest_upgrade_attempt_state": {
                      "description": "Status of the last upgrade attempt on the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "latest_upgrade_attempt_version": {
                      "description": "Last version of connector software attempted on the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "logging_settings": {
                      "description": "JSON logging settings.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mac": {
                      "description": "MAC address of the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "manual_override": {
                      "description": "When `true`, the connector cannot be upgraded.",
                      "type": "boolean"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the connector configuration's last modification.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the connector. ",
                      "minLength": 1,
                      "type": "string"
                    },
                    "os_version": {
                      "description": "OS version of the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "package": {
                      "description": "Type of package for the connector. Refer to [Connector package types](https://techdocs.akamai.com/eaa-api/reference/connector-package-types) for available values.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11
                      ]
                    },
                    "policy": {
                      "description": "The schedule policy ID for the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "private_ip": {
                      "description": "Private IP address of the connector.",
                      "format": "ipv4",
                      "type": "string"
                    },
                    "public_ip": {
                      "description": "Public IP address of the connector.",
                      "format": "ipv4",
                      "type": "string"
                    },
                    "pwd_comments": {
                      "description": "Status of the set password attempt on the connector. Either `Success` or `Failed`.",
                      "type": "string",
                      "enum": [
                        "Success",
                        "Failed"
                      ]
                    },
                    "pwdsyncflag": {
                      "description": "Syncs the connector password with the back-end database.",
                      "type": "boolean"
                    },
                    "ram_size": {
                      "description": "RAM size of the connector. Specify `null` if you want to provide this later. ",
                      "minimum": 0,
                      "nullable": true,
                      "type": "integer"
                    },
                    "reach": {
                      "default": 1,
                      "description": "Connector reachability status. Either `0` for unreachable or `1` for reachable.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "region": {
                      "description": "The region of the connector. For example, `Central`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Contains resource locations for the connector.",
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "The location of connector details.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "setpwd_attempt": {
                      "description": "The number of unique password setting attempts.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "state": {
                      "default": 0,
                      "description": "State of the connector. Either `0` for not created, `1` for created, `2` for not installed, `3` for not verified, `4` for verified, `5` for unenrolled, `6` for enrolled, `7` for not configured, or `8` for configured.",
                      "type": "integer",
                      "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8
                      ]
                    },
                    "status": {
                      "description": "Status of the connector. Either `0` for disabled or `1` for enabled.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "subnet": {
                      "description": "Subnet of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "tz": {
                      "description": "Time zone of the connector. For example, `America/Los_Angeles`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the connector.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/agent.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates an existing connector.",
        "operationId": "put-connector",
        "summary": "Modify a connector",
        "tags": [
          "Connectors"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-connector"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "agent_type": 1,
                "agent_upgrade_enabled": true,
                "agent_upgrade_suspended": false,
                "agent_version": null,
                "auth_service": true,
                "cpu": null,
                "created_at": "2021-05-25T14:22:44.194287",
                "data_service": true,
                "debug_channel_permitted": true,
                "description": "TEST OPEN API",
                "dhcp": "enabled",
                "disk_size": null,
                "dns_server": null,
                "download_url": "https://s3.amazonaws.com/soha-agents/087aa887-6165-4b3a-926a-93aa909ea293.tar.gz?AWSAccessKeyId=AKIAYK2DOW62XBWAXG3E&Signature=HWzSfaSH7DirZ2BwvnlTE8I1Ezs%3D&Expires=1624545180",
                "gateway": null,
                "geo_location": null,
                "hostname": null,
                "ip_addr": null,
                "last_checkin": null,
                "load_status": null,
                "logging_settings": "[]",
                "mac": null,
                "manual_override": false,
                "modified_at": "2021-05-25T14:33:05.523871",
                "name": "PRASAD_TEST_VM_OPEN_API",
                "os_upgrades_up_to_date": true,
                "os_version": null,
                "package": 1,
                "policy": "M2vY1fQbQpyokVzCMIuw2Q",
                "private_ip": null,
                "public_ip": null,
                "pwd_comments": null,
                "pwdsyncflag": false,
                "ram_size": null,
                "reach": 0,
                "region": null,
                "setpwd_attempt": 1,
                "state": 1,
                "status": 1,
                "subnet": null,
                "tz": null,
                "advanced_settings": {
                  "network_info": [
                    "192.0.2.247/24"
                  ]
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "Enterprise connector data.",
                "type": "object",
                "required": [
                  "name",
                  "package"
                ],
                "properties": {
                  "admin_pwd": {
                    "description": "Hash of the admin password.",
                    "example": "{{admin_pwd}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "agent_type": {
                    "default": 1,
                    "description": "The type of connector. Either `1` for VM, `2` for IPSEC, or `3` for GRE.",
                    "example": "{{agent_type}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3
                    ]
                  },
                  "agent_upgrade_enabled": {
                    "description": "Whether the connector is upgradeable.",
                    "example": "{{agent_upgrade_enabled}}",
                    "type": "boolean"
                  },
                  "agent_upgrade_suspended": {
                    "description": "Suspends upgrades for a connector.",
                    "example": "{{agent_upgrade_suspended}}",
                    "type": "boolean"
                  },
                  "agent_version": {
                    "description": "The connector software version currently installed in the connector. For example, `AGENT-4.3.0-2449+`.",
                    "example": "{{agent_version}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "auth_service": {
                    "description": "Enables the authorization service.",
                    "example": "{{auth_service}}",
                    "type": "boolean"
                  },
                  "cpu": {
                    "description": "CPU of the connector. Specify `null` if you want to provide this later.",
                    "example": "{{cpu}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking the connector's creation.",
                    "example": "{{created_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "data_service": {
                    "description": "Enables the data service.",
                    "example": "{{data_service}}",
                    "type": "boolean"
                  },
                  "debug_channel_permitted": {
                    "description": "Enables Akamai Support to run commands on the connector through the debug channel.",
                    "example": "{{debug_channel_permitted}}",
                    "type": "boolean"
                  },
                  "description": {
                    "description": "A description for the connector.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "dhcp": {
                    "description": "Enables DHCP for the connector.",
                    "example": "{{dhcp}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "disk_size": {
                    "description": "The disk size of the connector.",
                    "example": "{{disk_size}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "dns_server": {
                    "description": "DNS Server of the connector.",
                    "example": "{{dns_server}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "download_url": {
                    "description": "S3 URL to download the package. Specify `null` if you want to provide this later.",
                    "example": "{{download_url}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "gateway": {
                    "description": "Gateway of the connector. Specify `null` if you want to provide this later.",
                    "example": "{{gateway}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "hostname": {
                    "description": "Machine name of the connector. ",
                    "example": "{{hostname}}",
                    "format": "hostname",
                    "type": "string"
                  },
                  "ip_addr": {
                    "description": "IP address of the connector. Specify `null` if you want to provide this later.",
                    "example": "{{ip_addr}}",
                    "format": "ipv4",
                    "nullable": true,
                    "type": "string"
                  },
                  "last_checkin": {
                    "description": "ISO 8601 timestamp marking when the connector last checked in with the server.",
                    "example": "{{last_checkin}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "last_stage_status": {
                    "description": "Status of the last staging. Either `1` for success or `4` for failure.",
                    "example": "{{last_stage_status}}",
                    "type": "integer",
                    "enum": [
                      1,
                      4
                    ]
                  },
                  "last_upgrade_failed_date": {
                    "description": "ISO 8601 timestamp marking the last upgrade failure.",
                    "example": "{{last_upgrade_failed_date}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "last_upgrade_failed_in": {
                    "description": "Location of the last upgrade failure, expressed as a string-formatted integer. Either `1` for none, `2` for pending, `3` for downloading, `4` for verifying, `5` for upgrade in progress, `6` for cleaning up, `7` for rollback in progress, `8` for completed, or `9` for metadata. Specify `null` if not applicable.",
                    "example": "{{last_upgrade_failed_in}}",
                    "nullable": true,
                    "type": "string",
                    "enum": [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "6",
                      "7",
                      "8",
                      "9"
                    ]
                  },
                  "last_upgrade_status": {
                    "description": "Status of the last upgrade. Either `1` for success or `4` for failure.",
                    "example": "{{last_upgrade_status}}",
                    "type": "integer",
                    "enum": [
                      1,
                      4
                    ]
                  },
                  "last_upgrade_success_date": {
                    "description": "ISO 8601 timestamp marking the last successful upgrade.",
                    "example": "{{last_upgrade_success_date}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "last_upgrade_success_version": {
                    "description": "Last version of connector software successfully installed in the connector. Specify `null` if not applicable.",
                    "example": "{{last_upgrade_success_version}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "latest_stage_attempt_date": {
                    "description": "ISO 8601 timestamp of the last staging attempt. Specify `null` if not applicable.",
                    "example": "{{latest_stage_attempt_date}}",
                    "format": "date-time",
                    "nullable": true,
                    "type": "string"
                  },
                  "latest_stage_attempt_version": {
                    "description": "Latest connector binary version staging attempted. Specify `null` if not applicable.",
                    "example": "{{latest_stage_attempt_version}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "latest_upgrade_attempt_date": {
                    "description": "ISO 8601 timestamp of the last upgrade attempt. Specify `null` if not applicable.",
                    "example": "{{latest_upgrade_attempt_date}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "latest_upgrade_attempt_state": {
                    "description": "Status of the last upgrade attempt on the connector.",
                    "example": "{{latest_upgrade_attempt_state}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "latest_upgrade_attempt_version": {
                    "description": "Last version of connector software attempted on the connector.",
                    "example": "{{latest_upgrade_attempt_version}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "logging_settings": {
                    "description": "JSON logging settings.",
                    "example": "{{logging_settings}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "mac": {
                    "description": "MAC address of the connector.",
                    "example": "{{mac}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "manual_override": {
                    "description": "When `true`, the connector cannot be upgraded.",
                    "example": "{{manual_override}}",
                    "type": "boolean"
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking the connector configuration's last modification.",
                    "example": "{{modified_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the connector. ",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "os_version": {
                    "description": "OS version of the connector.",
                    "example": "{{os_version}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "package": {
                    "description": "Type of package for the connector. Refer to [Connector package types](https://techdocs.akamai.com/eaa-api/reference/connector-package-types) for available values.",
                    "example": "{{package}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7,
                      8,
                      9,
                      10,
                      11
                    ]
                  },
                  "policy": {
                    "description": "The schedule policy ID for the connector.",
                    "example": "{{policy}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "private_ip": {
                    "description": "Private IP address of the connector.",
                    "example": "{{private_ip}}",
                    "format": "ipv4",
                    "type": "string"
                  },
                  "public_ip": {
                    "description": "Public IP address of the connector.",
                    "example": "{{public_ip}}",
                    "format": "ipv4",
                    "type": "string"
                  },
                  "pwd_comments": {
                    "description": "Status of the set password attempt on the connector. Either `Success` or `Failed`.",
                    "example": "{{pwd_comments}}",
                    "type": "string",
                    "enum": [
                      "Success",
                      "Failed"
                    ]
                  },
                  "pwdsyncflag": {
                    "description": "Syncs the connector password with the back-end database.",
                    "example": "{{pwdsyncflag}}",
                    "type": "boolean"
                  },
                  "ram_size": {
                    "description": "RAM size of the connector. Specify `null` if you want to provide this later. ",
                    "example": "{{ram_size}}",
                    "minimum": 0,
                    "nullable": true,
                    "type": "integer"
                  },
                  "reach": {
                    "default": 1,
                    "description": "Connector reachability status. Either `0` for unreachable or `1` for reachable.",
                    "example": "{{reach}}",
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ]
                  },
                  "region": {
                    "description": "The region of the connector. For example, `Central`.",
                    "example": "{{region}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource_uri": {
                    "additionalProperties": false,
                    "description": "Contains resource locations for the connector.",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "The location of connector details.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "setpwd_attempt": {
                    "description": "The number of unique password setting attempts.",
                    "example": "{{setpwd_attempt}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "state": {
                    "default": 0,
                    "description": "State of the connector. Either `0` for not created, `1` for created, `2` for not installed, `3` for not verified, `4` for verified, `5` for unenrolled, `6` for enrolled, `7` for not configured, or `8` for configured.",
                    "example": "{{state}}",
                    "type": "integer",
                    "enum": [
                      0,
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7,
                      8
                    ]
                  },
                  "status": {
                    "description": "Status of the connector. Either `0` for disabled or `1` for enabled.",
                    "example": "{{status}}",
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ]
                  },
                  "subnet": {
                    "description": "Subnet of the connector. Specify `null` if you want to provide this later.",
                    "example": "{{subnet}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "tz": {
                    "description": "Time zone of the connector. For example, `America/Los_Angeles`.",
                    "example": "{{tz}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "uuid_url": {
                    "description": "A unique identifier for the connector.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/agent.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "agent_type": 1,
                  "agent_upgrade_enabled": true,
                  "agent_upgrade_suspended": false,
                  "agent_version": null,
                  "auth_service": true,
                  "cpu": null,
                  "created_at": "2021-05-25T14:22:44.194287",
                  "data_service": true,
                  "debug_channel_permitted": true,
                  "description": "TEST OPEN API",
                  "dhcp": "enabled",
                  "disk_size": null,
                  "dns_server": null,
                  "download_url": "https://s3.amazonaws.com/soha-agents/087aa887-6165-4b3a-926a-93aa909ea293.tar.gz?AWSAccessKeyId=AKIAYK2DOW62XBWAXG3E&Signature=HWzSfaSH7DirZ2BwvnlTE8I1Ezs%3D&Expires=1624545180",
                  "gateway": null,
                  "geo_location": null,
                  "hostname": null,
                  "ip_addr": null,
                  "last_checkin": null,
                  "load_status": null,
                  "logging_settings": "[]",
                  "mac": null,
                  "manual_override": false,
                  "modified_at": "2021-05-25T14:35:17.816611",
                  "name": "TEST_VM_OPEN_API",
                  "os_upgrades_up_to_date": true,
                  "os_version": null,
                  "package": 1,
                  "policy": "M2vY1fQbQpyokVzCMIuw2Q",
                  "private_ip": null,
                  "public_ip": null,
                  "pwd_comments": null,
                  "pwdsyncflag": false,
                  "ram_size": null,
                  "reach": 0,
                  "region": null,
                  "setpwd_attempt": 1,
                  "state": 1,
                  "status": 1,
                  "subnet": null,
                  "tz": null,
                  "uuid_url": "5CA1blgXRqmxlMzHC4UCCA",
                  "advanced_settings": {
                    "network_info": [
                      "192.0.2.130/24"
                    ]
                  },
                  "resource_uri": {
                    "href": "/api/v1/agents/5CA1blgXRqmxlMzHC4UCCA"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise connector data.",
                  "type": "object",
                  "required": [
                    "name",
                    "package"
                  ],
                  "properties": {
                    "admin_pwd": {
                      "description": "Hash of the admin password.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "agent_type": {
                      "default": 1,
                      "description": "The type of connector. Either `1` for VM, `2` for IPSEC, or `3` for GRE.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3
                      ]
                    },
                    "agent_upgrade_enabled": {
                      "description": "Whether the connector is upgradeable.",
                      "type": "boolean"
                    },
                    "agent_upgrade_suspended": {
                      "description": "Suspends upgrades for a connector.",
                      "type": "boolean"
                    },
                    "agent_version": {
                      "description": "The connector software version currently installed in the connector. For example, `AGENT-4.3.0-2449+`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "auth_service": {
                      "description": "Enables the authorization service.",
                      "type": "boolean"
                    },
                    "cpu": {
                      "description": "CPU of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the connector's creation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "data_service": {
                      "description": "Enables the data service.",
                      "type": "boolean"
                    },
                    "debug_channel_permitted": {
                      "description": "Enables Akamai Support to run commands on the connector through the debug channel.",
                      "type": "boolean"
                    },
                    "description": {
                      "description": "A description for the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "dhcp": {
                      "description": "Enables DHCP for the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "disk_size": {
                      "description": "The disk size of the connector.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "dns_server": {
                      "description": "DNS Server of the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "download_url": {
                      "description": "S3 URL to download the package. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "gateway": {
                      "description": "Gateway of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "hostname": {
                      "description": "Machine name of the connector. ",
                      "format": "hostname",
                      "type": "string"
                    },
                    "ip_addr": {
                      "description": "IP address of the connector. Specify `null` if you want to provide this later.",
                      "format": "ipv4",
                      "nullable": true,
                      "type": "string"
                    },
                    "last_checkin": {
                      "description": "ISO 8601 timestamp marking when the connector last checked in with the server.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "last_stage_status": {
                      "description": "Status of the last staging. Either `1` for success or `4` for failure.",
                      "type": "integer",
                      "enum": [
                        1,
                        4
                      ]
                    },
                    "last_upgrade_failed_date": {
                      "description": "ISO 8601 timestamp marking the last upgrade failure.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "last_upgrade_failed_in": {
                      "description": "Location of the last upgrade failure, expressed as a string-formatted integer. Either `1` for none, `2` for pending, `3` for downloading, `4` for verifying, `5` for upgrade in progress, `6` for cleaning up, `7` for rollback in progress, `8` for completed, or `9` for metadata. Specify `null` if not applicable.",
                      "nullable": true,
                      "type": "string",
                      "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9"
                      ]
                    },
                    "last_upgrade_status": {
                      "description": "Status of the last upgrade. Either `1` for success or `4` for failure.",
                      "type": "integer",
                      "enum": [
                        1,
                        4
                      ]
                    },
                    "last_upgrade_success_date": {
                      "description": "ISO 8601 timestamp marking the last successful upgrade.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "last_upgrade_success_version": {
                      "description": "Last version of connector software successfully installed in the connector. Specify `null` if not applicable.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_stage_attempt_date": {
                      "description": "ISO 8601 timestamp of the last staging attempt. Specify `null` if not applicable.",
                      "format": "date-time",
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_stage_attempt_version": {
                      "description": "Latest connector binary version staging attempted. Specify `null` if not applicable.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_upgrade_attempt_date": {
                      "description": "ISO 8601 timestamp of the last upgrade attempt. Specify `null` if not applicable.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "latest_upgrade_attempt_state": {
                      "description": "Status of the last upgrade attempt on the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "latest_upgrade_attempt_version": {
                      "description": "Last version of connector software attempted on the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "logging_settings": {
                      "description": "JSON logging settings.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mac": {
                      "description": "MAC address of the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "manual_override": {
                      "description": "When `true`, the connector cannot be upgraded.",
                      "type": "boolean"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the connector configuration's last modification.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the connector. ",
                      "minLength": 1,
                      "type": "string"
                    },
                    "os_version": {
                      "description": "OS version of the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "package": {
                      "description": "Type of package for the connector. Refer to [Connector package types](https://techdocs.akamai.com/eaa-api/reference/connector-package-types) for available values.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11
                      ]
                    },
                    "policy": {
                      "description": "The schedule policy ID for the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "private_ip": {
                      "description": "Private IP address of the connector.",
                      "format": "ipv4",
                      "type": "string"
                    },
                    "public_ip": {
                      "description": "Public IP address of the connector.",
                      "format": "ipv4",
                      "type": "string"
                    },
                    "pwd_comments": {
                      "description": "Status of the set password attempt on the connector. Either `Success` or `Failed`.",
                      "type": "string",
                      "enum": [
                        "Success",
                        "Failed"
                      ]
                    },
                    "pwdsyncflag": {
                      "description": "Syncs the connector password with the back-end database.",
                      "type": "boolean"
                    },
                    "ram_size": {
                      "description": "RAM size of the connector. Specify `null` if you want to provide this later. ",
                      "minimum": 0,
                      "nullable": true,
                      "type": "integer"
                    },
                    "reach": {
                      "default": 1,
                      "description": "Connector reachability status. Either `0` for unreachable or `1` for reachable.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "region": {
                      "description": "The region of the connector. For example, `Central`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Contains resource locations for the connector.",
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "The location of connector details.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "setpwd_attempt": {
                      "description": "The number of unique password setting attempts.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "state": {
                      "default": 0,
                      "description": "State of the connector. Either `0` for not created, `1` for created, `2` for not installed, `3` for not verified, `4` for verified, `5` for unenrolled, `6` for enrolled, `7` for not configured, or `8` for configured.",
                      "type": "integer",
                      "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8
                      ]
                    },
                    "status": {
                      "description": "Status of the connector. Either `0` for disabled or `1` for enabled.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "subnet": {
                      "description": "Subnet of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "tz": {
                      "description": "Time zone of the connector. For example, `America/Los_Angeles`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the connector.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/agent.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Deletes an existing connector.",
        "operationId": "delete-connector",
        "summary": "Delete a connector",
        "tags": [
          "Connectors"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-connector"
        },
        "responses": {
          "204": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each connector.",
          "example": "{{agentId}}",
          "in": "path",
          "name": "agentId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/agentId-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/agents/{agentId}/app-metrics": {
      "get": {
        "description": "Lists application metrics for the specified connector.",
        "operationId": "get-connector-app-metrics",
        "summary": "List application metrics for connector",
        "tags": [
          "Connectors"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-connector-app-metrics"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "app_host": "edi-client.stage.akamai-access.com",
                  "app_uuid_url": "501E-o63SaWua1GUk7W2ow",
                  "connector_uuid_url": "PLyc_rYSS2u797Bt6u7gxg",
                  "end_timestamp": "1633068000000",
                  "start_timestamp": "1633067800000",
                  "results": [
                    {
                      "active_connections": 0,
                      "dialin_version": "V1",
                      "idle_dialouts": 4,
                      "timestamp": "2021-10-01T05:57:50.939Z",
                      "total_dialouts": 4
                    },
                    {
                      "active_connections": 0,
                      "dialin_version": "V1",
                      "idle_dialouts": 4,
                      "timestamp": "2021-10-01T05:59:50.940Z",
                      "total_dialouts": 4
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Connector application metrics.",
                  "type": "object",
                  "required": [
                    "connector_uuid_url",
                    "app_uuid_url",
                    "app_host",
                    "start_timestamp",
                    "end_timestamp",
                    "results"
                  ],
                  "properties": {
                    "app_host": {
                      "description": "Name of the application host.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "app_uuid_url": {
                      "description": "A unique identifier for an application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "connector_uuid_url": {
                      "description": "A unique identifier for a connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "end_timestamp": {
                      "description": "ISO 8601 timestamp indicating the end time of the report.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "results": {
                      "description": "Contains connection result details.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains connector application metrics data.",
                        "type": "object",
                        "required": [
                          "idle_dialouts",
                          "active_connections",
                          "total_dialouts",
                          "dialin_version",
                          "timestamp"
                        ],
                        "properties": {
                          "active_connections": {
                            "description": "The active connections count at a given time.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "dialin_version": {
                            "description": "The name of dialin version.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "idle_dialouts": {
                            "description": "The idle dialout count at a given time.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "timestamp": {
                            "description": "ISO 8601 timestamp marking when logs last processed.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "total_dialouts": {
                            "description": "The total number of dialouts at a given time.",
                            "minimum": 0,
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "start_timestamp": {
                      "description": "ISO 8601 timestamp indicating the start time of the report.",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/agentsappmetrics.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A unique identifier of an application.",
            "example": "{{app_uuid_url}}",
            "in": "query",
            "name": "app_uuid_url",
            "required": true,
            "schema": {
              "example": "501E-o63SaWua1GUk7W2ow",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/app_uuid_url-query.yaml"
            }
          },
          {
            "description": "Start epoch timestamp of the report duration.",
            "example": "{{start}}",
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "example": 1633067800000,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/start-query.yaml"
            }
          },
          {
            "description": "End epoch timestamp of the report duration.",
            "example": "{{end}}",
            "in": "query",
            "name": "end",
            "required": true,
            "schema": {
              "example": 1633068000000,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/end-query.yaml"
            }
          },
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each connector.",
          "example": "{{agentId}}",
          "in": "path",
          "name": "agentId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/agentId-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/agents/{agentId}/approve": {
      "post": {
        "description": "Approves a connector.",
        "operationId": "post-connector-approve",
        "summary": "Approve a connector",
        "tags": [
          "Connectors"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-connector-approve"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Connector approved"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise connector data.",
                  "type": "object",
                  "required": [
                    "name",
                    "package"
                  ],
                  "properties": {
                    "admin_pwd": {
                      "description": "Hash of the admin password.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "agent_type": {
                      "default": 1,
                      "description": "The type of connector. Either `1` for VM, `2` for IPSEC, or `3` for GRE.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3
                      ]
                    },
                    "agent_upgrade_enabled": {
                      "description": "Whether the connector is upgradeable.",
                      "type": "boolean"
                    },
                    "agent_upgrade_suspended": {
                      "description": "Suspends upgrades for a connector.",
                      "type": "boolean"
                    },
                    "agent_version": {
                      "description": "The connector software version currently installed in the connector. For example, `AGENT-4.3.0-2449+`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "auth_service": {
                      "description": "Enables the authorization service.",
                      "type": "boolean"
                    },
                    "cpu": {
                      "description": "CPU of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the connector's creation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "data_service": {
                      "description": "Enables the data service.",
                      "type": "boolean"
                    },
                    "debug_channel_permitted": {
                      "description": "Enables Akamai Support to run commands on the connector through the debug channel.",
                      "type": "boolean"
                    },
                    "description": {
                      "description": "A description for the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "dhcp": {
                      "description": "Enables DHCP for the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "disk_size": {
                      "description": "The disk size of the connector.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "dns_server": {
                      "description": "DNS Server of the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "download_url": {
                      "description": "S3 URL to download the package. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "gateway": {
                      "description": "Gateway of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "hostname": {
                      "description": "Machine name of the connector. ",
                      "format": "hostname",
                      "type": "string"
                    },
                    "ip_addr": {
                      "description": "IP address of the connector. Specify `null` if you want to provide this later.",
                      "format": "ipv4",
                      "nullable": true,
                      "type": "string"
                    },
                    "last_checkin": {
                      "description": "ISO 8601 timestamp marking when the connector last checked in with the server.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "last_stage_status": {
                      "description": "Status of the last staging. Either `1` for success or `4` for failure.",
                      "type": "integer",
                      "enum": [
                        1,
                        4
                      ]
                    },
                    "last_upgrade_failed_date": {
                      "description": "ISO 8601 timestamp marking the last upgrade failure.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "last_upgrade_failed_in": {
                      "description": "Location of the last upgrade failure, expressed as a string-formatted integer. Either `1` for none, `2` for pending, `3` for downloading, `4` for verifying, `5` for upgrade in progress, `6` for cleaning up, `7` for rollback in progress, `8` for completed, or `9` for metadata. Specify `null` if not applicable.",
                      "nullable": true,
                      "type": "string",
                      "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9"
                      ]
                    },
                    "last_upgrade_status": {
                      "description": "Status of the last upgrade. Either `1` for success or `4` for failure.",
                      "type": "integer",
                      "enum": [
                        1,
                        4
                      ]
                    },
                    "last_upgrade_success_date": {
                      "description": "ISO 8601 timestamp marking the last successful upgrade.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "last_upgrade_success_version": {
                      "description": "Last version of connector software successfully installed in the connector. Specify `null` if not applicable.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_stage_attempt_date": {
                      "description": "ISO 8601 timestamp of the last staging attempt. Specify `null` if not applicable.",
                      "format": "date-time",
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_stage_attempt_version": {
                      "description": "Latest connector binary version staging attempted. Specify `null` if not applicable.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_upgrade_attempt_date": {
                      "description": "ISO 8601 timestamp of the last upgrade attempt. Specify `null` if not applicable.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "latest_upgrade_attempt_state": {
                      "description": "Status of the last upgrade attempt on the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "latest_upgrade_attempt_version": {
                      "description": "Last version of connector software attempted on the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "logging_settings": {
                      "description": "JSON logging settings.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mac": {
                      "description": "MAC address of the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "manual_override": {
                      "description": "When `true`, the connector cannot be upgraded.",
                      "type": "boolean"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the connector configuration's last modification.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the connector. ",
                      "minLength": 1,
                      "type": "string"
                    },
                    "os_version": {
                      "description": "OS version of the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "package": {
                      "description": "Type of package for the connector. Refer to [Connector package types](https://techdocs.akamai.com/eaa-api/reference/connector-package-types) for available values.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11
                      ]
                    },
                    "policy": {
                      "description": "The schedule policy ID for the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "private_ip": {
                      "description": "Private IP address of the connector.",
                      "format": "ipv4",
                      "type": "string"
                    },
                    "public_ip": {
                      "description": "Public IP address of the connector.",
                      "format": "ipv4",
                      "type": "string"
                    },
                    "pwd_comments": {
                      "description": "Status of the set password attempt on the connector. Either `Success` or `Failed`.",
                      "type": "string",
                      "enum": [
                        "Success",
                        "Failed"
                      ]
                    },
                    "pwdsyncflag": {
                      "description": "Syncs the connector password with the back-end database.",
                      "type": "boolean"
                    },
                    "ram_size": {
                      "description": "RAM size of the connector. Specify `null` if you want to provide this later. ",
                      "minimum": 0,
                      "nullable": true,
                      "type": "integer"
                    },
                    "reach": {
                      "default": 1,
                      "description": "Connector reachability status. Either `0` for unreachable or `1` for reachable.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "region": {
                      "description": "The region of the connector. For example, `Central`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Contains resource locations for the connector.",
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "The location of connector details.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "setpwd_attempt": {
                      "description": "The number of unique password setting attempts.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "state": {
                      "default": 0,
                      "description": "State of the connector. Either `0` for not created, `1` for created, `2` for not installed, `3` for not verified, `4` for verified, `5` for unenrolled, `6` for enrolled, `7` for not configured, or `8` for configured.",
                      "type": "integer",
                      "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8
                      ]
                    },
                    "status": {
                      "description": "Status of the connector. Either `0` for disabled or `1` for enabled.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "subnet": {
                      "description": "Subnet of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "tz": {
                      "description": "Time zone of the connector. For example, `America/Los_Angeles`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the connector.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/agent.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each connector.",
          "example": "{{agentId}}",
          "in": "path",
          "name": "agentId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/agentId-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/agents/{agentId}/system-metrics": {
      "get": {
        "description": "Lists system metrics for the specified connector.",
        "operationId": "get-connector-system-metrics",
        "summary": "List connector system metrics",
        "tags": [
          "System metrics"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-connector-system-metrics"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "connector_uuid_url": "PLyc_rYSS2u797Bt6u7gxg",
                  "end_timestamp": "1633068000000",
                  "start_timestamp": "1633067800000",
                  "results": [
                    {
                      "active_dialout_count": 0,
                      "connector_uuid_url": "PLyc_rYSS2u797Bt6u7gxg",
                      "cpu_pct": 0.4,
                      "dialout_idle": 47,
                      "dialout_total": 47,
                      "disk_pct": 48.8,
                      "mem_pct": 82.3,
                      "network_traffic_mbps": 0,
                      "timestamp": "2021-10-01T05:57:50.939Z"
                    },
                    {
                      "active_dialout_count": 0,
                      "connector_uuid_url": "PLyc_rYSS2u797Bt6u7gxg",
                      "cpu_pct": 0.6,
                      "dialout_idle": 50,
                      "dialout_total": 50,
                      "disk_pct": 48.8,
                      "mem_pct": 82.4,
                      "network_traffic_mbps": 0.01,
                      "timestamp": "2021-10-01T05:59:50.940Z"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Connector system metrics.",
                  "type": "object",
                  "required": [
                    "connector_uuid_url",
                    "start_timestamp",
                    "end_timestamp",
                    "results"
                  ],
                  "properties": {
                    "connector_uuid_url": {
                      "description": "A unique identifier for a connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "end_timestamp": {
                      "description": "ISO 8601 timestamp indicating the end time of the report.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "results": {
                      "description": "Contains connection system results.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains connector system metrics data.",
                        "type": "object",
                        "required": [
                          "disk_pct",
                          "timestamp",
                          "cpu_pct",
                          "mem_pct",
                          "network_traffic_mbps",
                          "active_dialout_count",
                          "dialout_total",
                          "dialout_idle",
                          "connector_uuid_url"
                        ],
                        "properties": {
                          "active_dialout_count": {
                            "description": "The active dialout connections count at a given time.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "connector_uuid_url": {
                            "description": "A unique identifier for a connector.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "cpu_pct": {
                            "description": "Actual percentage of CPU usage.",
                            "maximum": 100,
                            "minimum": 0,
                            "type": "number"
                          },
                          "dialout_idle": {
                            "description": "The idle dialout count at a given time.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "dialout_total": {
                            "description": "The total number of dialouts at a given time.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "disk_pct": {
                            "description": "Actual percentage of disk usage.",
                            "maximum": 100,
                            "minimum": 0,
                            "type": "number"
                          },
                          "mem_pct": {
                            "description": "Actual percentage of memory usage.",
                            "maximum": 100,
                            "minimum": 0,
                            "type": "number"
                          },
                          "network_traffic_mbps": {
                            "description": "Network traffic sent in mbps.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "timestamp": {
                            "description": "ISO 8601 timestamp marking log processing.",
                            "format": "date-time",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "start_timestamp": {
                      "description": "ISO 8601 timestamp indicating the start time of the report.",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/agentsystemmetrics.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Start epoch timestamp of the report duration.",
            "example": "{{start}}",
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "example": 1633067800000,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/start-query.yaml"
            }
          },
          {
            "description": "End epoch timestamp of the report duration.",
            "example": "{{end}}",
            "in": "query",
            "name": "end",
            "required": true,
            "schema": {
              "example": 1633068000000,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/end-query.yaml"
            }
          },
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each connector.",
          "example": "{{agentId}}",
          "in": "path",
          "name": "agentId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/agentId-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/agents/{agentId}/upgrade-os-pkgs": {
      "post": {
        "description": "Upgrades an existing connector.",
        "operationId": "post-upgrade-connector",
        "summary": "Upgrade OS packages on a connector.",
        "tags": [
          "Connectors"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-upgrade-connector"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "uuid_url": "Dleb-n-KSZKiZ-JVF6xGsQ"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Upgrade the OS packages on an existing connector.",
                "type": "object",
                "required": [
                  "uuid_url"
                ],
                "properties": {
                  "uuid_url": {
                    "description": "The unique ID of the agent.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/upgrade-agent-request.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "status": "Accepted the upgrade request."
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Upgrade the OS packages on an existing connector.",
                  "type": "object",
                  "required": [
                    "status"
                  ],
                  "properties": {
                    "status": {
                      "description": "The status of request (whether the upgrade request was accepted or rejected).",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/upgrade-agent-response.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each connector.",
          "example": "{{agentId}}",
          "in": "path",
          "name": "agentId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/agentId-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/appbundle": {
      "post": {
        "description": "Creates a new application bundle.",
        "operationId": "post-appbundle",
        "summary": "Create an application bundle",
        "tags": [
          "Application bundles"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-appbundle"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "description": "HTTP application group",
                "name": "HTTP_GROUP"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Details about an application in an Application Bundle.",
                "type": "object",
                "required": [
                  "description",
                  "group_apps",
                  "name",
                  "resource_uri",
                  "status",
                  "uuid_url"
                ],
                "properties": {
                  "app_details": {
                    "description": "Detailed application data for the this application bundle.",
                    "minItems": 0,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Contains information about an application in the application bundle details.",
                      "type": "object",
                      "required": [
                        "name",
                        "uuid_url"
                      ],
                      "properties": {
                        "app_deployed": {
                          "description": "Whether the application configuration is deployed.",
                          "type": "boolean"
                        },
                        "app_operational": {
                          "description": "The [Application](application)'s operational status. Either `1` for not operational, `2` for pending, or `3` for operational.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3
                          ]
                        },
                        "app_profile": {
                          "description": "The type of application profile. Either `1` for HTTP, `2` for Sharepoint, `3` for Jira, `4` for RDP, `5` for VNC, `6` for SSH, `7` for Jenkins, `8` for Confluence, or `9` for TCP.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9
                          ]
                        },
                        "app_status": {
                          "description": "The application's status. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, or `5` for deploy failed.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ]
                        },
                        "name": {
                          "description": "Name of the application.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "uuid_url": {
                          "description": "A unique identifier for the application.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/app-bundle-details.yaml"
                      }
                    }
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking this object's creation.",
                    "example": "{{created_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the application bundle.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "group_apps": {
                    "description": "The applications assigned to the application bundle resource.",
                    "minItems": 0,
                    "type": "array",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking this object's last modification. If the object wasn't modified since first being created, the value matches `created_at`.",
                    "example": "{{modified_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "name": {
                    "description": "A display label for the application bundle.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource_uri": {
                    "additionalProperties": false,
                    "description": "Contains location information for the application bundle.",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "Specifies the location for the application bundle.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "status": {
                    "default": 0,
                    "description": "Status of the application bundle. Either `0` for disabled or `1` for enabled.",
                    "example": "{{status}}",
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ]
                  },
                  "uuid_url": {
                    "description": "A unique identifier for the application bundle.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/appBundle.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "created_at": "2021-05-25T15:22:59.221288",
                  "description": "DB Application group",
                  "modified_at": "2021-05-25T15:25:38.434715",
                  "name": "DB_GROUP",
                  "single_host_enable": false,
                  "single_host_fqdn": "",
                  "status": 1,
                  "uuid_url": "LmWWytH-TMutd6P9G0Ts7A",
                  "group_apps": [
                    "Ht-jz4FJRg2D13m7DfCZ5Q"
                  ],
                  "resource_uri": {
                    "href": "/api/v1/appbundle/LmWWytH-TMutd6P9G0Ts7A"
                  },
                  "app_details": [
                    {
                      "app_deployed": false,
                      "app_operational": 3,
                      "app_profile": 1,
                      "app_status": 1,
                      "app_type": 1,
                      "name": "Custom  IDP change",
                      "single_host_content_rw": false,
                      "single_host_path": "",
                      "uuid_url": "Ht-jz4FJRg2D13m7DfCZ5Q"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Details about an application in an Application Bundle.",
                  "type": "object",
                  "required": [
                    "description",
                    "group_apps",
                    "name",
                    "resource_uri",
                    "status",
                    "uuid_url"
                  ],
                  "properties": {
                    "app_details": {
                      "description": "Detailed application data for the this application bundle.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information about an application in the application bundle details.",
                        "type": "object",
                        "required": [
                          "name",
                          "uuid_url"
                        ],
                        "properties": {
                          "app_deployed": {
                            "description": "Whether the application configuration is deployed.",
                            "type": "boolean"
                          },
                          "app_operational": {
                            "description": "The [Application](application)'s operational status. Either `1` for not operational, `2` for pending, or `3` for operational.",
                            "type": "integer",
                            "enum": [
                              1,
                              2,
                              3
                            ]
                          },
                          "app_profile": {
                            "description": "The type of application profile. Either `1` for HTTP, `2` for Sharepoint, `3` for Jira, `4` for RDP, `5` for VNC, `6` for SSH, `7` for Jenkins, `8` for Confluence, or `9` for TCP.",
                            "type": "integer",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9
                            ]
                          },
                          "app_status": {
                            "description": "The application's status. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, or `5` for deploy failed.",
                            "type": "integer",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5
                            ]
                          },
                          "name": {
                            "description": "Name of the application.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the application.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/app-bundle-details.yaml"
                        }
                      }
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking this object's creation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the application bundle.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_apps": {
                      "description": "The applications assigned to the application bundle resource.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking this object's last modification. If the object wasn't modified since first being created, the value matches `created_at`.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "A display label for the application bundle.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Contains location information for the application bundle.",
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "Specifies the location for the application bundle.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "default": 0,
                      "description": "Status of the application bundle. Either `0` for disabled or `1` for enabled.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application bundle.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/appBundle.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists your application bundles.",
        "operationId": "get-appbundles",
        "summary": "List application bundles",
        "tags": [
          "Application bundles"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-appbundles"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 12
                  },
                  "objects": [
                    {
                      "created_at": "2017-11-16T22:32:10.602218",
                      "description": "Apps East",
                      "modified_at": "2017-12-04T19:33:32.427605",
                      "name": "east_apps",
                      "status": 1,
                      "uuid_url": "xjfw56YkTiWLRC4HL9Ycbg",
                      "group_apps": [
                        "8rwIWzWuSt-2dnGJ3rbqQA",
                        "A92i-3VZRd23SCnL7mno8A"
                      ],
                      "resource_uri": {
                        "href": "/api/v1/appbundle/xjfw56YkTiWLRC4HL9Ycbg"
                      },
                      "app_details": [
                        {
                          "app_deployed": true,
                          "app_operational": 3,
                          "app_profile": 1,
                          "app_status": 4,
                          "name": "",
                          "uuid_url": "8rwIWzWuSt-2dnGJ3rbqQA"
                        },
                        {
                          "app_deployed": true,
                          "app_operational": 3,
                          "app_profile": 1,
                          "app_status": 2,
                          "name": "MS-Office-365",
                          "uuid_url": "A92i-3VZRd23SCnL7mno8A"
                        }
                      ]
                    },
                    {
                      "created_at": "2021-05-25T15:22:59.221288",
                      "description": "TEST Application group",
                      "modified_at": "2021-05-25T15:25:38.434715",
                      "name": "lab_east",
                      "single_host_enable": false,
                      "single_host_fqdn": "",
                      "status": 1,
                      "uuid_url": "LmWWytH-TMutd6P9G0Ts7A",
                      "group_apps": [
                        "Ht-jz4FJRg2D13m7DfCZ5Q"
                      ],
                      "resource_uri": {
                        "href": "/api/v1/appbundle/LmWWytH-TMutd6P9G0Ts7A"
                      },
                      "app_details": [
                        {
                          "app_deployed": false,
                          "app_operational": 3,
                          "app_profile": 1,
                          "app_status": 1,
                          "app_type": 1,
                          "name": "Custom IDP change",
                          "single_host_content_rw": false,
                          "single_host_path": "",
                          "uuid_url": "Ht-jz4FJRg2D13m7DfCZ5Q"
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access Application bundles.",
                  "type": "object",
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "type": "object",
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "The application bundles.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Application bundle application information.",
                        "type": "object",
                        "required": [
                          "status",
                          "app_details",
                          "description",
                          "group_apps",
                          "uuid_url",
                          "resource_uri",
                          "name"
                        ],
                        "properties": {
                          "app_details": {
                            "description": "Detailed application data for the this application bundle.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Contains information about an application in the application bundle details.",
                              "type": "object",
                              "required": [
                                "name",
                                "uuid_url"
                              ],
                              "properties": {
                                "app_deployed": {
                                  "description": "Whether the application configuration is deployed.",
                                  "type": "boolean"
                                },
                                "app_operational": {
                                  "description": "The [Application](application)'s operational status. Either `1` for not operational, `2` for pending, or `3` for operational.",
                                  "type": "integer",
                                  "enum": [
                                    1,
                                    2,
                                    3
                                  ]
                                },
                                "app_profile": {
                                  "description": "The type of application profile. Either `1` for HTTP, `2` for Sharepoint, `3` for Jira, `4` for RDP, `5` for VNC, `6` for SSH, `7` for Jenkins, `8` for Confluence, or `9` for TCP.",
                                  "type": "integer",
                                  "enum": [
                                    1,
                                    2,
                                    3,
                                    4,
                                    5,
                                    6,
                                    7,
                                    8,
                                    9
                                  ]
                                },
                                "app_status": {
                                  "description": "The application's status. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, or `5` for deploy failed.",
                                  "type": "integer",
                                  "enum": [
                                    1,
                                    2,
                                    3,
                                    4,
                                    5
                                  ]
                                },
                                "name": {
                                  "description": "Name of the application.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "uuid_url": {
                                  "description": "A unique identifier for the application.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/app-bundle-details.yaml"
                              }
                            }
                          },
                          "created_at": {
                            "description": "ISO 8601 timestamp marking this object's creation.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "description": {
                            "description": "A description of the application bundle. Specify `null` if you want to provide this later.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "group_apps": {
                            "description": "The applications assigned to the application bundle group.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "modified_at": {
                            "description": "ISO 8601 timestamp marking this object's last modification. If the object wasn't modified since first being created, the value matches `created_at`.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "name": {
                            "description": "A display label for the application bundle.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource_uri": {
                            "additionalProperties": false,
                            "description": "Contains location information for the application bundle.",
                            "type": "object",
                            "required": [
                              "href"
                            ],
                            "properties": {
                              "href": {
                                "description": "Specifies the location for the application bundle.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "status": {
                            "default": 0,
                            "description": "Status of the application bundle. Either `0` for disabled or `1` for enabled.",
                            "type": "integer",
                            "enum": [
                              0,
                              1
                            ]
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the application bundle.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/app-bundle.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/appBundles.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_offset.yaml"
            }
          },
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/mgmt-pop/appbundle/{appBundleId}": {
      "get": {
        "description": "Lists details for a specific application bundle by ID.",
        "operationId": "get-appbundle",
        "summary": "Get an application bundle",
        "tags": [
          "Application bundles"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-appbundle"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "created_at": "2021-05-25T15:22:59.221288",
                  "description": "DB Application group",
                  "modified_at": "2021-05-25T15:25:38.434715",
                  "name": "DB_GROUP",
                  "single_host_enable": false,
                  "single_host_fqdn": "",
                  "status": 1,
                  "uuid_url": "LmWWytH-TMutd6P9G0Ts7A",
                  "group_apps": [
                    "Ht-jz4FJRg2D13m7DfCZ5Q"
                  ],
                  "resource_uri": {
                    "href": "/api/v1/appbundle/LmWWytH-TMutd6P9G0Ts7A"
                  },
                  "app_details": [
                    {
                      "app_deployed": false,
                      "app_operational": 3,
                      "app_profile": 1,
                      "app_status": 1,
                      "app_type": 1,
                      "name": "Custom  IDP change",
                      "single_host_content_rw": false,
                      "single_host_path": "",
                      "uuid_url": "Ht-jz4FJRg2D13m7DfCZ5Q"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Details about an application in an Application Bundle.",
                  "type": "object",
                  "required": [
                    "description",
                    "group_apps",
                    "name",
                    "resource_uri",
                    "status",
                    "uuid_url"
                  ],
                  "properties": {
                    "app_details": {
                      "description": "Detailed application data for the this application bundle.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information about an application in the application bundle details.",
                        "type": "object",
                        "required": [
                          "name",
                          "uuid_url"
                        ],
                        "properties": {
                          "app_deployed": {
                            "description": "Whether the application configuration is deployed.",
                            "type": "boolean"
                          },
                          "app_operational": {
                            "description": "The [Application](application)'s operational status. Either `1` for not operational, `2` for pending, or `3` for operational.",
                            "type": "integer",
                            "enum": [
                              1,
                              2,
                              3
                            ]
                          },
                          "app_profile": {
                            "description": "The type of application profile. Either `1` for HTTP, `2` for Sharepoint, `3` for Jira, `4` for RDP, `5` for VNC, `6` for SSH, `7` for Jenkins, `8` for Confluence, or `9` for TCP.",
                            "type": "integer",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9
                            ]
                          },
                          "app_status": {
                            "description": "The application's status. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, or `5` for deploy failed.",
                            "type": "integer",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5
                            ]
                          },
                          "name": {
                            "description": "Name of the application.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the application.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/app-bundle-details.yaml"
                        }
                      }
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking this object's creation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the application bundle.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_apps": {
                      "description": "The applications assigned to the application bundle resource.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking this object's last modification. If the object wasn't modified since first being created, the value matches `created_at`.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "A display label for the application bundle.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Contains location information for the application bundle.",
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "Specifies the location for the application bundle.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "default": 0,
                      "description": "Status of the application bundle. Either `0` for disabled or `1` for enabled.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application bundle.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/appBundle.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Modifies an existing application bundle.",
        "operationId": "put-appbundle",
        "summary": "Modify an application bundle",
        "tags": [
          "Application bundles"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-appbundle"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "created_at": "2021-05-25T15:22:59.221288",
                "description": "TEST Application group",
                "modified_at": "2021-05-25T15:25:38.434715",
                "name": "TEST_GROUP",
                "single_host_enable": false,
                "single_host_fqdn": "",
                "status": 1,
                "group_apps": [
                  "Ht-jz4FJRg2D13m7DfCZ5Q"
                ],
                "app_details": [
                  {
                    "app_deployed": false,
                    "app_operational": 3,
                    "app_profile": 1,
                    "app_status": 1,
                    "app_type": 1,
                    "name": "Custom  IDP change",
                    "single_host_content_rw": false,
                    "single_host_path": "",
                    "uuid_url": "Ht-jz4FJRg2D13m7DfCZ5Q"
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Details about an application in an Application Bundle.",
                "type": "object",
                "required": [
                  "description",
                  "group_apps",
                  "name",
                  "resource_uri",
                  "status",
                  "uuid_url"
                ],
                "properties": {
                  "app_details": {
                    "description": "Detailed application data for the this application bundle.",
                    "minItems": 0,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Contains information about an application in the application bundle details.",
                      "type": "object",
                      "required": [
                        "name",
                        "uuid_url"
                      ],
                      "properties": {
                        "app_deployed": {
                          "description": "Whether the application configuration is deployed.",
                          "type": "boolean"
                        },
                        "app_operational": {
                          "description": "The [Application](application)'s operational status. Either `1` for not operational, `2` for pending, or `3` for operational.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3
                          ]
                        },
                        "app_profile": {
                          "description": "The type of application profile. Either `1` for HTTP, `2` for Sharepoint, `3` for Jira, `4` for RDP, `5` for VNC, `6` for SSH, `7` for Jenkins, `8` for Confluence, or `9` for TCP.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9
                          ]
                        },
                        "app_status": {
                          "description": "The application's status. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, or `5` for deploy failed.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ]
                        },
                        "name": {
                          "description": "Name of the application.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "uuid_url": {
                          "description": "A unique identifier for the application.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/app-bundle-details.yaml"
                      }
                    }
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking this object's creation.",
                    "example": "{{created_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the application bundle.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "group_apps": {
                    "description": "The applications assigned to the application bundle resource.",
                    "minItems": 0,
                    "type": "array",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking this object's last modification. If the object wasn't modified since first being created, the value matches `created_at`.",
                    "example": "{{modified_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "name": {
                    "description": "A display label for the application bundle.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource_uri": {
                    "additionalProperties": false,
                    "description": "Contains location information for the application bundle.",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "Specifies the location for the application bundle.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "status": {
                    "default": 0,
                    "description": "Status of the application bundle. Either `0` for disabled or `1` for enabled.",
                    "example": "{{status}}",
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ]
                  },
                  "uuid_url": {
                    "description": "A unique identifier for the application bundle.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/appBundle.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "created_at": "2021-05-25T15:22:59.221288",
                  "description": "DB Application group",
                  "modified_at": "2021-05-25T15:25:38.434715",
                  "name": "DB_GROUP",
                  "single_host_enable": false,
                  "single_host_fqdn": "",
                  "status": 1,
                  "uuid_url": "LmWWytH-TMutd6P9G0Ts7A",
                  "group_apps": [
                    "Ht-jz4FJRg2D13m7DfCZ5Q"
                  ],
                  "resource_uri": {
                    "href": "/api/v1/appbundle/LmWWytH-TMutd6P9G0Ts7A"
                  },
                  "app_details": [
                    {
                      "app_deployed": false,
                      "app_operational": 3,
                      "app_profile": 1,
                      "app_status": 1,
                      "app_type": 1,
                      "name": "Custom  IDP change",
                      "single_host_content_rw": false,
                      "single_host_path": "",
                      "uuid_url": "Ht-jz4FJRg2D13m7DfCZ5Q"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Details about an application in an Application Bundle.",
                  "type": "object",
                  "required": [
                    "description",
                    "group_apps",
                    "name",
                    "resource_uri",
                    "status",
                    "uuid_url"
                  ],
                  "properties": {
                    "app_details": {
                      "description": "Detailed application data for the this application bundle.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Contains information about an application in the application bundle details.",
                        "type": "object",
                        "required": [
                          "name",
                          "uuid_url"
                        ],
                        "properties": {
                          "app_deployed": {
                            "description": "Whether the application configuration is deployed.",
                            "type": "boolean"
                          },
                          "app_operational": {
                            "description": "The [Application](application)'s operational status. Either `1` for not operational, `2` for pending, or `3` for operational.",
                            "type": "integer",
                            "enum": [
                              1,
                              2,
                              3
                            ]
                          },
                          "app_profile": {
                            "description": "The type of application profile. Either `1` for HTTP, `2` for Sharepoint, `3` for Jira, `4` for RDP, `5` for VNC, `6` for SSH, `7` for Jenkins, `8` for Confluence, or `9` for TCP.",
                            "type": "integer",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9
                            ]
                          },
                          "app_status": {
                            "description": "The application's status. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, or `5` for deploy failed.",
                            "type": "integer",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5
                            ]
                          },
                          "name": {
                            "description": "Name of the application.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the application.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/app-bundle-details.yaml"
                        }
                      }
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking this object's creation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the application bundle.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_apps": {
                      "description": "The applications assigned to the application bundle resource.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking this object's last modification. If the object wasn't modified since first being created, the value matches `created_at`.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "A display label for the application bundle.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Contains location information for the application bundle.",
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "Specifies the location for the application bundle.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "default": 0,
                      "description": "Status of the application bundle. Either `0` for disabled or `1` for enabled.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application bundle.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/appBundle.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Removes an application bundle.",
        "operationId": "delete-appbundle",
        "summary": "Delete an application bundle",
        "tags": [
          "Application bundles"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-appbundle"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application bundle.",
          "example": "{{appBundleId}}",
          "in": "path",
          "name": "appBundleId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/appBundleId-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/appbundle/{appBundleId}/deploy": {
      "post": {
        "description": "Deploys the specified application bundle.",
        "operationId": "post-appbundle-deploy",
        "summary": "Deploy an application bundle",
        "tags": [
          "Application bundles"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-appbundle-deploy"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access Application deployment data.",
                  "type": "object",
                  "required": [
                    "cmdid"
                  ],
                  "properties": {
                    "cmdid": {
                      "description": "A unique identifier for the command to track progress.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/deploy.yaml"
                  }
                },
                "example": [
                  {
                    "app_id": "YqQlGzjYRzuSX04c8CECtw",
                    "cmdid": 9564781812219316
                  },
                  {
                    "app_id": "9m6LGDHhTWubkb4gU6O9NA",
                    "cmdid": 4371139853414614
                  },
                  {
                    "app_id": "rNWsDCSSQGSUn9gNHQ89NQ",
                    "cmdid": 5651681481824975
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application bundle.",
          "example": "{{appBundleId}}",
          "in": "path",
          "name": "appBundleId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/appBundleId-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/appcategories": {
      "post": {
        "description": "Create a new application category.",
        "operationId": "post-app-category",
        "summary": "Create an application category",
        "tags": [
          "Application categories"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-app-category"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "description": "staging category",
                "name": "cat-staging"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Details about an application in an application category.",
                "type": "object",
                "required": [
                  "app_details",
                  "description",
                  "color_hex_code",
                  "uuid_url",
                  "name"
                ],
                "properties": {
                  "app_details": {
                    "description": "Contains detailed application data for the this application category.",
                    "minItems": 0,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Details about an application in an application category.",
                      "type": "object",
                      "required": [
                        "name",
                        "uuid_url"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the application.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "uuid_url": {
                          "description": "A unique identifier for the application.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/app-category-details.yaml"
                      }
                    }
                  },
                  "color_hex_code": {
                    "description": "The display color for the application category.",
                    "example": "{{color_hex_code}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking this object's creation.",
                    "example": "{{created_at}}",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the application category. Specify `null` if you want to provide this later.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking this object's last modification. If the object wasn't modified since first being created, the value matches `created_at`.",
                    "example": "{{modified_at}}",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "name": {
                    "description": "A display label for the application category.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource_uri": {
                    "description": "Specifies the location of the application category.",
                    "example": "{{resource_uri}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "uuid_url": {
                    "description": "A unique identifier for the application category.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/app-category.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "color_hex_code": null,
                  "created_at": "2021-05-25T15:40:47.920319",
                  "description": "DB app category",
                  "modified_at": "2021-05-25T15:40:47.920330",
                  "name": "DB_apps",
                  "resource_uri": "/api/v1/appcategories/d01cd4a2-efb7-47ae-9d7d-5f0ea6899c4b",
                  "uuid_url": "iNSex9QrQnCljLXHk5FHbQ",
                  "app_details": []
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Details about an application in an application category.",
                  "type": "object",
                  "required": [
                    "app_details",
                    "description",
                    "color_hex_code",
                    "uuid_url",
                    "name"
                  ],
                  "properties": {
                    "app_details": {
                      "description": "Contains detailed application data for the this application category.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Details about an application in an application category.",
                        "type": "object",
                        "required": [
                          "name",
                          "uuid_url"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the application.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the application.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/app-category-details.yaml"
                        }
                      }
                    },
                    "color_hex_code": {
                      "description": "The display color for the application category.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking this object's creation.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the application category. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking this object's last modification. If the object wasn't modified since first being created, the value matches `created_at`.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "A display label for the application category.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "description": "Specifies the location of the application category.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application category.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/app-category.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists your application categories.",
        "operationId": "get-app-categories",
        "summary": "List application categories",
        "tags": [
          "Application categories"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-categories"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 3
                  },
                  "objects": [
                    {
                      "color_hex_code": "#2d70e8",
                      "created_at": "2018-08-07T14:14:33.660117",
                      "description": "Communication Applications",
                      "modified_at": "2018-08-07T14:18:37.543968",
                      "name": "Communications",
                      "resource_uri": "/api/v1/appcategories/04c6bb16-0a69-4856-a6d8-67ec8d9c34dd",
                      "uuid_url": "BMa7FgppSFam2GfsjZw03Q",
                      "app_details": [
                        {
                          "name": "Employee OIDC.Net Hybrid",
                          "uuid_url": "IzlikGM3QQ6EvXZyeG1haw"
                        },
                        {
                          "name": "EAAClient One Domain",
                          "uuid_url": "M8VAuzP6Sz-ATdQPEkfO4g"
                        }
                      ]
                    },
                    {
                      "color_hex_code": "#5e36d0",
                      "created_at": "2017-11-01T17:23:28.220874",
                      "description": null,
                      "modified_at": "2017-11-01T17:23:44.492034",
                      "name": "SAML SaaS",
                      "resource_uri": "/api/v1/appcategories/8b3de00a-c382-4bbe-b0aa-101ef32ee93e",
                      "uuid_url": "iz3gCsOCS76wqhAe8y7pPg",
                      "app_details": [
                        {
                          "name": "Office365",
                          "uuid_url": "A92i-3VZRd23SCnL7mno8A"
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access Application categories.",
                  "type": "object",
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "type": "object",
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "EAA category details.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Details about an application in an application category.",
                        "type": "object",
                        "required": [
                          "app_details",
                          "description",
                          "color_hex_code",
                          "uuid_url",
                          "name"
                        ],
                        "properties": {
                          "app_details": {
                            "description": "Contains detailed application data for the this application category.",
                            "minItems": 0,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Details about an application in an application category.",
                              "type": "object",
                              "required": [
                                "name",
                                "uuid_url"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the application.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "uuid_url": {
                                  "description": "A unique identifier for the application.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              },
                              "x-akamai": {
                                "file-path": "schemas/app-category-details.yaml"
                              }
                            }
                          },
                          "color_hex_code": {
                            "description": "The display color for the application category.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "created_at": {
                            "description": "ISO 8601 timestamp marking this object's creation.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "description": {
                            "description": "A description of the application category. Specify `null` if you want to provide this later.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "modified_at": {
                            "description": "ISO 8601 timestamp marking this object's last modification. If the object wasn't modified since first being created, the value matches `created_at`.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "name": {
                            "description": "A display label for the application category.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource_uri": {
                            "description": "Specifies the location of the application category.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the application category.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/app-category.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/appCategories.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_limit.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/mgmt-pop/appcategories/{appCategoryId}": {
      "get": {
        "description": "Lists details for a specific application category.",
        "operationId": "get-app-category",
        "summary": "Get an application category",
        "tags": [
          "Application categories"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-category"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "color_hex_code": null,
                  "created_at": "2021-05-25T15:40:47.920319",
                  "description": "DB app category",
                  "modified_at": "2021-05-25T15:40:47.920330",
                  "name": "DB_apps",
                  "resource_uri": "/api/v1/appcategories/d01cd4a2-efb7-47ae-9d7d-5f0ea6899c4b",
                  "uuid_url": "iNSex9QrQnCljLXHk5FHbQ",
                  "app_details": []
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Details about an application in an application category.",
                  "type": "object",
                  "required": [
                    "app_details",
                    "description",
                    "color_hex_code",
                    "uuid_url",
                    "name"
                  ],
                  "properties": {
                    "app_details": {
                      "description": "Contains detailed application data for the this application category.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Details about an application in an application category.",
                        "type": "object",
                        "required": [
                          "name",
                          "uuid_url"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the application.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the application.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/app-category-details.yaml"
                        }
                      }
                    },
                    "color_hex_code": {
                      "description": "The display color for the application category.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking this object's creation.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the application category. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking this object's last modification. If the object wasn't modified since first being created, the value matches `created_at`.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "A display label for the application category.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "description": "Specifies the location of the application category.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application category.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/app-category.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Modifies an existing application category.",
        "operationId": "put-app-category",
        "summary": "Modify an application category",
        "tags": [
          "Application categories"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-app-category"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "color_hex_code": "#6ba5bd",
                "created_at": "2021-05-25T15:40:47.920319",
                "description": "HTTP custom apps",
                "modified_at": "2021-05-25T15:49:08.489470",
                "name": "HTTP_custom_apps",
                "app_details": [
                  {
                    "name": "custom http app",
                    "uuid_url": "F1X8BT5WSq2wLeccDYe7BA"
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Details about an application in an application category.",
                "type": "object",
                "required": [
                  "app_details",
                  "description",
                  "color_hex_code",
                  "uuid_url",
                  "name"
                ],
                "properties": {
                  "app_details": {
                    "description": "Contains detailed application data for the this application category.",
                    "minItems": 0,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Details about an application in an application category.",
                      "type": "object",
                      "required": [
                        "name",
                        "uuid_url"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the application.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "uuid_url": {
                          "description": "A unique identifier for the application.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/app-category-details.yaml"
                      }
                    }
                  },
                  "color_hex_code": {
                    "description": "The display color for the application category.",
                    "example": "{{color_hex_code}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking this object's creation.",
                    "example": "{{created_at}}",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the application category. Specify `null` if you want to provide this later.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking this object's last modification. If the object wasn't modified since first being created, the value matches `created_at`.",
                    "example": "{{modified_at}}",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "name": {
                    "description": "A display label for the application category.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource_uri": {
                    "description": "Specifies the location of the application category.",
                    "example": "{{resource_uri}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "uuid_url": {
                    "description": "A unique identifier for the application category.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/app-category.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "color_hex_code": null,
                  "created_at": "2021-05-25T15:40:47.920319",
                  "description": "DB app category",
                  "modified_at": "2021-05-25T15:40:47.920330",
                  "name": "DB_apps",
                  "resource_uri": "/api/v1/appcategories/d01cd4a2-efb7-47ae-9d7d-5f0ea6899c4b",
                  "uuid_url": "iNSex9QrQnCljLXHk5FHbQ",
                  "app_details": []
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Details about an application in an application category.",
                  "type": "object",
                  "required": [
                    "app_details",
                    "description",
                    "color_hex_code",
                    "uuid_url",
                    "name"
                  ],
                  "properties": {
                    "app_details": {
                      "description": "Contains detailed application data for the this application category.",
                      "minItems": 0,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Details about an application in an application category.",
                        "type": "object",
                        "required": [
                          "name",
                          "uuid_url"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the application.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the application.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/app-category-details.yaml"
                        }
                      }
                    },
                    "color_hex_code": {
                      "description": "The display color for the application category.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking this object's creation.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the application category. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking this object's last modification. If the object wasn't modified since first being created, the value matches `created_at`.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "name": {
                      "description": "A display label for the application category.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "description": "Specifies the location of the application category.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application category.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/app-category.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Removes an application category from your Enterprise Application Access product.",
        "operationId": "delete-app-category",
        "summary": "Delete an application category",
        "tags": [
          "Application categories"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-app-category"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application category.",
          "example": "{{appCategoryId}}",
          "in": "path",
          "name": "appCategoryId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/appCategoryId-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/appdirectories": {
      "post": {
        "description": "Creates or deletes a set of application and directories.",
        "operationId": "post-app-directory",
        "summary": "Create or delete application directories",
        "tags": [
          "Application directories"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-app-directory"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "data": [
                  {
                    "apps": [
                      "3JEFvcNxRKCoQk-al9PAZw"
                    ],
                    "directories": [
                      {
                        "enable_mfa": null,
                        "uuid_url": "gKP_FhvmSFaomjpNaR7Z9Q"
                      }
                    ]
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Creates an application directory.",
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "description": "Application directory details.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/createAppDirectory.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "enable_mfa": "inherit",
                  "resource": "appdirectories",
                  "uuid_url": "flaeNl3wRfmjzvUBUVJsgw",
                  "app": {
                    "app_uuid_url": "n4o8-XC2QUq6WMbDjjpl7w",
                    "name": "SaaS App"
                  },
                  "directory": {
                    "directory_uuid_url": "DMzkC7IvTkiLiRN6cGWxMw",
                    "name": "Cloud Directory"
                  },
                  "resource_uri": {
                    "apps": "/api/v1/apps/n4o8-XC2QUq6WMbDjjpl7w",
                    "directories": "/api/v1/directories/DMzkC7IvTkiLiRN6cGWxMw",
                    "href": "/api/v1/appdirectories/flaeNl3wRfmjzvUBUVJsgw"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Configuration settings for an application directory.",
                  "type": "object",
                  "required": [
                    "app",
                    "directory",
                    "enable_mfa",
                    "resource",
                    "resource_uri",
                    "uuid_url"
                  ],
                  "properties": {
                    "app": {
                      "additionalProperties": false,
                      "description": "Specifies the application for the application directory.",
                      "type": "object",
                      "required": [
                        "app_uuid_url",
                        "name"
                      ],
                      "properties": {
                        "app_uuid_url": {
                          "description": "The application UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The application name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "directory": {
                      "additionalProperties": false,
                      "description": "Specifies the directory for the application directory.",
                      "type": "object",
                      "required": [
                        "directory_uuid_url",
                        "name"
                      ],
                      "properties": {
                        "directory_uuid_url": {
                          "description": "The directory UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The directory name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "enable_mfa": {
                      "description": "Enables multifactor authentication. Either `enable` or use to `inherit` to use the IDP's MFA settings.",
                      "type": "string",
                      "enum": [
                        "inherit",
                        "enable"
                      ]
                    },
                    "resource": {
                      "description": "The type of resource.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of resources for the application directory.",
                      "type": "object",
                      "required": [
                        "apps",
                        "directories",
                        "href"
                      ],
                      "properties": {
                        "apps": {
                          "description": "The application resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "directories": {
                          "description": "The directory resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The href resource URI.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application directory.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/appDirectory.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "Set this query parameter to `DELETE` for a `POST` request when you want the resource removed.",
            "example": "{{method}}",
            "in": "query",
            "name": "method",
            "schema": {
              "example": "DELETE",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/method-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists your application directories.",
        "operationId": "get-app-directories",
        "summary": "List application directories",
        "tags": [
          "Application directories"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-directories"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": "?limit=20&offset=20",
                    "offset": 0,
                    "previous": null,
                    "total_count": 209
                  },
                  "objects": [
                    {
                      "enable_mfa": "inherit",
                      "resource": "appdirectories",
                      "uuid_url": "flaeNl3wRfmjzvUBUVJsgw",
                      "app": {
                        "app_uuid_url": "n4o8-XC2QUq6WMbDjjpl7w",
                        "name": "SaaS App"
                      },
                      "directory": {
                        "directory_uuid_url": "DMzkC7IvTkiLiRN6cGWxMw",
                        "name": "Cloud Directory"
                      },
                      "resource_uri": {
                        "apps": "/api/v1/apps/n4o8-XC2QUq6WMbDjjpl7w",
                        "directories": "/api/v1/directories/DMzkC7IvTkiLiRN6cGWxMw",
                        "href": "/api/v1/appdirectories/flaeNl3wRfmjzvUBUVJsgw"
                      }
                    },
                    {
                      "enable_mfa": "inherit",
                      "resource": "appdirectories",
                      "uuid_url": "2Xq3HJhKS9Ke4_BVH57i-Q",
                      "app": {
                        "app_uuid_url": "DSany6qrSbKwgtks9z8SFQ",
                        "name": "Saleforce"
                      },
                      "directory": {
                        "directory_uuid_url": "DMzkC7IvTkiLiRN6cGWxMw",
                        "name": "New York"
                      },
                      "resource_uri": {
                        "apps": "/api/v1/apps/DSany6qrSbKwgtks9z8SFQ",
                        "directories": "/api/v1/directories/DMzkC7IvTkiLiRN6cGWxMw",
                        "href": "/api/v1/appdirectories/2Xq3HJhKS9Ke4_BVH57i-Q"
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "List of Enterprise Access Application Directories.",
                  "type": "object",
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "type": "object",
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "Application directory details.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Configuration settings for an application directory.",
                        "type": "object",
                        "required": [
                          "resource",
                          "app",
                          "enable_mfa",
                          "uuid_url",
                          "directory",
                          "resource_uri"
                        ],
                        "properties": {
                          "app": {
                            "additionalProperties": false,
                            "description": "Specifies the application for the application directory.",
                            "type": "object",
                            "required": [
                              "name",
                              "app_uuid_url"
                            ],
                            "properties": {
                              "app_uuid_url": {
                                "description": "The application UUID URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "name": {
                                "description": "The application name.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "directory": {
                            "additionalProperties": false,
                            "description": "Specifies the directory for the application directory.",
                            "type": "object",
                            "required": [
                              "directory_uuid_url",
                              "name"
                            ],
                            "properties": {
                              "directory_uuid_url": {
                                "description": "The unique directory UUID URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "name": {
                                "description": "The directory name.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "enable_mfa": {
                            "description": "Enables multifactor authentication. Either `enable` or use to `inherit` to use the IDP's MFA settings.",
                            "type": "string",
                            "enum": [
                              "inherit",
                              "enable"
                            ]
                          },
                          "resource": {
                            "description": "The type of resource.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource_uri": {
                            "additionalProperties": false,
                            "description": "Specifies the location of resources for the application directory.",
                            "type": "object",
                            "required": [
                              "directories",
                              "href",
                              "apps"
                            ],
                            "properties": {
                              "apps": {
                                "description": "The application resource URI.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "directories": {
                                "description": "The directory resource URI.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "href": {
                                "description": "The href resource URI.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "uuid_url": {
                            "description": "Locates the application directory's resources.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/app-directory.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/appDirectories.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/mgmt-pop/appdirectories/{appDirectoryId}": {
      "get": {
        "description": "Get details for a specific application directory.",
        "operationId": "get-app-directory",
        "summary": "Get an application directory",
        "tags": [
          "Application directories"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-directory"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "enable_mfa": "inherit",
                  "resource": "appdirectories",
                  "uuid_url": "flaeNl3wRfmjzvUBUVJsgw",
                  "app": {
                    "app_uuid_url": "n4o8-XC2QUq6WMbDjjpl7w",
                    "name": "SaaS App"
                  },
                  "directory": {
                    "directory_uuid_url": "DMzkC7IvTkiLiRN6cGWxMw",
                    "name": "Cloud Directory"
                  },
                  "resource_uri": {
                    "apps": "/api/v1/apps/n4o8-XC2QUq6WMbDjjpl7w",
                    "directories": "/api/v1/directories/DMzkC7IvTkiLiRN6cGWxMw",
                    "href": "/api/v1/appdirectories/flaeNl3wRfmjzvUBUVJsgw"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Configuration settings for an application directory.",
                  "type": "object",
                  "required": [
                    "app",
                    "directory",
                    "enable_mfa",
                    "resource",
                    "resource_uri",
                    "uuid_url"
                  ],
                  "properties": {
                    "app": {
                      "additionalProperties": false,
                      "description": "Specifies the application for the application directory.",
                      "type": "object",
                      "required": [
                        "app_uuid_url",
                        "name"
                      ],
                      "properties": {
                        "app_uuid_url": {
                          "description": "The application UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The application name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "directory": {
                      "additionalProperties": false,
                      "description": "Specifies the directory for the application directory.",
                      "type": "object",
                      "required": [
                        "directory_uuid_url",
                        "name"
                      ],
                      "properties": {
                        "directory_uuid_url": {
                          "description": "The directory UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The directory name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "enable_mfa": {
                      "description": "Enables multifactor authentication. Either `enable` or use to `inherit` to use the IDP's MFA settings.",
                      "type": "string",
                      "enum": [
                        "inherit",
                        "enable"
                      ]
                    },
                    "resource": {
                      "description": "The type of resource.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of resources for the application directory.",
                      "type": "object",
                      "required": [
                        "apps",
                        "directories",
                        "href"
                      ],
                      "properties": {
                        "apps": {
                          "description": "The application resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "directories": {
                          "description": "The directory resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The href resource URI.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application directory.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/appDirectory.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application directory.",
          "example": "{{appDirectoryId}}",
          "in": "path",
          "name": "appDirectoryId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/appDirectoryId-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/appgroups": {
      "post": {
        "description": "Assigns one or more directory groups to one or more applications.",
        "operationId": "post-assign-app-groups",
        "summary": "Assign directory groups to applications",
        "tags": [
          "Application groups"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-assign-app-groups"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "data": [
                  {
                    "apps": [
                      "Bl3KO_RJSYGiPap3sYvFyw"
                    ],
                    "groups": [
                      {
                        "enable_mfa": "enable",
                        "uuid_url": "zueKU3XmTsm9jGw7Rsqd0w"
                      }
                    ]
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Properties for assigning applications to directory groups.",
                "type": "object",
                "required": [
                  "data"
                ],
                "properties": {
                  "data": {
                    "description": "Application directory details.",
                    "minItems": 2,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "apps",
                        "groups"
                      ],
                      "properties": {
                        "apps": {
                          "description": "The application ID to assign to a group.",
                          "minItems": 1,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "groups": {
                          "description": "The group ID and MFA settings to assign to the application.",
                          "minItems": 1,
                          "type": "array",
                          "items": {
                            "additionalProperties": false,
                            "type": "object",
                            "properties": {
                              "enable_mfa": {
                                "description": "Enables multifactor authentication. Either `enable` or use `inherit` to use the IDP's MFA settings.",
                                "type": "string",
                                "enum": [
                                  "enable",
                                  "inherit"
                                ]
                              },
                              "uuid_url": {
                                "description": "A unique identifier for the application rewrite group.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/assignAppDirectory.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The response reflects the app group assignment.",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Configuration settings for an application rewrite group.",
                  "type": "object",
                  "required": [
                    "app",
                    "enable_mfa",
                    "group",
                    "resource",
                    "resource_uri",
                    "uuid_url"
                  ],
                  "properties": {
                    "app": {
                      "additionalProperties": false,
                      "description": "Specifies the application for the group.",
                      "type": "object",
                      "required": [
                        "app_uuid_url",
                        "name"
                      ],
                      "properties": {
                        "app_uuid_url": {
                          "description": "The application UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The application name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "enable_mfa": {
                      "description": "Enables multifactor authentication. Either `enable` or use to `inherit` to use the IDP's MFA settings.",
                      "type": "string",
                      "enum": [
                        "inherit",
                        "enable"
                      ]
                    },
                    "group": {
                      "additionalProperties": false,
                      "description": "Specifies the directory resources assigned to the group.",
                      "type": "object",
                      "required": [
                        "dir_name",
                        "dir_uuid_url",
                        "group_uuid_url",
                        "name"
                      ],
                      "properties": {
                        "dir_name": {
                          "description": "The directory name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "dir_uuid_url": {
                          "description": "The directory UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "group_uuid_url": {
                          "description": "The application group UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The IDP name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "resource": {
                      "description": "The type of resource.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of resources for the application rewrite group.",
                      "type": "object",
                      "required": [
                        "apps",
                        "groups",
                        "href"
                      ],
                      "properties": {
                        "apps": {
                          "description": "The application resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "groups": {
                          "description": "The groups resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The href resource URI.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application rewrite group.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/assignAppGroup.yaml"
                  }
                },
                "example": [
                  {
                    "app": "Bl3KO_RJSYGiPap3sYvFyw",
                    "enable_mfa": "inherit",
                    "group": "196YoFHhQa-MaQPEIsIF5A",
                    "uuid_url": "QxzQAeHNQQWuRPxZ23LLfQ",
                    "resource_uri": {
                      "apps": "/api/v1/apps/Bl3KO_RJSYGiPap3sYvFyw",
                      "groups": "/api/v1/groups/196YoFHhQa-MaQPEIsIF5A",
                      "href": "/api/v1/appgroups/QxzQAeHNQQWuRPxZ23LLfQ"
                    }
                  },
                  {
                    "app": "Bl3KO_RJSYGiPap3sYvFyw",
                    "enable_mfa": "inherit",
                    "group": "zueKU3XmTsm9jGw7Rsqd0w",
                    "uuid_url": "sM9aYErkSYO_gVCV86dqGg",
                    "resource_uri": {
                      "apps": "/api/v1/apps/Bl3KO_RJSYGiPap3sYvFyw",
                      "groups": "/api/v1/groups/zueKU3XmTsm9jGw7Rsqd0w",
                      "href": "/api/v1/appgroups/sM9aYErkSYO_gVCV86dqGg"
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists your application groups.",
        "operationId": "get-app-groups",
        "summary": "List application rewrite groups",
        "tags": [
          "Application rewrite groups"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-groups"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 1491
                  },
                  "objects": [
                    {
                      "enable_mfa": "inherit",
                      "uuid_url": "1tLd5eKaQd-v14FEeSDEqA",
                      "app": {
                        "app_uuid_url": "n4o8-XC2QUq6WMbDjjpl7w",
                        "name": "SaaSAppweb"
                      },
                      "group": {
                        "dir_name": "Cloud Directory",
                        "dir_uuid_url": "DMzkC7IvTkiLiRN6cGWxMw",
                        "group_uuid_url": "aITPkYE1QRipnk5S4TOT1w",
                        "name": "Admins"
                      },
                      "resource_uri": {
                        "apps": "/api/v1/apps/n4o8-XC2QUq6WMbDjjpl7w",
                        "groups": "/api/v1/groups/aITPkYE1QRipnk5S4TOT1w",
                        "href": "/api/v1/appgroups/1tLd5eKaQd-v14FEeSDEqA"
                      }
                    },
                    {
                      "enable_mfa": "inherit",
                      "uuid_url": "ZlB8MTbXRl6ck5DHGiJYvw",
                      "app": {
                        "app_uuid_url": "n4o8-XC2QUq6WMbDjjpl7w",
                        "name": "SaaSAppDB"
                      },
                      "group": {
                        "dir_name": "Cloud Directory",
                        "dir_uuid_url": "DMzkC7IvTkiLiRN6cGWxMw",
                        "group_uuid_url": "rHB7BUZXSvab74JrFFcT7A",
                        "name": "Users"
                      },
                      "resource_uri": {
                        "apps": "/api/v1/apps/n4o8-XC2QUq6WMbDjjpl7w",
                        "groups": "/api/v1/groups/rHB7BUZXSvab74JrFFcT7A",
                        "href": "/api/v1/appgroups/ZlB8MTbXRl6ck5DHGiJYvw"
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Configuration settings for an application rewrite group.",
                  "type": "object",
                  "required": [
                    "app",
                    "enable_mfa",
                    "group",
                    "resource",
                    "resource_uri",
                    "uuid_url"
                  ],
                  "properties": {
                    "app": {
                      "additionalProperties": false,
                      "description": "Specifies the application for the group.",
                      "type": "object",
                      "required": [
                        "app_uuid_url",
                        "name"
                      ],
                      "properties": {
                        "app_uuid_url": {
                          "description": "The application UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The application name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "enable_mfa": {
                      "description": "Enables multifactor authentication. Either `enable` or use to `inherit` to use the IDP's MFA settings.",
                      "type": "string",
                      "enum": [
                        "inherit",
                        "enable"
                      ]
                    },
                    "group": {
                      "additionalProperties": false,
                      "description": "Specifies the directory resources assigned to the group.",
                      "type": "object",
                      "required": [
                        "dir_name",
                        "dir_uuid_url",
                        "group_uuid_url",
                        "name"
                      ],
                      "properties": {
                        "dir_name": {
                          "description": "The directory name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "dir_uuid_url": {
                          "description": "The directory UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "group_uuid_url": {
                          "description": "The application group UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The IDP name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "resource": {
                      "description": "The type of resource.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of resources for the application rewrite group.",
                      "type": "object",
                      "required": [
                        "apps",
                        "groups",
                        "href"
                      ],
                      "properties": {
                        "apps": {
                          "description": "The application resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "groups": {
                          "description": "The groups resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The href resource URI.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application rewrite group.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/appGroup.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "The Akamai contract identifier for your Enterprise Application Access product.",
          "example": "{{contractId}}",
          "in": "query",
          "name": "contractId",
          "required": true,
          "schema": {
            "example": "F-EMGSGV",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/contractId-query.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/appgroups/{appGroupId}": {
      "get": {
        "description": "Get details for an application group.",
        "operationId": "get-app-group",
        "summary": "Get an application group",
        "tags": [
          "Application groups"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-group"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "enable_mfa": "inherit",
                  "uuid_url": "MQLllWZzRWm4EhAFnyCt8w",
                  "app": {
                    "app_uuid_url": "DSany6qrSbKwgtks9z8SFQ",
                    "name": "Saleforce"
                  },
                  "group": {
                    "dir_name": "Pelicancloud",
                    "dir_uuid_url": "z2WI-DS9RAKWj4ecsYI3BA",
                    "group_uuid_url": "umtuOBTPRGSj8bSbDgJ7ng",
                    "name": "SP2Group235"
                  },
                  "resource_uri": {
                    "apps": "/api/v1/apps/DSany6qrSbKwgtks9z8SFQ",
                    "groups": "/api/v1/groups/umtuOBTPRGSj8bSbDgJ7ng",
                    "href": "/api/v1/appgroups/MQLllWZzRWm4EhAFnyCt8w"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Configuration settings for an application rewrite group.",
                  "type": "object",
                  "required": [
                    "app",
                    "enable_mfa",
                    "group",
                    "resource",
                    "resource_uri",
                    "uuid_url"
                  ],
                  "properties": {
                    "app": {
                      "additionalProperties": false,
                      "description": "Specifies the application for the group.",
                      "type": "object",
                      "required": [
                        "app_uuid_url",
                        "name"
                      ],
                      "properties": {
                        "app_uuid_url": {
                          "description": "The application UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The application name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "enable_mfa": {
                      "description": "Enables multifactor authentication. Either `enable` or use to `inherit` to use the IDP's MFA settings.",
                      "type": "string",
                      "enum": [
                        "inherit",
                        "enable"
                      ]
                    },
                    "group": {
                      "additionalProperties": false,
                      "description": "Specifies the directory resources assigned to the group.",
                      "type": "object",
                      "required": [
                        "dir_name",
                        "dir_uuid_url",
                        "group_uuid_url",
                        "name"
                      ],
                      "properties": {
                        "dir_name": {
                          "description": "The directory name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "dir_uuid_url": {
                          "description": "The directory UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "group_uuid_url": {
                          "description": "The application group UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The IDP name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "resource": {
                      "description": "The type of resource.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of resources for the application rewrite group.",
                      "type": "object",
                      "required": [
                        "apps",
                        "groups",
                        "href"
                      ],
                      "properties": {
                        "apps": {
                          "description": "The application resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "groups": {
                          "description": "The groups resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The href resource URI.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application rewrite group.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/appGroup.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application rewrite group.",
          "example": "{{appGroupId}}",
          "in": "path",
          "name": "appGroupId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/appGroupId-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/appidp": {
      "post": {
        "description": "Assign an existing IDP to an application. Overwrites any existing IDP assigned to the application.",
        "operationId": "post-app-idp",
        "summary": "Assign an IDP to an application",
        "tags": [
          "Application IDPs"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-app-idp"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "app": "kTiWFtM0QtOPGT6rtAT2cw",
                "idp": "r03ZZ6AcRReHa-Nn2BHSIw"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Enterprise Access Application IDP creation properties.",
                "type": "object",
                "required": [
                  "app",
                  "idp"
                ],
                "properties": {
                  "app": {
                    "description": "The application's uuid_url.",
                    "example": "{{app}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "idp": {
                    "description": "The Identity Provider's uuid_url.",
                    "example": "{{idp}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/createAppIdp.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "enable_mfa": "inherit",
                  "resource": "appidp",
                  "uuid_url": "CVxouRl2RlCLUFuMylSg8g",
                  "app": {
                    "app_uuid_url": "Dtt5_YNQRmGpa75yWMrBxg",
                    "name": "Salesforce-QA"
                  },
                  "idp": {
                    "idp_uuid_url": "fsGXD1aYQyCPjqi48kK6nQ",
                    "name": "SecPerimeter-SALM-IDP"
                  },
                  "resource_uri": {
                    "apps": "/api/v1/apps/Dtt5_YNQRmGpa75yWMrBxg",
                    "href": "/api/v1/appidp/CVxouRl2RlCLUFuMylSg8g",
                    "idp": "/api/v1/idp/fsGXD1aYQyCPjqi48kK6nQ"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Configuration settings for an application identity provider (IDP).",
                  "type": "object",
                  "required": [
                    "app",
                    "enable_mfa",
                    "idp",
                    "resource",
                    "resource_uri",
                    "uuid_url"
                  ],
                  "properties": {
                    "app": {
                      "additionalProperties": false,
                      "description": "Specifies the application for the application IDP.",
                      "type": "object",
                      "required": [
                        "app_uuid_url",
                        "name"
                      ],
                      "properties": {
                        "app_uuid_url": {
                          "description": "The application UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The application name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "enable_mfa": {
                      "description": "Enables multifactor authentication.",
                      "type": "boolean"
                    },
                    "idp": {
                      "additionalProperties": false,
                      "description": "Specifies the IDP for the application IDP.",
                      "type": "object",
                      "required": [
                        "idp_uuid_url",
                        "name"
                      ],
                      "properties": {
                        "idp_uuid_url": {
                          "description": "The Identity Provider UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The Identity Provider name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "resource": {
                      "description": "The type of resource.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of resources for the application IDP.",
                      "type": "object",
                      "required": [
                        "apps",
                        "href",
                        "idp"
                      ],
                      "properties": {
                        "apps": {
                          "description": "The application resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The href resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "idp": {
                          "description": "The IDP resource URI.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application IDP.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/appIdp.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists your application IDPs.",
        "operationId": "get-app-idps",
        "summary": "List application IDPs",
        "tags": [
          "Application IDPs"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-idps"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 5,
                    "next": "?limit=5&offset=10",
                    "offset": 5,
                    "previous": "?limit=5&offset=0",
                    "total_count": 126
                  },
                  "objects": [
                    {
                      "enable_mfa": "inherit",
                      "resource": "appidp",
                      "uuid_url": "HQZpYw1nRlucFcQLvLG2yQ",
                      "app": {
                        "app_uuid_url": "1eujJKCSSuOEkBy5Q7hEAw",
                        "name": "JIRA-SAML"
                      },
                      "idp": {
                        "idp_uuid_url": "lMEgMEgeTxKlRaaP1u5kLg",
                        "name": "Company-SAML-IDP"
                      },
                      "resource_uri": {
                        "apps": "/api/v1/apps/1eujJKCSSuOEkBy5Q7hEAw",
                        "href": "/api/v1/appidp/HQZpYw1nRlucFcQLvLG2yQ",
                        "idp": "/api/v1/idp/lMEgMEgeTxKlRaaP1u5kLg"
                      }
                    },
                    {
                      "enable_mfa": "inherit",
                      "resource": "appidp",
                      "uuid_url": "JCOqMBfWTR-M_kXcd8y1Cg",
                      "app": {
                        "app_uuid_url": "vgn_sEBdQ6arcR-D4tZW1Q",
                        "name": "This Company HTTP App"
                      },
                      "idp": {
                        "idp_uuid_url": "fsGXD1aYQyCPjqi48kK6nQ",
                        "name": "Company-SALM-IDP"
                      },
                      "resource_uri": {
                        "apps": "/api/v1/apps/vgn_sEBdQ6arcR-D4tZW1Q",
                        "href": "/api/v1/appidp/JCOqMBfWTR-M_kXcd8y1Cg",
                        "idp": "/api/v1/idp/fsGXD1aYQyCPjqi48kK6nQ"
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Configuration settings for an application identity provider (IDP).",
                  "type": "object",
                  "required": [
                    "app",
                    "enable_mfa",
                    "idp",
                    "resource",
                    "resource_uri",
                    "uuid_url"
                  ],
                  "properties": {
                    "app": {
                      "additionalProperties": false,
                      "description": "Specifies the application for the application IDP.",
                      "type": "object",
                      "required": [
                        "app_uuid_url",
                        "name"
                      ],
                      "properties": {
                        "app_uuid_url": {
                          "description": "The application UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The application name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "enable_mfa": {
                      "description": "Enables multifactor authentication.",
                      "type": "boolean"
                    },
                    "idp": {
                      "additionalProperties": false,
                      "description": "Specifies the IDP for the application IDP.",
                      "type": "object",
                      "required": [
                        "idp_uuid_url",
                        "name"
                      ],
                      "properties": {
                        "idp_uuid_url": {
                          "description": "The Identity Provider UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The Identity Provider name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "resource": {
                      "description": "The type of resource.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of resources for the application IDP.",
                      "type": "object",
                      "required": [
                        "apps",
                        "href",
                        "idp"
                      ],
                      "properties": {
                        "apps": {
                          "description": "The application resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The href resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "idp": {
                          "description": "The IDP resource URI.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application IDP.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/appIdp.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/mgmt-pop/appidp/{appIdpId}": {
      "get": {
        "description": "Get details for a specific application IDP.",
        "operationId": "get-app-idp",
        "summary": "Get an application IDP",
        "tags": [
          "Application IDPs"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-idp"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "enable_mfa": "inherit",
                  "resource": "appidp",
                  "uuid_url": "CVxouRl2RlCLUFuMylSg8g",
                  "app": {
                    "app_uuid_url": "Dtt5_YNQRmGpa75yWMrBxg",
                    "name": "Salesforce-QA"
                  },
                  "idp": {
                    "idp_uuid_url": "fsGXD1aYQyCPjqi48kK6nQ",
                    "name": "SecPerimeter-SALM-IDP"
                  },
                  "resource_uri": {
                    "apps": "/api/v1/apps/Dtt5_YNQRmGpa75yWMrBxg",
                    "href": "/api/v1/appidp/CVxouRl2RlCLUFuMylSg8g",
                    "idp": "/api/v1/idp/fsGXD1aYQyCPjqi48kK6nQ"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Configuration settings for an application identity provider (IDP).",
                  "type": "object",
                  "required": [
                    "app",
                    "enable_mfa",
                    "idp",
                    "resource",
                    "resource_uri",
                    "uuid_url"
                  ],
                  "properties": {
                    "app": {
                      "additionalProperties": false,
                      "description": "Specifies the application for the application IDP.",
                      "type": "object",
                      "required": [
                        "app_uuid_url",
                        "name"
                      ],
                      "properties": {
                        "app_uuid_url": {
                          "description": "The application UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The application name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "enable_mfa": {
                      "description": "Enables multifactor authentication.",
                      "type": "boolean"
                    },
                    "idp": {
                      "additionalProperties": false,
                      "description": "Specifies the IDP for the application IDP.",
                      "type": "object",
                      "required": [
                        "idp_uuid_url",
                        "name"
                      ],
                      "properties": {
                        "idp_uuid_url": {
                          "description": "The Identity Provider UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The Identity Provider name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "resource": {
                      "description": "The type of resource.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of resources for the application IDP.",
                      "type": "object",
                      "required": [
                        "apps",
                        "href",
                        "idp"
                      ],
                      "properties": {
                        "apps": {
                          "description": "The application resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The href resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "idp": {
                          "description": "The IDP resource URI.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application IDP.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/appIdp.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Removes the IDP assigned to your application.",
        "operationId": "delete-app-idp",
        "summary": "Delete an application IDP",
        "tags": [
          "Application IDPs"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-app-idp"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application IDP.",
          "example": "{{appIdpId}}",
          "in": "path",
          "name": "appIdpId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/appIdpId-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/application-reports/ops/query": {
      "get": {
        "description": "Lists an audit log report with optional custom filters.",
        "operationId": "get-application-reports",
        "summary": "List application audit logs reports",
        "tags": [
          "Application audit logs"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-application-reports"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "data": [
                    {
                      "app": "example-ssh-1.stage.akamai-access.com",
                      "browser": "Chrome 88.0",
                      "cc": "India",
                      "di": "1a6e4f414c9d7604a829f83e1f469527079fa1464b5b41203d8e398744d38d63",
                      "os": "Mac OS X 10.15",
                      "rscd": "302",
                      "state": "Karnataka",
                      "ts": 1613809915306,
                      "uid": "example@akamai.com",
                      "uip": "192.0.2.125",
                      "ral": []
                    },
                    {
                      "app": "example-ssh-1.stage.akamai-access.com",
                      "browser": "Firefox 85.0",
                      "cc": "India",
                      "di": "1a6e4f414c9d7604a829f83e1f469527079fa1464b5b41203d8e398744d38d63",
                      "os": "Mac OS X 10.15",
                      "rscd": "302",
                      "state": "Andhra Pradesh",
                      "ts": 1613462468839,
                      "uid": "example@akamai.com",
                      "uip": "192.0.2.211",
                      "ral": []
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access audit log data.",
                  "type": "object",
                  "properties": {
                    "app": {
                      "description": "The name of the application a user accessed.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "browser": {
                      "description": "The name of the user's browser.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "os": {
                      "description": "The name of the user's operating system.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "state": {
                      "description": "The name of the user's location.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "ts": {
                      "description": "The epoch timestamp marking the application audit log's creation.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "uid": {
                      "description": "The user's email address.",
                      "format": "email",
                      "type": "string"
                    },
                    "uip": {
                      "description": "The IP address of the user's device.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/auditlogs.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Hostname of the SSH or RDP type application.",
            "example": "{{app}}",
            "in": "query",
            "name": "app",
            "schema": {
              "example": "example-ssh-1.stage.akamai-access.com,example-tnl-ssh-1.stage.akamai-access.com,ZgcTQNq4SPeHuOpGUakpRA.stage.akamai-access.com,example-ssh2-plog.stage.akamai-access.com,example-tnl1.stage.akamai-access.com",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/app-query.yaml"
            }
          },
          {
            "description": "Start epoch timestamp of the report duration.",
            "example": "{{start}}",
            "in": "query",
            "name": "start",
            "required": true,
            "schema": {
              "example": 1633067800000,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/start-query.yaml"
            }
          },
          {
            "description": "End epoch timestamp of the report duration.",
            "example": "{{end}}",
            "in": "query",
            "name": "end",
            "required": true,
            "schema": {
              "example": 1633068000000,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/end-query.yaml"
            }
          },
          {
            "description": "The [tz database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) timezone of the requested `start` and `end` parameters.",
            "example": "{{tz}}",
            "in": "query",
            "name": "tz",
            "required": true,
            "schema": {
              "example": "Asia/Calcutta",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/tz-query.yaml"
            }
          },
          {
            "description": "The upper limit of records returned by this operation.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "required": true,
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/limit-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/mgmt-pop/apps": {
      "post": {
        "description": "Creates a new application. After successful creation, additional steps are needed to deploy the application, depending on the application type. Refer to [Application creation workflow](https://techdocs.akamai.com/eaa-api/reference/application-creation-workflow). ",
        "operationId": "post-app",
        "summary": "Create an application",
        "tags": [
          "Applications"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-app"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "app_profile": 7,
                "app_type": 1,
                "name": "Example Application"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Enterprise Access Application creation properties.",
                "type": "object",
                "required": [
                  "app_type",
                  "name",
                  "app_profile"
                ],
                "properties": {
                  "agents": {
                    "description": "EAA application connector details.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Specifies the target connectors for deploying the application configuration.",
                      "type": "object",
                      "required": [
                        "compatible",
                        "name",
                        "uuid_url"
                      ],
                      "properties": {
                        "compatible": {
                          "description": "Whether the target connector is compatible with the application configuration.",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "The name of the connector.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "uuid_url": {
                          "description": "The UUID URL of the connector.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "app_category": {
                    "additionalProperties": false,
                    "description": "Specifies the category the application belongs to.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the category.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "uuid_url": {
                        "description": "The UUID of the category.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "app_deployed": {
                    "description": "Whether the application configuration is deployed.",
                    "example": "{{app_deployed}}",
                    "type": "boolean"
                  },
                  "app_logo": {
                    "description": "A URL identifying the application configuration's logo icon.",
                    "example": "{{app_logo}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "app_operational": {
                    "default": 1,
                    "description": "The operational status of the application configuration. Either `1` for No, `2` for Pending, or `3` for Okay.",
                    "example": "{{app_operational}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3
                    ]
                  },
                  "app_profile": {
                    "default": 1,
                    "description": "The access application profile. Either `1` for HTTP, `2` for SharePoint, `3` for Jira, `4` for RDP, `5` for VNC, `6` for ssh, `7` for Jenkins, `8` for Confluence, or `9` for TCP.",
                    "example": "{{app_profile}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7,
                      8,
                      9
                    ]
                  },
                  "app_status": {
                    "default": 1,
                    "description": "The status of the application configuration. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, `5` for failed, `6` for cloud deployed, or `7` for connector deployed.",
                    "example": "{{app_status}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7
                    ]
                  },
                  "app_type": {
                    "description": "The type of application configuration. Either `1` for Enterprise Hosted, `2` for SAAS, `3` for Bookmark, `4` for Tunnel, or `5` for Enterprise Threat Protector.",
                    "example": "{{app_type}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ]
                  },
                  "auth_agent": {
                    "description": "The connector for the application.",
                    "example": "{{auth_agent}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "auth_enabled": {
                    "default": "true",
                    "description": "Enables authentication.",
                    "example": "{{auth_enabled}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "auth_type": {
                    "default": 1,
                    "description": "The type of authentication used. Either `1` for Cloud, `2` for Enterprise, or `3` for Third Party.",
                    "example": "{{auth_type}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3
                    ]
                  },
                  "bookmark_url": {
                    "description": "The Okta Bookmark app URL.",
                    "example": "{{bookmark_url}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "cert": {
                    "description": "A valid certificate string for front-end SSL connections. Used if you configure your domain as the external hostname. Specify `null` if you want to name it later.",
                    "example": "{{cert}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "client_app_mode": {
                    "default": 1,
                    "description": "The mode of client app. `1` for TCP or `2` for Tunnel.",
                    "example": "{{client_app_mode}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2
                    ]
                  },
                  "cname": {
                    "description": "The upstream URL for a CNAME redirect.",
                    "example": "{{cname}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking the application object's creation.",
                    "example": "{{created_at}}",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "data_agent": {
                    "description": "The data connector for the application.",
                    "example": "{{data_agent}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the application.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "directories": {
                    "description": "Application directory details.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Specifies the directory for validating user accounts.",
                      "type": "object",
                      "required": [
                        "type",
                        "name",
                        "user_count",
                        "uuid_url"
                      ],
                      "properties": {
                        "name": {
                          "description": "The name of the directory.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "type": {
                          "description": "The type of directory. Select `1` for EAA Cloud Directory, `2` for Active Directory, `3` for LDAP, or `4` for Active Directory LDS.",
                          "type": "string",
                          "enum": [
                            "1",
                            "2",
                            "3",
                            "4"
                          ]
                        },
                        "user_count": {
                          "description": "The total number of user accounts configured on the directory.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "uuid_url": {
                          "description": "The UUID URL of the directory.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "domain": {
                    "default": 1,
                    "description": "The type of access domain. Select `1` for custom or `2` for Akamai.",
                    "example": "{{domain}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2
                    ]
                  },
                  "domain_suffix": {
                    "description": "The domain suffix. For example, `.com`.",
                    "example": "{{domain_suffix}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "host": {
                    "description": "The external default hostname for the application.",
                    "example": "{{host}}",
                    "format": "hostname",
                    "type": "string"
                  },
                  "idp": {
                    "additionalProperties": false,
                    "description": "Specifies the identity provider (IDP) for authenticating user requests.",
                    "type": "object",
                    "properties": {
                      "client_cert_auth": {
                        "description": "Enables certificate-based authentication for the client.",
                        "type": "boolean"
                      },
                      "client_cert_user_param": {
                        "description": "Relevant Cert based parameters for client authentication.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "idp_id": {
                        "description": "The ID of the IDP configuration.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the IDP configuration.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "type": {
                        "default": 1,
                        "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, or `9` for Azure.",
                        "type": "integer",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6,
                          7,
                          8,
                          9
                        ]
                      }
                    }
                  },
                  "modified_at": {
                    "description": "Name of the user who most recently modified this application object. If the object wasn't modified since first being created, the value matches `createdAt`.",
                    "example": "{{modified_at}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the application configuration.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "oidc": {
                    "description": "Enables OpenID Connect (OIDC).",
                    "example": "{{oidc}}",
                    "type": "boolean"
                  },
                  "oidc_settings": {
                    "additionalProperties": false,
                    "description": "JSON settings to implement OIDC.",
                    "type": "object",
                    "required": [
                      "userinfo_endpoint",
                      "certs_uri",
                      "jwks_uri",
                      "check_session_iframe",
                      "token_endpoint",
                      "openid_metadata",
                      "end_session_endpoint",
                      "authorization_endpoint",
                      "discovery_url"
                    ],
                    "properties": {
                      "authorization_endpoint": {
                        "description": "The OIDC endpoint where end users authenticate and grant the client application consent to access their identity information.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "certs_uri": {
                        "description": "The URI of the relaying party's CA certificate.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "check_session_iframe": {
                        "description": "The iframe URL used to check session status.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "discovery_url": {
                        "description": "The OIDC endpoint the client uses to discover OpenID features and other provider endpoints.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "end_session_endpoint": {
                        "description": "The OIDC endpoint that triggers single sign out.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "jwks_uri": {
                        "description": "The publishing location of the JSON web keys (JWK). Used for both the open provider and the relaying party.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "openid_metadata": {
                        "description": "Metadata that describes the OIDC provider's configuration.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "token_endpoint": {
                        "description": "The OIDC endpoint that tokens and authenticates client application requests.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "userinfo_endpoint": {
                        "description": "The OIDC endpoint where the client sends requests for identity claims.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/app-oidc-settings.yaml"
                    }
                  },
                  "origin_host": {
                    "description": "The IP address or FQDN of the application origin server.",
                    "example": "{{origin_host}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "pop": {
                    "description": "The identifier for the target region to deploy the application.",
                    "example": "{{pop}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "popName": {
                    "description": "The target region to deploy the application. For example, `US-West` or `US-East`.",
                    "example": "{{popName}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "rdp_version": {
                    "description": "The version of remote desktop protocol (RDP).",
                    "example": "{{rdp_version}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource": {
                    "description": "Name of resource mapping to an entity or set of entities. For example, `apps`.",
                    "example": "{{resource}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource_status": {
                    "additionalProperties": false,
                    "description": "The most recent status of various application resources.",
                    "type": "object",
                    "required": [
                      "host_reachable",
                      "directories_status",
                      "cname_dns_status",
                      "data_agent_status",
                      "cert_status",
                      "host_dns_status",
                      "origin_host_status",
                      "dialin_server_status",
                      "pop_status",
                      "internal_host_status"
                    ],
                    "properties": {
                      "cert_status": {
                        "default": 1,
                        "description": "The certificate resource status. Either `1` for Not Added, `2` for Expired, `3` for Invalid CNAME, `4` for Invalid CA, `5` for No Private Key, `6` for Okay, or `7` for Invalid CA User Parameter.",
                        "type": "integer",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6,
                          7
                        ]
                      },
                      "cname_dns_status": {
                        "default": 1,
                        "description": "The CNAME DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Okay.",
                        "type": "integer",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5
                        ]
                      },
                      "data_agent_status": {
                        "default": 1,
                        "description": "The data agent resource status. Either `1` for Not Added, `2` for Not Installed, `3` for Not Approved, `4` for Not Reachable, `5` for Okay, or `6` for Not Compatible.",
                        "type": "integer",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6
                        ]
                      },
                      "dialin_server_status": {
                        "default": 1,
                        "description": "The dialin server resource status. Either `1` for Not Configured, `2` for Configured, `3` for Not Created, `4` for Not Resolved, and `5` for Okay.",
                        "type": "integer",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5
                        ]
                      },
                      "directories_status": {
                        "default": 1,
                        "description": "The directories resource status. Either `1` for Not Added, `2` for Added, `3` for No Connector, `4` for Pending, `5` for Not Reachable, or `6` for Okay.",
                        "type": "integer",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6
                        ]
                      },
                      "host_dns_status": {
                        "default": 1,
                        "description": "The host DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Not Created, `6` for Okay, or `7` for CNAME Mismatch.",
                        "type": "integer",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6,
                          7
                        ]
                      },
                      "host_reachable": {
                        "default": false,
                        "description": "Indicates whether the host is reachable.",
                        "type": "boolean"
                      },
                      "internal_host_status": {
                        "default": 1,
                        "description": "The internal host resource status. Either `1` for Not Configured or `2` for Okay.",
                        "type": "integer",
                        "enum": [
                          1,
                          2
                        ]
                      },
                      "origin_host_status": {
                        "default": 1,
                        "description": "The origin host resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Reachable, or `5` for Okay.",
                        "type": "integer",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5
                        ]
                      },
                      "pop_status": {
                        "default": 1,
                        "description": "The pop resource status. Either `1` for Not Configured) or `2` for Okay.",
                        "type": "integer",
                        "enum": [
                          1,
                          2
                        ]
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/app-resource-status.yaml"
                    }
                  },
                  "resource_uri": {
                    "additionalProperties": false,
                    "description": "Resource URIs for the application.",
                    "type": "object",
                    "required": [
                      "directories",
                      "groups",
                      "href",
                      "pop",
                      "services",
                      "sites"
                    ],
                    "properties": {
                      "directories": {
                        "description": "The URI location of an associated directory resource.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "groups": {
                        "description": "The URI location of an associated group resource.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "href": {
                        "description": "The URI location of an associated href resource.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "pop": {
                        "description": "The URI location of an associated pop resource.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "services": {
                        "description": "The URI location of an associated service resource.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "sites": {
                        "description": "The URI location of an associated site resource.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "saml": {
                    "description": "Enables SAML for the application.",
                    "example": "{{saml}}",
                    "type": "boolean"
                  },
                  "saml_settings": {
                    "description": "SAML configuration for an application.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "SAML configuration for an application.",
                      "type": "object",
                      "required": [
                        "sp",
                        "attrmap",
                        "idp",
                        "subject"
                      ],
                      "properties": {
                        "attrmap": {
                          "description": "SAML attribute mapping details.",
                          "minItems": 1,
                          "type": "array",
                          "uniqueItems": true,
                          "items": {
                            "additionalProperties": false,
                            "description": "Specifies mapped attributes for the SAML configuration.",
                            "type": "object",
                            "required": [
                              "name",
                              "fmt",
                              "src"
                            ],
                            "properties": {
                              "fmt": {
                                "description": "The name format of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "fname": {
                                "description": "The fname of the attribute.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "rule": {
                                "description": "The custom rule language for the attribute. ",
                                "minLength": 1,
                                "type": "string"
                              },
                              "src": {
                                "description": "The source of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "val": {
                                "description": "The value of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "idp": {
                          "additionalProperties": false,
                          "description": "Specifies identity provider (IDP) settings for the SAML configuration.",
                          "type": "object",
                          "required": [
                            "self_signed",
                            "ecp_resp_signature",
                            "slo_url",
                            "entity_id",
                            "resp_bind",
                            "sign_key",
                            "sign_cert",
                            "sign_algo",
                            "ecp_enable",
                            "metadata"
                          ],
                          "properties": {
                            "ecp_enable": {
                              "default": false,
                              "description": "Enables enhanced client or proxy (ECP).",
                              "type": "boolean"
                            },
                            "ecp_resp_signature": {
                              "default": false,
                              "description": "The ECP response signature.",
                              "type": "boolean"
                            },
                            "entity_id": {
                              "description": "The entity ID of the identity provider.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "metadata": {
                              "description": "Additional metadata for the service provider configuration. Specify `null` if you want to provide this later.",
                              "minLength": 1,
                              "nullable": true,
                              "type": "string"
                            },
                            "resp_bind": {
                              "default": "post",
                              "description": "The response binding. Set to `post`.",
                              "type": "string",
                              "enum": [
                                "post"
                              ]
                            },
                            "self_signed": {
                              "default": true,
                              "description": "Enables a self-signed certificate.",
                              "type": "boolean"
                            },
                            "sign_algo": {
                              "default": "SHA256",
                              "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                              "type": "string",
                              "enum": [
                                "SHA256",
                                "SHA1"
                              ]
                            },
                            "sign_cert": {
                              "description": "The signing certificate.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "sign_key": {
                              "description": "The signing key.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "slo_url": {
                              "description": "The single log-out URL.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        },
                        "sp": {
                          "additionalProperties": false,
                          "description": "Specifies service provider (SP) settings for the SAML configuration.",
                          "type": "object",
                          "required": [
                            "entity_id",
                            "acs_url",
                            "req_bind",
                            "default_relay_state",
                            "force_auth",
                            "req_verify",
                            "resp_encr",
                            "encr_cert",
                            "encr_algo"
                          ],
                          "properties": {
                            "acs_url": {
                              "description": "The single sign-on (ACS) URL.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "default_relay_state": {
                              "description": "The default relay state. Specify `null` if you want to provide this later.",
                              "minLength": 0,
                              "type": "string"
                            },
                            "dst_url": {
                              "description": "The destination URL.",
                              "minLength": 0,
                              "type": "string"
                            },
                            "encr_algo": {
                              "default": "aes256-cbc",
                              "description": "The response encryption algorithm. Either `aes256-cbc` or `aes128-cbc`.",
                              "type": "string",
                              "enum": [
                                "aes256-cbc",
                                "aes128-cbc"
                              ]
                            },
                            "encr_cert": {
                              "description": "The response encryption certificate.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "entity_id": {
                              "description": "The entity ID.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "force_auth": {
                              "default": false,
                              "description": "Forces encryption using the `httponly` flag in the session cookie.",
                              "type": "boolean"
                            },
                            "metadata": {
                              "description": "Additional metadata for the IDP configuration. Specify `null` if you want to provide this later.",
                              "minLength": 1,
                              "nullable": true,
                              "type": "string"
                            },
                            "req_bind": {
                              "default": "redirect",
                              "description": "The response binding. Either `redirect` or `post`.",
                              "type": "string",
                              "enum": [
                                "redirect",
                                "post"
                              ]
                            },
                            "req_verify": {
                              "default": false,
                              "description": "Enables request verification.",
                              "type": "boolean"
                            },
                            "resp_encr": {
                              "default": false,
                              "description": "Enables encryption on the responses.",
                              "type": "boolean"
                            },
                            "sign_cert": {
                              "description": "The request signing certificate.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "slo_bind": {
                              "default": "post",
                              "description": "The single log-out binding. Either `post` or `redirect`.",
                              "type": "string",
                              "enum": [
                                "post",
                                "redirect"
                              ]
                            },
                            "slo_req_verify": {
                              "default": true,
                              "description": "Enables single log-out request verification.",
                              "type": "boolean"
                            },
                            "slo_url": {
                              "description": "The single log-out URL.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        },
                        "subject": {
                          "additionalProperties": false,
                          "description": "Specifies the subject settings for the SAML configuration.",
                          "type": "object",
                          "required": [
                            "fmt",
                            "src"
                          ],
                          "properties": {
                            "fmt": {
                              "description": "The format for the `NameID` element of the subject. Either `email`, `persistent`, `unspecified`, or `transient`.",
                              "minLength": 1,
                              "type": "string",
                              "enum": [
                                "email",
                                "persistent",
                                "unspecified",
                                "transient"
                              ]
                            },
                            "rule": {
                              "description": "Processing rule for the subject. If omitted from requests, the API responds with a `null` value you can fill out later.",
                              "minLength": 1,
                              "nullable": true,
                              "type": "string"
                            },
                            "src": {
                              "description": "The source of the subject.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "val": {
                              "description": "The value of the subject.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/app-saml-settings.yaml"
                    }
                  },
                  "servers": {
                    "description": "EAA application server details.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Origin server details of the internal application within your network.",
                      "type": "object",
                      "required": [
                        "origin_protocol",
                        "name",
                        "orig_tls",
                        "origin_host",
                        "origin_port"
                      ],
                      "properties": {
                        "name": {
                          "description": "The name of the origin server.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "orig_tls": {
                          "description": "Enables TLS on the origin server.",
                          "type": "boolean"
                        },
                        "origin_host": {
                          "description": "The IP address or FQDN of the origin server.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "origin_port": {
                          "description": "The port number of the origin server.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "origin_protocol": {
                          "description": "The protocol of the origin server connection. Either `ssh` or `http`.",
                          "type": "string",
                          "enum": [
                            "ssh",
                            "http"
                          ]
                        }
                      }
                    }
                  },
                  "services": {
                    "description": "EAA application service details.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "A list of services enabled on the application configuration.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the service.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "sites": {
                    "description": "List of associated site resources.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "uuid_url": {
                    "description": "A unique identifier for the application.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "wsfed": {
                    "description": "Enables Web Services Federation (WSFED) identity federation.",
                    "example": "{{wsfed}}",
                    "type": "boolean"
                  },
                  "wsfed_settings": {
                    "description": "JSON settings to implement WSFED.",
                    "minItems": 1,
                    "title": "Web Services Federation (WSFED) settings",
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Web Services Federation (WSFED) configuration for an application.",
                      "type": "object",
                      "required": [
                        "sp",
                        "attrmap",
                        "idp",
                        "subject"
                      ],
                      "properties": {
                        "attrmap": {
                          "description": "Contains mapped attributes for the WSFED configuration.",
                          "minItems": 1,
                          "type": "array",
                          "uniqueItems": true,
                          "items": {
                            "additionalProperties": false,
                            "description": "Mapped attributes for the WSFED configuration.",
                            "type": "object",
                            "required": [
                              "fmt"
                            ],
                            "properties": {
                              "custom_fmt": {
                                "description": "The custom format of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "fmt": {
                                "description": "The name format of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "rule": {
                                "description": "The custom rule language for the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "src": {
                                "description": "The source of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "val": {
                                "description": "The value of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "idp": {
                          "additionalProperties": false,
                          "description": "Specifies identity provider (IDP) settings for the WSFED configuration.",
                          "type": "object",
                          "required": [
                            "entity_id",
                            "sign_key",
                            "sign_cert",
                            "sign_algo"
                          ],
                          "properties": {
                            "entity_id": {
                              "description": "The entity ID of the identity provider.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "sign_algo": {
                              "default": "SHA256",
                              "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                              "type": "string",
                              "enum": [
                                "SHA256",
                                "SHA1"
                              ]
                            },
                            "sign_cert": {
                              "description": "The signing certificate.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "sign_key": {
                              "description": "The signing key.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        },
                        "sp": {
                          "additionalProperties": false,
                          "description": "Specifies service provider settings for the WSFED configuration.",
                          "type": "object",
                          "required": [
                            "entity_id",
                            "slo_url",
                            "dst_url",
                            "resp_bind",
                            "token_life"
                          ],
                          "properties": {
                            "dst_url": {
                              "description": "The destination URL.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "entity_id": {
                              "description": "The entity ID of the service provider.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "resp_bind": {
                              "default": "post",
                              "description": "The response binding. Set to `post`.",
                              "type": "string",
                              "enum": [
                                "post"
                              ]
                            },
                            "slo_url": {
                              "description": "The single log-out URL.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "token_life": {
                              "default": 3600,
                              "description": "The number of seconds a token is valid.",
                              "minimum": 0,
                              "type": "integer"
                            }
                          }
                        },
                        "subject": {
                          "additionalProperties": false,
                          "description": "Specifies subject settings for the WSFED configuration.",
                          "type": "object",
                          "required": [
                            "fmt"
                          ],
                          "properties": {
                            "custom_fmt": {
                              "description": "The custom format of the subject.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "fmt": {
                              "description": "The format for the `NameID` element of the subject. Either `email`, `persistent`, `unspecified`, or `transient`.",
                              "minLength": 1,
                              "type": "string",
                              "enum": [
                                "email",
                                "persistent",
                                "unspecified",
                                "transient"
                              ]
                            },
                            "rule": {
                              "description": "The custom rule language for the subject.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "src": {
                              "description": "The source of the subject.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "val": {
                              "description": "The value of the subject.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/app-wsfed-settings.yaml"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/application.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "app_deployed": true,
                  "app_logo": "https://host.com/customer-logo/app_icon_<uuid_url>",
                  "app_operational": 3,
                  "app_profile": 1,
                  "app_status": 2,
                  "app_type": 2,
                  "auth_agent": null,
                  "auth_enabled": "true",
                  "auth_type": 1,
                  "bookmark_url": "",
                  "cert": null,
                  "client_app_mode": 1,
                  "cname": "<uuid_url>.host.akamai-access.com",
                  "created_at": "2017-10-09T21:21:27.548211",
                  "data_agent": null,
                  "description": "This is the Email Server",
                  "domain": 1,
                  "domain_suffix": "host.akamai-access.com",
                  "host": "<uuid_url>.host.akamai-access.com",
                  "modified_at": "2019-03-28T20:10:22.418270",
                  "name": "Primary Email Application",
                  "oidc": false,
                  "orig_tls": "true",
                  "origin_host": null,
                  "origin_port": 443,
                  "pop": "LpeAuKXkEeOg_Q7rYYFrWw",
                  "popName": "us-pop-1",
                  "rdp_version": "V1",
                  "resource": "apps",
                  "saml": true,
                  "status": 1,
                  "uuid_url": "ZgpmtAS0ORa2b0jF",
                  "wsfed": false,
                  "sites": [
                    "skljgoSxoolsooD26Q-qQlGzjYRzuS"
                  ],
                  "wsfed_settings": [],
                  "advanced_settings": {
                    "acceleration": "false",
                    "allow_cors": "false",
                    "anonymous_server_conn_limit": "50",
                    "anonymous_server_request_limit": "100",
                    "app_auth": "none",
                    "app_auth_domain": null,
                    "app_client_cert_auth": "false",
                    "app_cookie_domain": null,
                    "app_location": null,
                    "app_server_read_timeout": "60",
                    "authenticated_server_conn_limit": "50",
                    "authenticated_server_request_limit": "100",
                    "client_cert_auth": "false",
                    "client_cert_user_param": "",
                    "cookie_domain": "",
                    "cors_header_list": "unbounded",
                    "cors_max_age": "86400",
                    "cors_method_list": "unbounded",
                    "cors_origin_list": "unbounded",
                    "cors_support_credential": "on",
                    "domain_exception_list": "",
                    "edge_authentication_enabled": "false",
                    "edge_cookie_key": "",
                    "external_cookie_domain": null,
                    "force_mfa": "off",
                    "forward_ticket_granting_ticket": "false",
                    "g2o_enabled": "false",
                    "g2o_key": null,
                    "g2o_nonce": null,
                    "health_check_fall": "3",
                    "health_check_http_host_header": "",
                    "health_check_http_url": "/",
                    "health_check_http_version": "1.1",
                    "health_check_interval": "30000",
                    "health_check_rise": "2",
                    "health_check_timeout": "50000",
                    "health_check_type": "0",
                    "hidden_app": "false",
                    "hsts_age": "15552000",
                    "http_only_cookie": "true",
                    "https_sslv3": "false",
                    "idle_close_time_seconds": "1200",
                    "idle_conn_ceil": "75",
                    "idle_conn_floor": "50",
                    "idle_conn_step": "10",
                    "idp_idle_expiry": null,
                    "idp_max_expiry": null,
                    "ignore_cname_resolution": "false",
                    "inject_ajax_javascript": "off",
                    "internal_host_port": "0",
                    "internal_hostname": "",
                    "keepalive_connection_pool": "50",
                    "keepalive_enable": "true",
                    "keepalive_timeout": "3",
                    "kerberos_negotiate_once": "off",
                    "keyed_keepalive_enable": "false",
                    "keytab": "",
                    "load_balancing_metric": "round-robin",
                    "logging_enabled": "true",
                    "login_timeout": "5",
                    "login_url": null,
                    "logout_url": null,
                    "mfa": "inherit",
                    "offload_onpremise_traffic": "false",
                    "pass_phrase": null,
                    "preauth_enforce_url": "",
                    "private_key": null,
                    "proxy_buffer_size_kb": null,
                    "proxy_disable_clipboard": "false",
                    "rate_limit": "on",
                    "rdp_initial_program": null,
                    "rdp_legacy_mode": "false",
                    "rdp_tls1": "false",
                    "refresh_sticky_cookie": "on",
                    "remote_spark_audio": "true",
                    "remote_spark_disk": "LOCALSHARE",
                    "remote_spark_mapClipboard": "on",
                    "remote_spark_mapDisk": "true",
                    "remote_spark_mapPrinter": "true",
                    "remote_spark_printer": "LOCALPRINTER",
                    "remote_spark_recording": "false",
                    "request_body_rewrite": "false",
                    "request_parameters": null,
                    "saas_enabled": "false",
                    "sentry_redirect_401": "off",
                    "server_cert_validate": "true",
                    "server_request_burst": "100",
                    "service_principle_name": null,
                    "session_sticky": "false",
                    "session_sticky_cookie_maxage": "0",
                    "session_sticky_server_cookie": null,
                    "sla_object_url": "____spx/ionpage",
                    "spdy_enabled": "true",
                    "ssh_audit_enabled": "false",
                    "sso": "true",
                    "sticky_agent": "false",
                    "user_name": null,
                    "wapp_auth": "form",
                    "websocket_enabled": "false",
                    "wildcard_internal_hostname": "false",
                    "custom_headers": [],
                    "rdp_remote_apps": []
                  },
                  "app_category": {
                    "name": "Communications",
                    "uuid_url": "CNasdlkfjlkasdhftZjKIFA"
                  },
                  "idp": {
                    "client_cert_auth": "false",
                    "client_cert_user_param": "",
                    "idp_id": "aMEgMEgeToipiytpeP1u5kLg",
                    "name": "Pri-SAML-IDP",
                    "type": 2
                  },
                  "oidc_settings": {},
                  "resource_status": {
                    "cert_status": 1,
                    "cname_dns_status": 1,
                    "data_agent_status": 1,
                    "dialin_server_status": 4,
                    "directories_status": 2,
                    "host_dns_status": 4,
                    "host_reachable": false,
                    "internal_host_status": 1,
                    "origin_host_status": 4,
                    "pop_status": 2
                  },
                  "resource_uri": {
                    "directories": "/api/v1/apps/uuid_url/directories/",
                    "groups": "/api/v1/apps/<uuid_url>/groups/",
                    "href": "/api/v1/apps/<uuid_url>",
                    "pop": "/api/v1/pops/<pop>",
                    "services": "/api/v1/apps/<uuid_url>/services/",
                    "sites": "/api/v1/apps/<uuid_url>/sites"
                  },
                  "agents": [
                    {
                      "compatible": true,
                      "name": "Email-App-Connector",
                      "uuid_url": "aldTFght_SfoolsooD26Q"
                    },
                    {
                      "compatible": true,
                      "name": "App2-Connector",
                      "uuid_url": "askljgoSxmQnkfJ1fozTA"
                    }
                  ],
                  "directories": [
                    {
                      "name": "Company-Primary-AD",
                      "type": 1,
                      "user_count": 29584,
                      "uuid_url": "_tvruiywwiyipwgvs8rw"
                    }
                  ],
                  "saml_settings": [
                    {
                      "idp": {
                        "ecp_enable": false,
                        "ecp_resp_signature": false,
                        "entity_id": "https://host.net/saml/idp/sso",
                        "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor> ... </md:EntityDescriptor>",
                        "resp_bind": "post",
                        "self_signed": true,
                        "sign_algo": "SHA1",
                        "sign_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                        "slo_url": "https://host.net/saml/idp/slo"
                      },
                      "sp": {
                        "acs_url": "https://host.net/saml/sp/response",
                        "default_relay_state": "",
                        "dst_url": "",
                        "encr_algo": "aes256-cbc",
                        "encr_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                        "entity_id": "https://host.net/saml/sp/response",
                        "force_auth": true,
                        "logout_bind": "post",
                        "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor> ... </md:EntityDescriptor>",
                        "req_bind": "redirect",
                        "req_verify": false,
                        "resp_encr": false,
                        "sign_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                        "slo_bind": "redirect",
                        "slo_req_verify": false,
                        "slo_url": ""
                      },
                      "subject": {
                        "attr_source": "user.email",
                        "fmt": "unspecified",
                        "src": "user.userPrincipleName"
                      },
                      "attrmap": [
                        {
                          "fmt": "unspecified",
                          "fname": "",
                          "name": "Alice",
                          "src": "user.aliceSmith"
                        },
                        {
                          "fmt": "basic",
                          "fname": "",
                          "name": "asmith@company.com",
                          "src": "user.asmith"
                        },
                        {
                          "fmt": "basic",
                          "fname": "",
                          "name": "Smith",
                          "src": "user.aliceSmith"
                        }
                      ]
                    }
                  ],
                  "servers": [
                    {
                      "orig_tls": true,
                      "origin_host": "192.0.2.203",
                      "origin_port": 22,
                      "origin_protocol": "ssh"
                    }
                  ],
                  "services": [
                    {
                      "name": "Acceleration",
                      "uuid_url": "YqQlGzjYRzuSX04"
                    },
                    {
                      "name": "Access Control",
                      "uuid_url": "RzuSX04c8CECtw15"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access Application creation properties.",
                  "type": "object",
                  "required": [
                    "app_type",
                    "name",
                    "app_profile"
                  ],
                  "properties": {
                    "agents": {
                      "description": "EAA application connector details.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the target connectors for deploying the application configuration.",
                        "type": "object",
                        "required": [
                          "compatible",
                          "name",
                          "uuid_url"
                        ],
                        "properties": {
                          "compatible": {
                            "description": "Whether the target connector is compatible with the application configuration.",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "The name of the connector.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "The UUID URL of the connector.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "app_category": {
                      "additionalProperties": false,
                      "description": "Specifies the category the application belongs to.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the category.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "uuid_url": {
                          "description": "The UUID of the category.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "app_deployed": {
                      "description": "Whether the application configuration is deployed.",
                      "type": "boolean"
                    },
                    "app_logo": {
                      "description": "A URL identifying the application configuration's logo icon.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "app_operational": {
                      "default": 1,
                      "description": "The operational status of the application configuration. Either `1` for No, `2` for Pending, or `3` for Okay.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3
                      ]
                    },
                    "app_profile": {
                      "default": 1,
                      "description": "The access application profile. Either `1` for HTTP, `2` for SharePoint, `3` for Jira, `4` for RDP, `5` for VNC, `6` for ssh, `7` for Jenkins, `8` for Confluence, or `9` for TCP.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9
                      ]
                    },
                    "app_status": {
                      "default": 1,
                      "description": "The status of the application configuration. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, `5` for failed, `6` for cloud deployed, or `7` for connector deployed.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7
                      ]
                    },
                    "app_type": {
                      "description": "The type of application configuration. Either `1` for Enterprise Hosted, `2` for SAAS, `3` for Bookmark, `4` for Tunnel, or `5` for Enterprise Threat Protector.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ]
                    },
                    "auth_agent": {
                      "description": "The connector for the application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "auth_enabled": {
                      "default": "true",
                      "description": "Enables authentication.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "auth_type": {
                      "default": 1,
                      "description": "The type of authentication used. Either `1` for Cloud, `2` for Enterprise, or `3` for Third Party.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3
                      ]
                    },
                    "bookmark_url": {
                      "description": "The Okta Bookmark app URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "cert": {
                      "description": "A valid certificate string for front-end SSL connections. Used if you configure your domain as the external hostname. Specify `null` if you want to name it later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "client_app_mode": {
                      "default": 1,
                      "description": "The mode of client app. `1` for TCP or `2` for Tunnel.",
                      "type": "integer",
                      "enum": [
                        1,
                        2
                      ]
                    },
                    "cname": {
                      "description": "The upstream URL for a CNAME redirect.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the application object's creation.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "data_agent": {
                      "description": "The data connector for the application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "directories": {
                      "description": "Application directory details.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the directory for validating user accounts.",
                        "type": "object",
                        "required": [
                          "type",
                          "name",
                          "user_count",
                          "uuid_url"
                        ],
                        "properties": {
                          "name": {
                            "description": "The name of the directory.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of directory. Select `1` for EAA Cloud Directory, `2` for Active Directory, `3` for LDAP, or `4` for Active Directory LDS.",
                            "type": "string",
                            "enum": [
                              "1",
                              "2",
                              "3",
                              "4"
                            ]
                          },
                          "user_count": {
                            "description": "The total number of user accounts configured on the directory.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "uuid_url": {
                            "description": "The UUID URL of the directory.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "domain": {
                      "default": 1,
                      "description": "The type of access domain. Select `1` for custom or `2` for Akamai.",
                      "type": "integer",
                      "enum": [
                        1,
                        2
                      ]
                    },
                    "domain_suffix": {
                      "description": "The domain suffix. For example, `.com`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "host": {
                      "description": "The external default hostname for the application.",
                      "format": "hostname",
                      "type": "string"
                    },
                    "idp": {
                      "additionalProperties": false,
                      "description": "Specifies the identity provider (IDP) for authenticating user requests.",
                      "type": "object",
                      "properties": {
                        "client_cert_auth": {
                          "description": "Enables certificate-based authentication for the client.",
                          "type": "boolean"
                        },
                        "client_cert_user_param": {
                          "description": "Relevant Cert based parameters for client authentication.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "idp_id": {
                          "description": "The ID of the IDP configuration.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the IDP configuration.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "type": {
                          "default": 1,
                          "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, or `9` for Azure.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9
                          ]
                        }
                      }
                    },
                    "modified_at": {
                      "description": "Name of the user who most recently modified this application object. If the object wasn't modified since first being created, the value matches `createdAt`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the application configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "oidc": {
                      "description": "Enables OpenID Connect (OIDC).",
                      "type": "boolean"
                    },
                    "oidc_settings": {
                      "additionalProperties": false,
                      "description": "JSON settings to implement OIDC.",
                      "type": "object",
                      "required": [
                        "userinfo_endpoint",
                        "certs_uri",
                        "jwks_uri",
                        "check_session_iframe",
                        "token_endpoint",
                        "openid_metadata",
                        "end_session_endpoint",
                        "authorization_endpoint",
                        "discovery_url"
                      ],
                      "properties": {
                        "authorization_endpoint": {
                          "description": "The OIDC endpoint where end users authenticate and grant the client application consent to access their identity information.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "certs_uri": {
                          "description": "The URI of the relaying party's CA certificate.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "check_session_iframe": {
                          "description": "The iframe URL used to check session status.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "discovery_url": {
                          "description": "The OIDC endpoint the client uses to discover OpenID features and other provider endpoints.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "end_session_endpoint": {
                          "description": "The OIDC endpoint that triggers single sign out.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "jwks_uri": {
                          "description": "The publishing location of the JSON web keys (JWK). Used for both the open provider and the relaying party.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "openid_metadata": {
                          "description": "Metadata that describes the OIDC provider's configuration.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "token_endpoint": {
                          "description": "The OIDC endpoint that tokens and authenticates client application requests.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "userinfo_endpoint": {
                          "description": "The OIDC endpoint where the client sends requests for identity claims.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/app-oidc-settings.yaml"
                      }
                    },
                    "origin_host": {
                      "description": "The IP address or FQDN of the application origin server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "pop": {
                      "description": "The identifier for the target region to deploy the application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "popName": {
                      "description": "The target region to deploy the application. For example, `US-West` or `US-East`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "rdp_version": {
                      "description": "The version of remote desktop protocol (RDP).",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource": {
                      "description": "Name of resource mapping to an entity or set of entities. For example, `apps`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_status": {
                      "additionalProperties": false,
                      "description": "The most recent status of various application resources.",
                      "type": "object",
                      "required": [
                        "host_reachable",
                        "directories_status",
                        "cname_dns_status",
                        "data_agent_status",
                        "cert_status",
                        "host_dns_status",
                        "origin_host_status",
                        "dialin_server_status",
                        "pop_status",
                        "internal_host_status"
                      ],
                      "properties": {
                        "cert_status": {
                          "default": 1,
                          "description": "The certificate resource status. Either `1` for Not Added, `2` for Expired, `3` for Invalid CNAME, `4` for Invalid CA, `5` for No Private Key, `6` for Okay, or `7` for Invalid CA User Parameter.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                          ]
                        },
                        "cname_dns_status": {
                          "default": 1,
                          "description": "The CNAME DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Okay.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ]
                        },
                        "data_agent_status": {
                          "default": 1,
                          "description": "The data agent resource status. Either `1` for Not Added, `2` for Not Installed, `3` for Not Approved, `4` for Not Reachable, `5` for Okay, or `6` for Not Compatible.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6
                          ]
                        },
                        "dialin_server_status": {
                          "default": 1,
                          "description": "The dialin server resource status. Either `1` for Not Configured, `2` for Configured, `3` for Not Created, `4` for Not Resolved, and `5` for Okay.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ]
                        },
                        "directories_status": {
                          "default": 1,
                          "description": "The directories resource status. Either `1` for Not Added, `2` for Added, `3` for No Connector, `4` for Pending, `5` for Not Reachable, or `6` for Okay.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6
                          ]
                        },
                        "host_dns_status": {
                          "default": 1,
                          "description": "The host DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Not Created, `6` for Okay, or `7` for CNAME Mismatch.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                          ]
                        },
                        "host_reachable": {
                          "default": false,
                          "description": "Indicates whether the host is reachable.",
                          "type": "boolean"
                        },
                        "internal_host_status": {
                          "default": 1,
                          "description": "The internal host resource status. Either `1` for Not Configured or `2` for Okay.",
                          "type": "integer",
                          "enum": [
                            1,
                            2
                          ]
                        },
                        "origin_host_status": {
                          "default": 1,
                          "description": "The origin host resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Reachable, or `5` for Okay.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ]
                        },
                        "pop_status": {
                          "default": 1,
                          "description": "The pop resource status. Either `1` for Not Configured) or `2` for Okay.",
                          "type": "integer",
                          "enum": [
                            1,
                            2
                          ]
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/app-resource-status.yaml"
                      }
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Resource URIs for the application.",
                      "type": "object",
                      "required": [
                        "directories",
                        "groups",
                        "href",
                        "pop",
                        "services",
                        "sites"
                      ],
                      "properties": {
                        "directories": {
                          "description": "The URI location of an associated directory resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "groups": {
                          "description": "The URI location of an associated group resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The URI location of an associated href resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "pop": {
                          "description": "The URI location of an associated pop resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "services": {
                          "description": "The URI location of an associated service resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "sites": {
                          "description": "The URI location of an associated site resource.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "saml": {
                      "description": "Enables SAML for the application.",
                      "type": "boolean"
                    },
                    "saml_settings": {
                      "description": "SAML configuration for an application.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "SAML configuration for an application.",
                        "type": "object",
                        "required": [
                          "sp",
                          "attrmap",
                          "idp",
                          "subject"
                        ],
                        "properties": {
                          "attrmap": {
                            "description": "SAML attribute mapping details.",
                            "minItems": 1,
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                              "additionalProperties": false,
                              "description": "Specifies mapped attributes for the SAML configuration.",
                              "type": "object",
                              "required": [
                                "name",
                                "fmt",
                                "src"
                              ],
                              "properties": {
                                "fmt": {
                                  "description": "The name format of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "fname": {
                                  "description": "The fname of the attribute.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "rule": {
                                  "description": "The custom rule language for the attribute. ",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "src": {
                                  "description": "The source of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "val": {
                                  "description": "The value of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "idp": {
                            "additionalProperties": false,
                            "description": "Specifies identity provider (IDP) settings for the SAML configuration.",
                            "type": "object",
                            "required": [
                              "self_signed",
                              "ecp_resp_signature",
                              "slo_url",
                              "entity_id",
                              "resp_bind",
                              "sign_key",
                              "sign_cert",
                              "sign_algo",
                              "ecp_enable",
                              "metadata"
                            ],
                            "properties": {
                              "ecp_enable": {
                                "default": false,
                                "description": "Enables enhanced client or proxy (ECP).",
                                "type": "boolean"
                              },
                              "ecp_resp_signature": {
                                "default": false,
                                "description": "The ECP response signature.",
                                "type": "boolean"
                              },
                              "entity_id": {
                                "description": "The entity ID of the identity provider.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "metadata": {
                                "description": "Additional metadata for the service provider configuration. Specify `null` if you want to provide this later.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "resp_bind": {
                                "default": "post",
                                "description": "The response binding. Set to `post`.",
                                "type": "string",
                                "enum": [
                                  "post"
                                ]
                              },
                              "self_signed": {
                                "default": true,
                                "description": "Enables a self-signed certificate.",
                                "type": "boolean"
                              },
                              "sign_algo": {
                                "default": "SHA256",
                                "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                                "type": "string",
                                "enum": [
                                  "SHA256",
                                  "SHA1"
                                ]
                              },
                              "sign_cert": {
                                "description": "The signing certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sign_key": {
                                "description": "The signing key.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "slo_url": {
                                "description": "The single log-out URL.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "sp": {
                            "additionalProperties": false,
                            "description": "Specifies service provider (SP) settings for the SAML configuration.",
                            "type": "object",
                            "required": [
                              "entity_id",
                              "acs_url",
                              "req_bind",
                              "default_relay_state",
                              "force_auth",
                              "req_verify",
                              "resp_encr",
                              "encr_cert",
                              "encr_algo"
                            ],
                            "properties": {
                              "acs_url": {
                                "description": "The single sign-on (ACS) URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "default_relay_state": {
                                "description": "The default relay state. Specify `null` if you want to provide this later.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "dst_url": {
                                "description": "The destination URL.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "encr_algo": {
                                "default": "aes256-cbc",
                                "description": "The response encryption algorithm. Either `aes256-cbc` or `aes128-cbc`.",
                                "type": "string",
                                "enum": [
                                  "aes256-cbc",
                                  "aes128-cbc"
                                ]
                              },
                              "encr_cert": {
                                "description": "The response encryption certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "entity_id": {
                                "description": "The entity ID.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "force_auth": {
                                "default": false,
                                "description": "Forces encryption using the `httponly` flag in the session cookie.",
                                "type": "boolean"
                              },
                              "metadata": {
                                "description": "Additional metadata for the IDP configuration. Specify `null` if you want to provide this later.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "req_bind": {
                                "default": "redirect",
                                "description": "The response binding. Either `redirect` or `post`.",
                                "type": "string",
                                "enum": [
                                  "redirect",
                                  "post"
                                ]
                              },
                              "req_verify": {
                                "default": false,
                                "description": "Enables request verification.",
                                "type": "boolean"
                              },
                              "resp_encr": {
                                "default": false,
                                "description": "Enables encryption on the responses.",
                                "type": "boolean"
                              },
                              "sign_cert": {
                                "description": "The request signing certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "slo_bind": {
                                "default": "post",
                                "description": "The single log-out binding. Either `post` or `redirect`.",
                                "type": "string",
                                "enum": [
                                  "post",
                                  "redirect"
                                ]
                              },
                              "slo_req_verify": {
                                "default": true,
                                "description": "Enables single log-out request verification.",
                                "type": "boolean"
                              },
                              "slo_url": {
                                "description": "The single log-out URL.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "subject": {
                            "additionalProperties": false,
                            "description": "Specifies the subject settings for the SAML configuration.",
                            "type": "object",
                            "required": [
                              "fmt",
                              "src"
                            ],
                            "properties": {
                              "fmt": {
                                "description": "The format for the `NameID` element of the subject. Either `email`, `persistent`, `unspecified`, or `transient`.",
                                "minLength": 1,
                                "type": "string",
                                "enum": [
                                  "email",
                                  "persistent",
                                  "unspecified",
                                  "transient"
                                ]
                              },
                              "rule": {
                                "description": "Processing rule for the subject. If omitted from requests, the API responds with a `null` value you can fill out later.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "src": {
                                "description": "The source of the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "val": {
                                "description": "The value of the subject.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/app-saml-settings.yaml"
                      }
                    },
                    "servers": {
                      "description": "EAA application server details.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Origin server details of the internal application within your network.",
                        "type": "object",
                        "required": [
                          "origin_protocol",
                          "name",
                          "orig_tls",
                          "origin_host",
                          "origin_port"
                        ],
                        "properties": {
                          "name": {
                            "description": "The name of the origin server.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "orig_tls": {
                            "description": "Enables TLS on the origin server.",
                            "type": "boolean"
                          },
                          "origin_host": {
                            "description": "The IP address or FQDN of the origin server.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "origin_port": {
                            "description": "The port number of the origin server.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "origin_protocol": {
                            "description": "The protocol of the origin server connection. Either `ssh` or `http`.",
                            "type": "string",
                            "enum": [
                              "ssh",
                              "http"
                            ]
                          }
                        }
                      }
                    },
                    "services": {
                      "description": "EAA application service details.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A list of services enabled on the application configuration.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the service.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "sites": {
                      "description": "List of associated site resources.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "wsfed": {
                      "description": "Enables Web Services Federation (WSFED) identity federation.",
                      "type": "boolean"
                    },
                    "wsfed_settings": {
                      "description": "JSON settings to implement WSFED.",
                      "minItems": 1,
                      "title": "Web Services Federation (WSFED) settings",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Web Services Federation (WSFED) configuration for an application.",
                        "type": "object",
                        "required": [
                          "sp",
                          "attrmap",
                          "idp",
                          "subject"
                        ],
                        "properties": {
                          "attrmap": {
                            "description": "Contains mapped attributes for the WSFED configuration.",
                            "minItems": 1,
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                              "additionalProperties": false,
                              "description": "Mapped attributes for the WSFED configuration.",
                              "type": "object",
                              "required": [
                                "fmt"
                              ],
                              "properties": {
                                "custom_fmt": {
                                  "description": "The custom format of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "fmt": {
                                  "description": "The name format of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "rule": {
                                  "description": "The custom rule language for the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "src": {
                                  "description": "The source of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "val": {
                                  "description": "The value of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "idp": {
                            "additionalProperties": false,
                            "description": "Specifies identity provider (IDP) settings for the WSFED configuration.",
                            "type": "object",
                            "required": [
                              "entity_id",
                              "sign_key",
                              "sign_cert",
                              "sign_algo"
                            ],
                            "properties": {
                              "entity_id": {
                                "description": "The entity ID of the identity provider.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sign_algo": {
                                "default": "SHA256",
                                "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                                "type": "string",
                                "enum": [
                                  "SHA256",
                                  "SHA1"
                                ]
                              },
                              "sign_cert": {
                                "description": "The signing certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sign_key": {
                                "description": "The signing key.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "sp": {
                            "additionalProperties": false,
                            "description": "Specifies service provider settings for the WSFED configuration.",
                            "type": "object",
                            "required": [
                              "entity_id",
                              "slo_url",
                              "dst_url",
                              "resp_bind",
                              "token_life"
                            ],
                            "properties": {
                              "dst_url": {
                                "description": "The destination URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "entity_id": {
                                "description": "The entity ID of the service provider.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "resp_bind": {
                                "default": "post",
                                "description": "The response binding. Set to `post`.",
                                "type": "string",
                                "enum": [
                                  "post"
                                ]
                              },
                              "slo_url": {
                                "description": "The single log-out URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "token_life": {
                                "default": 3600,
                                "description": "The number of seconds a token is valid.",
                                "minimum": 0,
                                "type": "integer"
                              }
                            }
                          },
                          "subject": {
                            "additionalProperties": false,
                            "description": "Specifies subject settings for the WSFED configuration.",
                            "type": "object",
                            "required": [
                              "fmt"
                            ],
                            "properties": {
                              "custom_fmt": {
                                "description": "The custom format of the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "fmt": {
                                "description": "The format for the `NameID` element of the subject. Either `email`, `persistent`, `unspecified`, or `transient`.",
                                "minLength": 1,
                                "type": "string",
                                "enum": [
                                  "email",
                                  "persistent",
                                  "unspecified",
                                  "transient"
                                ]
                              },
                              "rule": {
                                "description": "The custom rule language for the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "src": {
                                "description": "The source of the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "val": {
                                "description": "The value of the subject.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/app-wsfed-settings.yaml"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/application.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists your EAA applications.",
        "operationId": "get-apps",
        "summary": "List applications",
        "tags": [
          "Applications"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-apps"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 2,
                    "next": "?limit=2&expand=true&offset=10",
                    "offset": 10,
                    "previous": "?limit=2&expand=true&offset=8",
                    "total_count": 178
                  },
                  "objects": [
                    {
                      "app_deployed": true,
                      "app_logo": "https://host.com/customer-logo/app_icon_<uuid_url>",
                      "app_operational": 3,
                      "app_profile": 1,
                      "app_status": 2,
                      "app_type": 2,
                      "auth_agent": null,
                      "auth_enabled": "true",
                      "auth_type": 1,
                      "bookmark_url": "",
                      "cert": null,
                      "client_app_mode": 1,
                      "cname": "<uuid_url>.host.akamai-access.com",
                      "created_at": "2017-10-09T21:21:27.548211",
                      "data_agent": null,
                      "description": "This is the Email Server",
                      "domain": 1,
                      "domain_suffix": "host.akamai-access.com",
                      "host": "<uuid_url>.host.akamai-access.com",
                      "modified_at": "2019-03-28T20:10:22.418270",
                      "name": "Primary Email Application",
                      "oidc": false,
                      "orig_tls": "true",
                      "origin_host": null,
                      "origin_port": 443,
                      "pop": "LpeAuKXkEeOg_Q7rYYFrWw",
                      "popName": "us-pop-1",
                      "rdp_version": "V1",
                      "resource": "apps",
                      "saml": true,
                      "status": 1,
                      "uuid_url": "ZgpmtAS0ORa2b0jF",
                      "wsfed": false,
                      "sites": [
                        "skljgoSxoolsooD26Q-qQlGzjYRzuS"
                      ],
                      "wsfed_settings": [],
                      "advanced_settings": {
                        "acceleration": "false",
                        "allow_cors": "false",
                        "anonymous_server_conn_limit": "50",
                        "anonymous_server_request_limit": "100",
                        "app_auth": "none",
                        "app_auth_domain": null,
                        "app_client_cert_auth": "false",
                        "app_cookie_domain": null,
                        "app_location": null,
                        "app_server_read_timeout": "60",
                        "authenticated_server_conn_limit": "50",
                        "authenticated_server_request_limit": "100",
                        "client_cert_auth": "false",
                        "client_cert_user_param": "",
                        "cookie_domain": "",
                        "cors_header_list": "unbounded",
                        "cors_max_age": "86400",
                        "cors_method_list": "unbounded",
                        "cors_origin_list": "unbounded",
                        "cors_support_credential": "on",
                        "domain_exception_list": "",
                        "edge_authentication_enabled": "false",
                        "edge_cookie_key": "",
                        "external_cookie_domain": null,
                        "force_mfa": "off",
                        "forward_ticket_granting_ticket": "false",
                        "g2o_enabled": "false",
                        "g2o_key": null,
                        "g2o_nonce": null,
                        "health_check_fall": "3",
                        "health_check_http_host_header": "",
                        "health_check_http_url": "/",
                        "health_check_http_version": "1.1",
                        "health_check_interval": "30000",
                        "health_check_rise": "2",
                        "health_check_timeout": "50000",
                        "health_check_type": "0",
                        "hidden_app": "false",
                        "hsts_age": "15552000",
                        "http_only_cookie": "true",
                        "https_sslv3": "false",
                        "idle_close_time_seconds": "1200",
                        "idle_conn_ceil": "75",
                        "idle_conn_floor": "50",
                        "idle_conn_step": "10",
                        "idp_idle_expiry": null,
                        "idp_max_expiry": null,
                        "ignore_cname_resolution": "false",
                        "inject_ajax_javascript": "off",
                        "internal_host_port": "0",
                        "internal_hostname": "",
                        "keepalive_connection_pool": "50",
                        "keepalive_enable": "true",
                        "keepalive_timeout": "3",
                        "kerberos_negotiate_once": "off",
                        "keyed_keepalive_enable": "false",
                        "keytab": "",
                        "load_balancing_metric": "round-robin",
                        "logging_enabled": "true",
                        "login_timeout": "5",
                        "login_url": null,
                        "logout_url": null,
                        "mfa": "inherit",
                        "offload_onpremise_traffic": "false",
                        "pass_phrase": null,
                        "preauth_enforce_url": "",
                        "private_key": null,
                        "proxy_buffer_size_kb": null,
                        "proxy_disable_clipboard": "false",
                        "rate_limit": "on",
                        "rdp_initial_program": null,
                        "rdp_legacy_mode": "false",
                        "rdp_tls1": "false",
                        "refresh_sticky_cookie": "on",
                        "remote_spark_audio": "true",
                        "remote_spark_disk": "LOCALSHARE",
                        "remote_spark_mapClipboard": "on",
                        "remote_spark_mapDisk": "true",
                        "remote_spark_mapPrinter": "true",
                        "remote_spark_printer": "LOCALPRINTER",
                        "remote_spark_recording": "false",
                        "request_body_rewrite": "false",
                        "request_parameters": null,
                        "saas_enabled": "false",
                        "sentry_redirect_401": "off",
                        "server_cert_validate": "true",
                        "server_request_burst": "100",
                        "service_principle_name": null,
                        "session_sticky": "false",
                        "session_sticky_cookie_maxage": "0",
                        "session_sticky_server_cookie": null,
                        "sla_object_url": "____spx/iontestpage",
                        "spdy_enabled": "true",
                        "ssh_audit_enabled": "false",
                        "sso": "true",
                        "sticky_agent": "false",
                        "user_name": null,
                        "wapp_auth": "form",
                        "websocket_enabled": "false",
                        "wildcard_internal_hostname": "false",
                        "custom_headers": [],
                        "rdp_remote_apps": []
                      },
                      "app_category": {
                        "name": "Communications",
                        "uuid_url": "CNasdlkfjlkasdhftZjKIFA"
                      },
                      "idp": {
                        "client_cert_auth": "false",
                        "client_cert_user_param": "",
                        "idp_id": "aMEgMEgeToipiytpeP1u5kLg",
                        "name": "Pri-SAML-IDP",
                        "type": 2
                      },
                      "oidc_settings": {},
                      "resource_status": {
                        "cert_status": 1,
                        "cname_dns_status": 1,
                        "data_agent_status": 1,
                        "dialin_server_status": 4,
                        "directories_status": 2,
                        "host_dns_status": 4,
                        "host_reachable": false,
                        "internal_host_status": 1,
                        "origin_host_status": 4,
                        "pop_status": 2
                      },
                      "resource_uri": {
                        "directories": "/api/v1/apps/uuid_url/directories/",
                        "groups": "/api/v1/apps/<uuid_url>/groups/",
                        "href": "/api/v1/apps/<uuid_url>",
                        "pop": "/api/v1/pops/<pop>",
                        "services": "/api/v1/apps/<uuid_url>/services/",
                        "sites": "/api/v1/apps/<uuid_url>/sites"
                      },
                      "agents": [
                        {
                          "compatible": true,
                          "name": "Email-App-Connector",
                          "uuid_url": "aldTFght_SfoolsooD26Q"
                        },
                        {
                          "compatible": true,
                          "name": "App2-Connector",
                          "uuid_url": "askljgoSxmQnkfJ1fozTA"
                        }
                      ],
                      "directories": [
                        {
                          "name": "Company-Primary-AD",
                          "type": 1,
                          "user_count": 29584,
                          "uuid_url": "_tvruiywwiyipwgvs8rw"
                        }
                      ],
                      "saml_settings": [
                        {
                          "idp": {
                            "ecp_enable": false,
                            "ecp_resp_signature": false,
                            "entity_id": "https://host.net/saml/idp/sso",
                            "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor> ... </md:EntityDescriptor>",
                            "resp_bind": "post",
                            "self_signed": true,
                            "sign_algo": "SHA1",
                            "sign_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                            "slo_url": "https://host.net/saml/idp/slo"
                          },
                          "sp": {
                            "acs_url": "https://host.net/saml/sp/response",
                            "default_relay_state": "",
                            "dst_url": "",
                            "encr_algo": "aes256-cbc",
                            "encr_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                            "entity_id": "https://host.net/saml/sp/response",
                            "force_auth": true,
                            "logout_bind": "post",
                            "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor> ... </md:EntityDescriptor>",
                            "req_bind": "redirect",
                            "req_verify": false,
                            "resp_encr": false,
                            "sign_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                            "slo_bind": "redirect",
                            "slo_req_verify": false,
                            "slo_url": ""
                          },
                          "subject": {
                            "attr_source": "user.email",
                            "fmt": "unspecified",
                            "src": "user.userPrincipleName"
                          },
                          "attrmap": [
                            {
                              "fmt": "unspecified",
                              "fname": "",
                              "name": "FirstName",
                              "src": "user.firstName"
                            },
                            {
                              "fmt": "basic",
                              "fname": "",
                              "name": "Email",
                              "src": "user.email"
                            },
                            {
                              "fmt": "basic",
                              "fname": "",
                              "name": "LastName",
                              "src": "user.lastName"
                            }
                          ]
                        }
                      ],
                      "servers": [
                        {
                          "orig_tls": true,
                          "origin_host": "192.0.2.141",
                          "origin_port": 22,
                          "origin_protocol": "ssh"
                        }
                      ],
                      "services": [
                        {
                          "name": "Acceleration",
                          "uuid_url": "YqQlGzjYRzuSX04"
                        },
                        {
                          "name": "Access Control",
                          "uuid_url": "RzuSX04c8CECtw15"
                        }
                      ]
                    },
                    {
                      "app_deployed": true,
                      "app_logo": "https://host.com/customer-logo/app_icon_<uuid_url>",
                      "app_operational": 3,
                      "app_profile": 1,
                      "app_status": 2,
                      "app_type": 2,
                      "auth_agent": null,
                      "auth_enabled": "true",
                      "auth_type": 1,
                      "bookmark_url": "",
                      "cert": null,
                      "client_app_mode": 1,
                      "cname": "<uuid_url>.host.akamai-access.com",
                      "created_at": "2017-10-09T21:21:27.548211",
                      "data_agent": null,
                      "description": "This is the Email Server",
                      "domain": 1,
                      "domain_suffix": "host.akamai-access.com",
                      "host": "<uuid_url>.host.akamai-access.com",
                      "modified_at": "2019-03-28T20:10:22.418270",
                      "name": "Primary Email Application",
                      "oidc": false,
                      "orig_tls": "true",
                      "origin_host": null,
                      "origin_port": 443,
                      "pop": "LpeAuKXkEeOg_Q7rYYFrWw",
                      "popName": "us-pop-1",
                      "rdp_version": "V1",
                      "resource": "apps",
                      "saml": true,
                      "status": 1,
                      "uuid_url": "ZgpmtAS0ORa2b0jF",
                      "wsfed": false,
                      "sites": [
                        "skljgoSxoolsooD26Q-qQlGzjYRzuS"
                      ],
                      "wsfed_settings": [],
                      "advanced_settings": {
                        "acceleration": "false",
                        "allow_cors": "false",
                        "anonymous_server_conn_limit": "50",
                        "anonymous_server_request_limit": "100",
                        "app_auth": "none",
                        "app_auth_domain": null,
                        "app_client_cert_auth": "false",
                        "app_cookie_domain": null,
                        "app_location": null,
                        "app_server_read_timeout": "60",
                        "authenticated_server_conn_limit": "50",
                        "authenticated_server_request_limit": "100",
                        "client_cert_auth": "false",
                        "client_cert_user_param": "",
                        "cookie_domain": "",
                        "cors_header_list": "unbounded",
                        "cors_max_age": "86400",
                        "cors_method_list": "unbounded",
                        "cors_origin_list": "unbounded",
                        "cors_support_credential": "on",
                        "domain_exception_list": "",
                        "edge_authentication_enabled": "false",
                        "edge_cookie_key": "",
                        "external_cookie_domain": null,
                        "force_mfa": "off",
                        "forward_ticket_granting_ticket": "false",
                        "g2o_enabled": "false",
                        "g2o_key": null,
                        "g2o_nonce": null,
                        "health_check_fall": "3",
                        "health_check_http_host_header": "",
                        "health_check_http_url": "/",
                        "health_check_http_version": "1.1",
                        "health_check_interval": "30000",
                        "health_check_rise": "2",
                        "health_check_timeout": "50000",
                        "health_check_type": "0",
                        "hidden_app": "false",
                        "hsts_age": "15552000",
                        "http_only_cookie": "true",
                        "https_sslv3": "false",
                        "idle_close_time_seconds": "1200",
                        "idle_conn_ceil": "75",
                        "idle_conn_floor": "50",
                        "idle_conn_step": "10",
                        "idp_idle_expiry": null,
                        "idp_max_expiry": null,
                        "ignore_cname_resolution": "false",
                        "inject_ajax_javascript": "off",
                        "internal_host_port": "0",
                        "internal_hostname": "",
                        "keepalive_connection_pool": "50",
                        "keepalive_enable": "true",
                        "keepalive_timeout": "3",
                        "kerberos_negotiate_once": "off",
                        "keyed_keepalive_enable": "false",
                        "keytab": "",
                        "load_balancing_metric": "round-robin",
                        "logging_enabled": "true",
                        "login_timeout": "5",
                        "login_url": null,
                        "logout_url": null,
                        "mfa": "inherit",
                        "offload_onpremise_traffic": "false",
                        "pass_phrase": null,
                        "preauth_enforce_url": "",
                        "private_key": null,
                        "proxy_buffer_size_kb": null,
                        "proxy_disable_clipboard": "false",
                        "rate_limit": "on",
                        "rdp_initial_program": null,
                        "rdp_legacy_mode": "false",
                        "rdp_tls1": "false",
                        "refresh_sticky_cookie": "on",
                        "remote_spark_audio": "true",
                        "remote_spark_disk": "LOCALSHARE",
                        "remote_spark_mapClipboard": "on",
                        "remote_spark_mapDisk": "true",
                        "remote_spark_mapPrinter": "true",
                        "remote_spark_printer": "LOCALPRINTER",
                        "remote_spark_recording": "false",
                        "request_body_rewrite": "false",
                        "request_parameters": null,
                        "saas_enabled": "false",
                        "sentry_redirect_401": "off",
                        "server_cert_validate": "true",
                        "server_request_burst": "100",
                        "service_principle_name": null,
                        "session_sticky": "false",
                        "session_sticky_cookie_maxage": "0",
                        "session_sticky_server_cookie": null,
                        "sla_object_url": "____spx/iontestpage",
                        "spdy_enabled": "true",
                        "ssh_audit_enabled": "false",
                        "sso": "true",
                        "sticky_agent": "false",
                        "user_name": null,
                        "wapp_auth": "form",
                        "websocket_enabled": "false",
                        "wildcard_internal_hostname": "false",
                        "custom_headers": [],
                        "rdp_remote_apps": []
                      },
                      "app_category": {
                        "name": "Communications",
                        "uuid_url": "CNasdlkfjlkasdhftZjKIFA"
                      },
                      "idp": {
                        "client_cert_auth": "false",
                        "client_cert_user_param": "",
                        "idp_id": "aMEgMEgeToipiytpeP1u5kLg",
                        "name": "Pri-SAML-IDP",
                        "type": 2
                      },
                      "oidc_settings": {},
                      "resource_status": {
                        "cert_status": 1,
                        "cname_dns_status": 1,
                        "data_agent_status": 1,
                        "dialin_server_status": 4,
                        "directories_status": 2,
                        "host_dns_status": 4,
                        "host_reachable": false,
                        "internal_host_status": 1,
                        "origin_host_status": 4,
                        "pop_status": 2
                      },
                      "resource_uri": {
                        "directories": "/api/v1/apps/uuid_url/directories/",
                        "groups": "/api/v1/apps/<uuid_url>/groups/",
                        "href": "/api/v1/apps/<uuid_url>",
                        "pop": "/api/v1/pops/<pop>",
                        "services": "/api/v1/apps/<uuid_url>/services/",
                        "sites": "/api/v1/apps/<uuid_url>/sites"
                      },
                      "agents": [
                        {
                          "compatible": true,
                          "name": "Email-App-Connector",
                          "uuid_url": "aldTFght_SfoolsooD26Q"
                        },
                        {
                          "compatible": true,
                          "name": "App2-Connector",
                          "uuid_url": "askljgoSxmQnkfJ1fozTA"
                        }
                      ],
                      "directories": [
                        {
                          "name": "Company-Primary-AD",
                          "type": 1,
                          "user_count": 29584,
                          "uuid_url": "_tvruiywwiyipwgvs8rw"
                        }
                      ],
                      "saml_settings": [
                        {
                          "idp": {
                            "ecp_enable": false,
                            "ecp_resp_signature": false,
                            "entity_id": "https://host.net/saml/idp/sso",
                            "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor> ... </md:EntityDescriptor>",
                            "resp_bind": "post",
                            "self_signed": true,
                            "sign_algo": "SHA1",
                            "sign_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                            "slo_url": "https://host.net/saml/idp/slo"
                          },
                          "sp": {
                            "acs_url": "https://host.net/saml/sp/response",
                            "default_relay_state": "",
                            "dst_url": "",
                            "encr_algo": "aes256-cbc",
                            "encr_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                            "entity_id": "https://host.net/saml/sp/response",
                            "force_auth": true,
                            "logout_bind": "post",
                            "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor> ... </md:EntityDescriptor>",
                            "req_bind": "redirect",
                            "req_verify": false,
                            "resp_encr": false,
                            "sign_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                            "slo_bind": "redirect",
                            "slo_req_verify": false,
                            "slo_url": ""
                          },
                          "subject": {
                            "attr_source": "user.email",
                            "fmt": "unspecified",
                            "src": "user.userPrincipleName"
                          },
                          "attrmap": [
                            {
                              "fmt": "unspecified",
                              "fname": "",
                              "name": "FirstName",
                              "src": "user.firstName"
                            },
                            {
                              "fmt": "basic",
                              "fname": "",
                              "name": "Email",
                              "src": "user.email"
                            },
                            {
                              "fmt": "basic",
                              "fname": "",
                              "name": "LastName",
                              "src": "user.lastName"
                            }
                          ]
                        }
                      ],
                      "servers": [
                        {
                          "orig_tls": true,
                          "origin_host": "192.0.2.201",
                          "origin_port": 22,
                          "origin_protocol": "ssh"
                        }
                      ],
                      "services": [
                        {
                          "name": "Acceleration",
                          "uuid_url": "YqQlGzjYRzuSX04"
                        },
                        {
                          "name": "Access Control",
                          "uuid_url": "RzuSX04c8CECtw15"
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "List of Enterprise Access Applications.",
                  "type": "object",
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "type": "object",
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "List of applications for the account.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Enterprise Access Application creation properties.",
                        "type": "object",
                        "required": [
                          "app_type",
                          "name",
                          "app_profile"
                        ],
                        "properties": {
                          "agents": {
                            "description": "EAA application connector details.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Specifies the target connectors for deploying the application configuration.",
                              "type": "object",
                              "required": [
                                "compatible",
                                "name",
                                "uuid_url"
                              ],
                              "properties": {
                                "compatible": {
                                  "description": "Whether the target connector is compatible with the application configuration.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "The name of the connector.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "uuid_url": {
                                  "description": "The UUID URL of the connector.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "app_category": {
                            "additionalProperties": false,
                            "description": "Specifies the category the application belongs to.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "The name of the category.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "uuid_url": {
                                "description": "The UUID of the category.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "app_deployed": {
                            "description": "Whether the application configuration is deployed.",
                            "type": "boolean"
                          },
                          "app_logo": {
                            "description": "A URL identifying the application configuration's logo icon.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "app_operational": {
                            "default": 1,
                            "description": "The operational status of the application configuration. Either `1` for No, `2` for Pending, or `3` for Okay.",
                            "type": "integer",
                            "enum": [
                              1,
                              2,
                              3
                            ]
                          },
                          "app_profile": {
                            "default": 1,
                            "description": "The access application profile. Either `1` for HTTP, `2` for SharePoint, `3` for Jira, `4` for RDP, `5` for VNC, `6` for ssh, `7` for Jenkins, `8` for Confluence, or `9` for TCP.",
                            "type": "integer",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9
                            ]
                          },
                          "app_status": {
                            "default": 1,
                            "description": "The status of the application configuration. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, `5` for failed, `6` for cloud deployed, or `7` for connector deployed.",
                            "type": "integer",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7
                            ]
                          },
                          "app_type": {
                            "description": "The type of application configuration. Either `1` for Enterprise Hosted, `2` for SAAS, `3` for Bookmark, `4` for Tunnel, or `5` for Enterprise Threat Protector.",
                            "type": "integer",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5
                            ]
                          },
                          "auth_agent": {
                            "description": "The connector for the application.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "auth_enabled": {
                            "default": "true",
                            "description": "Enables authentication.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "auth_type": {
                            "default": 1,
                            "description": "The type of authentication used. Either `1` for Cloud, `2` for Enterprise, or `3` for Third Party.",
                            "type": "integer",
                            "enum": [
                              1,
                              2,
                              3
                            ]
                          },
                          "bookmark_url": {
                            "description": "The Okta Bookmark app URL.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "cert": {
                            "description": "A valid certificate string for front-end SSL connections. Used if you configure your domain as the external hostname. Specify `null` if you want to name it later.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "client_app_mode": {
                            "default": 1,
                            "description": "The mode of client app. `1` for TCP or `2` for Tunnel.",
                            "type": "integer",
                            "enum": [
                              1,
                              2
                            ]
                          },
                          "cname": {
                            "description": "The upstream URL for a CNAME redirect.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "created_at": {
                            "description": "ISO 8601 timestamp marking the application object's creation.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "data_agent": {
                            "description": "The data connector for the application.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "description": {
                            "description": "A description of the application.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "directories": {
                            "description": "Application directory details.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Specifies the directory for validating user accounts.",
                              "type": "object",
                              "required": [
                                "type",
                                "name",
                                "user_count",
                                "uuid_url"
                              ],
                              "properties": {
                                "name": {
                                  "description": "The name of the directory.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "type": {
                                  "description": "The type of directory. Select `1` for EAA Cloud Directory, `2` for Active Directory, `3` for LDAP, or `4` for Active Directory LDS.",
                                  "type": "string",
                                  "enum": [
                                    "1",
                                    "2",
                                    "3",
                                    "4"
                                  ]
                                },
                                "user_count": {
                                  "description": "The total number of user accounts configured on the directory.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "uuid_url": {
                                  "description": "The UUID URL of the directory.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "domain": {
                            "default": 1,
                            "description": "The type of access domain. Select `1` for custom or `2` for Akamai.",
                            "type": "integer",
                            "enum": [
                              1,
                              2
                            ]
                          },
                          "domain_suffix": {
                            "description": "The domain suffix. For example, `.com`.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "host": {
                            "description": "The external default hostname for the application.",
                            "format": "hostname",
                            "type": "string"
                          },
                          "idp": {
                            "additionalProperties": false,
                            "description": "Specifies the identity provider (IDP) for authenticating user requests.",
                            "type": "object",
                            "properties": {
                              "client_cert_auth": {
                                "description": "Enables certificate-based authentication for the client.",
                                "type": "boolean"
                              },
                              "client_cert_user_param": {
                                "description": "Relevant Cert based parameters for client authentication.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "idp_id": {
                                "description": "The ID of the IDP configuration.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the IDP configuration.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "type": {
                                "default": 1,
                                "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, or `9` for Azure.",
                                "type": "integer",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6,
                                  7,
                                  8,
                                  9
                                ]
                              }
                            }
                          },
                          "modified_at": {
                            "description": "Name of the user who most recently modified this application object. If the object wasn't modified since first being created, the value matches `createdAt`.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the application configuration.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "oidc": {
                            "description": "Enables OpenID Connect (OIDC).",
                            "type": "boolean"
                          },
                          "oidc_settings": {
                            "additionalProperties": false,
                            "description": "JSON settings to implement OIDC.",
                            "type": "object",
                            "required": [
                              "userinfo_endpoint",
                              "certs_uri",
                              "jwks_uri",
                              "check_session_iframe",
                              "token_endpoint",
                              "openid_metadata",
                              "end_session_endpoint",
                              "authorization_endpoint",
                              "discovery_url"
                            ],
                            "properties": {
                              "authorization_endpoint": {
                                "description": "The OIDC endpoint where end users authenticate and grant the client application consent to access their identity information.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "certs_uri": {
                                "description": "The URI of the relaying party's CA certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "check_session_iframe": {
                                "description": "The iframe URL used to check session status.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "discovery_url": {
                                "description": "The OIDC endpoint the client uses to discover OpenID features and other provider endpoints.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "end_session_endpoint": {
                                "description": "The OIDC endpoint that triggers single sign out.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "jwks_uri": {
                                "description": "The publishing location of the JSON web keys (JWK). Used for both the open provider and the relaying party.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "openid_metadata": {
                                "description": "Metadata that describes the OIDC provider's configuration.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "token_endpoint": {
                                "description": "The OIDC endpoint that tokens and authenticates client application requests.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "userinfo_endpoint": {
                                "description": "The OIDC endpoint where the client sends requests for identity claims.",
                                "minLength": 1,
                                "type": "string"
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/app-oidc-settings.yaml"
                            }
                          },
                          "origin_host": {
                            "description": "The IP address or FQDN of the application origin server.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "pop": {
                            "description": "The identifier for the target region to deploy the application.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "popName": {
                            "description": "The target region to deploy the application. For example, `US-West` or `US-East`.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "rdp_version": {
                            "description": "The version of remote desktop protocol (RDP).",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource": {
                            "description": "Name of resource mapping to an entity or set of entities. For example, `apps`.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource_status": {
                            "additionalProperties": false,
                            "description": "The most recent status of various application resources.",
                            "type": "object",
                            "required": [
                              "host_reachable",
                              "directories_status",
                              "cname_dns_status",
                              "data_agent_status",
                              "cert_status",
                              "host_dns_status",
                              "origin_host_status",
                              "dialin_server_status",
                              "pop_status",
                              "internal_host_status"
                            ],
                            "properties": {
                              "cert_status": {
                                "default": 1,
                                "description": "The certificate resource status. Either `1` for Not Added, `2` for Expired, `3` for Invalid CNAME, `4` for Invalid CA, `5` for No Private Key, `6` for Okay, or `7` for Invalid CA User Parameter.",
                                "type": "integer",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6,
                                  7
                                ]
                              },
                              "cname_dns_status": {
                                "default": 1,
                                "description": "The CNAME DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Okay.",
                                "type": "integer",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5
                                ]
                              },
                              "data_agent_status": {
                                "default": 1,
                                "description": "The data agent resource status. Either `1` for Not Added, `2` for Not Installed, `3` for Not Approved, `4` for Not Reachable, `5` for Okay, or `6` for Not Compatible.",
                                "type": "integer",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6
                                ]
                              },
                              "dialin_server_status": {
                                "default": 1,
                                "description": "The dialin server resource status. Either `1` for Not Configured, `2` for Configured, `3` for Not Created, `4` for Not Resolved, and `5` for Okay.",
                                "type": "integer",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5
                                ]
                              },
                              "directories_status": {
                                "default": 1,
                                "description": "The directories resource status. Either `1` for Not Added, `2` for Added, `3` for No Connector, `4` for Pending, `5` for Not Reachable, or `6` for Okay.",
                                "type": "integer",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6
                                ]
                              },
                              "host_dns_status": {
                                "default": 1,
                                "description": "The host DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Not Created, `6` for Okay, or `7` for CNAME Mismatch.",
                                "type": "integer",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6,
                                  7
                                ]
                              },
                              "host_reachable": {
                                "default": false,
                                "description": "Indicates whether the host is reachable.",
                                "type": "boolean"
                              },
                              "internal_host_status": {
                                "default": 1,
                                "description": "The internal host resource status. Either `1` for Not Configured or `2` for Okay.",
                                "type": "integer",
                                "enum": [
                                  1,
                                  2
                                ]
                              },
                              "origin_host_status": {
                                "default": 1,
                                "description": "The origin host resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Reachable, or `5` for Okay.",
                                "type": "integer",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5
                                ]
                              },
                              "pop_status": {
                                "default": 1,
                                "description": "The pop resource status. Either `1` for Not Configured) or `2` for Okay.",
                                "type": "integer",
                                "enum": [
                                  1,
                                  2
                                ]
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/app-resource-status.yaml"
                            }
                          },
                          "resource_uri": {
                            "additionalProperties": false,
                            "description": "Resource URIs for the application.",
                            "type": "object",
                            "required": [
                              "directories",
                              "groups",
                              "href",
                              "pop",
                              "services",
                              "sites"
                            ],
                            "properties": {
                              "directories": {
                                "description": "The URI location of an associated directory resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "groups": {
                                "description": "The URI location of an associated group resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "href": {
                                "description": "The URI location of an associated href resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "pop": {
                                "description": "The URI location of an associated pop resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "services": {
                                "description": "The URI location of an associated service resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sites": {
                                "description": "The URI location of an associated site resource.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "saml": {
                            "description": "Enables SAML for the application.",
                            "type": "boolean"
                          },
                          "saml_settings": {
                            "description": "SAML configuration for an application.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "SAML configuration for an application.",
                              "type": "object",
                              "required": [
                                "sp",
                                "attrmap",
                                "idp",
                                "subject"
                              ],
                              "properties": {
                                "attrmap": {
                                  "description": "SAML attribute mapping details.",
                                  "minItems": 1,
                                  "type": "array",
                                  "uniqueItems": true,
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Specifies mapped attributes for the SAML configuration.",
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "fmt",
                                      "src"
                                    ],
                                    "properties": {
                                      "fmt": {
                                        "description": "The name format of the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "fname": {
                                        "description": "The fname of the attribute.",
                                        "minLength": 0,
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "The name of the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "rule": {
                                        "description": "The custom rule language for the attribute. ",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "src": {
                                        "description": "The source of the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "val": {
                                        "description": "The value of the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "idp": {
                                  "additionalProperties": false,
                                  "description": "Specifies identity provider (IDP) settings for the SAML configuration.",
                                  "type": "object",
                                  "required": [
                                    "self_signed",
                                    "ecp_resp_signature",
                                    "slo_url",
                                    "entity_id",
                                    "resp_bind",
                                    "sign_key",
                                    "sign_cert",
                                    "sign_algo",
                                    "ecp_enable",
                                    "metadata"
                                  ],
                                  "properties": {
                                    "ecp_enable": {
                                      "default": false,
                                      "description": "Enables enhanced client or proxy (ECP).",
                                      "type": "boolean"
                                    },
                                    "ecp_resp_signature": {
                                      "default": false,
                                      "description": "The ECP response signature.",
                                      "type": "boolean"
                                    },
                                    "entity_id": {
                                      "description": "The entity ID of the identity provider.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "metadata": {
                                      "description": "Additional metadata for the service provider configuration. Specify `null` if you want to provide this later.",
                                      "minLength": 1,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "resp_bind": {
                                      "default": "post",
                                      "description": "The response binding. Set to `post`.",
                                      "type": "string",
                                      "enum": [
                                        "post"
                                      ]
                                    },
                                    "self_signed": {
                                      "default": true,
                                      "description": "Enables a self-signed certificate.",
                                      "type": "boolean"
                                    },
                                    "sign_algo": {
                                      "default": "SHA256",
                                      "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                                      "type": "string",
                                      "enum": [
                                        "SHA256",
                                        "SHA1"
                                      ]
                                    },
                                    "sign_cert": {
                                      "description": "The signing certificate.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "sign_key": {
                                      "description": "The signing key.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "slo_url": {
                                      "description": "The single log-out URL.",
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  }
                                },
                                "sp": {
                                  "additionalProperties": false,
                                  "description": "Specifies service provider (SP) settings for the SAML configuration.",
                                  "type": "object",
                                  "required": [
                                    "entity_id",
                                    "acs_url",
                                    "req_bind",
                                    "default_relay_state",
                                    "force_auth",
                                    "req_verify",
                                    "resp_encr",
                                    "encr_cert",
                                    "encr_algo"
                                  ],
                                  "properties": {
                                    "acs_url": {
                                      "description": "The single sign-on (ACS) URL.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "default_relay_state": {
                                      "description": "The default relay state. Specify `null` if you want to provide this later.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "dst_url": {
                                      "description": "The destination URL.",
                                      "minLength": 0,
                                      "type": "string"
                                    },
                                    "encr_algo": {
                                      "default": "aes256-cbc",
                                      "description": "The response encryption algorithm. Either `aes256-cbc` or `aes128-cbc`.",
                                      "type": "string",
                                      "enum": [
                                        "aes256-cbc",
                                        "aes128-cbc"
                                      ]
                                    },
                                    "encr_cert": {
                                      "description": "The response encryption certificate.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "entity_id": {
                                      "description": "The entity ID.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "force_auth": {
                                      "default": false,
                                      "description": "Forces encryption using the `httponly` flag in the session cookie.",
                                      "type": "boolean"
                                    },
                                    "metadata": {
                                      "description": "Additional metadata for the IDP configuration. Specify `null` if you want to provide this later.",
                                      "minLength": 1,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "req_bind": {
                                      "default": "redirect",
                                      "description": "The response binding. Either `redirect` or `post`.",
                                      "type": "string",
                                      "enum": [
                                        "redirect",
                                        "post"
                                      ]
                                    },
                                    "req_verify": {
                                      "default": false,
                                      "description": "Enables request verification.",
                                      "type": "boolean"
                                    },
                                    "resp_encr": {
                                      "default": false,
                                      "description": "Enables encryption on the responses.",
                                      "type": "boolean"
                                    },
                                    "sign_cert": {
                                      "description": "The request signing certificate.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "slo_bind": {
                                      "default": "post",
                                      "description": "The single log-out binding. Either `post` or `redirect`.",
                                      "type": "string",
                                      "enum": [
                                        "post",
                                        "redirect"
                                      ]
                                    },
                                    "slo_req_verify": {
                                      "default": true,
                                      "description": "Enables single log-out request verification.",
                                      "type": "boolean"
                                    },
                                    "slo_url": {
                                      "description": "The single log-out URL.",
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  }
                                },
                                "subject": {
                                  "additionalProperties": false,
                                  "description": "Specifies the subject settings for the SAML configuration.",
                                  "type": "object",
                                  "required": [
                                    "fmt",
                                    "src"
                                  ],
                                  "properties": {
                                    "fmt": {
                                      "description": "The format for the `NameID` element of the subject. Either `email`, `persistent`, `unspecified`, or `transient`.",
                                      "minLength": 1,
                                      "type": "string",
                                      "enum": [
                                        "email",
                                        "persistent",
                                        "unspecified",
                                        "transient"
                                      ]
                                    },
                                    "rule": {
                                      "description": "Processing rule for the subject. If omitted from requests, the API responds with a `null` value you can fill out later.",
                                      "minLength": 1,
                                      "nullable": true,
                                      "type": "string"
                                    },
                                    "src": {
                                      "description": "The source of the subject.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "val": {
                                      "description": "The value of the subject.",
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/app-saml-settings.yaml"
                            }
                          },
                          "servers": {
                            "description": "EAA application server details.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Origin server details of the internal application within your network.",
                              "type": "object",
                              "required": [
                                "origin_protocol",
                                "name",
                                "orig_tls",
                                "origin_host",
                                "origin_port"
                              ],
                              "properties": {
                                "name": {
                                  "description": "The name of the origin server.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "orig_tls": {
                                  "description": "Enables TLS on the origin server.",
                                  "type": "boolean"
                                },
                                "origin_host": {
                                  "description": "The IP address or FQDN of the origin server.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "origin_port": {
                                  "description": "The port number of the origin server.",
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "origin_protocol": {
                                  "description": "The protocol of the origin server connection. Either `ssh` or `http`.",
                                  "type": "string",
                                  "enum": [
                                    "ssh",
                                    "http"
                                  ]
                                }
                              }
                            }
                          },
                          "services": {
                            "description": "EAA application service details.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "A list of services enabled on the application configuration.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "The name of the service.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "sites": {
                            "description": "List of associated site resources.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the application.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "wsfed": {
                            "description": "Enables Web Services Federation (WSFED) identity federation.",
                            "type": "boolean"
                          },
                          "wsfed_settings": {
                            "description": "JSON settings to implement WSFED.",
                            "minItems": 1,
                            "title": "Web Services Federation (WSFED) settings",
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Web Services Federation (WSFED) configuration for an application.",
                              "type": "object",
                              "required": [
                                "sp",
                                "attrmap",
                                "idp",
                                "subject"
                              ],
                              "properties": {
                                "attrmap": {
                                  "description": "Contains mapped attributes for the WSFED configuration.",
                                  "minItems": 1,
                                  "type": "array",
                                  "uniqueItems": true,
                                  "items": {
                                    "additionalProperties": false,
                                    "description": "Mapped attributes for the WSFED configuration.",
                                    "type": "object",
                                    "required": [
                                      "fmt"
                                    ],
                                    "properties": {
                                      "custom_fmt": {
                                        "description": "The custom format of the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "fmt": {
                                        "description": "The name format of the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "The name of the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "rule": {
                                        "description": "The custom rule language for the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "src": {
                                        "description": "The source of the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      },
                                      "val": {
                                        "description": "The value of the attribute.",
                                        "minLength": 1,
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "idp": {
                                  "additionalProperties": false,
                                  "description": "Specifies identity provider (IDP) settings for the WSFED configuration.",
                                  "type": "object",
                                  "required": [
                                    "entity_id",
                                    "sign_key",
                                    "sign_cert",
                                    "sign_algo"
                                  ],
                                  "properties": {
                                    "entity_id": {
                                      "description": "The entity ID of the identity provider.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "sign_algo": {
                                      "default": "SHA256",
                                      "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                                      "type": "string",
                                      "enum": [
                                        "SHA256",
                                        "SHA1"
                                      ]
                                    },
                                    "sign_cert": {
                                      "description": "The signing certificate.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "sign_key": {
                                      "description": "The signing key.",
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  }
                                },
                                "sp": {
                                  "additionalProperties": false,
                                  "description": "Specifies service provider settings for the WSFED configuration.",
                                  "type": "object",
                                  "required": [
                                    "entity_id",
                                    "slo_url",
                                    "dst_url",
                                    "resp_bind",
                                    "token_life"
                                  ],
                                  "properties": {
                                    "dst_url": {
                                      "description": "The destination URL.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "entity_id": {
                                      "description": "The entity ID of the service provider.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "resp_bind": {
                                      "default": "post",
                                      "description": "The response binding. Set to `post`.",
                                      "type": "string",
                                      "enum": [
                                        "post"
                                      ]
                                    },
                                    "slo_url": {
                                      "description": "The single log-out URL.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "token_life": {
                                      "default": 3600,
                                      "description": "The number of seconds a token is valid.",
                                      "minimum": 0,
                                      "type": "integer"
                                    }
                                  }
                                },
                                "subject": {
                                  "additionalProperties": false,
                                  "description": "Specifies subject settings for the WSFED configuration.",
                                  "type": "object",
                                  "required": [
                                    "fmt"
                                  ],
                                  "properties": {
                                    "custom_fmt": {
                                      "description": "The custom format of the subject.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "fmt": {
                                      "description": "The format for the `NameID` element of the subject. Either `email`, `persistent`, `unspecified`, or `transient`.",
                                      "minLength": 1,
                                      "type": "string",
                                      "enum": [
                                        "email",
                                        "persistent",
                                        "unspecified",
                                        "transient"
                                      ]
                                    },
                                    "rule": {
                                      "description": "The custom rule language for the subject.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "src": {
                                      "description": "The source of the subject.",
                                      "minLength": 1,
                                      "type": "string"
                                    },
                                    "val": {
                                      "description": "The value of the subject.",
                                      "minLength": 1,
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "x-akamai": {
                              "file-path": "schemas/app-wsfed-settings.yaml"
                            }
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/application.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/applications.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "When set to `true`, the application members include services and directories.",
            "example": "{{expand_sdk}}",
            "in": "query",
            "name": "expand_sdk",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-sdk-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/mgmt-pop/apps/{applicationId}": {
      "get": {
        "description": "Lists a specified application.",
        "operationId": "get-app",
        "summary": "Get an application",
        "tags": [
          "Applications"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "cloud_deployed_at": null,
                  "created_at": "2021-01-13T14:43:11.809596",
                  "created_by": "d4cdaaff-44d4-456f-839c-9e6162afc0cd",
                  "created_by_email": "email@akamai.com",
                  "deployed_at": "2021-01-13T14:44:10.182348",
                  "deployment_started_at": null,
                  "modified_at": "2021-01-13T14:44:10.182454",
                  "name": "",
                  "note": "",
                  "resource_uri": "/api/v1/apps/EuwqjxzAQZ-ncPM4F1jv4g/versions/YnzBpoGTSHGcdxxPjBtzWg",
                  "status": "ready",
                  "uuid_url": "YnzBpoGTSHGcdxxPjBtzWg",
                  "version": "3",
                  "version_settings_data": {
                    "url_location_data": [],
                    "advanced_settings": {
                      "acceleration": "false",
                      "allow_cors": "false",
                      "anonymous_server_conn_limit": "50",
                      "anonymous_server_request_limit": "100",
                      "app_auth": "none",
                      "app_auth_domain": null,
                      "app_client_cert_auth": "false",
                      "app_cookie_domain": null,
                      "app_location": null,
                      "app_server_read_timeout": "60",
                      "authenticated_server_conn_limit": "50",
                      "authenticated_server_request_limit": "100",
                      "client_cert_auth": "false",
                      "client_cert_user_param": "",
                      "cookie_domain": "",
                      "cors_header_list": "unbounded",
                      "cors_max_age": "86400",
                      "cors_method_list": "unbounded",
                      "cors_origin_list": "unbounded",
                      "cors_support_credential": "on",
                      "domain_exception_list": "",
                      "edge_authentication_enabled": "false",
                      "edge_cookie_key": "",
                      "external_cookie_domain": null,
                      "force_mfa": "off",
                      "forward_ticket_granting_ticket": "false",
                      "g2o_enabled": "false",
                      "g2o_key": null,
                      "g2o_nonce": null,
                      "health_check_fall": "3",
                      "health_check_http_host_header": null,
                      "health_check_http_url": "/",
                      "health_check_http_version": "1.1",
                      "health_check_interval": "30000",
                      "health_check_rise": "2",
                      "health_check_timeout": "50000",
                      "health_check_type": "0",
                      "hidden_app": "false",
                      "host_key": null,
                      "hsts_age": "15552000",
                      "http_only_cookie": "true",
                      "https_sslv3": "false",
                      "idle_close_time_seconds": "1200",
                      "idle_conn_ceil": "75",
                      "idle_conn_floor": "50",
                      "idle_conn_step": "10",
                      "idp_idle_expiry": null,
                      "idp_max_expiry": null,
                      "ignore_bypass_mfa": "off",
                      "ignore_cname_resolution": "false",
                      "inject_ajax_javascript": "off",
                      "internal_host_port": "0",
                      "internal_hostname": null,
                      "ip_access_allow": "false",
                      "is_ssl_verification_enabled": "false",
                      "keepalive_connection_pool": "50",
                      "keepalive_enable": "true",
                      "keepalive_timeout": "3",
                      "kerberos_negotiate_once": "off",
                      "keyed_keepalive_enable": "false",
                      "keytab": "",
                      "load_balancing_metric": "round-robin",
                      "logging_enabled": "true",
                      "login_timeout": "5",
                      "login_url": null,
                      "logout_url": null,
                      "mdc_enable": "false",
                      "mfa": "inherit",
                      "offload_onpremise_traffic": "false",
                      "pass_phrase": null,
                      "preauth_consent": "false",
                      "preauth_enforce_url": "",
                      "private_key": null,
                      "proxy_buffer_size_kb": "4",
                      "proxy_disable_clipboard": "false",
                      "rate_limit": "on",
                      "rdp_initial_program": null,
                      "rdp_legacy_mode": "false",
                      "rdp_tls1": "false",
                      "refresh_sticky_cookie": "on",
                      "remote_spark_audio": "true",
                      "remote_spark_disk": "LOCALSHARE",
                      "remote_spark_mapClipboard": "on",
                      "remote_spark_mapDisk": "true",
                      "remote_spark_mapPrinter": "true",
                      "remote_spark_printer": "LOCALPRINTER",
                      "remote_spark_recording": "false",
                      "request_body_rewrite": "false",
                      "request_parameters": null,
                      "saas_enabled": "false",
                      "sentry_redirect_401": "off",
                      "server_cert_validate": "true",
                      "server_request_burst": "100",
                      "service_principle_name": null,
                      "session_sticky": null,
                      "session_sticky_cookie_maxage": "0",
                      "session_sticky_server_cookie": null,
                      "single_host_content_rw": "false",
                      "single_host_cookie_domain": "false",
                      "single_host_enable": "false",
                      "single_host_fqdn": "",
                      "single_host_path": "",
                      "sla_object_url": "____spx/ionpage",
                      "spdy_enabled": "true",
                      "ssh_audit_enabled": "false",
                      "sso": "true",
                      "sticky_agent": "false",
                      "user_name": null,
                      "wapp_auth": "form",
                      "websocket_enabled": "false",
                      "wildcard_internal_hostname": "false",
                      "custom_headers": [],
                      "rdp_remote_apps": []
                    },
                    "authentication": {
                      "auth_enabled": true,
                      "idp": "acnuuf0eQK2a4qvxJe4mWQ",
                      "directories": [
                        "H2fcmydaTb6GRRDAwXVfrg",
                        "NZJHqc-WRDS0FRLVVHEE7Q"
                      ],
                      "groups": {
                        "-0l2rtp7Tb2VE57ZEM-ALg": "inherit",
                        "-nJlyMgJSIC4Odb_C725Bg": "inherit",
                        "0Mu0N691QTi0RA4wS9WUpA": "inherit",
                        "91s2ZSuCQ_qdVazUQ_g0Ww": "inherit",
                        "C5cuRmbZSuOWSt5WYWJ3jw": "inherit",
                        "CFlmTq1hRZK0xj_TkrkxEw": "inherit",
                        "CXgBU8KKRSGU1gySx-2n2Q": "inherit",
                        "CXoHttcUSCGcAGtoiXlU7Q": "inherit",
                        "D9sVrBGMQoWCZvZTLFiemw": "inherit"
                      }
                    },
                    "identity_data": {
                      "app_bundle": "",
                      "app_logo": "",
                      "bookmark_url": "https://sp.iamshowcase.com/ixs?idp=bd2628be266ce863f63d938b5aa628d35c85c948",
                      "cert": "",
                      "client_app_mode": 1,
                      "client_cert": "",
                      "cname": "EuwqjxzAQZ1ncPM4F1jv4g.stage.akamai-access.com",
                      "custom_tls_suite_name": null,
                      "default_tls_suite": true,
                      "description": "",
                      "dialin_server": "EuwqjxzAQZ1ncPM4F1jv4g-stage-akamai-access-com.dialin.stage.akamai-access.com",
                      "dialin_sni": "EuwqjxzAQZ1ncPM4F1jv4g-stage-akamai-access-com.dialin.stage.akamai-access.com",
                      "domain": 1,
                      "domain_suffix": "NOBQl7ETS8iP_7w63N8n4g",
                      "encr_algo": 1,
                      "host": "EuwqjxzAQZ1ncPM4F1jv4g.stage.akamai-access.com",
                      "name": "nesaasapp",
                      "orig_encr_algo": 1,
                      "orig_tls": true,
                      "origin_host": null,
                      "origin_keepalive": 600,
                      "origin_port": 443,
                      "port": 443,
                      "ssl_ca_cert": "",
                      "servers": [],
                      "sites": [
                        "-m8zyc_3Q6GP09tSwmNdHQ"
                      ],
                      "tunnel_internal_hosts": [],
                      "wsfed_settings": [],
                      "app_category": {},
                      "etp_settings": {},
                      "oidc_settings": {},
                      "saml_settings": [
                        {
                          "idp": {
                            "ecp_enable": false,
                            "ecp_resp_signature": false,
                            "entity_id": "https://myiwaidp.login.stage.akamai-access.com/saml/idp/sso",
                            "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor xmlns:md=\"urn:oasis:names:tc:SAML:2.0:metadata\" xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\" entityID=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/sso\">\n<md:IDPSSODescriptor protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\">\n  <md:KeyDescriptor use=\"signing\">\n    <ds:KeyInfo>\n      <ds:X509Data> ... </ds:X509Certificate>\n      </ds:X509Data>\n    </ds:KeyInfo>\n  </md:KeyDescriptor>\n  <md:SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo\" ResponseLocation=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo\"/>\n  <md:SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo\" ResponseLocation=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo\"/>\n  <md:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/sso\"/>\n  <md:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/sso\"/>\n\n</md:IDPSSODescriptor>\n</md:EntityDescriptor>",
                            "resp_bind": "post",
                            "self_signed": true,
                            "sign_algo": "SHA256",
                            "sign_cert": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----",
                            "sign_key": "key ...",
                            "slo_url": "https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo"
                          },
                          "sp": {
                            "acs_url": "https://sp.iamshowcase.com/acs",
                            "default_relay_state": "green",
                            "dst_url": "",
                            "encr_algo": "aes256-cbc",
                            "encr_cert": "",
                            "entity_id": "IAMShowcase",
                            "force_auth": false,
                            "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor xmlns:md=\"urn:oasis:names:tc:SAML:2.0:metadata\" xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\" entityID=\"IAMShowcase\">\n<md:SPSSODescriptor AuthnRequestsSigned=\"false\" WantAssertionsSigned=\"true\" protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\">\n\n\n\n  <SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo\"/>\n\n\n  <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</md:NameIDFormat>\n\n  <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</md:NameIDFormat>\n\n  <md:NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</md:NameIDFormat>\n\n  <md:NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</md:NameIDFormat>\n\n  <md:AssertionConsumerService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://sp.iamshowcase.com/acs\" index=\"0\" isDefault=\"true\"/>\n\n</md:SPSSODescriptor>\n</md:EntityDescriptor>",
                            "req_bind": "redirect",
                            "req_verify": false,
                            "resp_encr": false,
                            "sign_cert": "",
                            "slo_bind": "post",
                            "slo_req_verify": true,
                            "slo_url": "https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo"
                          },
                          "subject": {
                            "fmt": "email",
                            "src": "user.email"
                          },
                          "attrmap": [
                            {
                              "fmt": "basic",
                              "fname": "adminname",
                              "name": "name",
                              "src": "user.firstName"
                            },
                            {
                              "fmt": "unspecified",
                              "fname": "adminemail",
                              "name": "email",
                              "src": "user.email"
                            }
                          ]
                        }
                      ]
                    },
                    "location_data": {
                      "pop_uuid_url": "LpeAuKXkEeOg_Q7rYYFrWw",
                      "connector_data": {}
                    },
                    "names": {
                      "cert_name": "",
                      "domain_suffix": "stage.akamai-access.com",
                      "idp_name": "IWA-IDP",
                      "pop_name": "DPOP-DPus-west-coast-1",
                      "ssl_ca_cert": "",
                      "connector_names": {},
                      "directory_names": {
                        "H2fcmydaTb6GRRDAwXVfrg": "Cloud Directory",
                        "NZJHqc-WRDS0FRLVVHEE7Q": "root.com"
                      },
                      "group_names": {
                        "-0l2rtp7Tb2VE57ZEM-ALg": "skfgroup1",
                        "-nJlyMgJSIC4Odb_C725Bg": "ou_ougroup1",
                        "0Mu0N691QTi0RA4wS9WUpA": "Domain Admins",
                        "91s2ZSuCQ_qdVazUQ_g0Ww": "Domain Users",
                        "C5cuRmbZSuOWSt5WYWJ3jw": "Users",
                        "CFlmTq1hRZK0xj_TkrkxEw": "childgroup1",
                        "CXgBU8KKRSGU1gySx-2n2Q": "group_abhi",
                        "CXoHttcUSCGcAGtoiXlU7Q": "childgroup7",
                        "D9sVrBGMQoWCZvZTLFiemw": "Admins",
                        "JiNtM3t3TgCKJkfg11m9ew": "rootnew2",
                        "NOjlnMTBTfel1jrzzj-H0A": "ntlm",
                        "QXEn1-NuSRWVMjtg8jUaSQ": "ou_shyrusou1",
                        "RdziUef7R_K4wGKzv3eK-Q": "employee",
                        "Rpe6aP2OQzmZaldN_Jkh0A": "skfgroup2"
                      }
                    },
                    "service_data": [
                      {
                        "name": "ICAP Service",
                        "service_type": 3,
                        "status": 0,
                        "rules": [],
                        "settings": [
                          {
                            "name": "ICAP Service_icap_file_size",
                            "setting_type": 1,
                            "value": "500M"
                          },
                          {
                            "name": "ICAP Service_icap_service",
                            "setting_type": 6,
                            "value": "sohaservice"
                          },
                          {
                            "name": "ICAP Service_icap_http_methods",
                            "setting_type": 3,
                            "value": "POST"
                          },
                          {
                            "name": "ICAP Service_icap_port",
                            "setting_type": 5,
                            "value": "1344"
                          }
                        ]
                      },
                      {
                        "name": "WAF",
                        "service_type": 1,
                        "status": 0,
                        "rules": [],
                        "settings": [
                          {
                            "name": "WAF_illegal_resource_access",
                            "setting_type": 10,
                            "value": "On"
                          },
                          {
                            "name": "WAF_protocol_anomalies",
                            "setting_type": 6,
                            "value": "On"
                          },
                          {
                            "name": "WAF_php",
                            "setting_type": 3,
                            "value": "On"
                          }
                        ]
                      }
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access Application creation properties.",
                  "type": "object",
                  "required": [
                    "app_type",
                    "name",
                    "app_profile"
                  ],
                  "properties": {
                    "agents": {
                      "description": "EAA application connector details.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the target connectors for deploying the application configuration.",
                        "type": "object",
                        "required": [
                          "compatible",
                          "name",
                          "uuid_url"
                        ],
                        "properties": {
                          "compatible": {
                            "description": "Whether the target connector is compatible with the application configuration.",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "The name of the connector.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "The UUID URL of the connector.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "app_category": {
                      "additionalProperties": false,
                      "description": "Specifies the category the application belongs to.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the category.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "uuid_url": {
                          "description": "The UUID of the category.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "app_deployed": {
                      "description": "Whether the application configuration is deployed.",
                      "type": "boolean"
                    },
                    "app_logo": {
                      "description": "A URL identifying the application configuration's logo icon.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "app_operational": {
                      "default": 1,
                      "description": "The operational status of the application configuration. Either `1` for No, `2` for Pending, or `3` for Okay.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3
                      ]
                    },
                    "app_profile": {
                      "default": 1,
                      "description": "The access application profile. Either `1` for HTTP, `2` for SharePoint, `3` for Jira, `4` for RDP, `5` for VNC, `6` for ssh, `7` for Jenkins, `8` for Confluence, or `9` for TCP.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9
                      ]
                    },
                    "app_status": {
                      "default": 1,
                      "description": "The status of the application configuration. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, `5` for failed, `6` for cloud deployed, or `7` for connector deployed.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7
                      ]
                    },
                    "app_type": {
                      "description": "The type of application configuration. Either `1` for Enterprise Hosted, `2` for SAAS, `3` for Bookmark, `4` for Tunnel, or `5` for Enterprise Threat Protector.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ]
                    },
                    "auth_agent": {
                      "description": "The connector for the application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "auth_enabled": {
                      "default": "true",
                      "description": "Enables authentication.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "auth_type": {
                      "default": 1,
                      "description": "The type of authentication used. Either `1` for Cloud, `2` for Enterprise, or `3` for Third Party.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3
                      ]
                    },
                    "bookmark_url": {
                      "description": "The Okta Bookmark app URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "cert": {
                      "description": "A valid certificate string for front-end SSL connections. Used if you configure your domain as the external hostname. Specify `null` if you want to name it later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "client_app_mode": {
                      "default": 1,
                      "description": "The mode of client app. `1` for TCP or `2` for Tunnel.",
                      "type": "integer",
                      "enum": [
                        1,
                        2
                      ]
                    },
                    "cname": {
                      "description": "The upstream URL for a CNAME redirect.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the application object's creation.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "data_agent": {
                      "description": "The data connector for the application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "directories": {
                      "description": "Application directory details.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the directory for validating user accounts.",
                        "type": "object",
                        "required": [
                          "type",
                          "name",
                          "user_count",
                          "uuid_url"
                        ],
                        "properties": {
                          "name": {
                            "description": "The name of the directory.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of directory. Select `1` for EAA Cloud Directory, `2` for Active Directory, `3` for LDAP, or `4` for Active Directory LDS.",
                            "type": "string",
                            "enum": [
                              "1",
                              "2",
                              "3",
                              "4"
                            ]
                          },
                          "user_count": {
                            "description": "The total number of user accounts configured on the directory.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "uuid_url": {
                            "description": "The UUID URL of the directory.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "domain": {
                      "default": 1,
                      "description": "The type of access domain. Select `1` for custom or `2` for Akamai.",
                      "type": "integer",
                      "enum": [
                        1,
                        2
                      ]
                    },
                    "domain_suffix": {
                      "description": "The domain suffix. For example, `.com`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "host": {
                      "description": "The external default hostname for the application.",
                      "format": "hostname",
                      "type": "string"
                    },
                    "idp": {
                      "additionalProperties": false,
                      "description": "Specifies the identity provider (IDP) for authenticating user requests.",
                      "type": "object",
                      "properties": {
                        "client_cert_auth": {
                          "description": "Enables certificate-based authentication for the client.",
                          "type": "boolean"
                        },
                        "client_cert_user_param": {
                          "description": "Relevant Cert based parameters for client authentication.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "idp_id": {
                          "description": "The ID of the IDP configuration.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the IDP configuration.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "type": {
                          "default": 1,
                          "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, or `9` for Azure.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9
                          ]
                        }
                      }
                    },
                    "modified_at": {
                      "description": "Name of the user who most recently modified this application object. If the object wasn't modified since first being created, the value matches `createdAt`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the application configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "oidc": {
                      "description": "Enables OpenID Connect (OIDC).",
                      "type": "boolean"
                    },
                    "oidc_settings": {
                      "additionalProperties": false,
                      "description": "JSON settings to implement OIDC.",
                      "type": "object",
                      "required": [
                        "userinfo_endpoint",
                        "certs_uri",
                        "jwks_uri",
                        "check_session_iframe",
                        "token_endpoint",
                        "openid_metadata",
                        "end_session_endpoint",
                        "authorization_endpoint",
                        "discovery_url"
                      ],
                      "properties": {
                        "authorization_endpoint": {
                          "description": "The OIDC endpoint where end users authenticate and grant the client application consent to access their identity information.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "certs_uri": {
                          "description": "The URI of the relaying party's CA certificate.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "check_session_iframe": {
                          "description": "The iframe URL used to check session status.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "discovery_url": {
                          "description": "The OIDC endpoint the client uses to discover OpenID features and other provider endpoints.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "end_session_endpoint": {
                          "description": "The OIDC endpoint that triggers single sign out.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "jwks_uri": {
                          "description": "The publishing location of the JSON web keys (JWK). Used for both the open provider and the relaying party.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "openid_metadata": {
                          "description": "Metadata that describes the OIDC provider's configuration.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "token_endpoint": {
                          "description": "The OIDC endpoint that tokens and authenticates client application requests.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "userinfo_endpoint": {
                          "description": "The OIDC endpoint where the client sends requests for identity claims.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/app-oidc-settings.yaml"
                      }
                    },
                    "origin_host": {
                      "description": "The IP address or FQDN of the application origin server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "pop": {
                      "description": "The identifier for the target region to deploy the application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "popName": {
                      "description": "The target region to deploy the application. For example, `US-West` or `US-East`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "rdp_version": {
                      "description": "The version of remote desktop protocol (RDP).",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource": {
                      "description": "Name of resource mapping to an entity or set of entities. For example, `apps`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_status": {
                      "additionalProperties": false,
                      "description": "The most recent status of various application resources.",
                      "type": "object",
                      "required": [
                        "host_reachable",
                        "directories_status",
                        "cname_dns_status",
                        "data_agent_status",
                        "cert_status",
                        "host_dns_status",
                        "origin_host_status",
                        "dialin_server_status",
                        "pop_status",
                        "internal_host_status"
                      ],
                      "properties": {
                        "cert_status": {
                          "default": 1,
                          "description": "The certificate resource status. Either `1` for Not Added, `2` for Expired, `3` for Invalid CNAME, `4` for Invalid CA, `5` for No Private Key, `6` for Okay, or `7` for Invalid CA User Parameter.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                          ]
                        },
                        "cname_dns_status": {
                          "default": 1,
                          "description": "The CNAME DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Okay.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ]
                        },
                        "data_agent_status": {
                          "default": 1,
                          "description": "The data agent resource status. Either `1` for Not Added, `2` for Not Installed, `3` for Not Approved, `4` for Not Reachable, `5` for Okay, or `6` for Not Compatible.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6
                          ]
                        },
                        "dialin_server_status": {
                          "default": 1,
                          "description": "The dialin server resource status. Either `1` for Not Configured, `2` for Configured, `3` for Not Created, `4` for Not Resolved, and `5` for Okay.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ]
                        },
                        "directories_status": {
                          "default": 1,
                          "description": "The directories resource status. Either `1` for Not Added, `2` for Added, `3` for No Connector, `4` for Pending, `5` for Not Reachable, or `6` for Okay.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6
                          ]
                        },
                        "host_dns_status": {
                          "default": 1,
                          "description": "The host DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Not Created, `6` for Okay, or `7` for CNAME Mismatch.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                          ]
                        },
                        "host_reachable": {
                          "default": false,
                          "description": "Indicates whether the host is reachable.",
                          "type": "boolean"
                        },
                        "internal_host_status": {
                          "default": 1,
                          "description": "The internal host resource status. Either `1` for Not Configured or `2` for Okay.",
                          "type": "integer",
                          "enum": [
                            1,
                            2
                          ]
                        },
                        "origin_host_status": {
                          "default": 1,
                          "description": "The origin host resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Reachable, or `5` for Okay.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ]
                        },
                        "pop_status": {
                          "default": 1,
                          "description": "The pop resource status. Either `1` for Not Configured) or `2` for Okay.",
                          "type": "integer",
                          "enum": [
                            1,
                            2
                          ]
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/app-resource-status.yaml"
                      }
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Resource URIs for the application.",
                      "type": "object",
                      "required": [
                        "directories",
                        "groups",
                        "href",
                        "pop",
                        "services",
                        "sites"
                      ],
                      "properties": {
                        "directories": {
                          "description": "The URI location of an associated directory resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "groups": {
                          "description": "The URI location of an associated group resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The URI location of an associated href resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "pop": {
                          "description": "The URI location of an associated pop resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "services": {
                          "description": "The URI location of an associated service resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "sites": {
                          "description": "The URI location of an associated site resource.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "saml": {
                      "description": "Enables SAML for the application.",
                      "type": "boolean"
                    },
                    "saml_settings": {
                      "description": "SAML configuration for an application.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "SAML configuration for an application.",
                        "type": "object",
                        "required": [
                          "sp",
                          "attrmap",
                          "idp",
                          "subject"
                        ],
                        "properties": {
                          "attrmap": {
                            "description": "SAML attribute mapping details.",
                            "minItems": 1,
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                              "additionalProperties": false,
                              "description": "Specifies mapped attributes for the SAML configuration.",
                              "type": "object",
                              "required": [
                                "name",
                                "fmt",
                                "src"
                              ],
                              "properties": {
                                "fmt": {
                                  "description": "The name format of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "fname": {
                                  "description": "The fname of the attribute.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "rule": {
                                  "description": "The custom rule language for the attribute. ",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "src": {
                                  "description": "The source of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "val": {
                                  "description": "The value of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "idp": {
                            "additionalProperties": false,
                            "description": "Specifies identity provider (IDP) settings for the SAML configuration.",
                            "type": "object",
                            "required": [
                              "self_signed",
                              "ecp_resp_signature",
                              "slo_url",
                              "entity_id",
                              "resp_bind",
                              "sign_key",
                              "sign_cert",
                              "sign_algo",
                              "ecp_enable",
                              "metadata"
                            ],
                            "properties": {
                              "ecp_enable": {
                                "default": false,
                                "description": "Enables enhanced client or proxy (ECP).",
                                "type": "boolean"
                              },
                              "ecp_resp_signature": {
                                "default": false,
                                "description": "The ECP response signature.",
                                "type": "boolean"
                              },
                              "entity_id": {
                                "description": "The entity ID of the identity provider.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "metadata": {
                                "description": "Additional metadata for the service provider configuration. Specify `null` if you want to provide this later.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "resp_bind": {
                                "default": "post",
                                "description": "The response binding. Set to `post`.",
                                "type": "string",
                                "enum": [
                                  "post"
                                ]
                              },
                              "self_signed": {
                                "default": true,
                                "description": "Enables a self-signed certificate.",
                                "type": "boolean"
                              },
                              "sign_algo": {
                                "default": "SHA256",
                                "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                                "type": "string",
                                "enum": [
                                  "SHA256",
                                  "SHA1"
                                ]
                              },
                              "sign_cert": {
                                "description": "The signing certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sign_key": {
                                "description": "The signing key.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "slo_url": {
                                "description": "The single log-out URL.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "sp": {
                            "additionalProperties": false,
                            "description": "Specifies service provider (SP) settings for the SAML configuration.",
                            "type": "object",
                            "required": [
                              "entity_id",
                              "acs_url",
                              "req_bind",
                              "default_relay_state",
                              "force_auth",
                              "req_verify",
                              "resp_encr",
                              "encr_cert",
                              "encr_algo"
                            ],
                            "properties": {
                              "acs_url": {
                                "description": "The single sign-on (ACS) URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "default_relay_state": {
                                "description": "The default relay state. Specify `null` if you want to provide this later.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "dst_url": {
                                "description": "The destination URL.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "encr_algo": {
                                "default": "aes256-cbc",
                                "description": "The response encryption algorithm. Either `aes256-cbc` or `aes128-cbc`.",
                                "type": "string",
                                "enum": [
                                  "aes256-cbc",
                                  "aes128-cbc"
                                ]
                              },
                              "encr_cert": {
                                "description": "The response encryption certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "entity_id": {
                                "description": "The entity ID.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "force_auth": {
                                "default": false,
                                "description": "Forces encryption using the `httponly` flag in the session cookie.",
                                "type": "boolean"
                              },
                              "metadata": {
                                "description": "Additional metadata for the IDP configuration. Specify `null` if you want to provide this later.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "req_bind": {
                                "default": "redirect",
                                "description": "The response binding. Either `redirect` or `post`.",
                                "type": "string",
                                "enum": [
                                  "redirect",
                                  "post"
                                ]
                              },
                              "req_verify": {
                                "default": false,
                                "description": "Enables request verification.",
                                "type": "boolean"
                              },
                              "resp_encr": {
                                "default": false,
                                "description": "Enables encryption on the responses.",
                                "type": "boolean"
                              },
                              "sign_cert": {
                                "description": "The request signing certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "slo_bind": {
                                "default": "post",
                                "description": "The single log-out binding. Either `post` or `redirect`.",
                                "type": "string",
                                "enum": [
                                  "post",
                                  "redirect"
                                ]
                              },
                              "slo_req_verify": {
                                "default": true,
                                "description": "Enables single log-out request verification.",
                                "type": "boolean"
                              },
                              "slo_url": {
                                "description": "The single log-out URL.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "subject": {
                            "additionalProperties": false,
                            "description": "Specifies the subject settings for the SAML configuration.",
                            "type": "object",
                            "required": [
                              "fmt",
                              "src"
                            ],
                            "properties": {
                              "fmt": {
                                "description": "The format for the `NameID` element of the subject. Either `email`, `persistent`, `unspecified`, or `transient`.",
                                "minLength": 1,
                                "type": "string",
                                "enum": [
                                  "email",
                                  "persistent",
                                  "unspecified",
                                  "transient"
                                ]
                              },
                              "rule": {
                                "description": "Processing rule for the subject. If omitted from requests, the API responds with a `null` value you can fill out later.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "src": {
                                "description": "The source of the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "val": {
                                "description": "The value of the subject.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/app-saml-settings.yaml"
                      }
                    },
                    "servers": {
                      "description": "EAA application server details.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Origin server details of the internal application within your network.",
                        "type": "object",
                        "required": [
                          "origin_protocol",
                          "name",
                          "orig_tls",
                          "origin_host",
                          "origin_port"
                        ],
                        "properties": {
                          "name": {
                            "description": "The name of the origin server.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "orig_tls": {
                            "description": "Enables TLS on the origin server.",
                            "type": "boolean"
                          },
                          "origin_host": {
                            "description": "The IP address or FQDN of the origin server.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "origin_port": {
                            "description": "The port number of the origin server.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "origin_protocol": {
                            "description": "The protocol of the origin server connection. Either `ssh` or `http`.",
                            "type": "string",
                            "enum": [
                              "ssh",
                              "http"
                            ]
                          }
                        }
                      }
                    },
                    "services": {
                      "description": "EAA application service details.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A list of services enabled on the application configuration.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the service.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "sites": {
                      "description": "List of associated site resources.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "wsfed": {
                      "description": "Enables Web Services Federation (WSFED) identity federation.",
                      "type": "boolean"
                    },
                    "wsfed_settings": {
                      "description": "JSON settings to implement WSFED.",
                      "minItems": 1,
                      "title": "Web Services Federation (WSFED) settings",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Web Services Federation (WSFED) configuration for an application.",
                        "type": "object",
                        "required": [
                          "sp",
                          "attrmap",
                          "idp",
                          "subject"
                        ],
                        "properties": {
                          "attrmap": {
                            "description": "Contains mapped attributes for the WSFED configuration.",
                            "minItems": 1,
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                              "additionalProperties": false,
                              "description": "Mapped attributes for the WSFED configuration.",
                              "type": "object",
                              "required": [
                                "fmt"
                              ],
                              "properties": {
                                "custom_fmt": {
                                  "description": "The custom format of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "fmt": {
                                  "description": "The name format of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "rule": {
                                  "description": "The custom rule language for the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "src": {
                                  "description": "The source of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "val": {
                                  "description": "The value of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "idp": {
                            "additionalProperties": false,
                            "description": "Specifies identity provider (IDP) settings for the WSFED configuration.",
                            "type": "object",
                            "required": [
                              "entity_id",
                              "sign_key",
                              "sign_cert",
                              "sign_algo"
                            ],
                            "properties": {
                              "entity_id": {
                                "description": "The entity ID of the identity provider.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sign_algo": {
                                "default": "SHA256",
                                "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                                "type": "string",
                                "enum": [
                                  "SHA256",
                                  "SHA1"
                                ]
                              },
                              "sign_cert": {
                                "description": "The signing certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sign_key": {
                                "description": "The signing key.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "sp": {
                            "additionalProperties": false,
                            "description": "Specifies service provider settings for the WSFED configuration.",
                            "type": "object",
                            "required": [
                              "entity_id",
                              "slo_url",
                              "dst_url",
                              "resp_bind",
                              "token_life"
                            ],
                            "properties": {
                              "dst_url": {
                                "description": "The destination URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "entity_id": {
                                "description": "The entity ID of the service provider.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "resp_bind": {
                                "default": "post",
                                "description": "The response binding. Set to `post`.",
                                "type": "string",
                                "enum": [
                                  "post"
                                ]
                              },
                              "slo_url": {
                                "description": "The single log-out URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "token_life": {
                                "default": 3600,
                                "description": "The number of seconds a token is valid.",
                                "minimum": 0,
                                "type": "integer"
                              }
                            }
                          },
                          "subject": {
                            "additionalProperties": false,
                            "description": "Specifies subject settings for the WSFED configuration.",
                            "type": "object",
                            "required": [
                              "fmt"
                            ],
                            "properties": {
                              "custom_fmt": {
                                "description": "The custom format of the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "fmt": {
                                "description": "The format for the `NameID` element of the subject. Either `email`, `persistent`, `unspecified`, or `transient`.",
                                "minLength": 1,
                                "type": "string",
                                "enum": [
                                  "email",
                                  "persistent",
                                  "unspecified",
                                  "transient"
                                ]
                              },
                              "rule": {
                                "description": "The custom rule language for the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "src": {
                                "description": "The source of the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "val": {
                                "description": "The value of the subject.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/app-wsfed-settings.yaml"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/application.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "When set to `true`, the application members include services and directories.",
            "example": "{{expand_sdk}}",
            "in": "query",
            "name": "expand_sdk",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-sdk-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates the details of an application.",
        "operationId": "put-app",
        "summary": "Modify an application",
        "tags": [
          "Applications"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-app"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "app_deployed": true,
                "app_logo": "https://host.com/customer-logo/app_icon_<uuid_url>",
                "app_operational": 3,
                "app_profile": 1,
                "app_status": 2,
                "app_type": 2,
                "auth_agent": null,
                "auth_enabled": "true",
                "auth_type": 1,
                "bookmark_url": "",
                "cert": null,
                "client_app_mode": 1,
                "cname": "<uuid_url>.host.akamai-access.com",
                "data_agent": null,
                "description": "This is the Email Server",
                "domain": 1,
                "domain_suffix": "host.akamai-access.com",
                "host": "<uuid_url>.host.akamai-access.com",
                "name": "Primary Email Application",
                "oidc": false,
                "orig_tls": "true",
                "origin_host": null,
                "origin_port": 443,
                "pop": "LpeAuKXkEeOg_Q7rYYFrWw",
                "popName": "us-pop-1",
                "rdp_version": "V1",
                "resource": "apps",
                "saml": true,
                "status": 1,
                "uuid_url": "ZgpmtAS0ORa2b0jF",
                "wsfed": false,
                "sites": [
                  "skljgoSxoolsooD26Q-qQlGzjYRzuS"
                ],
                "wsfed_settings": [],
                "advanced_settings": {
                  "acceleration": "false",
                  "allow_cors": "false",
                  "anonymous_server_conn_limit": "50",
                  "anonymous_server_request_limit": "100",
                  "app_auth": "none",
                  "app_auth_domain": null,
                  "app_client_cert_auth": "false",
                  "app_cookie_domain": null,
                  "app_location": null,
                  "app_server_read_timeout": "60",
                  "authenticated_server_conn_limit": "50",
                  "authenticated_server_request_limit": "100",
                  "client_cert_auth": "false",
                  "client_cert_user_param": "",
                  "cookie_domain": "",
                  "cors_header_list": "unbounded",
                  "cors_max_age": "86400",
                  "cors_method_list": "unbounded",
                  "cors_origin_list": "unbounded",
                  "cors_support_credential": "on",
                  "domain_exception_list": "",
                  "edge_authentication_enabled": "false",
                  "edge_cookie_key": "",
                  "external_cookie_domain": null,
                  "force_mfa": "off",
                  "forward_ticket_granting_ticket": "false",
                  "g2o_enabled": "false",
                  "g2o_key": null,
                  "g2o_nonce": null,
                  "health_check_fall": "3",
                  "health_check_http_host_header": "",
                  "health_check_http_url": "/",
                  "health_check_http_version": "1.1",
                  "health_check_interval": "30000",
                  "health_check_rise": "2",
                  "health_check_timeout": "50000",
                  "health_check_type": "0",
                  "hidden_app": "false",
                  "hsts_age": "15552000",
                  "http_only_cookie": "true",
                  "https_sslv3": "false",
                  "idle_close_time_seconds": "1200",
                  "idle_conn_ceil": "75",
                  "idle_conn_floor": "50",
                  "idle_conn_step": "10",
                  "idp_idle_expiry": null,
                  "idp_max_expiry": null,
                  "ignore_cname_resolution": "false",
                  "inject_ajax_javascript": "off",
                  "internal_host_port": "0",
                  "internal_hostname": "",
                  "keepalive_connection_pool": "50",
                  "keepalive_enable": "true",
                  "keepalive_timeout": "3",
                  "kerberos_negotiate_once": "off",
                  "keyed_keepalive_enable": "false",
                  "keytab": "",
                  "load_balancing_metric": "round-robin",
                  "logging_enabled": "true",
                  "login_timeout": "5",
                  "login_url": null,
                  "logout_url": null,
                  "mfa": "inherit",
                  "offload_onpremise_traffic": "false",
                  "pass_phrase": null,
                  "preauth_enforce_url": "",
                  "private_key": null,
                  "proxy_buffer_size_kb": null,
                  "proxy_disable_clipboard": "false",
                  "rate_limit": "on",
                  "rdp_initial_program": null,
                  "rdp_legacy_mode": "false",
                  "rdp_tls1": "false",
                  "refresh_sticky_cookie": "on",
                  "remote_spark_audio": "true",
                  "remote_spark_disk": "LOCALSHARE",
                  "remote_spark_mapClipboard": "on",
                  "remote_spark_mapDisk": "true",
                  "remote_spark_mapPrinter": "true",
                  "remote_spark_printer": "LOCALPRINTER",
                  "remote_spark_recording": "false",
                  "request_body_rewrite": "false",
                  "request_parameters": null,
                  "saas_enabled": "false",
                  "sentry_redirect_401": "off",
                  "server_cert_validate": "true",
                  "server_request_burst": "100",
                  "service_principle_name": null,
                  "session_sticky": "false",
                  "session_sticky_cookie_maxage": "0",
                  "session_sticky_server_cookie": null,
                  "sla_object_url": "____spx/iontestpage",
                  "spdy_enabled": "true",
                  "ssh_audit_enabled": "false",
                  "sso": "true",
                  "sticky_agent": "false",
                  "user_name": null,
                  "wapp_auth": "form",
                  "websocket_enabled": "false",
                  "wildcard_internal_hostname": "false",
                  "custom_headers": [],
                  "rdp_remote_apps": []
                },
                "app_category": {
                  "name": "Communications",
                  "uuid_url": "CNasdlkfjlkasdhftZjKIFA"
                },
                "idp": {
                  "client_cert_auth": "false",
                  "client_cert_user_param": "",
                  "idp_id": "aMEgMEgeToipiytpeP1u5kLg",
                  "name": "Pri-SAML-IDP",
                  "type": 2
                },
                "oidc_settings": {},
                "resource_status": {
                  "cert_status": 1,
                  "cname_dns_status": 1,
                  "data_agent_status": 1,
                  "dialin_server_status": 4,
                  "directories_status": 2,
                  "host_dns_status": 4,
                  "host_reachable": false,
                  "internal_host_status": 1,
                  "origin_host_status": 4,
                  "pop_status": 2
                },
                "resource_uri": {
                  "directories": "/api/v1/apps/uuid_url/directories/",
                  "groups": "/api/v1/apps/<uuid_url>/groups/",
                  "href": "/api/v1/apps/<uuid_url>",
                  "pop": "/api/v1/pops/<pop>",
                  "services": "/api/v1/apps/<uuid_url>/services/",
                  "sites": "/api/v1/apps/<uuid_url>/sites"
                },
                "agents": [
                  {
                    "compatible": true,
                    "name": "Email-App-Connector",
                    "uuid_url": "aldTFght_SfoolsooD26Q"
                  },
                  {
                    "compatible": true,
                    "name": "App2-Connector",
                    "uuid_url": "askljgoSxmQnkfJ1fozTA"
                  }
                ],
                "directories": [
                  {
                    "name": "Company-Primary-AD",
                    "type": 1,
                    "user_count": 29584,
                    "uuid_url": "_tvruiywwiyipwgvs8rw"
                  }
                ],
                "saml_settings": [
                  {
                    "idp": {
                      "ecp_enable": false,
                      "ecp_resp_signature": false,
                      "entity_id": "https://host.net/saml/idp/sso",
                      "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor> ... </md:EntityDescriptor>",
                      "resp_bind": "post",
                      "self_signed": true,
                      "sign_algo": "SHA1",
                      "sign_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                      "slo_url": "https://host.net/saml/idp/slo"
                    },
                    "sp": {
                      "acs_url": "https://host.net/saml/sp/response",
                      "default_relay_state": "",
                      "dst_url": "",
                      "encr_algo": "aes256-cbc",
                      "encr_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                      "entity_id": "https://host.net/saml/sp/response",
                      "force_auth": true,
                      "logout_bind": "post",
                      "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor> ... </md:EntityDescriptor>",
                      "req_bind": "redirect",
                      "req_verify": false,
                      "resp_encr": false,
                      "sign_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                      "slo_bind": "redirect",
                      "slo_req_verify": false,
                      "slo_url": ""
                    },
                    "subject": {
                      "attr_source": "user.email",
                      "fmt": "unspecified",
                      "src": "user.userPrincipleName"
                    },
                    "attrmap": [
                      {
                        "fmt": "unspecified",
                        "fname": "",
                        "name": "FirstName",
                        "src": "user.firstName"
                      },
                      {
                        "fmt": "basic",
                        "fname": "",
                        "name": "Email",
                        "src": "user.email"
                      },
                      {
                        "fmt": "basic",
                        "fname": "",
                        "name": "LastName",
                        "src": "user.lastName"
                      }
                    ]
                  }
                ],
                "servers": [
                  {
                    "orig_tls": true,
                    "origin_host": "192.0.2.254",
                    "origin_port": 22,
                    "origin_protocol": "ssh"
                  }
                ],
                "services": [
                  {
                    "name": "Acceleration",
                    "uuid_url": "YqQlGzjYRzuSX04"
                  },
                  {
                    "name": "Access Control",
                    "uuid_url": "RzuSX04c8CECtw15"
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Enterprise Access Application creation properties.",
                "type": "object",
                "required": [
                  "app_type",
                  "name",
                  "app_profile"
                ],
                "properties": {
                  "agents": {
                    "description": "EAA application connector details.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Specifies the target connectors for deploying the application configuration.",
                      "type": "object",
                      "required": [
                        "compatible",
                        "name",
                        "uuid_url"
                      ],
                      "properties": {
                        "compatible": {
                          "description": "Whether the target connector is compatible with the application configuration.",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "The name of the connector.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "uuid_url": {
                          "description": "The UUID URL of the connector.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "app_category": {
                    "additionalProperties": false,
                    "description": "Specifies the category the application belongs to.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the category.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "uuid_url": {
                        "description": "The UUID of the category.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "app_deployed": {
                    "description": "Whether the application configuration is deployed.",
                    "example": "{{app_deployed}}",
                    "type": "boolean"
                  },
                  "app_logo": {
                    "description": "A URL identifying the application configuration's logo icon.",
                    "example": "{{app_logo}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "app_operational": {
                    "default": 1,
                    "description": "The operational status of the application configuration. Either `1` for No, `2` for Pending, or `3` for Okay.",
                    "example": "{{app_operational}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3
                    ]
                  },
                  "app_profile": {
                    "default": 1,
                    "description": "The access application profile. Either `1` for HTTP, `2` for SharePoint, `3` for Jira, `4` for RDP, `5` for VNC, `6` for ssh, `7` for Jenkins, `8` for Confluence, or `9` for TCP.",
                    "example": "{{app_profile}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7,
                      8,
                      9
                    ]
                  },
                  "app_status": {
                    "default": 1,
                    "description": "The status of the application configuration. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, `5` for failed, `6` for cloud deployed, or `7` for connector deployed.",
                    "example": "{{app_status}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7
                    ]
                  },
                  "app_type": {
                    "description": "The type of application configuration. Either `1` for Enterprise Hosted, `2` for SAAS, `3` for Bookmark, `4` for Tunnel, or `5` for Enterprise Threat Protector.",
                    "example": "{{app_type}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ]
                  },
                  "auth_agent": {
                    "description": "The connector for the application.",
                    "example": "{{auth_agent}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "auth_enabled": {
                    "default": "true",
                    "description": "Enables authentication.",
                    "example": "{{auth_enabled}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "auth_type": {
                    "default": 1,
                    "description": "The type of authentication used. Either `1` for Cloud, `2` for Enterprise, or `3` for Third Party.",
                    "example": "{{auth_type}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3
                    ]
                  },
                  "bookmark_url": {
                    "description": "The Okta Bookmark app URL.",
                    "example": "{{bookmark_url}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "cert": {
                    "description": "A valid certificate string for front-end SSL connections. Used if you configure your domain as the external hostname. Specify `null` if you want to name it later.",
                    "example": "{{cert}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "client_app_mode": {
                    "default": 1,
                    "description": "The mode of client app. `1` for TCP or `2` for Tunnel.",
                    "example": "{{client_app_mode}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2
                    ]
                  },
                  "cname": {
                    "description": "The upstream URL for a CNAME redirect.",
                    "example": "{{cname}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking the application object's creation.",
                    "example": "{{created_at}}",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "data_agent": {
                    "description": "The data connector for the application.",
                    "example": "{{data_agent}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the application.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "directories": {
                    "description": "Application directory details.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Specifies the directory for validating user accounts.",
                      "type": "object",
                      "required": [
                        "type",
                        "name",
                        "user_count",
                        "uuid_url"
                      ],
                      "properties": {
                        "name": {
                          "description": "The name of the directory.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "type": {
                          "description": "The type of directory. Select `1` for EAA Cloud Directory, `2` for Active Directory, `3` for LDAP, or `4` for Active Directory LDS.",
                          "type": "string",
                          "enum": [
                            "1",
                            "2",
                            "3",
                            "4"
                          ]
                        },
                        "user_count": {
                          "description": "The total number of user accounts configured on the directory.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "uuid_url": {
                          "description": "The UUID URL of the directory.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "domain": {
                    "default": 1,
                    "description": "The type of access domain. Select `1` for custom or `2` for Akamai.",
                    "example": "{{domain}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2
                    ]
                  },
                  "domain_suffix": {
                    "description": "The domain suffix. For example, `.com`.",
                    "example": "{{domain_suffix}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "host": {
                    "description": "The external default hostname for the application.",
                    "example": "{{host}}",
                    "format": "hostname",
                    "type": "string"
                  },
                  "idp": {
                    "additionalProperties": false,
                    "description": "Specifies the identity provider (IDP) for authenticating user requests.",
                    "type": "object",
                    "properties": {
                      "client_cert_auth": {
                        "description": "Enables certificate-based authentication for the client.",
                        "type": "boolean"
                      },
                      "client_cert_user_param": {
                        "description": "Relevant Cert based parameters for client authentication.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "idp_id": {
                        "description": "The ID of the IDP configuration.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the IDP configuration.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "type": {
                        "default": 1,
                        "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, or `9` for Azure.",
                        "type": "integer",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6,
                          7,
                          8,
                          9
                        ]
                      }
                    }
                  },
                  "modified_at": {
                    "description": "Name of the user who most recently modified this application object. If the object wasn't modified since first being created, the value matches `createdAt`.",
                    "example": "{{modified_at}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the application configuration.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "oidc": {
                    "description": "Enables OpenID Connect (OIDC).",
                    "example": "{{oidc}}",
                    "type": "boolean"
                  },
                  "oidc_settings": {
                    "additionalProperties": false,
                    "description": "JSON settings to implement OIDC.",
                    "type": "object",
                    "required": [
                      "userinfo_endpoint",
                      "certs_uri",
                      "jwks_uri",
                      "check_session_iframe",
                      "token_endpoint",
                      "openid_metadata",
                      "end_session_endpoint",
                      "authorization_endpoint",
                      "discovery_url"
                    ],
                    "properties": {
                      "authorization_endpoint": {
                        "description": "The OIDC endpoint where end users authenticate and grant the client application consent to access their identity information.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "certs_uri": {
                        "description": "The URI of the relaying party's CA certificate.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "check_session_iframe": {
                        "description": "The iframe URL used to check session status.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "discovery_url": {
                        "description": "The OIDC endpoint the client uses to discover OpenID features and other provider endpoints.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "end_session_endpoint": {
                        "description": "The OIDC endpoint that triggers single sign out.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "jwks_uri": {
                        "description": "The publishing location of the JSON web keys (JWK). Used for both the open provider and the relaying party.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "openid_metadata": {
                        "description": "Metadata that describes the OIDC provider's configuration.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "token_endpoint": {
                        "description": "The OIDC endpoint that tokens and authenticates client application requests.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "userinfo_endpoint": {
                        "description": "The OIDC endpoint where the client sends requests for identity claims.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/app-oidc-settings.yaml"
                    }
                  },
                  "origin_host": {
                    "description": "The IP address or FQDN of the application origin server.",
                    "example": "{{origin_host}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "pop": {
                    "description": "The identifier for the target region to deploy the application.",
                    "example": "{{pop}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "popName": {
                    "description": "The target region to deploy the application. For example, `US-West` or `US-East`.",
                    "example": "{{popName}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "rdp_version": {
                    "description": "The version of remote desktop protocol (RDP).",
                    "example": "{{rdp_version}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource": {
                    "description": "Name of resource mapping to an entity or set of entities. For example, `apps`.",
                    "example": "{{resource}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource_status": {
                    "additionalProperties": false,
                    "description": "The most recent status of various application resources.",
                    "type": "object",
                    "required": [
                      "host_reachable",
                      "directories_status",
                      "cname_dns_status",
                      "data_agent_status",
                      "cert_status",
                      "host_dns_status",
                      "origin_host_status",
                      "dialin_server_status",
                      "pop_status",
                      "internal_host_status"
                    ],
                    "properties": {
                      "cert_status": {
                        "default": 1,
                        "description": "The certificate resource status. Either `1` for Not Added, `2` for Expired, `3` for Invalid CNAME, `4` for Invalid CA, `5` for No Private Key, `6` for Okay, or `7` for Invalid CA User Parameter.",
                        "type": "integer",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6,
                          7
                        ]
                      },
                      "cname_dns_status": {
                        "default": 1,
                        "description": "The CNAME DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Okay.",
                        "type": "integer",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5
                        ]
                      },
                      "data_agent_status": {
                        "default": 1,
                        "description": "The data agent resource status. Either `1` for Not Added, `2` for Not Installed, `3` for Not Approved, `4` for Not Reachable, `5` for Okay, or `6` for Not Compatible.",
                        "type": "integer",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6
                        ]
                      },
                      "dialin_server_status": {
                        "default": 1,
                        "description": "The dialin server resource status. Either `1` for Not Configured, `2` for Configured, `3` for Not Created, `4` for Not Resolved, and `5` for Okay.",
                        "type": "integer",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5
                        ]
                      },
                      "directories_status": {
                        "default": 1,
                        "description": "The directories resource status. Either `1` for Not Added, `2` for Added, `3` for No Connector, `4` for Pending, `5` for Not Reachable, or `6` for Okay.",
                        "type": "integer",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6
                        ]
                      },
                      "host_dns_status": {
                        "default": 1,
                        "description": "The host DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Not Created, `6` for Okay, or `7` for CNAME Mismatch.",
                        "type": "integer",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5,
                          6,
                          7
                        ]
                      },
                      "host_reachable": {
                        "default": false,
                        "description": "Indicates whether the host is reachable.",
                        "type": "boolean"
                      },
                      "internal_host_status": {
                        "default": 1,
                        "description": "The internal host resource status. Either `1` for Not Configured or `2` for Okay.",
                        "type": "integer",
                        "enum": [
                          1,
                          2
                        ]
                      },
                      "origin_host_status": {
                        "default": 1,
                        "description": "The origin host resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Reachable, or `5` for Okay.",
                        "type": "integer",
                        "enum": [
                          1,
                          2,
                          3,
                          4,
                          5
                        ]
                      },
                      "pop_status": {
                        "default": 1,
                        "description": "The pop resource status. Either `1` for Not Configured) or `2` for Okay.",
                        "type": "integer",
                        "enum": [
                          1,
                          2
                        ]
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/app-resource-status.yaml"
                    }
                  },
                  "resource_uri": {
                    "additionalProperties": false,
                    "description": "Resource URIs for the application.",
                    "type": "object",
                    "required": [
                      "directories",
                      "groups",
                      "href",
                      "pop",
                      "services",
                      "sites"
                    ],
                    "properties": {
                      "directories": {
                        "description": "The URI location of an associated directory resource.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "groups": {
                        "description": "The URI location of an associated group resource.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "href": {
                        "description": "The URI location of an associated href resource.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "pop": {
                        "description": "The URI location of an associated pop resource.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "services": {
                        "description": "The URI location of an associated service resource.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "sites": {
                        "description": "The URI location of an associated site resource.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "saml": {
                    "description": "Enables SAML for the application.",
                    "example": "{{saml}}",
                    "type": "boolean"
                  },
                  "saml_settings": {
                    "description": "SAML configuration for an application.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "SAML configuration for an application.",
                      "type": "object",
                      "required": [
                        "sp",
                        "attrmap",
                        "idp",
                        "subject"
                      ],
                      "properties": {
                        "attrmap": {
                          "description": "SAML attribute mapping details.",
                          "minItems": 1,
                          "type": "array",
                          "uniqueItems": true,
                          "items": {
                            "additionalProperties": false,
                            "description": "Specifies mapped attributes for the SAML configuration.",
                            "type": "object",
                            "required": [
                              "name",
                              "fmt",
                              "src"
                            ],
                            "properties": {
                              "fmt": {
                                "description": "The name format of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "fname": {
                                "description": "The fname of the attribute.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "rule": {
                                "description": "The custom rule language for the attribute. ",
                                "minLength": 1,
                                "type": "string"
                              },
                              "src": {
                                "description": "The source of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "val": {
                                "description": "The value of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "idp": {
                          "additionalProperties": false,
                          "description": "Specifies identity provider (IDP) settings for the SAML configuration.",
                          "type": "object",
                          "required": [
                            "self_signed",
                            "ecp_resp_signature",
                            "slo_url",
                            "entity_id",
                            "resp_bind",
                            "sign_key",
                            "sign_cert",
                            "sign_algo",
                            "ecp_enable",
                            "metadata"
                          ],
                          "properties": {
                            "ecp_enable": {
                              "default": false,
                              "description": "Enables enhanced client or proxy (ECP).",
                              "type": "boolean"
                            },
                            "ecp_resp_signature": {
                              "default": false,
                              "description": "The ECP response signature.",
                              "type": "boolean"
                            },
                            "entity_id": {
                              "description": "The entity ID of the identity provider.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "metadata": {
                              "description": "Additional metadata for the service provider configuration. Specify `null` if you want to provide this later.",
                              "minLength": 1,
                              "nullable": true,
                              "type": "string"
                            },
                            "resp_bind": {
                              "default": "post",
                              "description": "The response binding. Set to `post`.",
                              "type": "string",
                              "enum": [
                                "post"
                              ]
                            },
                            "self_signed": {
                              "default": true,
                              "description": "Enables a self-signed certificate.",
                              "type": "boolean"
                            },
                            "sign_algo": {
                              "default": "SHA256",
                              "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                              "type": "string",
                              "enum": [
                                "SHA256",
                                "SHA1"
                              ]
                            },
                            "sign_cert": {
                              "description": "The signing certificate.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "sign_key": {
                              "description": "The signing key.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "slo_url": {
                              "description": "The single log-out URL.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        },
                        "sp": {
                          "additionalProperties": false,
                          "description": "Specifies service provider (SP) settings for the SAML configuration.",
                          "type": "object",
                          "required": [
                            "entity_id",
                            "acs_url",
                            "req_bind",
                            "default_relay_state",
                            "force_auth",
                            "req_verify",
                            "resp_encr",
                            "encr_cert",
                            "encr_algo"
                          ],
                          "properties": {
                            "acs_url": {
                              "description": "The single sign-on (ACS) URL.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "default_relay_state": {
                              "description": "The default relay state. Specify `null` if you want to provide this later.",
                              "minLength": 0,
                              "type": "string"
                            },
                            "dst_url": {
                              "description": "The destination URL.",
                              "minLength": 0,
                              "type": "string"
                            },
                            "encr_algo": {
                              "default": "aes256-cbc",
                              "description": "The response encryption algorithm. Either `aes256-cbc` or `aes128-cbc`.",
                              "type": "string",
                              "enum": [
                                "aes256-cbc",
                                "aes128-cbc"
                              ]
                            },
                            "encr_cert": {
                              "description": "The response encryption certificate.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "entity_id": {
                              "description": "The entity ID.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "force_auth": {
                              "default": false,
                              "description": "Forces encryption using the `httponly` flag in the session cookie.",
                              "type": "boolean"
                            },
                            "metadata": {
                              "description": "Additional metadata for the IDP configuration. Specify `null` if you want to provide this later.",
                              "minLength": 1,
                              "nullable": true,
                              "type": "string"
                            },
                            "req_bind": {
                              "default": "redirect",
                              "description": "The response binding. Either `redirect` or `post`.",
                              "type": "string",
                              "enum": [
                                "redirect",
                                "post"
                              ]
                            },
                            "req_verify": {
                              "default": false,
                              "description": "Enables request verification.",
                              "type": "boolean"
                            },
                            "resp_encr": {
                              "default": false,
                              "description": "Enables encryption on the responses.",
                              "type": "boolean"
                            },
                            "sign_cert": {
                              "description": "The request signing certificate.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "slo_bind": {
                              "default": "post",
                              "description": "The single log-out binding. Either `post` or `redirect`.",
                              "type": "string",
                              "enum": [
                                "post",
                                "redirect"
                              ]
                            },
                            "slo_req_verify": {
                              "default": true,
                              "description": "Enables single log-out request verification.",
                              "type": "boolean"
                            },
                            "slo_url": {
                              "description": "The single log-out URL.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        },
                        "subject": {
                          "additionalProperties": false,
                          "description": "Specifies the subject settings for the SAML configuration.",
                          "type": "object",
                          "required": [
                            "fmt",
                            "src"
                          ],
                          "properties": {
                            "fmt": {
                              "description": "The format for the `NameID` element of the subject. Either `email`, `persistent`, `unspecified`, or `transient`.",
                              "minLength": 1,
                              "type": "string",
                              "enum": [
                                "email",
                                "persistent",
                                "unspecified",
                                "transient"
                              ]
                            },
                            "rule": {
                              "description": "Processing rule for the subject. If omitted from requests, the API responds with a `null` value you can fill out later.",
                              "minLength": 1,
                              "nullable": true,
                              "type": "string"
                            },
                            "src": {
                              "description": "The source of the subject.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "val": {
                              "description": "The value of the subject.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/app-saml-settings.yaml"
                    }
                  },
                  "servers": {
                    "description": "EAA application server details.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Origin server details of the internal application within your network.",
                      "type": "object",
                      "required": [
                        "origin_protocol",
                        "name",
                        "orig_tls",
                        "origin_host",
                        "origin_port"
                      ],
                      "properties": {
                        "name": {
                          "description": "The name of the origin server.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "orig_tls": {
                          "description": "Enables TLS on the origin server.",
                          "type": "boolean"
                        },
                        "origin_host": {
                          "description": "The IP address or FQDN of the origin server.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "origin_port": {
                          "description": "The port number of the origin server.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "origin_protocol": {
                          "description": "The protocol of the origin server connection. Either `ssh` or `http`.",
                          "type": "string",
                          "enum": [
                            "ssh",
                            "http"
                          ]
                        }
                      }
                    }
                  },
                  "services": {
                    "description": "EAA application service details.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "A list of services enabled on the application configuration.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the service.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "sites": {
                    "description": "List of associated site resources.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "uuid_url": {
                    "description": "A unique identifier for the application.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "wsfed": {
                    "description": "Enables Web Services Federation (WSFED) identity federation.",
                    "example": "{{wsfed}}",
                    "type": "boolean"
                  },
                  "wsfed_settings": {
                    "description": "JSON settings to implement WSFED.",
                    "minItems": 1,
                    "title": "Web Services Federation (WSFED) settings",
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Web Services Federation (WSFED) configuration for an application.",
                      "type": "object",
                      "required": [
                        "sp",
                        "attrmap",
                        "idp",
                        "subject"
                      ],
                      "properties": {
                        "attrmap": {
                          "description": "Contains mapped attributes for the WSFED configuration.",
                          "minItems": 1,
                          "type": "array",
                          "uniqueItems": true,
                          "items": {
                            "additionalProperties": false,
                            "description": "Mapped attributes for the WSFED configuration.",
                            "type": "object",
                            "required": [
                              "fmt"
                            ],
                            "properties": {
                              "custom_fmt": {
                                "description": "The custom format of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "fmt": {
                                "description": "The name format of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "rule": {
                                "description": "The custom rule language for the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "src": {
                                "description": "The source of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "val": {
                                "description": "The value of the attribute.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        },
                        "idp": {
                          "additionalProperties": false,
                          "description": "Specifies identity provider (IDP) settings for the WSFED configuration.",
                          "type": "object",
                          "required": [
                            "entity_id",
                            "sign_key",
                            "sign_cert",
                            "sign_algo"
                          ],
                          "properties": {
                            "entity_id": {
                              "description": "The entity ID of the identity provider.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "sign_algo": {
                              "default": "SHA256",
                              "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                              "type": "string",
                              "enum": [
                                "SHA256",
                                "SHA1"
                              ]
                            },
                            "sign_cert": {
                              "description": "The signing certificate.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "sign_key": {
                              "description": "The signing key.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        },
                        "sp": {
                          "additionalProperties": false,
                          "description": "Specifies service provider settings for the WSFED configuration.",
                          "type": "object",
                          "required": [
                            "entity_id",
                            "slo_url",
                            "dst_url",
                            "resp_bind",
                            "token_life"
                          ],
                          "properties": {
                            "dst_url": {
                              "description": "The destination URL.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "entity_id": {
                              "description": "The entity ID of the service provider.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "resp_bind": {
                              "default": "post",
                              "description": "The response binding. Set to `post`.",
                              "type": "string",
                              "enum": [
                                "post"
                              ]
                            },
                            "slo_url": {
                              "description": "The single log-out URL.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "token_life": {
                              "default": 3600,
                              "description": "The number of seconds a token is valid.",
                              "minimum": 0,
                              "type": "integer"
                            }
                          }
                        },
                        "subject": {
                          "additionalProperties": false,
                          "description": "Specifies subject settings for the WSFED configuration.",
                          "type": "object",
                          "required": [
                            "fmt"
                          ],
                          "properties": {
                            "custom_fmt": {
                              "description": "The custom format of the subject.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "fmt": {
                              "description": "The format for the `NameID` element of the subject. Either `email`, `persistent`, `unspecified`, or `transient`.",
                              "minLength": 1,
                              "type": "string",
                              "enum": [
                                "email",
                                "persistent",
                                "unspecified",
                                "transient"
                              ]
                            },
                            "rule": {
                              "description": "The custom rule language for the subject.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "src": {
                              "description": "The source of the subject.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "val": {
                              "description": "The value of the subject.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/app-wsfed-settings.yaml"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/application.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "app_deployed": true,
                  "app_logo": "https://host.com/customer-logo/app_icon_<uuid_url>",
                  "app_operational": 3,
                  "app_profile": 1,
                  "app_status": 2,
                  "app_type": 2,
                  "auth_agent": null,
                  "auth_enabled": "true",
                  "auth_type": 1,
                  "bookmark_url": "",
                  "cert": null,
                  "client_app_mode": 1,
                  "cname": "<uuid_url>.host.akamai-access.com",
                  "created_at": "2017-10-09T21:21:27.548211",
                  "data_agent": null,
                  "description": "This is the Email Server",
                  "domain": 1,
                  "domain_suffix": "host.akamai-access.com",
                  "host": "<uuid_url>.host.akamai-access.com",
                  "modified_at": "2019-03-28T20:10:22.418270",
                  "name": "Primary Email Application",
                  "oidc": false,
                  "orig_tls": "true",
                  "origin_host": null,
                  "origin_port": 443,
                  "pop": "LpeAuKXkEeOg_Q7rYYFrWw",
                  "popName": "us-pop-1",
                  "rdp_version": "V1",
                  "resource": "apps",
                  "saml": true,
                  "status": 1,
                  "uuid_url": "ZgpmtAS0ORa2b0jF",
                  "wsfed": false,
                  "sites": [
                    "skljgoSxoolsooD26Q-qQlGzjYRzuS"
                  ],
                  "wsfed_settings": [],
                  "advanced_settings": {
                    "acceleration": "false",
                    "allow_cors": "false",
                    "anonymous_server_conn_limit": "50",
                    "anonymous_server_request_limit": "100",
                    "app_auth": "none",
                    "app_auth_domain": null,
                    "app_client_cert_auth": "false",
                    "app_cookie_domain": null,
                    "app_location": null,
                    "app_server_read_timeout": "60",
                    "authenticated_server_conn_limit": "50",
                    "authenticated_server_request_limit": "100",
                    "client_cert_auth": "false",
                    "client_cert_user_param": "",
                    "cookie_domain": "",
                    "cors_header_list": "unbounded",
                    "cors_max_age": "86400",
                    "cors_method_list": "unbounded",
                    "cors_origin_list": "unbounded",
                    "cors_support_credential": "on",
                    "domain_exception_list": "",
                    "edge_authentication_enabled": "false",
                    "edge_cookie_key": "",
                    "external_cookie_domain": null,
                    "force_mfa": "off",
                    "forward_ticket_granting_ticket": "false",
                    "g2o_enabled": "false",
                    "g2o_key": null,
                    "g2o_nonce": null,
                    "health_check_fall": "3",
                    "health_check_http_host_header": "",
                    "health_check_http_url": "/",
                    "health_check_http_version": "1.1",
                    "health_check_interval": "30000",
                    "health_check_rise": "2",
                    "health_check_timeout": "50000",
                    "health_check_type": "0",
                    "hidden_app": "false",
                    "hsts_age": "15552000",
                    "http_only_cookie": "true",
                    "https_sslv3": "false",
                    "idle_close_time_seconds": "1200",
                    "idle_conn_ceil": "75",
                    "idle_conn_floor": "50",
                    "idle_conn_step": "10",
                    "idp_idle_expiry": null,
                    "idp_max_expiry": null,
                    "ignore_cname_resolution": "false",
                    "inject_ajax_javascript": "off",
                    "internal_host_port": "0",
                    "internal_hostname": "",
                    "keepalive_connection_pool": "50",
                    "keepalive_enable": "true",
                    "keepalive_timeout": "3",
                    "kerberos_negotiate_once": "off",
                    "keyed_keepalive_enable": "false",
                    "keytab": "",
                    "load_balancing_metric": "round-robin",
                    "logging_enabled": "true",
                    "login_timeout": "5",
                    "login_url": null,
                    "logout_url": null,
                    "mfa": "inherit",
                    "offload_onpremise_traffic": "false",
                    "pass_phrase": null,
                    "preauth_enforce_url": "",
                    "private_key": null,
                    "proxy_buffer_size_kb": null,
                    "proxy_disable_clipboard": "false",
                    "rate_limit": "on",
                    "rdp_initial_program": null,
                    "rdp_legacy_mode": "false",
                    "rdp_tls1": "false",
                    "refresh_sticky_cookie": "on",
                    "remote_spark_audio": "true",
                    "remote_spark_disk": "LOCALSHARE",
                    "remote_spark_mapClipboard": "on",
                    "remote_spark_mapDisk": "true",
                    "remote_spark_mapPrinter": "true",
                    "remote_spark_printer": "LOCALPRINTER",
                    "remote_spark_recording": "false",
                    "request_body_rewrite": "false",
                    "request_parameters": null,
                    "saas_enabled": "false",
                    "sentry_redirect_401": "off",
                    "server_cert_validate": "true",
                    "server_request_burst": "100",
                    "service_principle_name": null,
                    "session_sticky": "false",
                    "session_sticky_cookie_maxage": "0",
                    "session_sticky_server_cookie": null,
                    "sla_object_url": "____spx/ionpage",
                    "spdy_enabled": "true",
                    "ssh_audit_enabled": "false",
                    "sso": "true",
                    "sticky_agent": "false",
                    "user_name": null,
                    "wapp_auth": "form",
                    "websocket_enabled": "false",
                    "wildcard_internal_hostname": "false",
                    "custom_headers": [],
                    "rdp_remote_apps": []
                  },
                  "app_category": {
                    "name": "Communications",
                    "uuid_url": "CNasdlkfjlkasdhftZjKIFA"
                  },
                  "idp": {
                    "client_cert_auth": "false",
                    "client_cert_user_param": "",
                    "idp_id": "aMEgMEgeToipiytpeP1u5kLg",
                    "name": "Pri-SAML-IDP",
                    "type": 2
                  },
                  "oidc_settings": {},
                  "resource_status": {
                    "cert_status": 1,
                    "cname_dns_status": 1,
                    "data_agent_status": 1,
                    "dialin_server_status": 4,
                    "directories_status": 2,
                    "host_dns_status": 4,
                    "host_reachable": false,
                    "internal_host_status": 1,
                    "origin_host_status": 4,
                    "pop_status": 2
                  },
                  "resource_uri": {
                    "directories": "/api/v1/apps/uuid_url/directories/",
                    "groups": "/api/v1/apps/<uuid_url>/groups/",
                    "href": "/api/v1/apps/<uuid_url>",
                    "pop": "/api/v1/pops/<pop>",
                    "services": "/api/v1/apps/<uuid_url>/services/",
                    "sites": "/api/v1/apps/<uuid_url>/sites"
                  },
                  "agents": [
                    {
                      "compatible": true,
                      "name": "Email-App-Connector",
                      "uuid_url": "aldTFght_SfoolsooD26Q"
                    },
                    {
                      "compatible": true,
                      "name": "App2-Connector",
                      "uuid_url": "askljgoSxmQnkfJ1fozTA"
                    }
                  ],
                  "directories": [
                    {
                      "name": "Company-Primary-AD",
                      "type": 1,
                      "user_count": 29584,
                      "uuid_url": "_tvruiywwiyipwgvs8rw"
                    }
                  ],
                  "saml_settings": [
                    {
                      "idp": {
                        "ecp_enable": false,
                        "ecp_resp_signature": false,
                        "entity_id": "https://host.net/saml/idp/sso",
                        "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor> ... </md:EntityDescriptor>",
                        "resp_bind": "post",
                        "self_signed": true,
                        "sign_algo": "SHA1",
                        "sign_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                        "slo_url": "https://host.net/saml/idp/slo"
                      },
                      "sp": {
                        "acs_url": "https://host.net/saml/sp/response",
                        "default_relay_state": "",
                        "dst_url": "",
                        "encr_algo": "aes256-cbc",
                        "encr_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                        "entity_id": "https://host.net/saml/sp/response",
                        "force_auth": true,
                        "logout_bind": "post",
                        "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor> ... </md:EntityDescriptor>",
                        "req_bind": "redirect",
                        "req_verify": false,
                        "resp_encr": false,
                        "sign_cert": "-----BEGIN CERTIFICATE-----\n ... \n-----END CERTIFICATE-----",
                        "slo_bind": "redirect",
                        "slo_req_verify": false,
                        "slo_url": ""
                      },
                      "subject": {
                        "attr_source": "user.email",
                        "fmt": "unspecified",
                        "src": "user.userPrincipleName"
                      },
                      "attrmap": [
                        {
                          "fmt": "unspecified",
                          "fname": "",
                          "name": "Alice",
                          "src": "user.aliceSmith"
                        },
                        {
                          "fmt": "basic",
                          "fname": "",
                          "name": "asmith@company.com",
                          "src": "user.asmith"
                        },
                        {
                          "fmt": "basic",
                          "fname": "",
                          "name": "Smith",
                          "src": "user.aliceSmith"
                        }
                      ]
                    }
                  ],
                  "servers": [
                    {
                      "orig_tls": true,
                      "origin_host": "192.0.2.204",
                      "origin_port": 22,
                      "origin_protocol": "ssh"
                    }
                  ],
                  "services": [
                    {
                      "name": "Acceleration",
                      "uuid_url": "YqQlGzjYRzuSX04"
                    },
                    {
                      "name": "Access Control",
                      "uuid_url": "RzuSX04c8CECtw15"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access Application creation properties.",
                  "type": "object",
                  "required": [
                    "app_type",
                    "name",
                    "app_profile"
                  ],
                  "properties": {
                    "agents": {
                      "description": "EAA application connector details.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the target connectors for deploying the application configuration.",
                        "type": "object",
                        "required": [
                          "compatible",
                          "name",
                          "uuid_url"
                        ],
                        "properties": {
                          "compatible": {
                            "description": "Whether the target connector is compatible with the application configuration.",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "The name of the connector.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "The UUID URL of the connector.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "app_category": {
                      "additionalProperties": false,
                      "description": "Specifies the category the application belongs to.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the category.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "uuid_url": {
                          "description": "The UUID of the category.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "app_deployed": {
                      "description": "Whether the application configuration is deployed.",
                      "type": "boolean"
                    },
                    "app_logo": {
                      "description": "A URL identifying the application configuration's logo icon.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "app_operational": {
                      "default": 1,
                      "description": "The operational status of the application configuration. Either `1` for No, `2` for Pending, or `3` for Okay.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3
                      ]
                    },
                    "app_profile": {
                      "default": 1,
                      "description": "The access application profile. Either `1` for HTTP, `2` for SharePoint, `3` for Jira, `4` for RDP, `5` for VNC, `6` for ssh, `7` for Jenkins, `8` for Confluence, or `9` for TCP.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9
                      ]
                    },
                    "app_status": {
                      "default": 1,
                      "description": "The status of the application configuration. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, `5` for failed, `6` for cloud deployed, or `7` for connector deployed.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7
                      ]
                    },
                    "app_type": {
                      "description": "The type of application configuration. Either `1` for Enterprise Hosted, `2` for SAAS, `3` for Bookmark, `4` for Tunnel, or `5` for Enterprise Threat Protector.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ]
                    },
                    "auth_agent": {
                      "description": "The connector for the application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "auth_enabled": {
                      "default": "true",
                      "description": "Enables authentication.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "auth_type": {
                      "default": 1,
                      "description": "The type of authentication used. Either `1` for Cloud, `2` for Enterprise, or `3` for Third Party.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3
                      ]
                    },
                    "bookmark_url": {
                      "description": "The Okta Bookmark app URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "cert": {
                      "description": "A valid certificate string for front-end SSL connections. Used if you configure your domain as the external hostname. Specify `null` if you want to name it later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "client_app_mode": {
                      "default": 1,
                      "description": "The mode of client app. `1` for TCP or `2` for Tunnel.",
                      "type": "integer",
                      "enum": [
                        1,
                        2
                      ]
                    },
                    "cname": {
                      "description": "The upstream URL for a CNAME redirect.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the application object's creation.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "data_agent": {
                      "description": "The data connector for the application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "directories": {
                      "description": "Application directory details.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the directory for validating user accounts.",
                        "type": "object",
                        "required": [
                          "type",
                          "name",
                          "user_count",
                          "uuid_url"
                        ],
                        "properties": {
                          "name": {
                            "description": "The name of the directory.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of directory. Select `1` for EAA Cloud Directory, `2` for Active Directory, `3` for LDAP, or `4` for Active Directory LDS.",
                            "type": "string",
                            "enum": [
                              "1",
                              "2",
                              "3",
                              "4"
                            ]
                          },
                          "user_count": {
                            "description": "The total number of user accounts configured on the directory.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "uuid_url": {
                            "description": "The UUID URL of the directory.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "domain": {
                      "default": 1,
                      "description": "The type of access domain. Select `1` for custom or `2` for Akamai.",
                      "type": "integer",
                      "enum": [
                        1,
                        2
                      ]
                    },
                    "domain_suffix": {
                      "description": "The domain suffix. For example, `.com`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "host": {
                      "description": "The external default hostname for the application.",
                      "format": "hostname",
                      "type": "string"
                    },
                    "idp": {
                      "additionalProperties": false,
                      "description": "Specifies the identity provider (IDP) for authenticating user requests.",
                      "type": "object",
                      "properties": {
                        "client_cert_auth": {
                          "description": "Enables certificate-based authentication for the client.",
                          "type": "boolean"
                        },
                        "client_cert_user_param": {
                          "description": "Relevant Cert based parameters for client authentication.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "idp_id": {
                          "description": "The ID of the IDP configuration.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the IDP configuration.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "type": {
                          "default": 1,
                          "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, or `9` for Azure.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9
                          ]
                        }
                      }
                    },
                    "modified_at": {
                      "description": "Name of the user who most recently modified this application object. If the object wasn't modified since first being created, the value matches `createdAt`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the application configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "oidc": {
                      "description": "Enables OpenID Connect (OIDC).",
                      "type": "boolean"
                    },
                    "oidc_settings": {
                      "additionalProperties": false,
                      "description": "JSON settings to implement OIDC.",
                      "type": "object",
                      "required": [
                        "userinfo_endpoint",
                        "certs_uri",
                        "jwks_uri",
                        "check_session_iframe",
                        "token_endpoint",
                        "openid_metadata",
                        "end_session_endpoint",
                        "authorization_endpoint",
                        "discovery_url"
                      ],
                      "properties": {
                        "authorization_endpoint": {
                          "description": "The OIDC endpoint where end users authenticate and grant the client application consent to access their identity information.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "certs_uri": {
                          "description": "The URI of the relaying party's CA certificate.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "check_session_iframe": {
                          "description": "The iframe URL used to check session status.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "discovery_url": {
                          "description": "The OIDC endpoint the client uses to discover OpenID features and other provider endpoints.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "end_session_endpoint": {
                          "description": "The OIDC endpoint that triggers single sign out.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "jwks_uri": {
                          "description": "The publishing location of the JSON web keys (JWK). Used for both the open provider and the relaying party.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "openid_metadata": {
                          "description": "Metadata that describes the OIDC provider's configuration.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "token_endpoint": {
                          "description": "The OIDC endpoint that tokens and authenticates client application requests.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "userinfo_endpoint": {
                          "description": "The OIDC endpoint where the client sends requests for identity claims.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/app-oidc-settings.yaml"
                      }
                    },
                    "origin_host": {
                      "description": "The IP address or FQDN of the application origin server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "pop": {
                      "description": "The identifier for the target region to deploy the application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "popName": {
                      "description": "The target region to deploy the application. For example, `US-West` or `US-East`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "rdp_version": {
                      "description": "The version of remote desktop protocol (RDP).",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource": {
                      "description": "Name of resource mapping to an entity or set of entities. For example, `apps`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_status": {
                      "additionalProperties": false,
                      "description": "The most recent status of various application resources.",
                      "type": "object",
                      "required": [
                        "host_reachable",
                        "directories_status",
                        "cname_dns_status",
                        "data_agent_status",
                        "cert_status",
                        "host_dns_status",
                        "origin_host_status",
                        "dialin_server_status",
                        "pop_status",
                        "internal_host_status"
                      ],
                      "properties": {
                        "cert_status": {
                          "default": 1,
                          "description": "The certificate resource status. Either `1` for Not Added, `2` for Expired, `3` for Invalid CNAME, `4` for Invalid CA, `5` for No Private Key, `6` for Okay, or `7` for Invalid CA User Parameter.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                          ]
                        },
                        "cname_dns_status": {
                          "default": 1,
                          "description": "The CNAME DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Okay.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ]
                        },
                        "data_agent_status": {
                          "default": 1,
                          "description": "The data agent resource status. Either `1` for Not Added, `2` for Not Installed, `3` for Not Approved, `4` for Not Reachable, `5` for Okay, or `6` for Not Compatible.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6
                          ]
                        },
                        "dialin_server_status": {
                          "default": 1,
                          "description": "The dialin server resource status. Either `1` for Not Configured, `2` for Configured, `3` for Not Created, `4` for Not Resolved, and `5` for Okay.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ]
                        },
                        "directories_status": {
                          "default": 1,
                          "description": "The directories resource status. Either `1` for Not Added, `2` for Added, `3` for No Connector, `4` for Pending, `5` for Not Reachable, or `6` for Okay.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6
                          ]
                        },
                        "host_dns_status": {
                          "default": 1,
                          "description": "The host DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Not Created, `6` for Okay, or `7` for CNAME Mismatch.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                          ]
                        },
                        "host_reachable": {
                          "default": false,
                          "description": "Indicates whether the host is reachable.",
                          "type": "boolean"
                        },
                        "internal_host_status": {
                          "default": 1,
                          "description": "The internal host resource status. Either `1` for Not Configured or `2` for Okay.",
                          "type": "integer",
                          "enum": [
                            1,
                            2
                          ]
                        },
                        "origin_host_status": {
                          "default": 1,
                          "description": "The origin host resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Reachable, or `5` for Okay.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ]
                        },
                        "pop_status": {
                          "default": 1,
                          "description": "The pop resource status. Either `1` for Not Configured) or `2` for Okay.",
                          "type": "integer",
                          "enum": [
                            1,
                            2
                          ]
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/app-resource-status.yaml"
                      }
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Resource URIs for the application.",
                      "type": "object",
                      "required": [
                        "directories",
                        "groups",
                        "href",
                        "pop",
                        "services",
                        "sites"
                      ],
                      "properties": {
                        "directories": {
                          "description": "The URI location of an associated directory resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "groups": {
                          "description": "The URI location of an associated group resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The URI location of an associated href resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "pop": {
                          "description": "The URI location of an associated pop resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "services": {
                          "description": "The URI location of an associated service resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "sites": {
                          "description": "The URI location of an associated site resource.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "saml": {
                      "description": "Enables SAML for the application.",
                      "type": "boolean"
                    },
                    "saml_settings": {
                      "description": "SAML configuration for an application.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "SAML configuration for an application.",
                        "type": "object",
                        "required": [
                          "sp",
                          "attrmap",
                          "idp",
                          "subject"
                        ],
                        "properties": {
                          "attrmap": {
                            "description": "SAML attribute mapping details.",
                            "minItems": 1,
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                              "additionalProperties": false,
                              "description": "Specifies mapped attributes for the SAML configuration.",
                              "type": "object",
                              "required": [
                                "name",
                                "fmt",
                                "src"
                              ],
                              "properties": {
                                "fmt": {
                                  "description": "The name format of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "fname": {
                                  "description": "The fname of the attribute.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "rule": {
                                  "description": "The custom rule language for the attribute. ",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "src": {
                                  "description": "The source of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "val": {
                                  "description": "The value of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "idp": {
                            "additionalProperties": false,
                            "description": "Specifies identity provider (IDP) settings for the SAML configuration.",
                            "type": "object",
                            "required": [
                              "self_signed",
                              "ecp_resp_signature",
                              "slo_url",
                              "entity_id",
                              "resp_bind",
                              "sign_key",
                              "sign_cert",
                              "sign_algo",
                              "ecp_enable",
                              "metadata"
                            ],
                            "properties": {
                              "ecp_enable": {
                                "default": false,
                                "description": "Enables enhanced client or proxy (ECP).",
                                "type": "boolean"
                              },
                              "ecp_resp_signature": {
                                "default": false,
                                "description": "The ECP response signature.",
                                "type": "boolean"
                              },
                              "entity_id": {
                                "description": "The entity ID of the identity provider.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "metadata": {
                                "description": "Additional metadata for the service provider configuration. Specify `null` if you want to provide this later.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "resp_bind": {
                                "default": "post",
                                "description": "The response binding. Set to `post`.",
                                "type": "string",
                                "enum": [
                                  "post"
                                ]
                              },
                              "self_signed": {
                                "default": true,
                                "description": "Enables a self-signed certificate.",
                                "type": "boolean"
                              },
                              "sign_algo": {
                                "default": "SHA256",
                                "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                                "type": "string",
                                "enum": [
                                  "SHA256",
                                  "SHA1"
                                ]
                              },
                              "sign_cert": {
                                "description": "The signing certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sign_key": {
                                "description": "The signing key.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "slo_url": {
                                "description": "The single log-out URL.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "sp": {
                            "additionalProperties": false,
                            "description": "Specifies service provider (SP) settings for the SAML configuration.",
                            "type": "object",
                            "required": [
                              "entity_id",
                              "acs_url",
                              "req_bind",
                              "default_relay_state",
                              "force_auth",
                              "req_verify",
                              "resp_encr",
                              "encr_cert",
                              "encr_algo"
                            ],
                            "properties": {
                              "acs_url": {
                                "description": "The single sign-on (ACS) URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "default_relay_state": {
                                "description": "The default relay state. Specify `null` if you want to provide this later.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "dst_url": {
                                "description": "The destination URL.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "encr_algo": {
                                "default": "aes256-cbc",
                                "description": "The response encryption algorithm. Either `aes256-cbc` or `aes128-cbc`.",
                                "type": "string",
                                "enum": [
                                  "aes256-cbc",
                                  "aes128-cbc"
                                ]
                              },
                              "encr_cert": {
                                "description": "The response encryption certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "entity_id": {
                                "description": "The entity ID.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "force_auth": {
                                "default": false,
                                "description": "Forces encryption using the `httponly` flag in the session cookie.",
                                "type": "boolean"
                              },
                              "metadata": {
                                "description": "Additional metadata for the IDP configuration. Specify `null` if you want to provide this later.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "req_bind": {
                                "default": "redirect",
                                "description": "The response binding. Either `redirect` or `post`.",
                                "type": "string",
                                "enum": [
                                  "redirect",
                                  "post"
                                ]
                              },
                              "req_verify": {
                                "default": false,
                                "description": "Enables request verification.",
                                "type": "boolean"
                              },
                              "resp_encr": {
                                "default": false,
                                "description": "Enables encryption on the responses.",
                                "type": "boolean"
                              },
                              "sign_cert": {
                                "description": "The request signing certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "slo_bind": {
                                "default": "post",
                                "description": "The single log-out binding. Either `post` or `redirect`.",
                                "type": "string",
                                "enum": [
                                  "post",
                                  "redirect"
                                ]
                              },
                              "slo_req_verify": {
                                "default": true,
                                "description": "Enables single log-out request verification.",
                                "type": "boolean"
                              },
                              "slo_url": {
                                "description": "The single log-out URL.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "subject": {
                            "additionalProperties": false,
                            "description": "Specifies the subject settings for the SAML configuration.",
                            "type": "object",
                            "required": [
                              "fmt",
                              "src"
                            ],
                            "properties": {
                              "fmt": {
                                "description": "The format for the `NameID` element of the subject. Either `email`, `persistent`, `unspecified`, or `transient`.",
                                "minLength": 1,
                                "type": "string",
                                "enum": [
                                  "email",
                                  "persistent",
                                  "unspecified",
                                  "transient"
                                ]
                              },
                              "rule": {
                                "description": "Processing rule for the subject. If omitted from requests, the API responds with a `null` value you can fill out later.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "src": {
                                "description": "The source of the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "val": {
                                "description": "The value of the subject.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/app-saml-settings.yaml"
                      }
                    },
                    "servers": {
                      "description": "EAA application server details.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Origin server details of the internal application within your network.",
                        "type": "object",
                        "required": [
                          "origin_protocol",
                          "name",
                          "orig_tls",
                          "origin_host",
                          "origin_port"
                        ],
                        "properties": {
                          "name": {
                            "description": "The name of the origin server.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "orig_tls": {
                            "description": "Enables TLS on the origin server.",
                            "type": "boolean"
                          },
                          "origin_host": {
                            "description": "The IP address or FQDN of the origin server.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "origin_port": {
                            "description": "The port number of the origin server.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "origin_protocol": {
                            "description": "The protocol of the origin server connection. Either `ssh` or `http`.",
                            "type": "string",
                            "enum": [
                              "ssh",
                              "http"
                            ]
                          }
                        }
                      }
                    },
                    "services": {
                      "description": "EAA application service details.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A list of services enabled on the application configuration.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the service.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "sites": {
                      "description": "List of associated site resources.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "wsfed": {
                      "description": "Enables Web Services Federation (WSFED) identity federation.",
                      "type": "boolean"
                    },
                    "wsfed_settings": {
                      "description": "JSON settings to implement WSFED.",
                      "minItems": 1,
                      "title": "Web Services Federation (WSFED) settings",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Web Services Federation (WSFED) configuration for an application.",
                        "type": "object",
                        "required": [
                          "sp",
                          "attrmap",
                          "idp",
                          "subject"
                        ],
                        "properties": {
                          "attrmap": {
                            "description": "Contains mapped attributes for the WSFED configuration.",
                            "minItems": 1,
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                              "additionalProperties": false,
                              "description": "Mapped attributes for the WSFED configuration.",
                              "type": "object",
                              "required": [
                                "fmt"
                              ],
                              "properties": {
                                "custom_fmt": {
                                  "description": "The custom format of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "fmt": {
                                  "description": "The name format of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "rule": {
                                  "description": "The custom rule language for the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "src": {
                                  "description": "The source of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "val": {
                                  "description": "The value of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "idp": {
                            "additionalProperties": false,
                            "description": "Specifies identity provider (IDP) settings for the WSFED configuration.",
                            "type": "object",
                            "required": [
                              "entity_id",
                              "sign_key",
                              "sign_cert",
                              "sign_algo"
                            ],
                            "properties": {
                              "entity_id": {
                                "description": "The entity ID of the identity provider.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sign_algo": {
                                "default": "SHA256",
                                "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                                "type": "string",
                                "enum": [
                                  "SHA256",
                                  "SHA1"
                                ]
                              },
                              "sign_cert": {
                                "description": "The signing certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sign_key": {
                                "description": "The signing key.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "sp": {
                            "additionalProperties": false,
                            "description": "Specifies service provider settings for the WSFED configuration.",
                            "type": "object",
                            "required": [
                              "entity_id",
                              "slo_url",
                              "dst_url",
                              "resp_bind",
                              "token_life"
                            ],
                            "properties": {
                              "dst_url": {
                                "description": "The destination URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "entity_id": {
                                "description": "The entity ID of the service provider.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "resp_bind": {
                                "default": "post",
                                "description": "The response binding. Set to `post`.",
                                "type": "string",
                                "enum": [
                                  "post"
                                ]
                              },
                              "slo_url": {
                                "description": "The single log-out URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "token_life": {
                                "default": 3600,
                                "description": "The number of seconds a token is valid.",
                                "minimum": 0,
                                "type": "integer"
                              }
                            }
                          },
                          "subject": {
                            "additionalProperties": false,
                            "description": "Specifies subject settings for the WSFED configuration.",
                            "type": "object",
                            "required": [
                              "fmt"
                            ],
                            "properties": {
                              "custom_fmt": {
                                "description": "The custom format of the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "fmt": {
                                "description": "The format for the `NameID` element of the subject. Either `email`, `persistent`, `unspecified`, or `transient`.",
                                "minLength": 1,
                                "type": "string",
                                "enum": [
                                  "email",
                                  "persistent",
                                  "unspecified",
                                  "transient"
                                ]
                              },
                              "rule": {
                                "description": "The custom rule language for the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "src": {
                                "description": "The source of the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "val": {
                                "description": "The value of the subject.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/app-wsfed-settings.yaml"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/application.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Removes an application.",
        "operationId": "delete-app",
        "summary": "Delete an application",
        "tags": [
          "Applications"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-app"
        },
        "responses": {
          "204": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application.",
          "example": "{{applicationId}}",
          "in": "path",
          "name": "applicationId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/applicationId-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/apps/{applicationId}/agents": {
      "post": {
        "description": "Assign connectors to an application.",
        "operationId": "post-app-connectors",
        "summary": "Assign connectors to an application",
        "tags": [
          "Connectors"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-app-connectors"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "agents": [
                  {
                    "compatible": true,
                    "name": "bala7-ohio-aws",
                    "uuid_url": "a5_xNtxbR9O_c4xy35R2Wg"
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Enterprise connector data.",
                "type": "object",
                "required": [
                  "name",
                  "package"
                ],
                "properties": {
                  "admin_pwd": {
                    "description": "Hash of the admin password.",
                    "example": "{{admin_pwd}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "agent_type": {
                    "default": 1,
                    "description": "The type of connector. Either `1` for VM, `2` for IPSEC, or `3` for GRE.",
                    "example": "{{agent_type}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3
                    ]
                  },
                  "agent_upgrade_enabled": {
                    "description": "Whether the connector is upgradeable.",
                    "example": "{{agent_upgrade_enabled}}",
                    "type": "boolean"
                  },
                  "agent_upgrade_suspended": {
                    "description": "Suspends upgrades for a connector.",
                    "example": "{{agent_upgrade_suspended}}",
                    "type": "boolean"
                  },
                  "agent_version": {
                    "description": "The connector software version currently installed in the connector. For example, `AGENT-4.3.0-2449+`.",
                    "example": "{{agent_version}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "auth_service": {
                    "description": "Enables the authorization service.",
                    "example": "{{auth_service}}",
                    "type": "boolean"
                  },
                  "cpu": {
                    "description": "CPU of the connector. Specify `null` if you want to provide this later.",
                    "example": "{{cpu}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking the connector's creation.",
                    "example": "{{created_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "data_service": {
                    "description": "Enables the data service.",
                    "example": "{{data_service}}",
                    "type": "boolean"
                  },
                  "debug_channel_permitted": {
                    "description": "Enables Akamai Support to run commands on the connector through the debug channel.",
                    "example": "{{debug_channel_permitted}}",
                    "type": "boolean"
                  },
                  "description": {
                    "description": "A description for the connector.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "dhcp": {
                    "description": "Enables DHCP for the connector.",
                    "example": "{{dhcp}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "disk_size": {
                    "description": "The disk size of the connector.",
                    "example": "{{disk_size}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "dns_server": {
                    "description": "DNS Server of the connector.",
                    "example": "{{dns_server}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "download_url": {
                    "description": "S3 URL to download the package. Specify `null` if you want to provide this later.",
                    "example": "{{download_url}}",
                    "nullable": true,
                    "type": "string"
                  },
                  "gateway": {
                    "description": "Gateway of the connector. Specify `null` if you want to provide this later.",
                    "example": "{{gateway}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "hostname": {
                    "description": "Machine name of the connector. ",
                    "example": "{{hostname}}",
                    "format": "hostname",
                    "type": "string"
                  },
                  "ip_addr": {
                    "description": "IP address of the connector. Specify `null` if you want to provide this later.",
                    "example": "{{ip_addr}}",
                    "format": "ipv4",
                    "nullable": true,
                    "type": "string"
                  },
                  "last_checkin": {
                    "description": "ISO 8601 timestamp marking when the connector last checked in with the server.",
                    "example": "{{last_checkin}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "last_stage_status": {
                    "description": "Status of the last staging. Either `1` for success or `4` for failure.",
                    "example": "{{last_stage_status}}",
                    "type": "integer",
                    "enum": [
                      1,
                      4
                    ]
                  },
                  "last_upgrade_failed_date": {
                    "description": "ISO 8601 timestamp marking the last upgrade failure.",
                    "example": "{{last_upgrade_failed_date}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "last_upgrade_failed_in": {
                    "description": "Location of the last upgrade failure, expressed as a string-formatted integer. Either `1` for none, `2` for pending, `3` for downloading, `4` for verifying, `5` for upgrade in progress, `6` for cleaning up, `7` for rollback in progress, `8` for completed, or `9` for metadata. Specify `null` if not applicable.",
                    "example": "{{last_upgrade_failed_in}}",
                    "nullable": true,
                    "type": "string",
                    "enum": [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "6",
                      "7",
                      "8",
                      "9"
                    ]
                  },
                  "last_upgrade_status": {
                    "description": "Status of the last upgrade. Either `1` for success or `4` for failure.",
                    "example": "{{last_upgrade_status}}",
                    "type": "integer",
                    "enum": [
                      1,
                      4
                    ]
                  },
                  "last_upgrade_success_date": {
                    "description": "ISO 8601 timestamp marking the last successful upgrade.",
                    "example": "{{last_upgrade_success_date}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "last_upgrade_success_version": {
                    "description": "Last version of connector software successfully installed in the connector. Specify `null` if not applicable.",
                    "example": "{{last_upgrade_success_version}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "latest_stage_attempt_date": {
                    "description": "ISO 8601 timestamp of the last staging attempt. Specify `null` if not applicable.",
                    "example": "{{latest_stage_attempt_date}}",
                    "format": "date-time",
                    "nullable": true,
                    "type": "string"
                  },
                  "latest_stage_attempt_version": {
                    "description": "Latest connector binary version staging attempted. Specify `null` if not applicable.",
                    "example": "{{latest_stage_attempt_version}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "latest_upgrade_attempt_date": {
                    "description": "ISO 8601 timestamp of the last upgrade attempt. Specify `null` if not applicable.",
                    "example": "{{latest_upgrade_attempt_date}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "latest_upgrade_attempt_state": {
                    "description": "Status of the last upgrade attempt on the connector.",
                    "example": "{{latest_upgrade_attempt_state}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "latest_upgrade_attempt_version": {
                    "description": "Last version of connector software attempted on the connector.",
                    "example": "{{latest_upgrade_attempt_version}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "logging_settings": {
                    "description": "JSON logging settings.",
                    "example": "{{logging_settings}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "mac": {
                    "description": "MAC address of the connector.",
                    "example": "{{mac}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "manual_override": {
                    "description": "When `true`, the connector cannot be upgraded.",
                    "example": "{{manual_override}}",
                    "type": "boolean"
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking the connector configuration's last modification.",
                    "example": "{{modified_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the connector. ",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "os_version": {
                    "description": "OS version of the connector.",
                    "example": "{{os_version}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "package": {
                    "description": "Type of package for the connector. Refer to [Connector package types](https://techdocs.akamai.com/eaa-api/reference/connector-package-types) for available values.",
                    "example": "{{package}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7,
                      8,
                      9,
                      10,
                      11
                    ]
                  },
                  "policy": {
                    "description": "The schedule policy ID for the connector.",
                    "example": "{{policy}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "private_ip": {
                    "description": "Private IP address of the connector.",
                    "example": "{{private_ip}}",
                    "format": "ipv4",
                    "type": "string"
                  },
                  "public_ip": {
                    "description": "Public IP address of the connector.",
                    "example": "{{public_ip}}",
                    "format": "ipv4",
                    "type": "string"
                  },
                  "pwd_comments": {
                    "description": "Status of the set password attempt on the connector. Either `Success` or `Failed`.",
                    "example": "{{pwd_comments}}",
                    "type": "string",
                    "enum": [
                      "Success",
                      "Failed"
                    ]
                  },
                  "pwdsyncflag": {
                    "description": "Syncs the connector password with the back-end database.",
                    "example": "{{pwdsyncflag}}",
                    "type": "boolean"
                  },
                  "ram_size": {
                    "description": "RAM size of the connector. Specify `null` if you want to provide this later. ",
                    "example": "{{ram_size}}",
                    "minimum": 0,
                    "nullable": true,
                    "type": "integer"
                  },
                  "reach": {
                    "default": 1,
                    "description": "Connector reachability status. Either `0` for unreachable or `1` for reachable.",
                    "example": "{{reach}}",
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ]
                  },
                  "region": {
                    "description": "The region of the connector. For example, `Central`.",
                    "example": "{{region}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource_uri": {
                    "additionalProperties": false,
                    "description": "Contains resource locations for the connector.",
                    "type": "object",
                    "required": [
                      "href"
                    ],
                    "properties": {
                      "href": {
                        "description": "The location of connector details.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "setpwd_attempt": {
                    "description": "The number of unique password setting attempts.",
                    "example": "{{setpwd_attempt}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "state": {
                    "default": 0,
                    "description": "State of the connector. Either `0` for not created, `1` for created, `2` for not installed, `3` for not verified, `4` for verified, `5` for unenrolled, `6` for enrolled, `7` for not configured, or `8` for configured.",
                    "example": "{{state}}",
                    "type": "integer",
                    "enum": [
                      0,
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7,
                      8
                    ]
                  },
                  "status": {
                    "description": "Status of the connector. Either `0` for disabled or `1` for enabled.",
                    "example": "{{status}}",
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ]
                  },
                  "subnet": {
                    "description": "Subnet of the connector. Specify `null` if you want to provide this later.",
                    "example": "{{subnet}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "tz": {
                    "description": "Time zone of the connector. For example, `America/Los_Angeles`.",
                    "example": "{{tz}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "uuid_url": {
                    "description": "A unique identifier for the connector.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/agent.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise connector data.",
                  "type": "object",
                  "required": [
                    "name",
                    "package"
                  ],
                  "properties": {
                    "admin_pwd": {
                      "description": "Hash of the admin password.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "agent_type": {
                      "default": 1,
                      "description": "The type of connector. Either `1` for VM, `2` for IPSEC, or `3` for GRE.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3
                      ]
                    },
                    "agent_upgrade_enabled": {
                      "description": "Whether the connector is upgradeable.",
                      "type": "boolean"
                    },
                    "agent_upgrade_suspended": {
                      "description": "Suspends upgrades for a connector.",
                      "type": "boolean"
                    },
                    "agent_version": {
                      "description": "The connector software version currently installed in the connector. For example, `AGENT-4.3.0-2449+`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "auth_service": {
                      "description": "Enables the authorization service.",
                      "type": "boolean"
                    },
                    "cpu": {
                      "description": "CPU of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the connector's creation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "data_service": {
                      "description": "Enables the data service.",
                      "type": "boolean"
                    },
                    "debug_channel_permitted": {
                      "description": "Enables Akamai Support to run commands on the connector through the debug channel.",
                      "type": "boolean"
                    },
                    "description": {
                      "description": "A description for the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "dhcp": {
                      "description": "Enables DHCP for the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "disk_size": {
                      "description": "The disk size of the connector.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "dns_server": {
                      "description": "DNS Server of the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "download_url": {
                      "description": "S3 URL to download the package. Specify `null` if you want to provide this later.",
                      "nullable": true,
                      "type": "string"
                    },
                    "gateway": {
                      "description": "Gateway of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "hostname": {
                      "description": "Machine name of the connector. ",
                      "format": "hostname",
                      "type": "string"
                    },
                    "ip_addr": {
                      "description": "IP address of the connector. Specify `null` if you want to provide this later.",
                      "format": "ipv4",
                      "nullable": true,
                      "type": "string"
                    },
                    "last_checkin": {
                      "description": "ISO 8601 timestamp marking when the connector last checked in with the server.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "last_stage_status": {
                      "description": "Status of the last staging. Either `1` for success or `4` for failure.",
                      "type": "integer",
                      "enum": [
                        1,
                        4
                      ]
                    },
                    "last_upgrade_failed_date": {
                      "description": "ISO 8601 timestamp marking the last upgrade failure.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "last_upgrade_failed_in": {
                      "description": "Location of the last upgrade failure, expressed as a string-formatted integer. Either `1` for none, `2` for pending, `3` for downloading, `4` for verifying, `5` for upgrade in progress, `6` for cleaning up, `7` for rollback in progress, `8` for completed, or `9` for metadata. Specify `null` if not applicable.",
                      "nullable": true,
                      "type": "string",
                      "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9"
                      ]
                    },
                    "last_upgrade_status": {
                      "description": "Status of the last upgrade. Either `1` for success or `4` for failure.",
                      "type": "integer",
                      "enum": [
                        1,
                        4
                      ]
                    },
                    "last_upgrade_success_date": {
                      "description": "ISO 8601 timestamp marking the last successful upgrade.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "last_upgrade_success_version": {
                      "description": "Last version of connector software successfully installed in the connector. Specify `null` if not applicable.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_stage_attempt_date": {
                      "description": "ISO 8601 timestamp of the last staging attempt. Specify `null` if not applicable.",
                      "format": "date-time",
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_stage_attempt_version": {
                      "description": "Latest connector binary version staging attempted. Specify `null` if not applicable.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "latest_upgrade_attempt_date": {
                      "description": "ISO 8601 timestamp of the last upgrade attempt. Specify `null` if not applicable.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "latest_upgrade_attempt_state": {
                      "description": "Status of the last upgrade attempt on the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "latest_upgrade_attempt_version": {
                      "description": "Last version of connector software attempted on the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "logging_settings": {
                      "description": "JSON logging settings.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mac": {
                      "description": "MAC address of the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "manual_override": {
                      "description": "When `true`, the connector cannot be upgraded.",
                      "type": "boolean"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the connector configuration's last modification.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the connector. ",
                      "minLength": 1,
                      "type": "string"
                    },
                    "os_version": {
                      "description": "OS version of the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "package": {
                      "description": "Type of package for the connector. Refer to [Connector package types](https://techdocs.akamai.com/eaa-api/reference/connector-package-types) for available values.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11
                      ]
                    },
                    "policy": {
                      "description": "The schedule policy ID for the connector.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "private_ip": {
                      "description": "Private IP address of the connector.",
                      "format": "ipv4",
                      "type": "string"
                    },
                    "public_ip": {
                      "description": "Public IP address of the connector.",
                      "format": "ipv4",
                      "type": "string"
                    },
                    "pwd_comments": {
                      "description": "Status of the set password attempt on the connector. Either `Success` or `Failed`.",
                      "type": "string",
                      "enum": [
                        "Success",
                        "Failed"
                      ]
                    },
                    "pwdsyncflag": {
                      "description": "Syncs the connector password with the back-end database.",
                      "type": "boolean"
                    },
                    "ram_size": {
                      "description": "RAM size of the connector. Specify `null` if you want to provide this later. ",
                      "minimum": 0,
                      "nullable": true,
                      "type": "integer"
                    },
                    "reach": {
                      "default": 1,
                      "description": "Connector reachability status. Either `0` for unreachable or `1` for reachable.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "region": {
                      "description": "The region of the connector. For example, `Central`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Contains resource locations for the connector.",
                      "type": "object",
                      "required": [
                        "href"
                      ],
                      "properties": {
                        "href": {
                          "description": "The location of connector details.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "setpwd_attempt": {
                      "description": "The number of unique password setting attempts.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "state": {
                      "default": 0,
                      "description": "State of the connector. Either `0` for not created, `1` for created, `2` for not installed, `3` for not verified, `4` for verified, `5` for unenrolled, `6` for enrolled, `7` for not configured, or `8` for configured.",
                      "type": "integer",
                      "enum": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8
                      ]
                    },
                    "status": {
                      "description": "Status of the connector. Either `0` for disabled or `1` for enabled.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "subnet": {
                      "description": "Subnet of the connector. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "tz": {
                      "description": "Time zone of the connector. For example, `America/Los_Angeles`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the connector.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/agent.yaml"
                  }
                },
                "example": [
                  {
                    "agent": {
                      "name": "bala7-ohio-aws",
                      "uuid_url": "a5_xNtxbR9O_c4xy35R2Wg"
                    },
                    "resource_uri": {
                      "href": "/api/v1/agents/a5_xNtxbR9O_c4xy35R2Wg/"
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists connectors for an application.",
        "operationId": "get-app-connectors",
        "summary": "List connectors for an application",
        "tags": [
          "Connectors"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-connectors"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 1000,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 2
                  },
                  "objects": [
                    {
                      "agent_type": 1,
                      "agent_upgrade_enabled": true,
                      "agent_upgrade_suspended": false,
                      "agent_version": null,
                      "auth_service": true,
                      "cpu": null,
                      "created_at": "2019-05-02T09:27:11.677150",
                      "data_service": true,
                      "debug_channel_permitted": true,
                      "description": null,
                      "dhcp": "enabled",
                      "disk_size": null,
                      "dns_server": null,
                      "download_url": null,
                      "gateway": null,
                      "hostname": null,
                      "ip_addr": null,
                      "last_checkin": null,
                      "logging_settings": "[]",
                      "mac": null,
                      "manual_override": false,
                      "modified_at": "2019-05-02T09:27:11.684264",
                      "name": "tcp-tunnel",
                      "os_version": null,
                      "package": 3,
                      "policy": "bmOy5TeRRBuByVZiS0cITQ",
                      "private_ip": null,
                      "public_ip": null,
                      "pwd_comments": null,
                      "pwdsyncflag": false,
                      "ram_size": null,
                      "reach": 0,
                      "region": null,
                      "setpwd_attempt": 1,
                      "state": 0,
                      "status": 1,
                      "subnet": null,
                      "tz": null,
                      "uuid_url": "zOFC4JBSQ3OuGReWVPcB3A",
                      "advanced_settings": {
                        "network_info": [
                          "192.0.2.27/24"
                        ]
                      },
                      "resource_uri": {
                        "href": "/api/v1/agents/zOFC4JBSQ3OuGReWVPcB3A"
                      },
                      "all_applications": [
                        {
                          "app_status": 1,
                          "name": "Accessapp#1",
                          "uuid_url": "3Czu34blSkarRHafL2v8bQ"
                        },
                        {
                          "app_status": 1,
                          "name": "HRWeb",
                          "uuid_url": "E85_4Cq-Q4WGTkq2lT31cg"
                        }
                      ],
                      "all_directories": [
                        {
                          "name": "Cloud Directory",
                          "uuid_url": "GbIfrXwtTKaqBrXD0ZkGBA"
                        },
                        {
                          "name": "Akamai Directory",
                          "uuid_url": "SewbYG0iRZSPaMZrM6n4Qw"
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "x-akamai": {
                    "file-path": "schemas/need-schema-here.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application.",
          "example": "{{applicationId}}",
          "in": "path",
          "name": "applicationId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/applicationId-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/apps/{applicationId}/agents/{agentId}": {
      "get": {
        "description": "Lists connectors for an application.",
        "operationId": "get-app-connector",
        "summary": "Get a connector for an application",
        "tags": [
          "Connectors"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-connector"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "agent_type": 1,
                  "agent_upgrade_enabled": true,
                  "agent_upgrade_suspended": false,
                  "agent_version": null,
                  "auth_service": true,
                  "cpu": null,
                  "created_at": "2019-05-02T09:27:11.677150",
                  "data_service": true,
                  "debug_channel_permitted": true,
                  "description": null,
                  "dhcp": "enabled",
                  "disk_size": null,
                  "dns_server": null,
                  "download_url": null,
                  "gateway": null,
                  "hostname": null,
                  "ip_addr": null,
                  "last_checkin": null,
                  "logging_settings": "[]",
                  "mac": null,
                  "manual_override": false,
                  "modified_at": "2019-05-02T09:27:11.684264",
                  "name": "tcp-tunnel",
                  "os_version": null,
                  "package": 3,
                  "policy": "bmOy5TeRRBuByVZiS0cITQ",
                  "private_ip": null,
                  "public_ip": null,
                  "pwd_comments": null,
                  "pwdsyncflag": false,
                  "ram_size": null,
                  "reach": 0,
                  "region": null,
                  "setpwd_attempt": 1,
                  "state": 0,
                  "status": 1,
                  "subnet": null,
                  "tz": null,
                  "uuid_url": "zOFC4JBSQ3OuGReWVPcB3A",
                  "advanced_settings": {
                    "network_info": [
                      "192.0.2.30/24"
                    ]
                  },
                  "resource_uri": {
                    "href": "/api/v1/agents/zOFC4JBSQ3OuGReWVPcB3A"
                  }
                },
                "schema": {
                  "x-akamai": {
                    "file-path": "schemas/need-schema-here.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each connector.",
          "example": "{{agentId}}",
          "in": "path",
          "name": "agentId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/agentId-path.yaml"
          }
        },
        {
          "description": "A unique identifier for each application.",
          "example": "{{applicationId}}",
          "in": "path",
          "name": "applicationId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/applicationId-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/apps/{applicationId}/deploy": {
      "post": {
        "description": "Deploys an application.",
        "operationId": "post-app-deploy",
        "summary": "Deploy an application",
        "tags": [
          "Applications"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-app-deploy"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "deploy_note": "Deploying on 21st Sept"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Add a comment to an app deployment.",
                "type": "object",
                "required": [
                  "deploy_note"
                ],
                "properties": {
                  "deploy_note": {
                    "description": "Comment to summarize your app's deployment.",
                    "example": "{{deploy_note}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/deploy-app-comment.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "cmdid": 7883826115006123
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access Application deployment data.",
                  "type": "object",
                  "required": [
                    "cmdid"
                  ],
                  "properties": {
                    "cmdid": {
                      "description": "A unique identifier for the command to track progress.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/deploy.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application.",
          "example": "{{applicationId}}",
          "in": "path",
          "name": "applicationId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/applicationId-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/apps/{applicationId}/edgekey": {
      "post": {
        "description": "Generates an edge key for an application.",
        "operationId": "post-app-edgekey",
        "summary": "Create an edge key",
        "tags": [
          "Edge keys"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-app-edgekey"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "edge_cookie_key": "bdbd496d5 ... 13282ed58",
                  "sla_object_url": "____spx/ionpage"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Application edge key information.",
                  "type": "object",
                  "required": [
                    "edge_cookie_key",
                    "sla_object_url"
                  ],
                  "properties": {
                    "edge_cookie_key": {
                      "description": "The edge key to share with your ION configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "sla_object_url": {
                      "description": "The SLA object URL to share with your ION configuration.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/edge-key.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application.",
          "example": "{{applicationId}}",
          "in": "path",
          "name": "applicationId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/applicationId-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/apps/{applicationId}/g2o": {
      "post": {
        "description": "Enables a G2O configuration for an application. Used only if if you've enabled Akamai Edge Enforcement.",
        "operationId": "post-app-g2o",
        "summary": "Create a Ghost to Origin key",
        "tags": [
          "Ghost to Origin keys"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-app-g2o"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "g2o_enabled": "true",
                  "g2o_key": "a719dbd96 ... 3561d96d4c",
                  "g2o_nonce": "b59f6a5a"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Ghost to Origin (G2O) credentials.",
                  "type": "object",
                  "required": [
                    "g2o_enabled",
                    "g2o_key",
                    "g2o_nonce"
                  ],
                  "properties": {
                    "g2o_enabled": {
                      "description": "Enables G2O on an application configuration.",
                      "type": "boolean"
                    },
                    "g2o_key": {
                      "description": "The G2O key to share with your ION configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "g2o_nonce": {
                      "description": "The G2O nonce to share with your ION configuration.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/g2o.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application.",
          "example": "{{applicationId}}",
          "in": "path",
          "name": "applicationId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/applicationId-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/apps/{applicationId}/groups": {
      "get": {
        "description": "Lists the groups authorized to access the application.",
        "operationId": "get-groups-per-app",
        "summary": "List the groups assigned to an application",
        "tags": [
          "Application rewrite groups"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-groups-per-app"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 3
                  },
                  "objects": [
                    {
                      "created_at": "2017-09-28T19:11:18.201248",
                      "description": null,
                      "group_type": 1,
                      "modified_at": "2017-09-28T19:11:18.201264",
                      "name": "Admins",
                      "resource": "groups",
                      "status": 1,
                      "user_count": 7,
                      "uuid_url": "eHLt50Z6RQaUznwXD4sCRg",
                      "resource_uri": {
                        "directory": "/api/v1/directories/gKP_FhvmSFaomjpNaR7Z9Q/",
                        "href": "/api/v1/groups/eHLt50Z6RQaUznwXD4sCRg",
                        "permissions": "/api/v1/groups/eHLt50Z6RQaUznwXD4sCRg/permissions/",
                        "users": "/api/v1/groups/eHLt50Z6RQaUznwXD4sCRg/users/"
                      }
                    },
                    {
                      "created_at": "2017-09-28T19:11:18.213654",
                      "description": null,
                      "group_type": 1,
                      "modified_at": "2017-09-28T19:11:18.213671",
                      "name": "Admins",
                      "resource": "groups",
                      "status": 1,
                      "user_count": 17,
                      "uuid_url": "AjnZv5GGTe6C9IEVUXl0Nw",
                      "resource_uri": {
                        "directory": "/api/v1/directories/0MREBOagSSKMgZt3l7GANw/",
                        "href": "/api/v1/groups/AjnZv5GGTe6C9IEVUXl0Nw",
                        "permissions": "/api/v1/groups/AjnZv5GGTe6C9IEVUXl0Nw/permissions/",
                        "users": "/api/v1/groups/AjnZv5GGTe6C9IEVUXl0Nw/users/"
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise access groups for an application.",
                  "type": "object",
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "type": "object",
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "Application access group details.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Application group information.",
                        "type": "object",
                        "required": [
                          "status",
                          "user_count",
                          "resource",
                          "description",
                          "name",
                          "uuid_url",
                          "group_type",
                          "resource_uri"
                        ],
                        "properties": {
                          "created_at": {
                            "description": "ISO 8601 timestamp marking this object's creation.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "description": {
                            "description": "A brief description for this group.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "group_type": {
                            "default": 1,
                            "description": "The type of group. Select `1` for Cloud, `2` for Active Directory, `3` for OU, or `4` for LDAP.",
                            "type": "integer",
                            "enum": [
                              1,
                              2,
                              3,
                              4
                            ]
                          },
                          "modified_at": {
                            "description": "ISO 8601 timestamp marking this object's last modification. If the object wasn't modified since first being created, the value matches `created_at`.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "name": {
                            "description": "A unique name for this group.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource": {
                            "description": "The type of resource.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource_uri": {
                            "additionalProperties": false,
                            "description": "Specifies resource URI details for the IDP configuration.",
                            "type": "object",
                            "required": [
                              "directory",
                              "href",
                              "users",
                              "permissions"
                            ],
                            "properties": {
                              "directory": {
                                "description": "The directory for the resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "href": {
                                "description": "The href URI for the resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "permissions": {
                                "description": "The permissions for the resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "users": {
                                "description": "Users assigned to the resource.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "status": {
                            "default": 0,
                            "description": "`0` (Disabled), `1` (Enabled).",
                            "type": "integer",
                            "enum": [
                              0,
                              1
                            ]
                          },
                          "user_count": {
                            "description": "The number of users in the group.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for this group.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/application-group.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/applicationGroups.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application.",
          "example": "{{applicationId}}",
          "in": "path",
          "name": "applicationId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/applicationId-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/apps/{applicationId}/services": {
      "get": {
        "description": "Lists the details of the services for an application.",
        "operationId": "get-app-services",
        "summary": "List services for an application",
        "tags": [
          "Services"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-services"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 5
                  },
                  "objects": [
                    {
                      "resource": "appservices",
                      "status": 1,
                      "uuid_url": "aHfEPDp_RU2wN9qennJbow",
                      "app": {
                        "app_uuid_url": "3JEFvcNxRKCoQk-al9PAZw",
                        "name": "Dev Application"
                      },
                      "resource_uri": {
                        "apps": "/api/v1/apps/3JEFvcNxRKCoQk-al9PAZw",
                        "href": "/api/v1/appservices/aHfEPDp_RU2wN9qennJbow",
                        "services": "/api/v1/services/yl3eapQoTAyIeE_VSJQChw"
                      },
                      "service": {
                        "description": null,
                        "name": "Acceleration",
                        "service_type": 2,
                        "status": "on",
                        "uuid_url": "yl3eapQoTAyIeE_VSJQChw",
                        "settings": {
                          "compression": "on"
                        }
                      }
                    },
                    {
                      "resource": "appservices",
                      "status": 1,
                      "uuid_url": "oG9K1x42T3CATo58tJMcQQ",
                      "app": {
                        "app_uuid_url": "3JEFvcNxRKCoQk-al9PAZw",
                        "name": "Dev Application"
                      },
                      "resource_uri": {
                        "apps": "/api/v1/apps/3JEFvcNxRKCoQk-al9PAZw",
                        "href": "/api/v1/appservices/oG9K1x42T3CATo58tJMcQQ",
                        "services": "/api/v1/services/K-7IH7AaTj-2fOLjt1xsVg"
                      },
                      "service": {
                        "description": null,
                        "name": "WAF",
                        "service_type": 1,
                        "status": "off",
                        "uuid_url": "K-7IH7AaTj-2fOLjt1xsVg",
                        "settings": {
                          "bad_robots": "Off",
                          "http_policy": "Off",
                          "illegal_resource_access": "Off",
                          "joomla": "Off",
                          "php": "Off",
                          "protocol_anomalies": "Off",
                          "protocol_violations": "Off",
                          "request_limits": "Off",
                          "sql_injection": "Off",
                          "wordpress": "Off",
                          "xss_attack": "Off"
                        }
                      }
                    },
                    {
                      "resource": "appservices",
                      "status": 1,
                      "uuid_url": "sDK9DXYPQcS_RiLjjE0uTA",
                      "app": {
                        "app_uuid_url": "3JEFvcNxRKCoQk-al9PAZw",
                        "name": "Dev Application"
                      },
                      "resource_uri": {
                        "apps": "/api/v1/apps/3JEFvcNxRKCoQk-al9PAZw",
                        "href": "/api/v1/appservices/sDK9DXYPQcS_RiLjjE0uTA",
                        "services": "/api/v1/services/u3V0QcQjTpytKT0Tv2ZbYg"
                      },
                      "service": {
                        "description": null,
                        "name": "ICAP Service",
                        "service_type": 3,
                        "status": "on",
                        "uuid_url": "u3V0QcQjTpytKT0Tv2ZbYg",
                        "settings": {
                          "icap_file_size": "500M",
                          "icap_file_size_allow": "deny",
                          "icap_hc_type": "icap",
                          "icap_host": "icap.host.com",
                          "icap_http_methods": "POST",
                          "icap_mime_types": "*",
                          "icap_port": 1344,
                          "icap_service": "sohaservice",
                          "icap_tls_enable": "on"
                        }
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access services for an application.",
                  "type": "object",
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "type": "object",
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "EAA application service details.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Application service information.",
                        "type": "object",
                        "required": [
                          "status",
                          "resource",
                          "service",
                          "app",
                          "uuid_url",
                          "resource_uri"
                        ],
                        "properties": {
                          "app": {
                            "additionalProperties": false,
                            "description": "Contains application details.",
                            "type": "object",
                            "required": [
                              "name",
                              "app_uuid_url"
                            ],
                            "properties": {
                              "app_uuid_url": {
                                "description": "The application's UUID URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "name": {
                                "description": "The application's name.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "resource": {
                            "description": "The resource details for the application.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource_uri": {
                            "additionalProperties": false,
                            "description": "The unique resource URI.",
                            "type": "object",
                            "required": [
                              "services",
                              "href",
                              "apps"
                            ],
                            "properties": {
                              "apps": {
                                "description": "Applications assigned to this resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "href": {
                                "description": "The href URL for the resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "services": {
                                "description": "The services assigned to the resource.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "service": {
                            "additionalProperties": false,
                            "description": "Contains service details for the application.",
                            "type": "object",
                            "required": [
                              "service_type",
                              "settings",
                              "description",
                              "name"
                            ],
                            "properties": {
                              "description": {
                                "description": "A brief description for this service. Specify `null` if you want to name it later.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "name": {
                                "description": "A unique name for the service.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "service_type": {
                                "default": 1,
                                "description": "The service type. Either `1` for WAF, `2` for Acceleration, `3` for ICAP, `4` for IPS, `5` for SLB, `6` for access control, `7` for rewrite, or `8` for group rewrite.",
                                "type": "integer",
                                "enum": [
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6,
                                  7,
                                  8
                                ]
                              },
                              "settings": {
                                "additionalProperties": false,
                                "description": "Application service settings.",
                                "type": "object",
                                "required": [
                                  "php",
                                  "request_limits",
                                  "bad_robots",
                                  "icap_file_size",
                                  "xss_attack",
                                  "icap_mime_types",
                                  "protocol_violations",
                                  "joomla",
                                  "icap_tls_enable",
                                  "sql_injection",
                                  "icap_file_size_allow",
                                  "compression",
                                  "icap_hc_type",
                                  "icap_host",
                                  "icap_service",
                                  "protocol_anomalies",
                                  "wordpress",
                                  "http_policy",
                                  "icap_http_methods",
                                  "icap_port",
                                  "illegal_resource_access"
                                ],
                                "properties": {
                                  "bad_robots": {
                                    "description": "Whether to block bad robots from the service. ",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "compression": {
                                    "description": "Compression type to use for the service.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "http_policy": {
                                    "description": "Enables an HTTP policy.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "icap_file_size": {
                                    "default": "500",
                                    "description": "Internet Content Adaptation Protocol maximum file size in Megabytes. The default is 500.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "icap_file_size_allow": {
                                    "description": "If the file exceeds the maximum file size, select either `Deny` to reject the file transfer or `Ignore`. ",
                                    "type": "string",
                                    "enum": [
                                      "Deny",
                                      "Ignore"
                                    ]
                                  },
                                  "icap_hc_type": {
                                    "description": "ICAP health check type. Either `icap` or `tcp`.",
                                    "type": "string",
                                    "enum": [
                                      "icap",
                                      "tcp"
                                    ]
                                  },
                                  "icap_host": {
                                    "description": "Host or IP address of the co-located ICAP server to use with EAA. ",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "icap_http_methods": {
                                    "default": "POST",
                                    "description": "HTTP method used to forward traffic to the ICAP server.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "icap_mime_types": {
                                    "description": "MIME types to allow for forwarding to the ICAP server.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "icap_port": {
                                    "description": "Port number to communicate with the ICAP server.",
                                    "minimum": 1,
                                    "type": "integer"
                                  },
                                  "icap_service": {
                                    "description": "A descriptive name for the service using ICAP.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "icap_tls_enable": {
                                    "description": "Enables TLS for the service.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "illegal_resource_access": {
                                    "description": "Logs illegal resource access attempts. `Off` by default. ",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "joomla": {
                                    "description": "Allows Joomla traffic. `Off` by default. ",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "php": {
                                    "description": "Allows PHP traffic. `Off` by default. ",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "protocol_anomalies": {
                                    "description": "Logs protocol anomalies. `Off` by default. ",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "protocol_violations": {
                                    "description": "Logs protocol violations. `Off` by default. ",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "request_limits": {
                                    "description": "Enables request limits. `Off` by default. ",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "sql_injection": {
                                    "description": "Allows SQL injection traffic. `Off` by default. ",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "wordpress": {
                                    "description": "Allows Wordpress traffic. `Off` by default. ",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "xss_attack": {
                                    "description": "Logs cross-site scripting attack attempts. `Off` by default. ",
                                    "minLength": 1,
                                    "type": "string"
                                  }
                                },
                                "x-akamai": {
                                  "file-path": "schemas/service-settings.yaml"
                                }
                              }
                            }
                          },
                          "status": {
                            "default": 0,
                            "description": "`0` (Disabled), `1` (Enabled).",
                            "type": "integer",
                            "enum": [
                              0,
                              1
                            ]
                          },
                          "uuid_url": {
                            "description": "A unique identifier for this service.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/application-service.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/applicationServices.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application.",
          "example": "{{applicationId}}",
          "in": "path",
          "name": "applicationId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/applicationId-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/apps/{applicationId}/urllocation": {
      "post": {
        "description": "Create a URL location rule.",
        "operationId": "post-app-urllocation",
        "summary": "Create a URL location rule",
        "tags": [
          "URL location rules"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-app-urllocation"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "name": "homepage_URL",
                "rule_type": 1,
                "url": "/home"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Contains data and objects relating to URL location rules.",
                "required": [
                  "description",
                  "name"
                ],
                "properties": {
                  "app_uuid_url": {
                    "description": "A unique identifier for an application.",
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the application.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the application.",
                    "type": "string"
                  },
                  "resource_uri": {
                    "description": "A unique identifier for the resource location.",
                    "type": "string"
                  },
                  "settings": {
                    "additionalProperties": true,
                    "description": "The advanced application settings.",
                    "type": "object",
                    "properties": {
                      "anonymous_server_conn_limit": {
                        "description": "The maximum number of anonymous server connections allowed. ",
                        "type": "string"
                      },
                      "anonymous_server_request_limit": {
                        "description": "The maximum number of anonymous server requests allowed. ",
                        "type": "string"
                      },
                      "app_auth": {
                        "description": "The application-facing authentication mechanism. Default is `none`.",
                        "type": "string"
                      },
                      "app_auth_domain": {
                        "description": "Specifies the active directory domain where the application's service account was created. Used if the application supports Kerberos. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "string"
                      },
                      "app_cookie_domain": {
                        "description": "The domain to be used in application cookies. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "string"
                      },
                      "app_location": {
                        "description": "The application's location. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "string"
                      },
                      "app_server_read_timeout": {
                        "description": "The maximum time for an application server to fulfill a user request. The default is 60 seconds.",
                        "type": "string"
                      },
                      "authenticated_server_conn_limit": {
                        "description": "The maximum number of authenticated server connections allowed. ",
                        "type": "string"
                      },
                      "authenticated_server_request_limit": {
                        "description": "The maximum number of authenticated server connections allowed. ",
                        "type": "string"
                      },
                      "authentication_enabled": {
                        "description": "Whether authentication is enabled for the application. Either `true` or `false`.",
                        "type": "string"
                      },
                      "cookie_domain": {
                        "description": "The domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "string"
                      },
                      "external_cookie_domain": {
                        "description": "The external domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "string"
                      },
                      "health_check_fall": {
                        "description": "The number of consecutive missed heartbeats before the connector considers an application server to be unreachable.",
                        "type": "string"
                      },
                      "health_check_http_version": {
                        "description": "The HTTP version to use for the health check. ",
                        "type": "string"
                      },
                      "health_check_interval": {
                        "description": "The interval between successive heartbeats in seconds.",
                        "type": "string"
                      },
                      "health_check_rise": {
                        "description": "The number of consecutive successful heartbeats that connector (or connectors) must receive before considering an application server to be healthy. The default is two.",
                        "type": "string"
                      },
                      "health_check_timeout": {
                        "description": "The time in seconds that connector must wait before considering a heartbeat attempt to have failed.",
                        "type": "string"
                      },
                      "health_check_type": {
                        "description": "The type of health check to perform on all the associated servers to verify service availability. Either `default`, `basic`, `http`, `https`, `tls`, `sslv3`, `tcp`, or `disable`.",
                        "type": "string",
                        "enum": [
                          "default",
                          "basic",
                          "http",
                          "https",
                          "tls",
                          "sslv3",
                          "tcp",
                          "disable"
                        ]
                      },
                      "hidden_app": {
                        "description": "Used to hide the application from the login portal. Either `true` or `false`.",
                        "type": "string"
                      },
                      "http_only_cookie": {
                        "description": "Indicates whether cookies created for this application are only used for HTTP content. If your application uses a Java applet, you may want to disable this option. Either `true or `false`.",
                        "type": "string"
                      },
                      "https_sslv3": {
                        "description": "Enables the application to interact with the connector using SSLv3. Either `true` or `false`.",
                        "type": "string"
                      },
                      "idle_close_time_seconds": {
                        "description": "The number of seconds a session can remain idle before it is closed.",
                        "type": "string"
                      },
                      "idle_conn_ceil": {
                        "description": "The maximum number of TLS sessions pre-created by a given connector to enable user access to enterprise applications.",
                        "type": "string"
                      },
                      "idle_conn_floor": {
                        "description": "The minimum number of TLS sessions pre-created by a given connector to enable user access to enterprise applications.",
                        "type": "string"
                      },
                      "idle_conn_step": {
                        "description": "The incremental number of TLS sessions launched by a given connector to enable user access to enterprise applications.",
                        "type": "string"
                      },
                      "idp_idle_expiry": {
                        "description": "The number of seconds before an idle session with the IDP expires. Specify `null` if you want to provide this later.",
                        "nullable": true
                      },
                      "idp_max_expiry": {
                        "description": "The maximum number of seconds to maintain an IDP session. Specify `null` if you want to provide this later.",
                        "nullable": true
                      },
                      "ignore_cname_resolution": {
                        "description": "Configures to application to ignore CNAME DNS resolutions. Either `true` or `false`.",
                        "type": "string"
                      },
                      "internal_hostname": {
                        "description": "The internal hostname to perform CNAME redirection on. Specify `null` if not applicable.",
                        "nullable": true
                      },
                      "is_ssl_verification_enabled": {
                        "description": "Indicates if SSL verification is enabled for the application. Either `true` or `false`.",
                        "type": "string"
                      },
                      "kerberos_negotiate_once": {
                        "description": "Configures the application to perform Kerberos authentication only on the initial login URL. Either `on` or `off`.",
                        "type": "string"
                      },
                      "load_balancing_metric": {
                        "description": "The load-balancing metric for the application. Either `round-robin` or `ip-hash`.",
                        "type": "string",
                        "enum": [
                          "round-robin",
                          "ip-hash"
                        ]
                      },
                      "logging_enabled": {
                        "description": "Enables logging for the application. Either `true` or `false`.",
                        "type": "string"
                      },
                      "login_timeout": {
                        "description": "The number of seconds before a login attempt times out.",
                        "type": "string"
                      },
                      "login_url": {
                        "description": "The URL for which authentication tokens need to be generated. Specify `null` if not applicable.",
                        "nullable": true
                      },
                      "logout_url": {
                        "description": "The single-sign out URL triggered when a user logs out of an SSO application. Specify `null` if not applicable.",
                        "nullable": true
                      },
                      "mfa": {
                        "description": "Enables multi-factor authentication for the application. Either `enable` or `disable`.",
                        "type": "string"
                      },
                      "preauth_enforce_url": {
                        "description": "The URL that users are directed to when authenticating with a third party IdP. By default users are directed to the EAA application page.",
                        "type": "string"
                      },
                      "proxy_buffer_size_kb": {
                        "description": "The size of the proxy's buffer, in kilobytes. ",
                        "type": "string"
                      },
                      "proxy_disable_clipboard": {
                        "description": "Prevents users from copying information from a RDP session. Either `true` or `false`.",
                        "type": "string"
                      },
                      "rate_limit": {
                        "description": "Enables rate limiting for the application. Either `on` or `off`.",
                        "type": "string"
                      },
                      "rdp_initial_program": {
                        "description": "The program that initializes when the user logs in to the remote environment. Specify `null` if not applicable.",
                        "nullable": true
                      },
                      "refresh_sticky_cookie": {
                        "description": "Enables refresh of cookies used for session stickiness. Either `on` or `off`.",
                        "type": "string"
                      },
                      "request_body_rewrite": {
                        "description": "Enables the application to rewrite request body data. Either `true` or `false`.",
                        "type": "string"
                      },
                      "request_parameters": {
                        "description": "The HTTP request parameter to use. For example, `GET`. Specify `null` if not applicable.",
                        "nullable": true
                      },
                      "saas_enabled": {
                        "description": "Enables SaaS for the application. Either `true` or `false`.",
                        "type": "string"
                      },
                      "sentry_redirect_401": {
                        "description": "Enables the Sentry module to redirect requests that receive a 401 response.",
                        "type": "string"
                      },
                      "server_cert_validate": {
                        "description": "Enables EAA to fo origin server certification validation for HTTPS applications.",
                        "type": "string"
                      },
                      "server_request_burst": {
                        "description": "The server request threshold for burst monitoring.",
                        "type": "string"
                      },
                      "service_principle_name": {
                        "description": "The application's Kerberos service principal name (SPN). If your application uses a different service principal name, specify the configuration suitable for your application. Specify `null` if not applicable.",
                        "nullable": true
                      },
                      "session_sticky": {
                        "description": "Enables session stickiness to ensure that a given session always traverses the same connector when interacting with the application. Specify `null` if not applicable.",
                        "nullable": true
                      },
                      "session_sticky_cookie_maxage": {
                        "description": "Sets the maximum age in seconds for the session stickiness cookie.",
                        "type": "string"
                      },
                      "session_sticky_server_cookie": {
                        "description": "Enables refresh of a sticky cookie to make sure that the content goes to the same connector to prevent session lag or content loss in a session. Even after the session length has passed, the session does not go to a new connector. Specify `null` if not applicable. ",
                        "nullable": true
                      },
                      "spdy_enabled": {
                        "description": "Enables SPDY traffic management. Either `true` or `false`.",
                        "type": "string"
                      },
                      "ssh_audit_enabled": {
                        "description": "Enables ssh session auditing. Either `true` or `false`.",
                        "type": "string"
                      },
                      "sso": {
                        "description": "Enables SSO authentication for the application. Either `true` or `false`.",
                        "type": "string"
                      },
                      "use_internal_host": {
                        "description": "Configures the application to use CNAME redirection to an internal hostname.",
                        "type": "string"
                      },
                      "user_name": {
                        "description": "The user name to use for application authentication. Specify `null` if not applicable.",
                        "nullable": true,
                        "type": "string"
                      },
                      "wapp_auth": {
                        "description": "The authentication method for the application. Either `form`, `basic`, `basic+cookie`, or `certificate_only`.",
                        "type": "string",
                        "enum": [
                          "form",
                          "basic",
                          "basic+cookie",
                          "certificate_only"
                        ]
                      },
                      "websocket_enabled": {
                        "description": "Indicates that this application uses WebSockets for HTTP transport. Either `true` or `false`.",
                        "type": "string"
                      }
                    }
                  },
                  "status": {
                    "description": "The status of the application.",
                    "type": "integer"
                  },
                  "url": {
                    "description": "A unique location for an application.",
                    "type": "string"
                  },
                  "uuid_url": {
                    "description": "A unique identifier for an application configuration.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "app_uuid_url": "l_U22L2wSVy4eG3-TcggzA",
                  "description": null,
                  "name": "Sales URL",
                  "rule_type": 1,
                  "status": 1,
                  "url": "/home/sales",
                  "uuid_url": "FtY7JBy7Sy6BnEORMBsZgA",
                  "servers": [],
                  "resource_uri": {
                    "href": "/api/v1/apps/l_U22L2wSVy4eG3-TcggzA/urllocation/FtY7JBy7Sy6BnEORMBsZgA"
                  },
                  "settings": {
                    "anonymous_server_conn_limit": "50",
                    "anonymous_server_request_limit": "100",
                    "app_auth": "none",
                    "app_auth_domain": null,
                    "app_cookie_domain": null,
                    "app_location": null,
                    "app_server_read_timeout": "60",
                    "authenticated_server_conn_limit": "50",
                    "authenticated_server_request_limit": "100",
                    "authentication_enabled": "true",
                    "cookie_domain": null,
                    "external_cookie_domain": null,
                    "health_check_fall": "3",
                    "health_check_http_host_header": null,
                    "health_check_http_url": "/",
                    "health_check_http_version": "1.1",
                    "health_check_interval": "30000",
                    "health_check_rise": "2",
                    "health_check_timeout": "50000",
                    "health_check_type": "0",
                    "hidden_app": "false",
                    "http_only_cookie": "true",
                    "https_sslv3": "false",
                    "idle_close_time_seconds": "1200",
                    "idle_conn_ceil": "75",
                    "idle_conn_floor": "50",
                    "idle_conn_step": "10",
                    "idp_idle_expiry": null,
                    "idp_max_expiry": null,
                    "ignore_cname_resolution": "false",
                    "inject_ajax_javascript": "off",
                    "internal_hostname": null,
                    "is_ssl_verification_enabled": "false",
                    "kerberos_negotiate_once": "off",
                    "load_balancing_metric": "round-robin",
                    "logging_enabled": "true",
                    "login_timeout": "5",
                    "login_url": null,
                    "logout_url": null,
                    "mfa": "enable",
                    "preauth_enforce_url": "",
                    "proxy_buffer_size_kb": "4",
                    "proxy_disable_clipboard": "false",
                    "rate_limit": "on",
                    "rdp_initial_program": null,
                    "refresh_sticky_cookie": "on",
                    "request_body_rewrite": "false",
                    "request_parameters": null,
                    "saas_enabled": "false",
                    "sentry_redirect_401": "off",
                    "server_cert_validate": "true",
                    "server_request_burst": "100",
                    "service_principle_name": null,
                    "session_sticky": null,
                    "session_sticky_cookie_maxage": "0",
                    "session_sticky_server_cookie": null,
                    "spdy_enabled": "true",
                    "ssh_audit_enabled": "false",
                    "sso": "true",
                    "use_internal_host": "false",
                    "user_name": null,
                    "wapp_auth": "form",
                    "websocket_enabled": "false"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains data and objects relating to URL location rules.",
                  "required": [
                    "description",
                    "name"
                  ],
                  "properties": {
                    "app_uuid_url": {
                      "description": "A unique identifier for an application.",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the application.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the application.",
                      "type": "string"
                    },
                    "resource_uri": {
                      "description": "A unique identifier for the resource location.",
                      "type": "string"
                    },
                    "settings": {
                      "additionalProperties": true,
                      "description": "The advanced application settings.",
                      "type": "object",
                      "properties": {
                        "anonymous_server_conn_limit": {
                          "description": "The maximum number of anonymous server connections allowed. ",
                          "type": "string"
                        },
                        "anonymous_server_request_limit": {
                          "description": "The maximum number of anonymous server requests allowed. ",
                          "type": "string"
                        },
                        "app_auth": {
                          "description": "The application-facing authentication mechanism. Default is `none`.",
                          "type": "string"
                        },
                        "app_auth_domain": {
                          "description": "Specifies the active directory domain where the application's service account was created. Used if the application supports Kerberos. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "app_cookie_domain": {
                          "description": "The domain to be used in application cookies. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "app_location": {
                          "description": "The application's location. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "app_server_read_timeout": {
                          "description": "The maximum time for an application server to fulfill a user request. The default is 60 seconds.",
                          "type": "string"
                        },
                        "authenticated_server_conn_limit": {
                          "description": "The maximum number of authenticated server connections allowed. ",
                          "type": "string"
                        },
                        "authenticated_server_request_limit": {
                          "description": "The maximum number of authenticated server connections allowed. ",
                          "type": "string"
                        },
                        "authentication_enabled": {
                          "description": "Whether authentication is enabled for the application. Either `true` or `false`.",
                          "type": "string"
                        },
                        "cookie_domain": {
                          "description": "The domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "external_cookie_domain": {
                          "description": "The external domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "health_check_fall": {
                          "description": "The number of consecutive missed heartbeats before the connector considers an application server to be unreachable.",
                          "type": "string"
                        },
                        "health_check_http_version": {
                          "description": "The HTTP version to use for the health check. ",
                          "type": "string"
                        },
                        "health_check_interval": {
                          "description": "The interval between successive heartbeats in seconds.",
                          "type": "string"
                        },
                        "health_check_rise": {
                          "description": "The number of consecutive successful heartbeats that connector (or connectors) must receive before considering an application server to be healthy. The default is two.",
                          "type": "string"
                        },
                        "health_check_timeout": {
                          "description": "The time in seconds that connector must wait before considering a heartbeat attempt to have failed.",
                          "type": "string"
                        },
                        "health_check_type": {
                          "description": "The type of health check to perform on all the associated servers to verify service availability. Either `default`, `basic`, `http`, `https`, `tls`, `sslv3`, `tcp`, or `disable`.",
                          "type": "string",
                          "enum": [
                            "default",
                            "basic",
                            "http",
                            "https",
                            "tls",
                            "sslv3",
                            "tcp",
                            "disable"
                          ]
                        },
                        "hidden_app": {
                          "description": "Used to hide the application from the login portal. Either `true` or `false`.",
                          "type": "string"
                        },
                        "http_only_cookie": {
                          "description": "Indicates whether cookies created for this application are only used for HTTP content. If your application uses a Java applet, you may want to disable this option. Either `true or `false`.",
                          "type": "string"
                        },
                        "https_sslv3": {
                          "description": "Enables the application to interact with the connector using SSLv3. Either `true` or `false`.",
                          "type": "string"
                        },
                        "idle_close_time_seconds": {
                          "description": "The number of seconds a session can remain idle before it is closed.",
                          "type": "string"
                        },
                        "idle_conn_ceil": {
                          "description": "The maximum number of TLS sessions pre-created by a given connector to enable user access to enterprise applications.",
                          "type": "string"
                        },
                        "idle_conn_floor": {
                          "description": "The minimum number of TLS sessions pre-created by a given connector to enable user access to enterprise applications.",
                          "type": "string"
                        },
                        "idle_conn_step": {
                          "description": "The incremental number of TLS sessions launched by a given connector to enable user access to enterprise applications.",
                          "type": "string"
                        },
                        "idp_idle_expiry": {
                          "description": "The number of seconds before an idle session with the IDP expires. Specify `null` if you want to provide this later.",
                          "nullable": true
                        },
                        "idp_max_expiry": {
                          "description": "The maximum number of seconds to maintain an IDP session. Specify `null` if you want to provide this later.",
                          "nullable": true
                        },
                        "ignore_cname_resolution": {
                          "description": "Configures to application to ignore CNAME DNS resolutions. Either `true` or `false`.",
                          "type": "string"
                        },
                        "internal_hostname": {
                          "description": "The internal hostname to perform CNAME redirection on. Specify `null` if not applicable.",
                          "nullable": true
                        },
                        "is_ssl_verification_enabled": {
                          "description": "Indicates if SSL verification is enabled for the application. Either `true` or `false`.",
                          "type": "string"
                        },
                        "kerberos_negotiate_once": {
                          "description": "Configures the application to perform Kerberos authentication only on the initial login URL. Either `on` or `off`.",
                          "type": "string"
                        },
                        "load_balancing_metric": {
                          "description": "The load-balancing metric for the application. Either `round-robin` or `ip-hash`.",
                          "type": "string",
                          "enum": [
                            "round-robin",
                            "ip-hash"
                          ]
                        },
                        "logging_enabled": {
                          "description": "Enables logging for the application. Either `true` or `false`.",
                          "type": "string"
                        },
                        "login_timeout": {
                          "description": "The number of seconds before a login attempt times out.",
                          "type": "string"
                        },
                        "login_url": {
                          "description": "The URL for which authentication tokens need to be generated. Specify `null` if not applicable.",
                          "nullable": true
                        },
                        "logout_url": {
                          "description": "The single-sign out URL triggered when a user logs out of an SSO application. Specify `null` if not applicable.",
                          "nullable": true
                        },
                        "mfa": {
                          "description": "Enables multi-factor authentication for the application. Either `enable` or `disable`.",
                          "type": "string"
                        },
                        "preauth_enforce_url": {
                          "description": "The URL that users are directed to when authenticating with a third party IdP. By default users are directed to the EAA application page.",
                          "type": "string"
                        },
                        "proxy_buffer_size_kb": {
                          "description": "The size of the proxy's buffer, in kilobytes. ",
                          "type": "string"
                        },
                        "proxy_disable_clipboard": {
                          "description": "Prevents users from copying information from a RDP session. Either `true` or `false`.",
                          "type": "string"
                        },
                        "rate_limit": {
                          "description": "Enables rate limiting for the application. Either `on` or `off`.",
                          "type": "string"
                        },
                        "rdp_initial_program": {
                          "description": "The program that initializes when the user logs in to the remote environment. Specify `null` if not applicable.",
                          "nullable": true
                        },
                        "refresh_sticky_cookie": {
                          "description": "Enables refresh of cookies used for session stickiness. Either `on` or `off`.",
                          "type": "string"
                        },
                        "request_body_rewrite": {
                          "description": "Enables the application to rewrite request body data. Either `true` or `false`.",
                          "type": "string"
                        },
                        "request_parameters": {
                          "description": "The HTTP request parameter to use. For example, `GET`. Specify `null` if not applicable.",
                          "nullable": true
                        },
                        "saas_enabled": {
                          "description": "Enables SaaS for the application. Either `true` or `false`.",
                          "type": "string"
                        },
                        "sentry_redirect_401": {
                          "description": "Enables the Sentry module to redirect requests that receive a 401 response.",
                          "type": "string"
                        },
                        "server_cert_validate": {
                          "description": "Enables EAA to fo origin server certification validation for HTTPS applications.",
                          "type": "string"
                        },
                        "server_request_burst": {
                          "description": "The server request threshold for burst monitoring.",
                          "type": "string"
                        },
                        "service_principle_name": {
                          "description": "The application's Kerberos service principal name (SPN). If your application uses a different service principal name, specify the configuration suitable for your application. Specify `null` if not applicable.",
                          "nullable": true
                        },
                        "session_sticky": {
                          "description": "Enables session stickiness to ensure that a given session always traverses the same connector when interacting with the application. Specify `null` if not applicable.",
                          "nullable": true
                        },
                        "session_sticky_cookie_maxage": {
                          "description": "Sets the maximum age in seconds for the session stickiness cookie.",
                          "type": "string"
                        },
                        "session_sticky_server_cookie": {
                          "description": "Enables refresh of a sticky cookie to make sure that the content goes to the same connector to prevent session lag or content loss in a session. Even after the session length has passed, the session does not go to a new connector. Specify `null` if not applicable. ",
                          "nullable": true
                        },
                        "spdy_enabled": {
                          "description": "Enables SPDY traffic management. Either `true` or `false`.",
                          "type": "string"
                        },
                        "ssh_audit_enabled": {
                          "description": "Enables ssh session auditing. Either `true` or `false`.",
                          "type": "string"
                        },
                        "sso": {
                          "description": "Enables SSO authentication for the application. Either `true` or `false`.",
                          "type": "string"
                        },
                        "use_internal_host": {
                          "description": "Configures the application to use CNAME redirection to an internal hostname.",
                          "type": "string"
                        },
                        "user_name": {
                          "description": "The user name to use for application authentication. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "wapp_auth": {
                          "description": "The authentication method for the application. Either `form`, `basic`, `basic+cookie`, or `certificate_only`.",
                          "type": "string",
                          "enum": [
                            "form",
                            "basic",
                            "basic+cookie",
                            "certificate_only"
                          ]
                        },
                        "websocket_enabled": {
                          "description": "Indicates that this application uses WebSockets for HTTP transport. Either `true` or `false`.",
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "description": "The status of the application.",
                      "type": "integer"
                    },
                    "url": {
                      "description": "A unique location for an application.",
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for an application configuration.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists a list of URL location rules for an application.",
        "operationId": "get-app-urllocations",
        "summary": "List URL location rules",
        "tags": [
          "URL location rules"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-urllocations"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 1
                  },
                  "objects": [
                    {
                      "app_uuid_url": "3Czu34blSkarRHafL2v8bQ",
                      "description": null,
                      "name": "asdf",
                      "status": 1,
                      "url": "/asdf",
                      "uuid_url": "Erzz3LiSQqSp0uIw28aMKQ",
                      "resource_uri": {
                        "href": "/api/v1/apps/3Czu34blSkarRHafL2v8bQ/urllocation/Erzz3LiSQqSp0uIw28aMKQ"
                      },
                      "settings": {
                        "anonymous_server_conn_limit": "50",
                        "anonymous_server_request_limit": "100",
                        "app_auth": "none",
                        "app_auth_domain": null,
                        "app_cookie_domain": null,
                        "app_location": null,
                        "app_server_read_timeout": "60",
                        "authenticated_server_conn_limit": "50",
                        "authenticated_server_request_limit": "100",
                        "authentication_enabled": "false",
                        "cookie_domain": null,
                        "external_cookie_domain": null,
                        "health_check_fall": "3",
                        "health_check_http_host_header": null,
                        "health_check_http_url": "/",
                        "health_check_http_version": "1.1",
                        "health_check_interval": "30000",
                        "health_check_rise": "2",
                        "health_check_timeout": "50000",
                        "health_check_type": "0",
                        "hidden_app": "false",
                        "http_only_cookie": "true",
                        "https_sslv3": "false",
                        "idle_close_time_seconds": "1200",
                        "idle_conn_ceil": "75",
                        "idle_conn_floor": "50",
                        "idle_conn_step": "10",
                        "idp_idle_expiry": null,
                        "idp_max_expiry": null,
                        "ignore_cname_resolution": "false",
                        "inject_ajax_javascript": "off",
                        "internal_hostname": null,
                        "kerberos_negotiate_once": "off",
                        "load_balancing_metric": "round-robin",
                        "logging_enabled": "true",
                        "login_timeout": "5",
                        "login_url": null,
                        "logout_url": null,
                        "mfa": "inherit",
                        "preauth_enforce_url": "",
                        "proxy_buffer_size_kb": "4",
                        "proxy_disable_clipboard": "false",
                        "rate_limit": "on",
                        "rdp_initial_program": null,
                        "refresh_sticky_cookie": "on",
                        "request_body_rewrite": "false",
                        "request_parameters": null,
                        "saas_enabled": "false",
                        "sentry_redirect_401": "off",
                        "server_cert_validate": "true",
                        "server_request_burst": "100",
                        "service_principle_name": null,
                        "session_sticky": "false",
                        "session_sticky_cookie_maxage": "0",
                        "session_sticky_server_cookie": null,
                        "spdy_enabled": "true",
                        "ssh_audit_enabled": "false",
                        "sso": "true",
                        "use_internal_host": "false",
                        "user_name": null,
                        "wapp_auth": "form",
                        "websocket_enabled": "false"
                      },
                      "servers": [
                        {
                          "origin_host": "192.0.2.89",
                          "origin_port": 80,
                          "origin_protocol": "http"
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "x-akamai": {
                    "file-path": "schemas/need-schema-here.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application.",
          "example": "{{applicationId}}",
          "in": "path",
          "name": "applicationId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/applicationId-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/apps/{applicationId}/urllocation/{locationId}": {
      "get": {
        "description": "Lists the URL location rule for an application.",
        "operationId": "get-app-urllocation",
        "summary": "Get a URL location rule",
        "tags": [
          "URL location rules"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-urllocation"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "app_uuid_url": "3Czu34blSkarRHafL2v8bQ",
                  "description": null,
                  "name": "asdf",
                  "status": 1,
                  "url": "/asdf",
                  "uuid_url": "Erzz3LiSQqSp0uIw28aMKQ",
                  "resource_uri": {
                    "href": "/api/v1/apps/3Czu34blSkarRHafL2v8bQ/urllocation/Erzz3LiSQqSp0uIw28aMKQ"
                  },
                  "settings": {
                    "anonymous_server_conn_limit": "50",
                    "anonymous_server_request_limit": "100",
                    "app_auth": "none",
                    "app_auth_domain": null,
                    "app_cookie_domain": null,
                    "app_location": null,
                    "app_server_read_timeout": "60",
                    "authenticated_server_conn_limit": "50",
                    "authenticated_server_request_limit": "100",
                    "authentication_enabled": "false",
                    "cookie_domain": null,
                    "external_cookie_domain": null,
                    "health_check_fall": "3",
                    "health_check_http_host_header": null,
                    "health_check_http_url": "/",
                    "health_check_http_version": "1.1",
                    "health_check_interval": "30000",
                    "health_check_rise": "2",
                    "health_check_timeout": "50000",
                    "health_check_type": "0",
                    "hidden_app": "false",
                    "http_only_cookie": "true",
                    "https_sslv3": "false",
                    "idle_close_time_seconds": "1200",
                    "idle_conn_ceil": "75",
                    "idle_conn_floor": "50",
                    "idle_conn_step": "10",
                    "idp_idle_expiry": null,
                    "idp_max_expiry": null,
                    "ignore_cname_resolution": "false",
                    "inject_ajax_javascript": "off",
                    "internal_hostname": null,
                    "kerberos_negotiate_once": "off",
                    "load_balancing_metric": "round-robin",
                    "logging_enabled": "true",
                    "login_timeout": "5",
                    "login_url": null,
                    "logout_url": null,
                    "mfa": "inherit",
                    "preauth_enforce_url": "",
                    "proxy_buffer_size_kb": "4",
                    "proxy_disable_clipboard": "false",
                    "rate_limit": "on",
                    "rdp_initial_program": null,
                    "refresh_sticky_cookie": "on",
                    "request_body_rewrite": "false",
                    "request_parameters": null,
                    "saas_enabled": "false",
                    "sentry_redirect_401": "off",
                    "server_cert_validate": "true",
                    "server_request_burst": "100",
                    "service_principle_name": null,
                    "session_sticky": "false",
                    "session_sticky_cookie_maxage": "0",
                    "session_sticky_server_cookie": null,
                    "spdy_enabled": "true",
                    "ssh_audit_enabled": "false",
                    "sso": "true",
                    "use_internal_host": "false",
                    "user_name": null,
                    "wapp_auth": "form",
                    "websocket_enabled": "false"
                  },
                  "servers": [
                    {
                      "origin_host": "192.0.2.53",
                      "origin_port": 80,
                      "origin_protocol": "http"
                    }
                  ]
                },
                "schema": {
                  "x-akamai": {
                    "file-path": "schemas/need-schema-here.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Edits a URL location rule.",
        "operationId": "put-app-urllocation",
        "summary": "Modify a URL location rule",
        "tags": [
          "URL location rules"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-app-urllocation"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "app_uuid_url": "l_U22L2wSVy4eG3-TcggzA",
                "description": null,
                "name": "default application rule",
                "rule_type": 1,
                "status": 1,
                "url": "/about",
                "servers": [],
                "settings": {
                  "anonymous_server_conn_limit": "50",
                  "anonymous_server_request_limit": "100",
                  "app_auth": "none",
                  "app_auth_domain": null,
                  "app_cookie_domain": null,
                  "app_location": null,
                  "app_server_read_timeout": "60",
                  "authenticated_server_conn_limit": "50",
                  "authenticated_server_request_limit": "100",
                  "authentication_enabled": "false",
                  "cookie_domain": null,
                  "external_cookie_domain": null,
                  "health_check_fall": "3",
                  "health_check_http_host_header": null,
                  "health_check_http_url": "/",
                  "health_check_http_version": "1.1",
                  "health_check_interval": "30000",
                  "health_check_rise": "2",
                  "health_check_timeout": "50000",
                  "health_check_type": "0",
                  "hidden_app": "false",
                  "http_only_cookie": "true",
                  "https_sslv3": "false",
                  "idle_close_time_seconds": "1200",
                  "idle_conn_ceil": "75",
                  "idle_conn_floor": "50",
                  "idle_conn_step": "10",
                  "idp_idle_expiry": null,
                  "idp_max_expiry": null,
                  "ignore_cname_resolution": "false",
                  "inject_ajax_javascript": "off",
                  "internal_hostname": null,
                  "is_ssl_verification_enabled": "false",
                  "kerberos_negotiate_once": "off",
                  "load_balancing_metric": "ip-hash",
                  "logging_enabled": "true",
                  "login_timeout": "5",
                  "login_url": null,
                  "logout_url": null,
                  "mfa": "enable",
                  "preauth_enforce_url": "",
                  "proxy_buffer_size_kb": "4",
                  "proxy_disable_clipboard": "false",
                  "rate_limit": "on",
                  "rdp_initial_program": null,
                  "refresh_sticky_cookie": "on",
                  "request_body_rewrite": "false",
                  "request_parameters": null,
                  "saas_enabled": "false",
                  "sentry_redirect_401": "off",
                  "server_cert_validate": "true",
                  "server_request_burst": "100",
                  "service_principle_name": null,
                  "session_sticky": null,
                  "session_sticky_cookie_maxage": "0",
                  "session_sticky_server_cookie": null,
                  "spdy_enabled": "true",
                  "ssh_audit_enabled": "false",
                  "sso": "true",
                  "use_internal_host": "true",
                  "user_name": null,
                  "wapp_auth": "form",
                  "websocket_enabled": "false"
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "Contains data and objects relating to URL location rules.",
                "required": [
                  "description",
                  "name"
                ],
                "properties": {
                  "app_uuid_url": {
                    "description": "A unique identifier for an application.",
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the application.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the application.",
                    "type": "string"
                  },
                  "resource_uri": {
                    "description": "A unique identifier for the resource location.",
                    "type": "string"
                  },
                  "settings": {
                    "additionalProperties": true,
                    "description": "The advanced application settings.",
                    "type": "object",
                    "properties": {
                      "anonymous_server_conn_limit": {
                        "description": "The maximum number of anonymous server connections allowed. ",
                        "type": "string"
                      },
                      "anonymous_server_request_limit": {
                        "description": "The maximum number of anonymous server requests allowed. ",
                        "type": "string"
                      },
                      "app_auth": {
                        "description": "The application-facing authentication mechanism. Default is `none`.",
                        "type": "string"
                      },
                      "app_auth_domain": {
                        "description": "Specifies the active directory domain where the application's service account was created. Used if the application supports Kerberos. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "string"
                      },
                      "app_cookie_domain": {
                        "description": "The domain to be used in application cookies. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "string"
                      },
                      "app_location": {
                        "description": "The application's location. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "string"
                      },
                      "app_server_read_timeout": {
                        "description": "The maximum time for an application server to fulfill a user request. The default is 60 seconds.",
                        "type": "string"
                      },
                      "authenticated_server_conn_limit": {
                        "description": "The maximum number of authenticated server connections allowed. ",
                        "type": "string"
                      },
                      "authenticated_server_request_limit": {
                        "description": "The maximum number of authenticated server connections allowed. ",
                        "type": "string"
                      },
                      "authentication_enabled": {
                        "description": "Whether authentication is enabled for the application. Either `true` or `false`.",
                        "type": "string"
                      },
                      "cookie_domain": {
                        "description": "The domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "string"
                      },
                      "external_cookie_domain": {
                        "description": "The external domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                        "nullable": true,
                        "type": "string"
                      },
                      "health_check_fall": {
                        "description": "The number of consecutive missed heartbeats before the connector considers an application server to be unreachable.",
                        "type": "string"
                      },
                      "health_check_http_version": {
                        "description": "The HTTP version to use for the health check. ",
                        "type": "string"
                      },
                      "health_check_interval": {
                        "description": "The interval between successive heartbeats in seconds.",
                        "type": "string"
                      },
                      "health_check_rise": {
                        "description": "The number of consecutive successful heartbeats that connector (or connectors) must receive before considering an application server to be healthy. The default is two.",
                        "type": "string"
                      },
                      "health_check_timeout": {
                        "description": "The time in seconds that connector must wait before considering a heartbeat attempt to have failed.",
                        "type": "string"
                      },
                      "health_check_type": {
                        "description": "The type of health check to perform on all the associated servers to verify service availability. Either `default`, `basic`, `http`, `https`, `tls`, `sslv3`, `tcp`, or `disable`.",
                        "type": "string",
                        "enum": [
                          "default",
                          "basic",
                          "http",
                          "https",
                          "tls",
                          "sslv3",
                          "tcp",
                          "disable"
                        ]
                      },
                      "hidden_app": {
                        "description": "Used to hide the application from the login portal. Either `true` or `false`.",
                        "type": "string"
                      },
                      "http_only_cookie": {
                        "description": "Indicates whether cookies created for this application are only used for HTTP content. If your application uses a Java applet, you may want to disable this option. Either `true or `false`.",
                        "type": "string"
                      },
                      "https_sslv3": {
                        "description": "Enables the application to interact with the connector using SSLv3. Either `true` or `false`.",
                        "type": "string"
                      },
                      "idle_close_time_seconds": {
                        "description": "The number of seconds a session can remain idle before it is closed.",
                        "type": "string"
                      },
                      "idle_conn_ceil": {
                        "description": "The maximum number of TLS sessions pre-created by a given connector to enable user access to enterprise applications.",
                        "type": "string"
                      },
                      "idle_conn_floor": {
                        "description": "The minimum number of TLS sessions pre-created by a given connector to enable user access to enterprise applications.",
                        "type": "string"
                      },
                      "idle_conn_step": {
                        "description": "The incremental number of TLS sessions launched by a given connector to enable user access to enterprise applications.",
                        "type": "string"
                      },
                      "idp_idle_expiry": {
                        "description": "The number of seconds before an idle session with the IDP expires. Specify `null` if you want to provide this later.",
                        "nullable": true
                      },
                      "idp_max_expiry": {
                        "description": "The maximum number of seconds to maintain an IDP session. Specify `null` if you want to provide this later.",
                        "nullable": true
                      },
                      "ignore_cname_resolution": {
                        "description": "Configures to application to ignore CNAME DNS resolutions. Either `true` or `false`.",
                        "type": "string"
                      },
                      "internal_hostname": {
                        "description": "The internal hostname to perform CNAME redirection on. Specify `null` if not applicable.",
                        "nullable": true
                      },
                      "is_ssl_verification_enabled": {
                        "description": "Indicates if SSL verification is enabled for the application. Either `true` or `false`.",
                        "type": "string"
                      },
                      "kerberos_negotiate_once": {
                        "description": "Configures the application to perform Kerberos authentication only on the initial login URL. Either `on` or `off`.",
                        "type": "string"
                      },
                      "load_balancing_metric": {
                        "description": "The load-balancing metric for the application. Either `round-robin` or `ip-hash`.",
                        "type": "string",
                        "enum": [
                          "round-robin",
                          "ip-hash"
                        ]
                      },
                      "logging_enabled": {
                        "description": "Enables logging for the application. Either `true` or `false`.",
                        "type": "string"
                      },
                      "login_timeout": {
                        "description": "The number of seconds before a login attempt times out.",
                        "type": "string"
                      },
                      "login_url": {
                        "description": "The URL for which authentication tokens need to be generated. Specify `null` if not applicable.",
                        "nullable": true
                      },
                      "logout_url": {
                        "description": "The single-sign out URL triggered when a user logs out of an SSO application. Specify `null` if not applicable.",
                        "nullable": true
                      },
                      "mfa": {
                        "description": "Enables multi-factor authentication for the application. Either `enable` or `disable`.",
                        "type": "string"
                      },
                      "preauth_enforce_url": {
                        "description": "The URL that users are directed to when authenticating with a third party IdP. By default users are directed to the EAA application page.",
                        "type": "string"
                      },
                      "proxy_buffer_size_kb": {
                        "description": "The size of the proxy's buffer, in kilobytes. ",
                        "type": "string"
                      },
                      "proxy_disable_clipboard": {
                        "description": "Prevents users from copying information from a RDP session. Either `true` or `false`.",
                        "type": "string"
                      },
                      "rate_limit": {
                        "description": "Enables rate limiting for the application. Either `on` or `off`.",
                        "type": "string"
                      },
                      "rdp_initial_program": {
                        "description": "The program that initializes when the user logs in to the remote environment. Specify `null` if not applicable.",
                        "nullable": true
                      },
                      "refresh_sticky_cookie": {
                        "description": "Enables refresh of cookies used for session stickiness. Either `on` or `off`.",
                        "type": "string"
                      },
                      "request_body_rewrite": {
                        "description": "Enables the application to rewrite request body data. Either `true` or `false`.",
                        "type": "string"
                      },
                      "request_parameters": {
                        "description": "The HTTP request parameter to use. For example, `GET`. Specify `null` if not applicable.",
                        "nullable": true
                      },
                      "saas_enabled": {
                        "description": "Enables SaaS for the application. Either `true` or `false`.",
                        "type": "string"
                      },
                      "sentry_redirect_401": {
                        "description": "Enables the Sentry module to redirect requests that receive a 401 response.",
                        "type": "string"
                      },
                      "server_cert_validate": {
                        "description": "Enables EAA to fo origin server certification validation for HTTPS applications.",
                        "type": "string"
                      },
                      "server_request_burst": {
                        "description": "The server request threshold for burst monitoring.",
                        "type": "string"
                      },
                      "service_principle_name": {
                        "description": "The application's Kerberos service principal name (SPN). If your application uses a different service principal name, specify the configuration suitable for your application. Specify `null` if not applicable.",
                        "nullable": true
                      },
                      "session_sticky": {
                        "description": "Enables session stickiness to ensure that a given session always traverses the same connector when interacting with the application. Specify `null` if not applicable.",
                        "nullable": true
                      },
                      "session_sticky_cookie_maxage": {
                        "description": "Sets the maximum age in seconds for the session stickiness cookie.",
                        "type": "string"
                      },
                      "session_sticky_server_cookie": {
                        "description": "Enables refresh of a sticky cookie to make sure that the content goes to the same connector to prevent session lag or content loss in a session. Even after the session length has passed, the session does not go to a new connector. Specify `null` if not applicable. ",
                        "nullable": true
                      },
                      "spdy_enabled": {
                        "description": "Enables SPDY traffic management. Either `true` or `false`.",
                        "type": "string"
                      },
                      "ssh_audit_enabled": {
                        "description": "Enables ssh session auditing. Either `true` or `false`.",
                        "type": "string"
                      },
                      "sso": {
                        "description": "Enables SSO authentication for the application. Either `true` or `false`.",
                        "type": "string"
                      },
                      "use_internal_host": {
                        "description": "Configures the application to use CNAME redirection to an internal hostname.",
                        "type": "string"
                      },
                      "user_name": {
                        "description": "The user name to use for application authentication. Specify `null` if not applicable.",
                        "nullable": true,
                        "type": "string"
                      },
                      "wapp_auth": {
                        "description": "The authentication method for the application. Either `form`, `basic`, `basic+cookie`, or `certificate_only`.",
                        "type": "string",
                        "enum": [
                          "form",
                          "basic",
                          "basic+cookie",
                          "certificate_only"
                        ]
                      },
                      "websocket_enabled": {
                        "description": "Indicates that this application uses WebSockets for HTTP transport. Either `true` or `false`.",
                        "type": "string"
                      }
                    }
                  },
                  "status": {
                    "description": "The status of the application.",
                    "type": "integer"
                  },
                  "url": {
                    "description": "A unique location for an application.",
                    "type": "string"
                  },
                  "uuid_url": {
                    "description": "A unique identifier for an application configuration.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "app_uuid_url": "l_U22L2wSVy4eG3-TcggzA",
                  "description": null,
                  "name": "TEST_RULE",
                  "rule_type": 1,
                  "status": 1,
                  "url": "/about",
                  "uuid_url": "238Yd-3DStaB0aUgT4Vntg",
                  "servers": [],
                  "resource_uri": {
                    "href": "/api/v1/apps/l_U22L2wSVy4eG3-TcggzA/urllocation/238Yd-3DStaB0aUgT4Vntg"
                  },
                  "settings": {
                    "anonymous_server_conn_limit": "50",
                    "anonymous_server_request_limit": "100",
                    "app_auth": "none",
                    "app_auth_domain": null,
                    "app_cookie_domain": null,
                    "app_location": null,
                    "app_server_read_timeout": "60",
                    "authenticated_server_conn_limit": "50",
                    "authenticated_server_request_limit": "100",
                    "authentication_enabled": "false",
                    "cookie_domain": null,
                    "external_cookie_domain": null,
                    "health_check_fall": "3",
                    "health_check_http_host_header": null,
                    "health_check_http_url": "/",
                    "health_check_http_version": "1.1",
                    "health_check_interval": "30000",
                    "health_check_rise": "2",
                    "health_check_timeout": "50000",
                    "health_check_type": "0",
                    "hidden_app": "false",
                    "http_only_cookie": "true",
                    "https_sslv3": "false",
                    "idle_close_time_seconds": "1200",
                    "idle_conn_ceil": "75",
                    "idle_conn_floor": "50",
                    "idle_conn_step": "10",
                    "idp_idle_expiry": null,
                    "idp_max_expiry": null,
                    "ignore_cname_resolution": "false",
                    "inject_ajax_javascript": "off",
                    "internal_hostname": null,
                    "is_ssl_verification_enabled": "false",
                    "kerberos_negotiate_once": "off",
                    "load_balancing_metric": "ip-hash",
                    "logging_enabled": "true",
                    "login_timeout": "5",
                    "login_url": null,
                    "logout_url": null,
                    "mfa": "enable",
                    "preauth_enforce_url": "",
                    "proxy_buffer_size_kb": "4",
                    "proxy_disable_clipboard": "false",
                    "rate_limit": "on",
                    "rdp_initial_program": null,
                    "refresh_sticky_cookie": "on",
                    "request_body_rewrite": "false",
                    "request_parameters": null,
                    "saas_enabled": "false",
                    "sentry_redirect_401": "off",
                    "server_cert_validate": "true",
                    "server_request_burst": "100",
                    "service_principle_name": null,
                    "session_sticky": null,
                    "session_sticky_cookie_maxage": "0",
                    "session_sticky_server_cookie": null,
                    "spdy_enabled": "true",
                    "ssh_audit_enabled": "false",
                    "sso": "true",
                    "use_internal_host": "true",
                    "user_name": null,
                    "wapp_auth": "form",
                    "websocket_enabled": "false"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains data and objects relating to URL location rules.",
                  "required": [
                    "description",
                    "name"
                  ],
                  "properties": {
                    "app_uuid_url": {
                      "description": "A unique identifier for an application.",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the application.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the application.",
                      "type": "string"
                    },
                    "resource_uri": {
                      "description": "A unique identifier for the resource location.",
                      "type": "string"
                    },
                    "settings": {
                      "additionalProperties": true,
                      "description": "The advanced application settings.",
                      "type": "object",
                      "properties": {
                        "anonymous_server_conn_limit": {
                          "description": "The maximum number of anonymous server connections allowed. ",
                          "type": "string"
                        },
                        "anonymous_server_request_limit": {
                          "description": "The maximum number of anonymous server requests allowed. ",
                          "type": "string"
                        },
                        "app_auth": {
                          "description": "The application-facing authentication mechanism. Default is `none`.",
                          "type": "string"
                        },
                        "app_auth_domain": {
                          "description": "Specifies the active directory domain where the application's service account was created. Used if the application supports Kerberos. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "app_cookie_domain": {
                          "description": "The domain to be used in application cookies. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "app_location": {
                          "description": "The application's location. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "app_server_read_timeout": {
                          "description": "The maximum time for an application server to fulfill a user request. The default is 60 seconds.",
                          "type": "string"
                        },
                        "authenticated_server_conn_limit": {
                          "description": "The maximum number of authenticated server connections allowed. ",
                          "type": "string"
                        },
                        "authenticated_server_request_limit": {
                          "description": "The maximum number of authenticated server connections allowed. ",
                          "type": "string"
                        },
                        "authentication_enabled": {
                          "description": "Whether authentication is enabled for the application. Either `true` or `false`.",
                          "type": "string"
                        },
                        "cookie_domain": {
                          "description": "The domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "external_cookie_domain": {
                          "description": "The external domain to use for cookies if your application uses iFrames. Specify `null` if you want to provide this later.",
                          "nullable": true,
                          "type": "string"
                        },
                        "health_check_fall": {
                          "description": "The number of consecutive missed heartbeats before the connector considers an application server to be unreachable.",
                          "type": "string"
                        },
                        "health_check_http_version": {
                          "description": "The HTTP version to use for the health check. ",
                          "type": "string"
                        },
                        "health_check_interval": {
                          "description": "The interval between successive heartbeats in seconds.",
                          "type": "string"
                        },
                        "health_check_rise": {
                          "description": "The number of consecutive successful heartbeats that connector (or connectors) must receive before considering an application server to be healthy. The default is two.",
                          "type": "string"
                        },
                        "health_check_timeout": {
                          "description": "The time in seconds that connector must wait before considering a heartbeat attempt to have failed.",
                          "type": "string"
                        },
                        "health_check_type": {
                          "description": "The type of health check to perform on all the associated servers to verify service availability. Either `default`, `basic`, `http`, `https`, `tls`, `sslv3`, `tcp`, or `disable`.",
                          "type": "string",
                          "enum": [
                            "default",
                            "basic",
                            "http",
                            "https",
                            "tls",
                            "sslv3",
                            "tcp",
                            "disable"
                          ]
                        },
                        "hidden_app": {
                          "description": "Used to hide the application from the login portal. Either `true` or `false`.",
                          "type": "string"
                        },
                        "http_only_cookie": {
                          "description": "Indicates whether cookies created for this application are only used for HTTP content. If your application uses a Java applet, you may want to disable this option. Either `true or `false`.",
                          "type": "string"
                        },
                        "https_sslv3": {
                          "description": "Enables the application to interact with the connector using SSLv3. Either `true` or `false`.",
                          "type": "string"
                        },
                        "idle_close_time_seconds": {
                          "description": "The number of seconds a session can remain idle before it is closed.",
                          "type": "string"
                        },
                        "idle_conn_ceil": {
                          "description": "The maximum number of TLS sessions pre-created by a given connector to enable user access to enterprise applications.",
                          "type": "string"
                        },
                        "idle_conn_floor": {
                          "description": "The minimum number of TLS sessions pre-created by a given connector to enable user access to enterprise applications.",
                          "type": "string"
                        },
                        "idle_conn_step": {
                          "description": "The incremental number of TLS sessions launched by a given connector to enable user access to enterprise applications.",
                          "type": "string"
                        },
                        "idp_idle_expiry": {
                          "description": "The number of seconds before an idle session with the IDP expires. Specify `null` if you want to provide this later.",
                          "nullable": true
                        },
                        "idp_max_expiry": {
                          "description": "The maximum number of seconds to maintain an IDP session. Specify `null` if you want to provide this later.",
                          "nullable": true
                        },
                        "ignore_cname_resolution": {
                          "description": "Configures to application to ignore CNAME DNS resolutions. Either `true` or `false`.",
                          "type": "string"
                        },
                        "internal_hostname": {
                          "description": "The internal hostname to perform CNAME redirection on. Specify `null` if not applicable.",
                          "nullable": true
                        },
                        "is_ssl_verification_enabled": {
                          "description": "Indicates if SSL verification is enabled for the application. Either `true` or `false`.",
                          "type": "string"
                        },
                        "kerberos_negotiate_once": {
                          "description": "Configures the application to perform Kerberos authentication only on the initial login URL. Either `on` or `off`.",
                          "type": "string"
                        },
                        "load_balancing_metric": {
                          "description": "The load-balancing metric for the application. Either `round-robin` or `ip-hash`.",
                          "type": "string",
                          "enum": [
                            "round-robin",
                            "ip-hash"
                          ]
                        },
                        "logging_enabled": {
                          "description": "Enables logging for the application. Either `true` or `false`.",
                          "type": "string"
                        },
                        "login_timeout": {
                          "description": "The number of seconds before a login attempt times out.",
                          "type": "string"
                        },
                        "login_url": {
                          "description": "The URL for which authentication tokens need to be generated. Specify `null` if not applicable.",
                          "nullable": true
                        },
                        "logout_url": {
                          "description": "The single-sign out URL triggered when a user logs out of an SSO application. Specify `null` if not applicable.",
                          "nullable": true
                        },
                        "mfa": {
                          "description": "Enables multi-factor authentication for the application. Either `enable` or `disable`.",
                          "type": "string"
                        },
                        "preauth_enforce_url": {
                          "description": "The URL that users are directed to when authenticating with a third party IdP. By default users are directed to the EAA application page.",
                          "type": "string"
                        },
                        "proxy_buffer_size_kb": {
                          "description": "The size of the proxy's buffer, in kilobytes. ",
                          "type": "string"
                        },
                        "proxy_disable_clipboard": {
                          "description": "Prevents users from copying information from a RDP session. Either `true` or `false`.",
                          "type": "string"
                        },
                        "rate_limit": {
                          "description": "Enables rate limiting for the application. Either `on` or `off`.",
                          "type": "string"
                        },
                        "rdp_initial_program": {
                          "description": "The program that initializes when the user logs in to the remote environment. Specify `null` if not applicable.",
                          "nullable": true
                        },
                        "refresh_sticky_cookie": {
                          "description": "Enables refresh of cookies used for session stickiness. Either `on` or `off`.",
                          "type": "string"
                        },
                        "request_body_rewrite": {
                          "description": "Enables the application to rewrite request body data. Either `true` or `false`.",
                          "type": "string"
                        },
                        "request_parameters": {
                          "description": "The HTTP request parameter to use. For example, `GET`. Specify `null` if not applicable.",
                          "nullable": true
                        },
                        "saas_enabled": {
                          "description": "Enables SaaS for the application. Either `true` or `false`.",
                          "type": "string"
                        },
                        "sentry_redirect_401": {
                          "description": "Enables the Sentry module to redirect requests that receive a 401 response.",
                          "type": "string"
                        },
                        "server_cert_validate": {
                          "description": "Enables EAA to fo origin server certification validation for HTTPS applications.",
                          "type": "string"
                        },
                        "server_request_burst": {
                          "description": "The server request threshold for burst monitoring.",
                          "type": "string"
                        },
                        "service_principle_name": {
                          "description": "The application's Kerberos service principal name (SPN). If your application uses a different service principal name, specify the configuration suitable for your application. Specify `null` if not applicable.",
                          "nullable": true
                        },
                        "session_sticky": {
                          "description": "Enables session stickiness to ensure that a given session always traverses the same connector when interacting with the application. Specify `null` if not applicable.",
                          "nullable": true
                        },
                        "session_sticky_cookie_maxage": {
                          "description": "Sets the maximum age in seconds for the session stickiness cookie.",
                          "type": "string"
                        },
                        "session_sticky_server_cookie": {
                          "description": "Enables refresh of a sticky cookie to make sure that the content goes to the same connector to prevent session lag or content loss in a session. Even after the session length has passed, the session does not go to a new connector. Specify `null` if not applicable. ",
                          "nullable": true
                        },
                        "spdy_enabled": {
                          "description": "Enables SPDY traffic management. Either `true` or `false`.",
                          "type": "string"
                        },
                        "ssh_audit_enabled": {
                          "description": "Enables ssh session auditing. Either `true` or `false`.",
                          "type": "string"
                        },
                        "sso": {
                          "description": "Enables SSO authentication for the application. Either `true` or `false`.",
                          "type": "string"
                        },
                        "use_internal_host": {
                          "description": "Configures the application to use CNAME redirection to an internal hostname.",
                          "type": "string"
                        },
                        "user_name": {
                          "description": "The user name to use for application authentication. Specify `null` if not applicable.",
                          "nullable": true,
                          "type": "string"
                        },
                        "wapp_auth": {
                          "description": "The authentication method for the application. Either `form`, `basic`, `basic+cookie`, or `certificate_only`.",
                          "type": "string",
                          "enum": [
                            "form",
                            "basic",
                            "basic+cookie",
                            "certificate_only"
                          ]
                        },
                        "websocket_enabled": {
                          "description": "Indicates that this application uses WebSockets for HTTP transport. Either `true` or `false`.",
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "description": "The status of the application.",
                      "type": "integer"
                    },
                    "url": {
                      "description": "A unique location for an application.",
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for an application configuration.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Removes a URL location rule.",
        "operationId": "delete-app-urllocation",
        "summary": "Delete a URL location rule",
        "tags": [
          "URL location rules"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-app-urllocation"
        },
        "responses": {
          "204": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each URL location rule.",
          "example": "{{locationId}}",
          "in": "path",
          "name": "locationId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/locationId-path.yaml"
          }
        },
        {
          "description": "A unique identifier for each application.",
          "example": "{{applicationId}}",
          "in": "path",
          "name": "applicationId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/applicationId-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/apps/{applicationId}/versions": {
      "get": {
        "description": "Lists a list of application versions.",
        "operationId": "get-app-versions",
        "summary": "List application versions",
        "tags": [
          "Versions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-versions"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 3
                  },
                  "objects": [
                    {
                      "cloud_deployed_at": null,
                      "created_at": "2021-01-13T14:43:11.809596",
                      "created_by": "d4cdaaff-44d4-456f-839c-9e6162afc0cd",
                      "created_by_email": "email@akamai.com",
                      "deployed_at": "2021-01-13T14:44:10.182348",
                      "deployment_started_at": null,
                      "modified_at": "2021-01-13T14:44:10.182454",
                      "name": "",
                      "note": "",
                      "resource_uri": "/api/v1/apps/EuwqjxzAQZ-ncPM4F1jv4g/versions/YnzBpoGTSHGcdxxPjBtzWg",
                      "status": "ready",
                      "uuid_url": "YnzBpoGTSHGcdxxPjBtzWg",
                      "version": "3"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access app config version data.",
                  "type": "object",
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "type": "object",
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "App config version details.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Application configuration versions.",
                        "type": "object",
                        "required": [
                          "cloud_deployed_at",
                          "created_by",
                          "created_by_email",
                          "deployed_at",
                          "deployment_started_at",
                          "name",
                          "note",
                          "resource_uri",
                          "status",
                          "uuid_url",
                          "version"
                        ],
                        "properties": {
                          "cloud_deployed_at": {
                            "description": "ISO 8601 timestamp marking the configuration version's deployment to the data path point of presence (DPOP).",
                            "format": "date-time",
                            "type": "string"
                          },
                          "created_at": {
                            "description": "ISO 8601 timestamp marking the configuration version's creation.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "created_by": {
                            "description": "The ID of the user who created the application configuration version.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "created_by_email": {
                            "description": "The email address of the user who created the application configuration version.",
                            "format": "email",
                            "type": "string"
                          },
                          "deployed_at": {
                            "description": "ISO 8601 timestamp marking the application configuration version's deployment to connectors.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "deployment_started_at": {
                            "description": "ISO 8601 timestamp marking the application configuration version deployment began.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "modified_at": {
                            "description": "ISO 8601 timestamp marking the application configuration version's last modification.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of application configuration version.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "note": {
                            "description": "Custom text field for additional notes on the application configuration version.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource_uri": {
                            "description": "The application configuration version's resource URL.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "status": {
                            "description": "The current status of the application configuration version. Either `New`, `Ready`, `Invalidated`, or `Archived`.",
                            "type": "string",
                            "enum": [
                              "New",
                              "Ready",
                              "Invalidated",
                              "Archived"
                            ]
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the application configuration version.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "version": {
                            "description": "The version number of the application configuration.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/appconfigversion.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/appconfigversionlist.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each application.",
          "example": "{{applicationId}}",
          "in": "path",
          "name": "applicationId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/applicationId-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/apps/{applicationId}/versions/{versionId}": {
      "get": {
        "description": "Lists an application version.",
        "operationId": "get-app-version",
        "summary": "Get an application version",
        "tags": [
          "Versions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-app-version"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "cloud_deployed_at": null,
                  "created_at": "2021-01-13T14:43:11.809596",
                  "created_by": "d4cdaaff-44d4-456f-839c-9e6162afc0cd",
                  "created_by_email": "email@akamai.com",
                  "deployed_at": "2021-01-13T14:44:10.182348",
                  "deployment_started_at": null,
                  "modified_at": "2021-01-13T14:44:10.182454",
                  "name": "",
                  "note": "",
                  "resource_uri": "/api/v1/apps/EuwqjxzAQZ-ncPM4F1jv4g/versions/YnzBpoGTSHGcdxxPjBtzWg",
                  "status": "ready",
                  "uuid_url": "YnzBpoGTSHGcdxxPjBtzWg",
                  "version": "3",
                  "version_settings_data": {
                    "url_location_data": [],
                    "advanced_settings": {
                      "acceleration": "false",
                      "allow_cors": "false",
                      "anonymous_server_conn_limit": "50",
                      "anonymous_server_request_limit": "100",
                      "app_auth": "none",
                      "app_auth_domain": null,
                      "app_client_cert_auth": "false",
                      "app_cookie_domain": null,
                      "app_location": null,
                      "app_server_read_timeout": "60",
                      "authenticated_server_conn_limit": "50",
                      "authenticated_server_request_limit": "100",
                      "client_cert_auth": "false",
                      "client_cert_user_param": "",
                      "cookie_domain": "",
                      "cors_header_list": "unbounded",
                      "cors_max_age": "86400",
                      "cors_method_list": "unbounded",
                      "cors_origin_list": "unbounded",
                      "cors_support_credential": "on",
                      "domain_exception_list": "",
                      "edge_authentication_enabled": "false",
                      "edge_cookie_key": "",
                      "external_cookie_domain": null,
                      "force_mfa": "off",
                      "forward_ticket_granting_ticket": "false",
                      "g2o_enabled": "false",
                      "g2o_key": null,
                      "g2o_nonce": null,
                      "health_check_fall": "3",
                      "health_check_http_host_header": null,
                      "health_check_http_url": "/",
                      "health_check_http_version": "1.1",
                      "health_check_interval": "30000",
                      "health_check_rise": "2",
                      "health_check_timeout": "50000",
                      "health_check_type": "0",
                      "hidden_app": "false",
                      "host_key": null,
                      "hsts_age": "15552000",
                      "http_only_cookie": "true",
                      "https_sslv3": "false",
                      "idle_close_time_seconds": "1200",
                      "idle_conn_ceil": "75",
                      "idle_conn_floor": "50",
                      "idle_conn_step": "10",
                      "idp_idle_expiry": null,
                      "idp_max_expiry": null,
                      "ignore_bypass_mfa": "off",
                      "ignore_cname_resolution": "false",
                      "inject_ajax_javascript": "off",
                      "internal_host_port": "0",
                      "internal_hostname": null,
                      "ip_access_allow": "false",
                      "is_ssl_verification_enabled": "false",
                      "keepalive_connection_pool": "50",
                      "keepalive_enable": "true",
                      "keepalive_timeout": "3",
                      "kerberos_negotiate_once": "off",
                      "keyed_keepalive_enable": "false",
                      "keytab": "",
                      "load_balancing_metric": "round-robin",
                      "logging_enabled": "true",
                      "login_timeout": "5",
                      "login_url": null,
                      "logout_url": null,
                      "mdc_enable": "false",
                      "mfa": "inherit",
                      "offload_onpremise_traffic": "false",
                      "pass_phrase": null,
                      "preauth_consent": "false",
                      "preauth_enforce_url": "",
                      "private_key": null,
                      "proxy_buffer_size_kb": "4",
                      "proxy_disable_clipboard": "false",
                      "rate_limit": "on",
                      "rdp_initial_program": null,
                      "rdp_legacy_mode": "false",
                      "rdp_tls1": "false",
                      "refresh_sticky_cookie": "on",
                      "remote_spark_audio": "true",
                      "remote_spark_disk": "LOCALSHARE",
                      "remote_spark_mapClipboard": "on",
                      "remote_spark_mapDisk": "true",
                      "remote_spark_mapPrinter": "true",
                      "remote_spark_printer": "LOCALPRINTER",
                      "remote_spark_recording": "false",
                      "request_body_rewrite": "false",
                      "request_parameters": null,
                      "saas_enabled": "false",
                      "sentry_redirect_401": "off",
                      "server_cert_validate": "true",
                      "server_request_burst": "100",
                      "service_principle_name": null,
                      "session_sticky": null,
                      "session_sticky_cookie_maxage": "0",
                      "session_sticky_server_cookie": null,
                      "single_host_content_rw": "false",
                      "single_host_cookie_domain": "false",
                      "single_host_enable": "false",
                      "single_host_fqdn": "",
                      "single_host_path": "",
                      "sla_object_url": "____spx/ionpage",
                      "spdy_enabled": "true",
                      "ssh_audit_enabled": "false",
                      "sso": "true",
                      "sticky_agent": "false",
                      "user_name": null,
                      "wapp_auth": "form",
                      "websocket_enabled": "false",
                      "wildcard_internal_hostname": "false",
                      "custom_headers": [],
                      "rdp_remote_apps": []
                    },
                    "authentication": {
                      "auth_enabled": true,
                      "idp": "acnuuf0eQK2a4qvxJe4mWQ",
                      "directories": [
                        "H2fcmydaTb6GRRDAwXVfrg",
                        "NZJHqc-WRDS0FRLVVHEE7Q"
                      ],
                      "groups": {
                        "-0l2rtp7Tb2VE57ZEM-ALg": "inherit",
                        "-nJlyMgJSIC4Odb_C725Bg": "inherit",
                        "0Mu0N691QTi0RA4wS9WUpA": "inherit",
                        "91s2ZSuCQ_qdVazUQ_g0Ww": "inherit",
                        "C5cuRmbZSuOWSt5WYWJ3jw": "inherit",
                        "CFlmTq1hRZK0xj_TkrkxEw": "inherit",
                        "CXgBU8KKRSGU1gySx-2n2Q": "inherit",
                        "CXoHttcUSCGcAGtoiXlU7Q": "inherit",
                        "D9sVrBGMQoWCZvZTLFiemw": "inherit"
                      }
                    },
                    "identity_data": {
                      "app_bundle": "",
                      "app_logo": "",
                      "bookmark_url": "https://sp.iamshowcase.com/ixs?idp=bd2628be266ce863f63d938b5aa628d35c85c948",
                      "cert": "",
                      "client_app_mode": 1,
                      "client_cert": "",
                      "cname": "EuwqjxzAQZ1ncPM4F1jv4g.stage.akamai-access.com",
                      "custom_tls_suite_name": null,
                      "default_tls_suite": true,
                      "description": "",
                      "dialin_server": "EuwqjxzAQZ1ncPM4F1jv4g-stage-akamai-access-com.dialin.stage.akamai-access.com",
                      "dialin_sni": "EuwqjxzAQZ1ncPM4F1jv4g-stage-akamai-access-com.dialin.stage.akamai-access.com",
                      "domain": 1,
                      "domain_suffix": "NOBQl7ETS8iP_7w63N8n4g",
                      "encr_algo": 1,
                      "host": "EuwqjxzAQZ1ncPM4F1jv4g.stage.akamai-access.com",
                      "name": "nesaasapp",
                      "orig_encr_algo": 1,
                      "orig_tls": true,
                      "origin_host": null,
                      "origin_keepalive": 600,
                      "origin_port": 443,
                      "port": 443,
                      "ssl_ca_cert": "",
                      "servers": [],
                      "sites": [
                        "-m8zyc_3Q6GP09tSwmNdHQ"
                      ],
                      "tunnel_internal_hosts": [],
                      "wsfed_settings": [],
                      "app_category": {},
                      "etp_settings": {},
                      "oidc_settings": {},
                      "saml_settings": [
                        {
                          "idp": {
                            "ecp_enable": false,
                            "ecp_resp_signature": false,
                            "entity_id": "https://myiwaidp.login.stage.akamai-access.com/saml/idp/sso",
                            "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor xmlns:md=\"urn:oasis:names:tc:SAML:2.0:metadata\" xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\" entityID=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/sso\">\n<md:IDPSSODescriptor protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\">\n  <md:KeyDescriptor use=\"signing\">\n    <ds:KeyInfo>\n      <ds:X509Data> ... </ds:X509Certificate>\n      </ds:X509Data>\n    </ds:KeyInfo>\n  </md:KeyDescriptor>\n  <md:SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo\" ResponseLocation=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo\"/>\n  <md:SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo\" ResponseLocation=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo\"/>\n  <md:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/sso\"/>\n  <md:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/sso\"/>\n\n</md:IDPSSODescriptor>\n</md:EntityDescriptor>",
                            "resp_bind": "post",
                            "self_signed": true,
                            "sign_algo": "SHA256",
                            "sign_cert": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----",
                            "sign_key": "key ...",
                            "slo_url": "https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo"
                          },
                          "sp": {
                            "acs_url": "https://sp.iamshowcase.com/acs",
                            "default_relay_state": "green",
                            "dst_url": "",
                            "encr_algo": "aes256-cbc",
                            "encr_cert": "",
                            "entity_id": "IAMShowcase",
                            "force_auth": false,
                            "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor xmlns:md=\"urn:oasis:names:tc:SAML:2.0:metadata\" xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\" entityID=\"IAMShowcase\">\n<md:SPSSODescriptor AuthnRequestsSigned=\"false\" WantAssertionsSigned=\"true\" protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\">\n\n\n\n  <SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo\"/>\n\n\n  <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</md:NameIDFormat>\n\n  <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</md:NameIDFormat>\n\n  <md:NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</md:NameIDFormat>\n\n  <md:NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</md:NameIDFormat>\n\n  <md:AssertionConsumerService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://sp.iamshowcase.com/acs\" index=\"0\" isDefault=\"true\"/>\n\n</md:SPSSODescriptor>\n</md:EntityDescriptor>",
                            "req_bind": "redirect",
                            "req_verify": false,
                            "resp_encr": false,
                            "sign_cert": "",
                            "slo_bind": "post",
                            "slo_req_verify": true,
                            "slo_url": "https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo"
                          },
                          "subject": {
                            "fmt": "email",
                            "src": "user.email"
                          },
                          "attrmap": [
                            {
                              "fmt": "basic",
                              "fname": "adminname",
                              "name": "name",
                              "src": "user.firstName"
                            },
                            {
                              "fmt": "unspecified",
                              "fname": "adminemail",
                              "name": "email",
                              "src": "user.email"
                            }
                          ]
                        }
                      ]
                    },
                    "location_data": {
                      "pop_uuid_url": "LpeAuKXkEeOg_Q7rYYFrWw",
                      "connector_data": {}
                    },
                    "names": {
                      "cert_name": "",
                      "domain_suffix": "stage.akamai-access.com",
                      "idp_name": "IWA-IDP",
                      "pop_name": "DPOP-DPus-west-coast-1",
                      "ssl_ca_cert": "",
                      "connector_names": {},
                      "directory_names": {
                        "H2fcmydaTb6GRRDAwXVfrg": "Cloud Directory",
                        "NZJHqc-WRDS0FRLVVHEE7Q": "root.com"
                      },
                      "group_names": {
                        "-0l2rtp7Tb2VE57ZEM-ALg": "skfgroup1",
                        "-nJlyMgJSIC4Odb_C725Bg": "ou_ougroup1",
                        "0Mu0N691QTi0RA4wS9WUpA": "Domain Admins",
                        "91s2ZSuCQ_qdVazUQ_g0Ww": "Domain Users",
                        "C5cuRmbZSuOWSt5WYWJ3jw": "Users",
                        "CFlmTq1hRZK0xj_TkrkxEw": "childgroup1",
                        "CXgBU8KKRSGU1gySx-2n2Q": "group_abhi",
                        "CXoHttcUSCGcAGtoiXlU7Q": "childgroup7",
                        "D9sVrBGMQoWCZvZTLFiemw": "Admins",
                        "JiNtM3t3TgCKJkfg11m9ew": "rootnew2",
                        "NOjlnMTBTfel1jrzzj-H0A": "ntlm",
                        "QXEn1-NuSRWVMjtg8jUaSQ": "ou_shyrusou1",
                        "RdziUef7R_K4wGKzv3eK-Q": "employee",
                        "Rpe6aP2OQzmZaldN_Jkh0A": "skfgroup2"
                      }
                    },
                    "service_data": [
                      {
                        "name": "ICAP Service",
                        "service_type": 3,
                        "status": 0,
                        "rules": [],
                        "settings": [
                          {
                            "name": "ICAP Service_icap_file_size",
                            "setting_type": 1,
                            "value": "500M"
                          },
                          {
                            "name": "ICAP Service_icap_service",
                            "setting_type": 6,
                            "value": "sohaservice"
                          },
                          {
                            "name": "ICAP Service_icap_http_methods",
                            "setting_type": 3,
                            "value": "POST"
                          },
                          {
                            "name": "ICAP Service_icap_port",
                            "setting_type": 5,
                            "value": "1344"
                          }
                        ]
                      },
                      {
                        "name": "WAF",
                        "service_type": 1,
                        "status": 0,
                        "rules": [],
                        "settings": [
                          {
                            "name": "WAF_illegal_resource_access",
                            "setting_type": 10,
                            "value": "On"
                          },
                          {
                            "name": "WAF_protocol_anomalies",
                            "setting_type": 6,
                            "value": "On"
                          },
                          {
                            "name": "WAF_php",
                            "setting_type": 3,
                            "value": "On"
                          }
                        ]
                      }
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Application configuration versions.",
                  "type": "object",
                  "required": [
                    "cloud_deployed_at",
                    "created_by",
                    "created_by_email",
                    "deployed_at",
                    "deployment_started_at",
                    "name",
                    "note",
                    "resource_uri",
                    "status",
                    "uuid_url",
                    "version"
                  ],
                  "properties": {
                    "cloud_deployed_at": {
                      "description": "ISO 8601 timestamp marking the configuration version's deployment to the data path point of presence (DPOP).",
                      "format": "date-time",
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the configuration version's creation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "created_by": {
                      "description": "The ID of the user who created the application configuration version.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "created_by_email": {
                      "description": "The email address of the user who created the application configuration version.",
                      "format": "email",
                      "type": "string"
                    },
                    "deployed_at": {
                      "description": "ISO 8601 timestamp marking the application configuration version's deployment to connectors.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "deployment_started_at": {
                      "description": "ISO 8601 timestamp marking the application configuration version deployment began.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the application configuration version's last modification.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of application configuration version.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "note": {
                      "description": "Custom text field for additional notes on the application configuration version.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "description": "The application configuration version's resource URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The current status of the application configuration version. Either `New`, `Ready`, `Invalidated`, or `Archived`.",
                      "type": "string",
                      "enum": [
                        "New",
                        "Ready",
                        "Invalidated",
                        "Archived"
                      ]
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application configuration version.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "version": {
                      "description": "The version number of the application configuration.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/appconfigversion.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Copies the selected application version to a new draft application.",
        "operationId": "put-app-version",
        "summary": "Create a new application version from existing",
        "tags": [
          "Versions"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-app-version"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "cloud_deployed_at": null,
                  "created_at": "2020-12-14T12:59:26.265716",
                  "created_by": "663506e3-90c1-49dd-9a54-6d536f2e9a8b",
                  "created_by_email": "email@example.com",
                  "deployed_at": "2020-12-14T13:00:40.098836",
                  "deployment_started_at": null,
                  "modified_at": "2020-12-14T13:00:40.098937",
                  "name": "",
                  "note": "",
                  "resource_uri": "/api/v1/apps/EuwqjxzAQZ-ncPM4F1jv4g/versions/HaYkWaXESw2Hb2N6VevZmA",
                  "status": "archived",
                  "uuid_url": "HaYkWaXESw2Hb2N6VevZmA",
                  "version": "1",
                  "version_settings_data": {
                    "url_location_data": [],
                    "advanced_settings": {
                      "acceleration": "false",
                      "allow_cors": "false",
                      "anonymous_server_conn_limit": "50",
                      "anonymous_server_request_limit": "100",
                      "app_auth": "none",
                      "app_auth_domain": null,
                      "app_client_cert_auth": "false",
                      "app_cookie_domain": null,
                      "app_location": null,
                      "app_server_read_timeout": "60",
                      "authenticated_server_conn_limit": "50",
                      "authenticated_server_request_limit": "100",
                      "client_cert_auth": "false",
                      "client_cert_user_param": "",
                      "cors_header_list": "unbounded",
                      "cors_max_age": "86400",
                      "cors_method_list": "unbounded",
                      "cors_origin_list": "unbounded",
                      "cors_support_credential": "on",
                      "domain_exception_list": "",
                      "edge_authentication_enabled": "false",
                      "edge_cookie_key": "",
                      "external_cookie_domain": null,
                      "force_mfa": "off",
                      "forward_ticket_granting_ticket": "false",
                      "g2o_enabled": "false",
                      "g2o_key": null,
                      "g2o_nonce": null,
                      "health_check_fall": "3",
                      "health_check_http_host_header": null,
                      "health_check_http_url": "/",
                      "health_check_http_version": "1.1",
                      "health_check_interval": "30000",
                      "health_check_rise": "2",
                      "health_check_timeout": "50000",
                      "health_check_type": "0",
                      "hidden_app": "false",
                      "host_key": null,
                      "hsts_age": "15552000",
                      "http_only_cookie": "true",
                      "https_sslv3": "false",
                      "idle_close_time_seconds": "1200",
                      "idle_conn_ceil": "75",
                      "idle_conn_floor": "50",
                      "idle_conn_step": "10",
                      "idp_idle_expiry": null,
                      "idp_max_expiry": null,
                      "ignore_bypass_mfa": "off",
                      "ignore_cname_resolution": "false",
                      "inject_ajax_javascript": "off",
                      "internal_host_port": "0",
                      "internal_hostname": null,
                      "ip_access_allow": "false",
                      "is_ssl_verification_enabled": "false",
                      "keepalive_connection_pool": "50",
                      "keepalive_enable": "true",
                      "keepalive_timeout": "3",
                      "kerberos_negotiate_once": "off",
                      "keyed_keepalive_enable": "false",
                      "keytab": "",
                      "load_balancing_metric": "round-robin",
                      "logging_enabled": "true",
                      "login_timeout": "5",
                      "login_url": null,
                      "logout_url": null,
                      "mdc_enable": "false",
                      "mfa": "inherit",
                      "offload_onpremise_traffic": "false",
                      "pass_phrase": null,
                      "preauth_consent": "false",
                      "preauth_enforce_url": "",
                      "private_key": null,
                      "proxy_buffer_size_kb": "4",
                      "proxy_disable_clipboard": "false",
                      "rate_limit": "on",
                      "rdp_initial_program": null,
                      "rdp_legacy_mode": "false",
                      "rdp_tls1": "false",
                      "refresh_sticky_cookie": "on",
                      "remote_spark_audio": "true",
                      "remote_spark_disk": "LOCALSHARE",
                      "remote_spark_mapClipboard": "on",
                      "remote_spark_mapDisk": "true",
                      "remote_spark_mapPrinter": "true",
                      "remote_spark_printer": "LOCALPRINTER",
                      "remote_spark_recording": "false",
                      "request_body_rewrite": "false",
                      "request_parameters": null,
                      "saas_enabled": "false",
                      "sentry_redirect_401": "off",
                      "server_cert_validate": "true",
                      "server_request_burst": "100",
                      "service_principle_name": null,
                      "session_sticky": null,
                      "session_sticky_cookie_maxage": "0",
                      "session_sticky_server_cookie": null,
                      "single_host_content_rw": "false",
                      "single_host_cookie_domain": "false",
                      "single_host_enable": "false",
                      "single_host_fqdn": "",
                      "single_host_path": "",
                      "sla_object_url": "____spx/ionpage",
                      "spdy_enabled": "true",
                      "ssh_audit_enabled": "false",
                      "sso": "true",
                      "sticky_agent": "false",
                      "user_name": null,
                      "wapp_auth": "form",
                      "websocket_enabled": "false",
                      "wildcard_internal_hostname": "false",
                      "rdp_remote_apps": []
                    },
                    "authentication": {
                      "auth_enabled": true,
                      "idp": "acnuuf0eQK2a4qvxJe4mWQ",
                      "directories": [
                        "NZJHqc-WRDS0FRLVVHEE7Q"
                      ],
                      "groups": {
                        "-0l2rtp7Tb2VE57ZEM-ALg": "inherit",
                        "-nJlyMgJSIC4Odb_C725Bg": "inherit",
                        "0Mu0N691QTi0RA4wS9WUpA": "inherit",
                        "91s2ZSuCQ_qdVazUQ_g0Ww": "inherit",
                        "CFlmTq1hRZK0xj_TkrkxEw": "inherit",
                        "CXgBU8KKRSGU1gySx-2n2Q": "inherit",
                        "CXoHttcUSCGcAGtoiXlU7Q": "inherit",
                        "JiNtM3t3TgCKJkfg11m9ew": "inherit",
                        "NOjlnMTBTfel1jrzzj-H0A": "inherit",
                        "QXEn1-NuSRWVMjtg8jUaSQ": "inherit",
                        "RdziUef7R_K4wGKzv3eK-Q": "inherit",
                        "Rpe6aP2OQzmZaldN_Jkh0A": "inherit",
                        "Tv9IHphaTVaTYkwwl5LQXg": "inherit",
                        "XNoiLOYPQeC2S1muQ1Rfyw": "inherit",
                        "a-RkdF7-TxSLd8M__YKVMg": "inherit",
                        "aJHJKn7ATtyWD99MvoZnIw": "inherit",
                        "aa559LPST7Owp5hmA4N5uQ": "inherit",
                        "cWu-1IsqR7e7kdTc3MeVWA": "inherit",
                        "fbmVCQU7RjKwrzkTYBpJUg": "inherit",
                        "hBE2Ab_URIy128lsWcYoNw": "inherit",
                        "nm1F--vuTLGv63Vah1ZDIg": "inherit",
                        "q--YM7UJSS2oG6AOgrn7Nw": "inherit",
                        "rdLC9qnASCij8Rcog5Ok7Q": "inherit",
                        "sl00LSdTTkCQpw07FMne4g": "inherit",
                        "tKOU2uZ_QuyLUUAf8ry5Kw": "inherit",
                        "ulokdoN2ROO14IkBhwy4og": "inherit",
                        "yKvgxMCjTV6RzCw7kOTqYA": "inherit"
                      }
                    },
                    "identity_data": {
                      "app_bundle": "",
                      "app_logo": "",
                      "bookmark_url": "https://sp.iamshowcase.com/ixs?idp=bd2628be266ce863f63d938b5aa628d35c85c948",
                      "cert": "",
                      "client_app_mode": 1,
                      "client_cert": "",
                      "cname": "EuwqjxzAQZ1ncPM4F1jv4g.stage.akamai-access.com",
                      "custom_tls_suite_name": null,
                      "default_tls_suite": true,
                      "description": "",
                      "dialin_server": "EuwqjxzAQZ1ncPM4F1jv4g-stage-akamai-access-com.dialin.stage.akamai-access.com",
                      "dialin_sni": "EuwqjxzAQZ1ncPM4F1jv4g-stage-akamai-access-com.dialin.stage.akamai-access.com",
                      "domain": 1,
                      "domain_suffix": "NOBQl7ETS8iP_7w63N8n4g",
                      "encr_algo": 1,
                      "host": "EuwqjxzAQZ1ncPM4F1jv4g.stage.akamai-access.com",
                      "name": "nesaasapp",
                      "orig_encr_algo": 1,
                      "orig_tls": true,
                      "origin_host": null,
                      "origin_keepalive": 600,
                      "origin_port": 443,
                      "port": 443,
                      "ssl_ca_cert": "",
                      "servers": [],
                      "sites": [
                        "-m8zyc_3Q6GP09tSwmNdHQ"
                      ],
                      "tunnel_internal_hosts": [],
                      "wsfed_settings": [],
                      "app_category": {},
                      "etp_settings": {},
                      "oidc_settings": {},
                      "saml_settings": [
                        {
                          "idp": {
                            "ecp_enable": false,
                            "ecp_resp_signature": false,
                            "entity_id": "https://myiwaidp.login.stage.akamai-access.com/saml/idp/sso",
                            "metadata": "<?xml version\"1.0\"?>\n <ds:X509Certificate>\n   </ds:X509Data>\n    </ds:KeyInfo>\n  </md:KeyDescriptor>\n  <md:SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo\" ResponseLocation=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo\"/>\n  <md:SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo\" ResponseLocation=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo\"/>\n  <md:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/sso\"/>\n  <md:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/sso\"/>\n\n</md:IDPSSODescriptor>\n</md:EntityDescriptor>",
                            "resp_bind": "post",
                            "self_signed": true,
                            "sign_algo": "SHA256",
                            "sign_cert": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----",
                            "sign_key": "QXNrcE8zazVXcSto ... QmdVbXhkU29zUT09",
                            "slo_url": "https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo"
                          },
                          "sp": {
                            "acs_url": "https://sp.iamshowcase.com/acs",
                            "default_relay_state": "green",
                            "dst_url": "",
                            "encr_algo": "aes256-cbc",
                            "encr_cert": "",
                            "entity_id": "IAMShowcase",
                            "force_auth": false,
                            "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor xmlns:md=\"urn:oasis:names:tc:SAML:2.0:metadata\" xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\" entityID=\"IAMShowcase\">\n<md:SPSSODescriptor AuthnRequestsSigned=\"false\" WantAssertionsSigned=\"true\" protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\">\n\n\n\n  <SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo\"/>\n\n\n  <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</md:NameIDFormat>\n\n  <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</md:NameIDFormat>\n\n  <md:NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</md:NameIDFormat>\n\n  <md:NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</md:NameIDFormat>\n\n  <md:AssertionConsumerService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://sp.iamshowcase.com/acs\" index=\"0\" isDefault=\"true\"/>\n\n</md:SPSSODescriptor>\n</md:EntityDescriptor>",
                            "req_bind": "redirect",
                            "req_verify": false,
                            "resp_encr": false,
                            "sign_cert": "",
                            "slo_bind": "post",
                            "slo_req_verify": true,
                            "slo_url": "https://myiwaidp.login.stage.akamai-access.com/saml/idp/slo"
                          },
                          "subject": {
                            "fmt": "email",
                            "src": "user.email"
                          },
                          "attrmap": [
                            {
                              "fmt": "basic",
                              "fname": "name",
                              "name": "name",
                              "src": "user.firstName"
                            },
                            {
                              "fmt": "unspecified",
                              "fname": "email",
                              "name": "email",
                              "src": "user.email"
                            }
                          ]
                        }
                      ]
                    },
                    "location_data": {
                      "pop_uuid_url": "LpeAuKXkEeOg_Q7rYYFrWw",
                      "connector_data": {}
                    },
                    "names": {
                      "cert_name": "",
                      "domain_suffix": "stage.akamai-access.com",
                      "idp_name": "IWA-IDP",
                      "pop_name": "DPOP-DPus-west-coast-1",
                      "ssl_ca_cert": "",
                      "connector_names": {},
                      "directory_names": {
                        "NZJHqc-WRDS0FRLVVHEE7Q": "root.com"
                      },
                      "group_names": {
                        "-0l2rtp7Tb2VE57ZEM-ALg": "skfgroup1",
                        "-nJlyMgJSIC4Odb_C725Bg": "ou_users",
                        "0Mu0N691QTi0RA4wS9WUpA": "Domain Admins",
                        "91s2ZSuCQ_qdVazUQ_g0Ww": "Domain Users",
                        "CFlmTq1hRZK0xj_TkrkxEw": "support",
                        "CXgBU8KKRSGU1gySx-2n2Q": "group_abhi",
                        "CXoHttcUSCGcAGtoiXlU7Q": "sso_group",
                        "JiNtM3t3TgCKJkfg11m9ew": "rootnew2",
                        "NOjlnMTBTfel1jrzzj-H0A": "ntlm",
                        "QXEn1-NuSRWVMjtg8jUaSQ": "ou_shyrusou1",
                        "RdziUef7R_K4wGKzv3eK-Q": "employee",
                        "Rpe6aP2OQzmZaldN_Jkh0A": "skfgroup2",
                        "Tv9IHphaTVaTYkwwl5LQXg": "IT_inherit",
                        "XNoiLOYPQeC2S1muQ1Rfyw": "ou_EMEA",
                        "a-RkdF7-TxSLd8M__YKVMg": "matching",
                        "aJHJKn7ATtyWD99MvoZnIw": "HR_subgroup",
                        "aa559LPST7Owp5hmA4N5uQ": "NAmerica",
                        "cWu-1IsqR7e7kdTc3MeVWA": "APAC_users",
                        "fbmVCQU7RjKwrzkTYBpJUg": "ou_childou1",
                        "hBE2Ab_URIy128lsWcYoNw": "root_users",
                        "nm1F--vuTLGv63Vah1ZDIg": "favorites",
                        "q--YM7UJSS2oG6AOgrn7Nw": "git_users",
                        "rdLC9qnASCij8Rcog5Ok7Q": "rootbulk",
                        "sl00LSdTTkCQpw07FMne4g": "IT_group",
                        "tKOU2uZ_QuyLUUAf8ry5Kw": "shyrusoverlay1",
                        "ulokdoN2ROO14IkBhwy4og": "beta",
                        "yKvgxMCjTV6RzCw7kOTqYA": "admins"
                      }
                    },
                    "service_data": [
                      {
                        "name": "ICAP Service",
                        "service_type": 3,
                        "status": 0,
                        "rules": [],
                        "settings": [
                          {
                            "name": "ICAP Service_icap_file_size",
                            "setting_type": 1,
                            "value": "500M"
                          },
                          {
                            "name": "ICAP Service_icap_port",
                            "setting_type": 5,
                            "value": "1344"
                          }
                        ]
                      },
                      {
                        "name": "WAF",
                        "service_type": 1,
                        "status": 0,
                        "rules": [],
                        "settings": [
                          {
                            "name": "WAF_xss_attack",
                            "setting_type": 12,
                            "value": "Off"
                          },
                          {
                            "name": "WAF_illegal_resource_access",
                            "setting_type": 10,
                            "value": "Off"
                          },
                          {
                            "name": "WAF_protocol_anomalies",
                            "setting_type": 6,
                            "value": "Off"
                          },
                          {
                            "name": "WAF_php",
                            "setting_type": 3,
                            "value": "Off"
                          }
                        ]
                      },
                      {
                        "name": "Acceleration",
                        "service_type": 2,
                        "status": 1,
                        "rules": [],
                        "settings": [
                          {
                            "name": "Acceleration_compression",
                            "setting_type": 1,
                            "value": "on"
                          }
                        ]
                      }
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Application configuration versions.",
                  "type": "object",
                  "required": [
                    "cloud_deployed_at",
                    "created_by",
                    "created_by_email",
                    "deployed_at",
                    "deployment_started_at",
                    "name",
                    "note",
                    "resource_uri",
                    "status",
                    "uuid_url",
                    "version"
                  ],
                  "properties": {
                    "cloud_deployed_at": {
                      "description": "ISO 8601 timestamp marking the configuration version's deployment to the data path point of presence (DPOP).",
                      "format": "date-time",
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the configuration version's creation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "created_by": {
                      "description": "The ID of the user who created the application configuration version.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "created_by_email": {
                      "description": "The email address of the user who created the application configuration version.",
                      "format": "email",
                      "type": "string"
                    },
                    "deployed_at": {
                      "description": "ISO 8601 timestamp marking the application configuration version's deployment to connectors.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "deployment_started_at": {
                      "description": "ISO 8601 timestamp marking the application configuration version deployment began.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the application configuration version's last modification.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of application configuration version.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "note": {
                      "description": "Custom text field for additional notes on the application configuration version.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "description": "The application configuration version's resource URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The current status of the application configuration version. Either `New`, `Ready`, `Invalidated`, or `Archived`.",
                      "type": "string",
                      "enum": [
                        "New",
                        "Ready",
                        "Invalidated",
                        "Archived"
                      ]
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application configuration version.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "version": {
                      "description": "The version number of the application configuration.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/appconfigversion.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each app config version.",
          "example": "{{versionId}}",
          "in": "path",
          "name": "versionId",
          "required": true,
          "schema": {
            "example": "HaYkWaXESw2Hb2N6VevZmA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/versionId-path.yaml"
          }
        },
        {
          "description": "A unique identifier for each application.",
          "example": "{{applicationId}}",
          "in": "path",
          "name": "applicationId",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/applicationId-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/certificates": {
      "post": {
        "description": "Creates a new certificate.",
        "operationId": "post-certificate",
        "summary": "Create a certificate",
        "tags": [
          "Certificates"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-certificate"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "cert": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----",
                "name": "abc@def.com",
                "password": "verygoodpassswrd",
                "private_key": "-----BEGIN ENCRYPTED PRIVATE KEY-----\n-----END ENCRYPTED PRIVATE KEY-----"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Contains certificate details.",
                "type": "object",
                "required": [
                  "private_key",
                  "name",
                  "cert_type",
                  "cert"
                ],
                "properties": {
                  "cert": {
                    "description": "Body of the certificate.",
                    "example": "{{cert}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "cert_type": {
                    "default": 1,
                    "description": "The certificate type. Either `1` for application, `2` for agent, `3` for internal, `4` for user, `5` for self-signed, or `6` for cloud CA.",
                    "example": "{{cert_type}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ]
                  },
                  "cn": {
                    "description": "The Common Name (CN) represents the server name protected by the SSL certificate.  Example: `akamai.com`.",
                    "example": "{{cn}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking certificate creation. ",
                    "example": "{{created_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "description": {
                    "description": "A description for the certificate. Example: `certificate for abc app`.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "expired_at": {
                    "description": "ISO 8601 timestamp marking the certificate's expiry.",
                    "example": "{{expired_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "issued_at": {
                    "description": "ISO 8601 timestamp marking the certificate's issue. ",
                    "example": "{{issued_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "issuer": {
                    "description": "Entity that has verified the certificate's contents.",
                    "example": "{{issuer}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking the certificate's last modification. ",
                    "example": "{{modified_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "name": {
                    "description": "A display label for the certificate. ",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "private_key": {
                    "description": "Private key for the certificate.",
                    "example": "{{private_key}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource_uri": {
                    "description": "Unique resource identifier. ",
                    "example": "{{resource_uri}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "status": {
                    "description": "The certificate status. Either `0` for disabled or `1` for enabled.",
                    "example": "{{status}}",
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ]
                  },
                  "subject": {
                    "description": "The entity whose identity the certificate confirms.",
                    "example": "{{subject}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "uuid_url": {
                    "description": "A unique identifier for the certificate.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/certificate_post.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "app_count": 0,
                  "cert": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----",
                  "cert_file_name": null,
                  "cert_type": 1,
                  "cn": "hubbaduba.com",
                  "created_at": "2019-07-10T11:54:14.418364",
                  "days_left": 364,
                  "description": null,
                  "expired_at": "2020-07-09T11:51:35",
                  "host_name": null,
                  "issued_at": "2019-07-10T11:51:35",
                  "issuer": "C=IN/ST=KA/L=BLR/O=AKA/OU=ENT/CN=hubbadubba.com/emailAddress=email@address.com",
                  "modified_at": "2019-07-10T11:54:14.418380",
                  "name": "abc@def.com",
                  "password": "akamai",
                  "private_key": "-----BEGIN ENCRYPTED PRIVATE KEY-----\n-----END ENCRYPTED PRIVATE KEY-----",
                  "resource": "certificates",
                  "status": 1,
                  "subject": "C=IN/ST=KA/L=BLR/O=AKA/OU=ENT/CN=hubbaduba.com/emailAddress=email@address.com",
                  "uploaded": null,
                  "uuid_url": "Jq2wsVfuRLadm4yMrOT58A",
                  "resource_uri": {
                    "href": "/api/v1/certificates/Jq2wsVfuRLadm4yMrOT58A"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains certificate details.",
                  "type": "object",
                  "required": [
                    "private_key",
                    "name",
                    "cert_type",
                    "cert"
                  ],
                  "properties": {
                    "cert": {
                      "description": "Body of the certificate.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "cert_type": {
                      "default": 1,
                      "description": "The certificate type. Either `1` for application, `2` for agent, `3` for internal, `4` for user, `5` for self-signed, or `6` for cloud CA.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ]
                    },
                    "cn": {
                      "description": "The Common Name (CN) represents the server name protected by the SSL certificate.  Example: `akamai.com`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking certificate creation. ",
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description for the certificate. Example: `certificate for abc app`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "expired_at": {
                      "description": "ISO 8601 timestamp marking the certificate's expiry.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "issued_at": {
                      "description": "ISO 8601 timestamp marking the certificate's issue. ",
                      "format": "date-time",
                      "type": "string"
                    },
                    "issuer": {
                      "description": "Entity that has verified the certificate's contents.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the certificate's last modification. ",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "A display label for the certificate. ",
                      "minLength": 1,
                      "type": "string"
                    },
                    "private_key": {
                      "description": "Private key for the certificate.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "description": "Unique resource identifier. ",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The certificate status. Either `0` for disabled or `1` for enabled.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "subject": {
                      "description": "The entity whose identity the certificate confirms.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the certificate.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/certificate_post.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists certificates.",
        "operationId": "get-certificates",
        "summary": "List certificates",
        "tags": [
          "Certificates"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-certificates"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 1000,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 5
                  },
                  "objects": [
                    {
                      "app_count": 0,
                      "cert": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----",
                      "cert_type": 1,
                      "cn": "akamai.com",
                      "created_at": "2019-07-10T11:54:14.418364",
                      "days_left": 364,
                      "description": null,
                      "expired_at": "2020-07-09T11:51:35",
                      "issued_at": "2019-07-10T11:51:35",
                      "issuer": "C=IN/ST=KA/L=BLR/O=AKA/OU=ENT/CN=akamai.com/emailAddress=email@address.com",
                      "modified_at": "2019-07-10T11:54:14.418380",
                      "name": "bala7@bwrapp.com",
                      "resource": "certificates",
                      "status": 1,
                      "subject": "C=IN/ST=KA/L=BLR/O=AKA/OU=ENT/CN=akamai.com/emailAddress=email@address.com",
                      "uuid_url": "Jq2wsVfuRLadm4yMrOT58A",
                      "apps": [],
                      "idps": [],
                      "resource_uri": {
                        "href": "/api/v1/certificates/Jq2wsVfuRLadm4yMrOT58A"
                      }
                    },
                    {
                      "app_count": 0,
                      "cert": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----",
                      "cert_type": 5,
                      "cn": "bala7-saml.login.stage.akamai-access.com",
                      "created_at": "2018-04-11T10:51:29.443157",
                      "days_left": 8676,
                      "description": "",
                      "expired_at": "2043-04-12T10:51:29",
                      "issued_at": "2018-04-11T10:51:29",
                      "issuer": "CN=Soha/O=Soha Systems, Inc./L=Sunnyvale/ST=California/C=US",
                      "modified_at": "2018-04-11T10:51:29.443176",
                      "name": "itQgMBYkSwyQxW15vKsIfA-idp-bala7-saml.login.stage.akamai-access.com",
                      "resource": "certificates",
                      "status": 1,
                      "subject": "CN=bala7-saml.login.stage.akamai-access.com/O=Soha/L=Sunnyvale/ST=California/C=US",
                      "uuid_url": "vqShYlbpTzGSDyLOUNgR7A",
                      "apps": [],
                      "idps": [],
                      "resource_uri": {
                        "href": "/api/v1/certificates/vqShYlbpTzGSDyLOUNgR7A"
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "required": [
                    "name",
                    "issued_at",
                    "subject",
                    "expired_at",
                    "cn",
                    "issuer",
                    "cert",
                    "description"
                  ],
                  "properties": {
                    "cert": {
                      "description": "The body of the certificate.",
                      "type": "string"
                    },
                    "cert_type": {
                      "default": 1,
                      "description": "The certificate type. Either `1` for application, `2` for agent, `3` for internal, `4` for user, `5` for self-signed, or `6` for cloud CA.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ]
                    },
                    "cn": {
                      "description": "The Common Name. This is the server name protected by the SSL certificate.",
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the certificate creation. ",
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description for the certificate. ",
                      "type": "string"
                    },
                    "expired_at": {
                      "description": "ISO 8601 timestamp marking the certificate's expiry.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "issued_at": {
                      "description": "ISO 8601 timestamp marking the certificate's issue. ",
                      "format": "date-time",
                      "type": "string"
                    },
                    "issuer": {
                      "description": "Entity that has verified the certificate's contents. ",
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the certificate's last modification. ",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "A display label for the certificate.",
                      "type": "string"
                    },
                    "resource_uri": {
                      "description": "Unique resource identifier. ",
                      "type": "string"
                    },
                    "status": {
                      "default": 1,
                      "description": "The certificate status. Either `0` for disabled or `1` for enabled.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "subject": {
                      "description": "The entity whose identity the certificate confirms.",
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the certificate. ",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/mgmt-pop/certificates/ca_attributes": {
      "get": {
        "description": "Lists CA attributes.",
        "operationId": "get-certificates-ca-attributes",
        "summary": "Get CA attributes",
        "tags": [
          "Certificates"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-certificates-ca-attributes"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": [
                  "CN",
                  "GN",
                  "IPSec User",
                  "Microsoft Smartcardlogin",
                  "Microsoft Universal Principal Name",
                  "Permanent Identifier",
                  "SN",
                  "UID",
                  "X509v3 Subject Alternative Name",
                  "commonName",
                  "distinguishedName",
                  "emailAddress",
                  "friendlyName",
                  "givenName",
                  "ipsecUser",
                  "mail",
                  "msSmartcardLogin",
                  "msUPN",
                  "name",
                  "serialNumber",
                  "subjectAltName",
                  "surname",
                  "uniqueMember",
                  "unstructuredAddress",
                  "unstructuredName",
                  "userId"
                ],
                "schema": {
                  "x-akamai": {
                    "file-path": "schemas/need-schema-here.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/mgmt-pop/certificates/{certificateId}": {
      "get": {
        "description": "Retrieves a single certificate by ID.",
        "operationId": "get-certificate",
        "summary": "Get a certificate",
        "tags": [
          "Certificates"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-certificate"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "app_count": 0,
                  "cert": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----",
                  "cert_file_name": "certificate.pfx",
                  "cert_type": 1,
                  "cn": "aka.com",
                  "created_at": "2019-07-11T10:42:30.701478",
                  "days_left": 364,
                  "description": null,
                  "expired_at": "2020-07-10T10:40:16",
                  "host_name": null,
                  "issued_at": "2019-07-11T10:40:16",
                  "issuer": "C=IN/ST=KA/L=BLR/O=AKA/OU=ENT/CN=aka.com/emailAddress=a@vd.com",
                  "modified_at": "2019-07-11T10:42:30.701494",
                  "name": "bala7@bwrapp.com",
                  "password": "akamai",
                  "resource": "certificates",
                  "status": 1,
                  "subject": "C=IN/ST=KA/L=BLR/O=AKA/OU=ENT/CN=aka.com/emailAddress=a@vd.com",
                  "uploaded": true,
                  "uuid_url": "KscOQO8ZR1qZDBbouTesBQ",
                  "resource_uri": {
                    "href": "/api/v1/certificates/KscOQO8ZR1qZDBbouTesBQ"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains certificate details.",
                  "type": "object",
                  "required": [
                    "private_key",
                    "name",
                    "cert_type",
                    "cert"
                  ],
                  "properties": {
                    "cert": {
                      "description": "Body of the certificate.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "cert_type": {
                      "default": 1,
                      "description": "The certificate type. Either `1` for application, `2` for agent, `3` for internal, `4` for user, `5` for self-signed, or `6` for cloud CA.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ]
                    },
                    "cn": {
                      "description": "The Common Name (CN) represents the server name protected by the SSL certificate.  Example: `akamai.com`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking certificate creation. ",
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description for the certificate. Example: `certificate for abc app`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "expired_at": {
                      "description": "ISO 8601 timestamp marking the certificate's expiry.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "issued_at": {
                      "description": "ISO 8601 timestamp marking the certificate's issue. ",
                      "format": "date-time",
                      "type": "string"
                    },
                    "issuer": {
                      "description": "Entity that has verified the certificate's contents.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the certificate's last modification. ",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "A display label for the certificate. ",
                      "minLength": 1,
                      "type": "string"
                    },
                    "private_key": {
                      "description": "Private key for the certificate.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "description": "Unique resource identifier. ",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The certificate status. Either `0` for disabled or `1` for enabled.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "subject": {
                      "description": "The entity whose identity the certificate confirms.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the certificate.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/certificate_post.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates an existing manual certificate.",
        "operationId": "put-certificate",
        "summary": "Modify a certificate",
        "tags": [
          "Certificates"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-certificate"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "app_count": 0,
                "cert": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----",
                "cert_type": 1,
                "cn": "aka.com",
                "created_at": "2019-07-12T11:01:42.036917",
                "days_left": 361,
                "description": null,
                "expired_at": "2020-07-10T10:40:16",
                "issued_at": "2019-07-11T10:40:16",
                "issuer": "C=IN/ST=KA/L=BLR/O=AKA/OU=ENT/CN=aka.com/emailAddress=a@vd.com",
                "modified_at": "2019-07-12T11:01:42.036932",
                "name": "ew",
                "password": "akamai",
                "private_key": "-----BEGIN ENCRYPTED PRIVATE KEY-----\n-----END ENCRYPTED PRIVATE KEY-----",
                "resource": "certificates",
                "resource_uri": "/api/v1/certificates/KscOQO8ZR1qZDBbouTesBQ",
                "status": 1,
                "subject": "CN=fanr.com/O=Fan/L=San Jose/ST=California/C=US"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Contains certificate details.",
                "type": "object",
                "required": [
                  "private_key",
                  "name",
                  "cert_type",
                  "cert"
                ],
                "properties": {
                  "cert": {
                    "description": "Body of the certificate.",
                    "example": "{{cert}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "cert_type": {
                    "default": 1,
                    "description": "The certificate type. Either `1` for application, `2` for agent, `3` for internal, `4` for user, `5` for self-signed, or `6` for cloud CA.",
                    "example": "{{cert_type}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ]
                  },
                  "cn": {
                    "description": "The Common Name (CN) represents the server name protected by the SSL certificate.  Example: `akamai.com`.",
                    "example": "{{cn}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking the certificate's creation. ",
                    "example": "{{created_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "days_left": {
                    "description": "The number of days left before the certificate expires.",
                    "example": "{{days_left}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "description": {
                    "description": "A description for the certificate. Specify `null` if you want to provide this later.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "expired_at": {
                    "description": "ISO 8601 timestamp marking the certificate's expiry. ",
                    "example": "{{expired_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "issued_at": {
                    "description": "ISO 8601 timestamp marking certificate issue. ",
                    "example": "{{issued_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "issuer": {
                    "description": "Entity that has verified the certificate's contents.",
                    "example": "{{issuer}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking the certificate's last modification.",
                    "example": "{{modified_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "name": {
                    "description": "A display label for the certificate.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "private_key": {
                    "description": "Private key for the certificate.",
                    "example": "{{private_key}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource_uri": {
                    "description": "Hypermedia link for the certificate.",
                    "example": "{{resource_uri}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "status": {
                    "description": "The certificate status. Either `0` for disabled or `1` for enabled.",
                    "example": "{{status}}",
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ]
                  },
                  "subject": {
                    "description": "The entity whose identity the certificate confirms.",
                    "example": "{{subject}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "uuid_url": {
                    "description": "A unique identifier for the certificate. ",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/certificate_put.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "app_count": 0,
                  "cert": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----",
                  "cert_type": 1,
                  "cn": "aka.com",
                  "created_at": "2019-07-12T11:01:42.036917",
                  "days_left": 364,
                  "description": null,
                  "expired_at": "2020-07-14T05:30:59",
                  "issued_at": "2019-07-15T05:30:59",
                  "issuer": "C=IN/ST=KA/L=BLR/O=AKA/OU=ENT/CN=aka.com/emailAddress=abc@dec.com",
                  "modified_at": "2019-07-15T05:31:39.786610",
                  "name": "ew",
                  "password": "akamai",
                  "private_key": "-----BEGIN ENCRYPTED PRIVATE KEY-----\n-----END ENCRYPTED PRIVATE KEY-----",
                  "resource": "certificates",
                  "status": 1,
                  "subject": "C=IN/ST=KA/L=BLR/O=AKA/OU=ENT/CN=aka.com/emailAddress=abc@dec.com",
                  "uuid_url": "FNOUbN-ST2WUvdnz_RFKLw",
                  "resource_uri": {
                    "href": "/api/v1/certificates/FNOUbN-ST2WUvdnz_RFKLw"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains certificate details.",
                  "type": "object",
                  "required": [
                    "private_key",
                    "name",
                    "cert_type",
                    "cert"
                  ],
                  "properties": {
                    "cert": {
                      "description": "Body of the certificate.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "cert_type": {
                      "default": 1,
                      "description": "The certificate type. Either `1` for application, `2` for agent, `3` for internal, `4` for user, `5` for self-signed, or `6` for cloud CA.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ]
                    },
                    "cn": {
                      "description": "The Common Name (CN) represents the server name protected by the SSL certificate.  Example: `akamai.com`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking certificate creation. ",
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description for the certificate. Example: `certificate for abc app`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "expired_at": {
                      "description": "ISO 8601 timestamp marking the certificate's expiry.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "issued_at": {
                      "description": "ISO 8601 timestamp marking the certificate's issue. ",
                      "format": "date-time",
                      "type": "string"
                    },
                    "issuer": {
                      "description": "Entity that has verified the certificate's contents.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the certificate's last modification. ",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "A display label for the certificate. ",
                      "minLength": 1,
                      "type": "string"
                    },
                    "private_key": {
                      "description": "Private key for the certificate.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "description": "Unique resource identifier. ",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The certificate status. Either `0` for disabled or `1` for enabled.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "subject": {
                      "description": "The entity whose identity the certificate confirms.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the certificate.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/certificate_post.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Removes an existing certificate.",
        "operationId": "delete-certificate",
        "summary": "Delete a certificate",
        "tags": [
          "Certificates"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-certificate"
        },
        "responses": {
          "204": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for the certificate.",
          "example": "{{certificateId}}",
          "in": "path",
          "name": "certificateId",
          "required": true,
          "schema": {
            "example": "X9CnR98mTDCSZxzqKYOkTQ",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/certificateId-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/certificates/{certificateId}/upload": {
      "post": {
        "description": "Modifies a certificate.",
        "operationId": "post-certificate-upload",
        "summary": "Upload a certificate",
        "tags": [
          "Certificates"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-certificate-upload"
        },
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "example": {
                "cert": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----",
                "name": "abc@def.com",
                "password": "verygoodpassswrd",
                "private_key": "-----BEGIN ENCRYPTED PRIVATE KEY-----\n-----END ENCRYPTED PRIVATE KEY-----"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Contains certificate details.",
                "type": "object",
                "required": [
                  "name",
                  "password",
                  "cert"
                ],
                "properties": {
                  "cert": {
                    "description": "Body of the certificate.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "cert_type": {
                    "default": 1,
                    "description": "The certificate type. Either `1` for application, `2` for agent, `3` for internal, `4` for user, `5` for self-signed, or `6` for cloud CA.",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ]
                  },
                  "cn": {
                    "description": "The Common Name (CN) represents the server name protected by the SSL certificate.  Example: `akamai.com`.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking certificate creation. ",
                    "format": "date-time",
                    "type": "string"
                  },
                  "description": {
                    "description": "A description for the certificate. Example: `certificate for abc app`.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "expired_at": {
                    "description": "ISO 8601 timestamp marking the certificate's expiry.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "issued_at": {
                    "description": "ISO 8601 timestamp marking the certificate's issue. ",
                    "format": "date-time",
                    "type": "string"
                  },
                  "issuer": {
                    "description": "Entity that has verified the certificate's contents.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking the certificate's last modification. ",
                    "format": "date-time",
                    "type": "string"
                  },
                  "name": {
                    "description": "A display label for the certificate. ",
                    "minLength": 1,
                    "type": "string"
                  },
                  "password": {
                    "description": "Password for the certificate.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "private_key": {
                    "description": "Private key for the certificate.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource_uri": {
                    "description": "Unique resource identifier. ",
                    "minLength": 1,
                    "type": "string"
                  },
                  "status": {
                    "description": "The certificate status. Either `0` for disabled or `1` for enabled.",
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ]
                  },
                  "subject": {
                    "description": "The entity whose identity the certificate confirms.",
                    "minLength": 1,
                    "type": "string"
                  },
                  "uuid_url": {
                    "description": "A unique identifier for the certificate.",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/certificate_post_upload.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "cert": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains certificate details.",
                  "type": "object",
                  "required": [
                    "private_key",
                    "name",
                    "cert_type",
                    "cert"
                  ],
                  "properties": {
                    "cert": {
                      "description": "Body of the certificate.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "cert_type": {
                      "default": 1,
                      "description": "The certificate type. Either `1` for application, `2` for agent, `3` for internal, `4` for user, `5` for self-signed, or `6` for cloud CA.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ]
                    },
                    "cn": {
                      "description": "The Common Name (CN) represents the server name protected by the SSL certificate.  Example: `akamai.com`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking certificate creation. ",
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description for the certificate. Example: `certificate for abc app`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "expired_at": {
                      "description": "ISO 8601 timestamp marking the certificate's expiry.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "issued_at": {
                      "description": "ISO 8601 timestamp marking the certificate's issue. ",
                      "format": "date-time",
                      "type": "string"
                    },
                    "issuer": {
                      "description": "Entity that has verified the certificate's contents.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the certificate's last modification. ",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "A display label for the certificate. ",
                      "minLength": 1,
                      "type": "string"
                    },
                    "private_key": {
                      "description": "Private key for the certificate.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "description": "Unique resource identifier. ",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The certificate status. Either `0` for disabled or `1` for enabled.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "subject": {
                      "description": "The entity whose identity the certificate confirms.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the certificate.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/certificate_post.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for the certificate.",
          "example": "{{certificateId}}",
          "in": "path",
          "name": "certificateId",
          "required": true,
          "schema": {
            "example": "X9CnR98mTDCSZxzqKYOkTQ",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/certificateId-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/directories": {
      "post": {
        "description": "Creates a new directory.",
        "operationId": "post-directory",
        "summary": "Create a directory",
        "tags": [
          "Directory administration"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-directory"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "description": "VM device",
                "name": "abhi",
                "service": 1
              },
              "schema": {
                "additionalProperties": true,
                "description": "Enterprise Access applications.",
                "type": "object",
                "required": [
                  "meta",
                  "objects"
                ],
                "properties": {
                  "meta": {
                    "additionalProperties": false,
                    "description": "Paging settings for requested data.",
                    "type": "object",
                    "required": [
                      "total_count",
                      "next",
                      "limit",
                      "offset",
                      "previous"
                    ],
                    "properties": {
                      "limit": {
                        "description": "The number of items requested, maximum of 250.",
                        "maximum": 250,
                        "minimum": 0,
                        "type": "integer"
                      },
                      "next": {
                        "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "offset": {
                        "description": "The offset from the beginning of the underlying object list, starting at 0.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "previous": {
                        "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "total_count": {
                        "description": "The total count of resources that are in the underlying object list.",
                        "minimum": 0,
                        "type": "integer"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/pageable.yaml"
                    }
                  },
                  "objects": {
                    "description": "The set of applications. ",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "directory": {
                          "additionalProperties": false,
                          "description": "Directory details.",
                          "type": "object",
                          "properties": {
                            "directory_uuid_url": {
                              "description": "The unique directory UUID URL.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "name": {
                              "description": "The directory name.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        },
                        "idp": {
                          "additionalProperties": false,
                          "description": "Directory IDP details.",
                          "type": "object",
                          "properties": {
                            "idp_uuid_url": {
                              "description": "The Identity Provider UUID URL.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "name": {
                              "description": "The directory IDP name.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        },
                        "resource_uri": {
                          "additionalProperties": false,
                          "description": "The resource location for the application directory.",
                          "type": "object",
                          "properties": {
                            "directories": {
                              "description": "Resource URI details.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "groups": {
                              "description": "The group resource URI.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "href": {
                              "description": "The href resource URI.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "pop": {
                              "description": "The URI location for a POP resource.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "services": {
                              "description": "The URI location of an associated service resource.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "sites": {
                              "description": "The URI location of an associated site resource.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        },
                        "uuid_url": {
                          "description": "The resource location for the application directory.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/directory.yaml"
                      }
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/directories.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "admin_user": null,
                  "api_key": null,
                  "auth_request_signed": false,
                  "auth_response_encrypt": false,
                  "chase_referral": false,
                  "cname": "dir-3zxfv_tkrpknto5xndnrhq.login.stage.akamai-access.com",
                  "company_id": null,
                  "conf_state": 1,
                  "created_at": "2019-07-22T10:08:32.390504",
                  "description": "prod directory",
                  "dialin_sni": "dir-3zxfv_tkrpknto5xndnrhq.login.dialin.stage.akamai-access.com",
                  "directory_status": 3,
                  "directory_type": 2,
                  "global_catalog": false,
                  "group_base_dn": null,
                  "group_count": 0,
                  "group_members": "member",
                  "group_name": "cn",
                  "group_search_filter": "(objectClass=group)",
                  "group_token": "primary",
                  "host": null,
                  "last_sync": "2019-07-22T10:08:32.390625",
                  "logout_url": "",
                  "metadata": "",
                  "mfa": "off",
                  "modified_at": "2019-07-22T10:08:32.825745",
                  "name": "abhi",
                  "nameidformat": null,
                  "ou_attr": null,
                  "ou_filter": null,
                  "password_change_allow": false,
                  "password_change_threshold": 0,
                  "password_complexity_message": "",
                  "password_expire_warn_threshold": 0,
                  "password_policy_default": "",
                  "password_reset_allow": false,
                  "port": 636,
                  "resource": "directories",
                  "root_dn": null,
                  "schema_attributes": "{}",
                  "server_cert_validate": true,
                  "service": 1,
                  "signed_request": false,
                  "ssl": true,
                  "status": 1,
                  "sync_interval": 21600,
                  "sync_state": 1,
                  "user_base_dn": null,
                  "user_count": 0,
                  "user_display_name": "Bob Jones",
                  "user_email": "email@example.com",
                  "user_fname": "Bob",
                  "user_lname": "Jones",
                  "user_memberof": "memberOf",
                  "user_memberuid": "memberUid",
                  "user_phone_num": "8005551212",
                  "user_principal": "email@example.com",
                  "user_samaccountname": "bjones",
                  "user_search_filter": "(&(objectClass=user)(objectClass=person))",
                  "user_upn": "bjones",
                  "uuid_url": "3zxFV_tKRpKnTO5XNDnrhQ",
                  "agents": [],
                  "domains": [],
                  "group_object_classes": [
                    "group",
                    "groupOfNames"
                  ],
                  "kerb_realms": [],
                  "ou_object_classes": [
                    "organizationalUnit"
                  ],
                  "user_object_classes": [
                    "person",
                    "organizationalPerson",
                    "user",
                    "inetOrgPerson"
                  ],
                  "attribute_map": {
                    "user.countryCode": "US",
                    "user.email": "email@example.com",
                    "user.firstName": "Bob",
                    "user.groups": "US_IT",
                    "user.lastName": "jones",
                    "user.netbios": "msDS-PrincipalName",
                    "user.persistentId": "objectGUID",
                    "user.phoneNumber": "8005551212",
                    "user.samAccountName": "bjones",
                    "user.userPrincipleName": "bjones"
                  },
                  "password_filter": {
                    "min-char-groups": 2,
                    "min-lower": 1,
                    "min-num": 2,
                    "min-other": 0,
                    "min-special": 1,
                    "min-upper": 1,
                    "name-check": true,
                    "uid-check": true
                  },
                  "resource_uri": {
                    "groups": "/api/v1/directories/3zxFV_tKRpKnTO5XNDnrhQ/groups/",
                    "href": "/api/v1/directories/3zxFV_tKRpKnTO5XNDnrhQ",
                    "users": "/api/v1/directories/3zxFV_tKRpKnTO5XNDnrhQ/users/"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "directory": {
                      "additionalProperties": false,
                      "description": "Directory details.",
                      "type": "object",
                      "properties": {
                        "directory_uuid_url": {
                          "description": "The unique directory UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The directory name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "idp": {
                      "additionalProperties": false,
                      "description": "Directory IDP details.",
                      "type": "object",
                      "properties": {
                        "idp_uuid_url": {
                          "description": "The Identity Provider UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The directory IDP name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "The resource location for the application directory.",
                      "type": "object",
                      "properties": {
                        "directories": {
                          "description": "Resource URI details.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "groups": {
                          "description": "The group resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The href resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "pop": {
                          "description": "The URI location for a POP resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "services": {
                          "description": "The URI location of an associated service resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "sites": {
                          "description": "The URI location of an associated site resource.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "uuid_url": {
                      "description": "The resource location for the application directory.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/directory.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Gets a list of directories.",
        "operationId": "get-directories",
        "summary": "List directories",
        "tags": [
          "Directory administration"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-directories"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 1000,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 10
                  },
                  "objects": [
                    {
                      "admin_user": "",
                      "api_key": "",
                      "auth_request_signed": false,
                      "auth_response_encrypt": false,
                      "chase_referral": false,
                      "cname": "",
                      "company_id": "",
                      "conf_state": 1,
                      "created_at": "2017-07-20T09:24:51.951381",
                      "description": "",
                      "dialin_sni": "",
                      "directory_status": 3,
                      "directory_type": 1,
                      "global_catalog": false,
                      "group_base_dn": "",
                      "group_count": 2,
                      "group_members": "member",
                      "group_name": "cn",
                      "group_search_filter": "(objectClass=group)",
                      "group_token": "primaryGroupToken",
                      "host": "",
                      "last_sync": "2017-07-20T09:24:51.951479",
                      "logout_url": "",
                      "metadata": "",
                      "mfa": "off",
                      "modified_at": "2018-05-18T04:37:31.487944",
                      "name": "Cloud Directory",
                      "nameidformat": "",
                      "ou_attr": "",
                      "ou_filter": null,
                      "password_change_allow": false,
                      "password_change_threshold": 0,
                      "password_complexity_message": "",
                      "password_expire_warn_threshold": 0,
                      "password_policy_default": "",
                      "password_reset_allow": false,
                      "port": 636,
                      "resource": "directories",
                      "root_dn": "",
                      "schema_attributes": "{}",
                      "server_cert_validate": true,
                      "service": 6,
                      "signed_request": false,
                      "ssl": true,
                      "status": 1,
                      "sync_interval": 21600,
                      "sync_state": 1,
                      "user_base_dn": "",
                      "user_count": 15,
                      "user_display_name": "displayName",
                      "user_email": "mail",
                      "user_fname": "givenName",
                      "user_lname": "sn",
                      "user_memberof": "memberOf",
                      "user_memberuid": "memberUid",
                      "user_phone_num": "telephoneNumber",
                      "user_principal": "sAMAccountName",
                      "user_samaccountname": "sAMAccountName",
                      "user_search_filter": "(&(objectClass=user)(objectClass=person))",
                      "user_upn": "userPrincipalName",
                      "uuid_url": "BPmiD2v8T263qkWt3OEM6A",
                      "agents": [],
                      "domains": [],
                      "group_object_classes": [
                        "group",
                        "groupOfNames"
                      ],
                      "kerb_realms": [],
                      "ou_object_classes": [
                        "organizationalUnit"
                      ],
                      "user_object_classes": [
                        "person",
                        "organizationalPerson",
                        "user",
                        "inetOrgPerson"
                      ],
                      "attribute_map": {
                        "user.countryCode": "cloud.country_code",
                        "user.email": "cloud.email",
                        "user.firstName": "cloud.first_name",
                        "user.lastName": "cloud.last_name",
                        "user.netbios": "cloud.netbios",
                        "user.persistentId": "cloud.uuid",
                        "user.phoneNumber": "cloud.phone_number",
                        "user.samAccountName": "cloud.samaccountname",
                        "user.userPrincipleName": "cloud.user_principle_name"
                      },
                      "password_filter": {},
                      "resource_uri": {
                        "groups": "/api/v1/directories/BPmiD2v8T263qkWt3OEM6A/groups/",
                        "href": "/api/v1/directories/BPmiD2v8T263qkWt3OEM6A",
                        "users": "/api/v1/directories/BPmiD2v8T263qkWt3OEM6A/users/"
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Enterprise Access applications.",
                  "type": "object",
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "type": "object",
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "The set of applications. ",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {
                          "directory": {
                            "additionalProperties": false,
                            "description": "Directory details.",
                            "type": "object",
                            "properties": {
                              "directory_uuid_url": {
                                "description": "The unique directory UUID URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "name": {
                                "description": "The directory name.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "idp": {
                            "additionalProperties": false,
                            "description": "Directory IDP details.",
                            "type": "object",
                            "properties": {
                              "idp_uuid_url": {
                                "description": "The Identity Provider UUID URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "name": {
                                "description": "The directory IDP name.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "resource_uri": {
                            "additionalProperties": false,
                            "description": "The resource location for the application directory.",
                            "type": "object",
                            "properties": {
                              "directories": {
                                "description": "Resource URI details.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "groups": {
                                "description": "The group resource URI.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "href": {
                                "description": "The href resource URI.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "pop": {
                                "description": "The URI location for a POP resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "services": {
                                "description": "The URI location of an associated service resource.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sites": {
                                "description": "The URI location of an associated site resource.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "uuid_url": {
                            "description": "The resource location for the application directory.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/directory.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/directories.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/mgmt-pop/directories/createusers": {
      "post": {
        "description": "Creates users in bulk for a cloud directory using a CSV.",
        "operationId": "post-users",
        "summary": "Bulk create users",
        "tags": [
          "User administration"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-users"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "example": "bjones@company.com, Bob, Jones, passwd, IT_group asmith@company.com, Alice, Smith, passwd, HR_corp, Payroll jdoe@company.com, Jane, Doe, Engr_Global, People_Mgmt",
              "schema": {
                "additionalProperties": false,
                "description": "CSV file containing user details.",
                "type": "object",
                "properties": {
                  "users": {
                    "description": "Comma-delimited list of users to create.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/bulk-create-user-post.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "cmdid": "28801ce8-aa3a-4cd9-a48d-4680f6f8fc47"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Command ID for the task.",
                  "type": "object",
                  "required": [
                    "cmdid"
                  ],
                  "properties": {
                    "cmdid": {
                      "description": "A unique identifier to track command progress.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/cmdid.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/mgmt-pop/directories/createusers/status/{cmd_id}": {
      "get": {
        "description": "Gets a user's upload status.",
        "operationId": "get-create-users-status",
        "summary": "Get user upload status",
        "tags": [
          "User administration"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-create-users-status"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "failed": 0,
                  "result": "https://s3.amazonaws.com/user-actions/user-bulk-action-1562916653.json",
                  "status": "complete",
                  "success": 2,
                  "total": 2,
                  "failed_details": []
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The status of a bulk request with detailed information on any failures.",
                  "type": "object",
                  "required": [
                    "status"
                  ],
                  "properties": {
                    "failed": {
                      "description": "The number of failed actions for the request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "failed_details": {
                      "description": "Failed actions details.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "result": {
                      "description": "The location of the bulk action result JSON.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The request status.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "success": {
                      "description": "The successful actions for the request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "total": {
                      "description": "The number of actions in the request.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/status.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier issued for a verify directory user operation.",
          "example": "{{cmd_id}}",
          "in": "path",
          "name": "cmd_id",
          "required": true,
          "schema": {
            "example": "ce8b4684-a504-4288-b80d-98f0bce20545",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/cmd_id-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/directories/reinviteusers/status/{cmd_id}": {
      "get": {
        "description": "Gets the re-invite status for a user.",
        "operationId": "get-users-reinvite-status",
        "summary": "Verify user re-invite status",
        "tags": [
          "User administration"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-users-reinvite-status"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "failed": 0,
                  "result": "https://s3.amazonaws.com/user-actions/user-bulk-action-1562916653.json",
                  "status": "complete",
                  "success": 2,
                  "total": 2,
                  "failed_details": []
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The status of a bulk request with detailed information on any failures.",
                  "type": "object",
                  "required": [
                    "status"
                  ],
                  "properties": {
                    "failed": {
                      "description": "The number of failed actions for the request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "failed_details": {
                      "description": "Failed actions details.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "result": {
                      "description": "The location of the bulk action result JSON.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The request status.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "success": {
                      "description": "The successful actions for the request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "total": {
                      "description": "The number of actions in the request.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/status.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier issued for a verify directory user operation.",
          "example": "{{cmd_id}}",
          "in": "path",
          "name": "cmd_id",
          "required": true,
          "schema": {
            "example": "ce8b4684-a504-4288-b80d-98f0bce20545",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/cmd_id-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/directories/search": {
      "post": {
        "description": "Searches a directory for the specified query string.",
        "operationId": "post-search",
        "summary": "Search a directory",
        "tags": [
          "Directory administration"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-search"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "user": "aa"
              },
              "schema": {
                "x-akamai": {
                  "file-path": "schemas/need-schema-here.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "cmdid": "1c4e70dc-ff5e-4268-b87c-4f44d800a778",
                  "status": "PENDING"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Command ID for the task.",
                  "type": "object",
                  "required": [
                    "cmdid"
                  ],
                  "properties": {
                    "cmdid": {
                      "description": "A unique identifier to track command progress.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/cmdid.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/mgmt-pop/directories/verify": {
      "post": {
        "description": "Verifies that connectors can reach and connect to the directory.",
        "operationId": "post-verify",
        "summary": "Verify a directory",
        "tags": [
          "Directory administration"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-verify"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "cmdid": "1f8675b0-9b8f-4816-813b-128b1b92ad4b",
                  "dir_status": 5,
                  "status": "pending"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Command ID for the task.",
                  "type": "object",
                  "required": [
                    "cmdid"
                  ],
                  "properties": {
                    "cmdid": {
                      "description": "A unique identifier to track command progress.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/cmdid.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/mgmt-pop/directories/verify/{cmd_id}": {
      "get": {
        "description": "Checks the status of directory verification.",
        "operationId": "get-verify-status",
        "summary": "Check verify operation status",
        "tags": [
          "Directory administration"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-verify-status"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "cmdid": "1f8675b0-9b8f-4816-813b-128b1b92ad4b",
                  "dir_reach_error": "",
                  "dir_status": 7,
                  "status": "complete"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The status of a bulk request with detailed information on any failures.",
                  "type": "object",
                  "required": [
                    "status"
                  ],
                  "properties": {
                    "failed": {
                      "description": "The number of failed actions for the request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "failed_details": {
                      "description": "Failed actions details.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "result": {
                      "description": "The location of the bulk action result JSON.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The request status.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "success": {
                      "description": "The successful actions for the request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "total": {
                      "description": "The number of actions in the request.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/status.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier issued for a verify directory user operation.",
          "example": "{{cmd_id}}",
          "in": "path",
          "name": "cmd_id",
          "required": true,
          "schema": {
            "example": "ce8b4684-a504-4288-b80d-98f0bce20545",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/cmd_id-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/directories/{directory_id}": {
      "get": {
        "description": "Gets a single directory.",
        "operationId": "get-directory",
        "summary": "Get a directory",
        "tags": [
          "Directory administration"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-directory"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "admin_user": "EAA\\administrator",
                  "api_key": "",
                  "auth_request_signed": false,
                  "auth_response_encrypt": false,
                  "chase_referral": false,
                  "cname": "dir-aagakk45r6-ulk5u8o2ikw.login.stage.akamai-access.com",
                  "company_id": "",
                  "conf_state": 1,
                  "created_at": "2017-10-30T06:57:39.221798",
                  "description": "",
                  "dialin_sni": "dir-aagakk45r6-ulk5u8o2ikw.login.dialin.stage.akamai-access.com",
                  "directory_status": 5,
                  "directory_type": 2,
                  "global_catalog": false,
                  "group_base_dn": "dc=eaa,dc=daredevils,dc=com",
                  "group_count": 5,
                  "group_members": "member",
                  "group_name": "cn",
                  "group_search_filter": "(objectClass=group)",
                  "group_token": "primaryGroupToken",
                  "host": "192.0.2.28",
                  "last_sync": "2019-07-22T07:14:56.285286",
                  "logout_url": "",
                  "metadata": "",
                  "mfa": "off",
                  "modified_at": "2019-07-22T07:14:56.285600",
                  "name": "EAA Directory",
                  "nameidformat": "",
                  "ou_attr": "",
                  "ou_filter": "",
                  "password_change_allow": true,
                  "password_change_threshold": 0,
                  "password_complexity_message": "",
                  "password_expire_warn_threshold": 0,
                  "password_policy_default": "dc=eaa,dc=daredevils,dc=com",
                  "password_reset_allow": true,
                  "port": 636,
                  "resource": "directories",
                  "root_dn": "eaa.daredevils.com",
                  "schema_attributes": "{}",
                  "server_cert_validate": true,
                  "service": 1,
                  "signed_request": false,
                  "ssl": true,
                  "status": 1,
                  "sync_interval": 21600,
                  "sync_state": 1,
                  "user_base_dn": "dc=eaa,dc=daredevils,dc=com",
                  "user_count": 204,
                  "user_display_name": "displayName",
                  "user_email": "mail",
                  "user_fname": "givenName",
                  "user_lname": "sn",
                  "user_memberof": "memberOf",
                  "user_memberuid": "memberUid",
                  "user_phone_num": "telephoneNumber",
                  "user_principal": "userPrincipalName",
                  "user_samaccountname": "sAMAccountName",
                  "user_search_filter": "(&(objectClass=user)(objectClass=person))",
                  "user_upn": "userPrincipalName",
                  "uuid_url": "aAgAKK45R6-uLK5U8o2iKw",
                  "domains": [],
                  "group_object_classes": [
                    "group",
                    "groupOfNames"
                  ],
                  "kerb_realms": [],
                  "ou_object_classes": [
                    "organizationalUnit"
                  ],
                  "user_object_classes": [
                    "person",
                    "organizationalPerson",
                    "user",
                    "inetOrgPerson"
                  ],
                  "attribute_map": {
                    "eaa.demo": "departmentNumber",
                    "eaa.test": "description",
                    "user.countryCode": "countryCode",
                    "user.email": "email",
                    "user.firstName": "givenName",
                    "user.groups": "memberOf",
                    "user.lastName": "sn",
                    "user.netbios": "msDS-PrincipalName",
                    "user.persistentId": "objectGUID",
                    "user.phoneNumber": "telephoneNumber",
                    "user.samAccountName": "sAMAccountName",
                    "user.userName": "sAMAccountName",
                    "user.userPrincipleName": "userPrincipalName"
                  },
                  "password_filter": {},
                  "resource_uri": {
                    "groups": "/api/v1/directories/aAgAKK45R6-uLK5U8o2iKw/groups/",
                    "href": "/api/v1/directories/aAgAKK45R6-uLK5U8o2iKw",
                    "users": "/api/v1/directories/aAgAKK45R6-uLK5U8o2iKw/users/"
                  },
                  "agents": [
                    {
                      "name": "Alok-Qa-Wapp-Alpha-Connector-N-California",
                      "uuid_url": "I1QHNAjzQ6KpQiivF5bxGw"
                    },
                    {
                      "name": "Alok_OCSP_Ohio",
                      "uuid_url": "ChQHbBiZT_-mwowz2WvLTA"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "directory": {
                      "additionalProperties": false,
                      "description": "Directory details.",
                      "type": "object",
                      "properties": {
                        "directory_uuid_url": {
                          "description": "The unique directory UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The directory name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "idp": {
                      "additionalProperties": false,
                      "description": "Directory IDP details.",
                      "type": "object",
                      "properties": {
                        "idp_uuid_url": {
                          "description": "The Identity Provider UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The directory IDP name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "The resource location for the application directory.",
                      "type": "object",
                      "properties": {
                        "directories": {
                          "description": "Resource URI details.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "groups": {
                          "description": "The group resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The href resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "pop": {
                          "description": "The URI location for a POP resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "services": {
                          "description": "The URI location of an associated service resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "sites": {
                          "description": "The URI location of an associated site resource.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "uuid_url": {
                      "description": "The resource location for the application directory.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/directory.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates an existing directory.",
        "operationId": "put-directory",
        "summary": "Modify a directory",
        "tags": [
          "Directory administration"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-directory"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "admin_user": "eaaprod\\Administrator",
                "api_key": "",
                "auth_request_signed": false,
                "auth_response_encrypt": false,
                "chase_referral": false,
                "cname": "dir-1xnqzptvrtwczkmwlgcxwq.login.stage.akamai-access.com",
                "company_id": "",
                "conf_state": 1,
                "created_at": "2018-10-04T10:57:18.016370",
                "description": "aadd",
                "dialin_sni": "dir-1xnqzptvrtwczkmwlgcxwq.login.dialin.stage.akamai-access.com",
                "directory_status": 5,
                "directory_type": 2,
                "global_catalog": false,
                "group_base_dn": "dc=eaaprod,dc=daredevils,dc=com",
                "group_count": 4,
                "group_members": "member",
                "group_name": "cn",
                "group_search_filter": "(objectClass=group)",
                "group_token": "primaryGroupToken",
                "host": "192.0.2.41",
                "last_sync": "2019-07-19T11:59:37.624427",
                "logout_url": "",
                "metadata": "",
                "mfa": "off",
                "name": "EAA Directory Alpha",
                "nameidformat": "",
                "ou_attr": "",
                "ou_filter": "",
                "password_change_allow": true,
                "password_change_threshold": 3600,
                "password_complexity_message": "Password must contain at least eight characters and one number.Hello",
                "password_expire_warn_threshold": 3600,
                "password_policy_default": "dc=eaaprod,dc=daredevils,dc=com",
                "password_reset_allow": true,
                "port": 636,
                "resource": "directories",
                "root_dn": "eaaprod.daredevils.com",
                "schema_attributes": "{}",
                "server_cert_validate": true,
                "service": 1,
                "signed_request": false,
                "ssl": true,
                "status": 1,
                "sync_interval": 1209600,
                "sync_state": 1,
                "user_base_dn": "dc=eaaprod,dc=daredevils,dc=com",
                "user_count": 37,
                "user_display_name": "displayName",
                "user_email": "mail",
                "user_fname": "givenName",
                "user_lname": "sn",
                "user_memberof": "memberOf",
                "user_memberuid": "memberUid",
                "user_phone_num": "telephoneNumber",
                "user_principal": "userPrincipalName",
                "user_samaccountname": "sAMAccountName",
                "user_search_filter": "(&(objectClass=user)(objectClass=person))",
                "user_upn": "userPrincipalName",
                "group_object_classes": [
                  "group",
                  "groupOfNames"
                ],
                "kerb_realms": [],
                "ou_object_classes": [
                  "organizationalUnit"
                ],
                "user_object_classes": [
                  "person",
                  "organizationalPerson",
                  "user",
                  "inetOrgPerson"
                ],
                "attribute_map": {
                  "user.countryCode": "countryCode",
                  "user.email": "mail",
                  "user.firstName": "givenName",
                  "user.groups": "memberOf",
                  "user.lastName": "sn",
                  "user.netbios": "msDS-PrincipalName",
                  "user.persistentId": "objectGUID",
                  "user.phoneNumber": "telephoneNumber",
                  "user.samAccountName": "sAMAccountName",
                  "user.userPrincipleName": "userPrincipalName"
                },
                "password_filter": {
                  "min-char-groups": 2,
                  "min-lower": 1,
                  "min-num": 2,
                  "min-other": 0,
                  "min-special": 1,
                  "min-upper": 1,
                  "name-check": true,
                  "uid-check": true
                },
                "agents": [
                  {
                    "name": "anag-1804-aws-agent",
                    "uuid_url": "ikbBcyKGSfmFbRaL8zrslA"
                  }
                ],
                "domains": [
                  {
                    "name": ""
                  }
                ]
              },
              "schema": {
                "additionalProperties": true,
                "description": "Enterprise Access applications.",
                "type": "object",
                "required": [
                  "meta",
                  "objects"
                ],
                "properties": {
                  "meta": {
                    "additionalProperties": false,
                    "description": "Paging settings for requested data.",
                    "type": "object",
                    "required": [
                      "total_count",
                      "next",
                      "limit",
                      "offset",
                      "previous"
                    ],
                    "properties": {
                      "limit": {
                        "description": "The number of items requested, maximum of 250.",
                        "maximum": 250,
                        "minimum": 0,
                        "type": "integer"
                      },
                      "next": {
                        "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "offset": {
                        "description": "The offset from the beginning of the underlying object list, starting at 0.",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "previous": {
                        "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                        "minLength": 1,
                        "nullable": true,
                        "type": "string"
                      },
                      "total_count": {
                        "description": "The total count of resources that are in the underlying object list.",
                        "minimum": 0,
                        "type": "integer"
                      }
                    },
                    "x-akamai": {
                      "file-path": "schemas/pageable.yaml"
                    }
                  },
                  "objects": {
                    "description": "The set of applications. ",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "properties": {
                        "directory": {
                          "additionalProperties": false,
                          "description": "Directory details.",
                          "type": "object",
                          "properties": {
                            "directory_uuid_url": {
                              "description": "The unique directory UUID URL.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "name": {
                              "description": "The directory name.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        },
                        "idp": {
                          "additionalProperties": false,
                          "description": "Directory IDP details.",
                          "type": "object",
                          "properties": {
                            "idp_uuid_url": {
                              "description": "The Identity Provider UUID URL.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "name": {
                              "description": "The directory IDP name.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        },
                        "resource_uri": {
                          "additionalProperties": false,
                          "description": "The resource location for the application directory.",
                          "type": "object",
                          "properties": {
                            "directories": {
                              "description": "Resource URI details.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "groups": {
                              "description": "The group resource URI.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "href": {
                              "description": "The href resource URI.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "pop": {
                              "description": "The URI location for a POP resource.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "services": {
                              "description": "The URI location of an associated service resource.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "sites": {
                              "description": "The URI location of an associated site resource.",
                              "minLength": 1,
                              "type": "string"
                            }
                          }
                        },
                        "uuid_url": {
                          "description": "The resource location for the application directory.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/directory.yaml"
                      }
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/directories.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "admin_user": "EAA\\administrator",
                  "api_key": "",
                  "auth_request_signed": false,
                  "auth_response_encrypt": false,
                  "chase_referral": false,
                  "cname": "dir-aagakk45r6-ulk5u8o2ikw.login.stage.akamai-access.com",
                  "company_id": "",
                  "conf_state": 1,
                  "created_at": "2017-10-30T06:57:39.221798",
                  "description": "",
                  "dialin_sni": "dir-aagakk45r6-ulk5u8o2ikw.login.dialin.stage.akamai-access.com",
                  "directory_status": 5,
                  "directory_type": 2,
                  "global_catalog": false,
                  "group_base_dn": "dc=eaa,dc=daredevils,dc=com",
                  "group_count": 5,
                  "group_members": "member",
                  "group_name": "cn",
                  "group_search_filter": "(objectClass=group)",
                  "group_token": "primaryGroupToken",
                  "host": "192.0.2.249",
                  "last_sync": "2019-07-22T07:14:56.285286",
                  "logout_url": "",
                  "metadata": "",
                  "mfa": "off",
                  "modified_at": "2019-07-22T07:14:56.285600",
                  "name": "EAA Directory",
                  "nameidformat": "",
                  "ou_attr": "",
                  "ou_filter": "",
                  "password_change_allow": true,
                  "password_change_threshold": 0,
                  "password_complexity_message": "",
                  "password_expire_warn_threshold": 0,
                  "password_policy_default": "dc=eaa,dc=daredevils,dc=com",
                  "password_reset_allow": true,
                  "port": 636,
                  "resource": "directories",
                  "root_dn": "eaa.daredevils.com",
                  "schema_attributes": "{}",
                  "server_cert_validate": true,
                  "service": 1,
                  "signed_request": false,
                  "ssl": true,
                  "status": 1,
                  "sync_interval": 21600,
                  "sync_state": 1,
                  "user_base_dn": "dc=eaa,dc=daredevils,dc=com",
                  "user_count": 204,
                  "user_display_name": "displayName",
                  "user_email": "mail",
                  "user_fname": "givenName",
                  "user_lname": "sn",
                  "user_memberof": "memberOf",
                  "user_memberuid": "memberUid",
                  "user_phone_num": "telephoneNumber",
                  "user_principal": "userPrincipalName",
                  "user_samaccountname": "sAMAccountName",
                  "user_search_filter": "(&(objectClass=user)(objectClass=person))",
                  "user_upn": "userPrincipalName",
                  "uuid_url": "aAgAKK45R6-uLK5U8o2iKw",
                  "domains": [],
                  "group_object_classes": [
                    "group",
                    "groupOfNames"
                  ],
                  "kerb_realms": [],
                  "ou_object_classes": [
                    "organizationalUnit"
                  ],
                  "user_object_classes": [
                    "person",
                    "organizationalPerson",
                    "user",
                    "inetOrgPerson"
                  ],
                  "attribute_map": {
                    "eaa.demo": "departmentNumber",
                    "eaa.test": "description",
                    "user.countryCode": "countryCode",
                    "user.email": "email",
                    "user.firstName": "givenName",
                    "user.groups": "memberOf",
                    "user.lastName": "sn",
                    "user.netbios": "msDS-PrincipalName",
                    "user.persistentId": "objectGUID",
                    "user.phoneNumber": "telephoneNumber",
                    "user.samAccountName": "sAMAccountName",
                    "user.userName": "sAMAccountName",
                    "user.userPrincipleName": "userPrincipalName"
                  },
                  "password_filter": {},
                  "resource_uri": {
                    "groups": "/api/v1/directories/aAgAKK45R6-uLK5U8o2iKw/groups/",
                    "href": "/api/v1/directories/aAgAKK45R6-uLK5U8o2iKw",
                    "users": "/api/v1/directories/aAgAKK45R6-uLK5U8o2iKw/users/"
                  },
                  "agents": [
                    {
                      "name": "Alok-Qa-Wapp-Alpha-Connector-N-California",
                      "uuid_url": "I1QHNAjzQ6KpQiivF5bxGw"
                    },
                    {
                      "name": "Alok_OCSP_Ohio",
                      "uuid_url": "ChQHbBiZT_-mwowz2WvLTA"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "properties": {
                    "directory": {
                      "additionalProperties": false,
                      "description": "Directory details.",
                      "type": "object",
                      "properties": {
                        "directory_uuid_url": {
                          "description": "The unique directory UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The directory name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "idp": {
                      "additionalProperties": false,
                      "description": "Directory IDP details.",
                      "type": "object",
                      "properties": {
                        "idp_uuid_url": {
                          "description": "The Identity Provider UUID URL.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The directory IDP name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "The resource location for the application directory.",
                      "type": "object",
                      "properties": {
                        "directories": {
                          "description": "Resource URI details.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "groups": {
                          "description": "The group resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The href resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "pop": {
                          "description": "The URI location for a POP resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "services": {
                          "description": "The URI location of an associated service resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "sites": {
                          "description": "The URI location of an associated site resource.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "uuid_url": {
                      "description": "The resource location for the application directory.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/directory.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Deletes an existing directory.",
        "operationId": "delete-directory",
        "summary": "Delete a directory",
        "tags": [
          "Directory administration"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-directory"
        },
        "responses": {
          "204": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each directory.",
          "example": "{{directory_id}}",
          "in": "path",
          "name": "directory_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/directory_id-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/directories/{directory_id}/apps": {
      "get": {
        "description": "Gets list of applications associated with the directory.",
        "operationId": "get-directory-apps",
        "summary": "List directory applications",
        "tags": [
          "Applications"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-directory-apps"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 3
                  },
                  "objects": [
                    {
                      "enable_mfa": "inherit",
                      "resource": "appdirectories",
                      "uuid_url": "-eGoXVYPTbKBEDtHlgtq1w",
                      "app": {
                        "app_uuid_url": "rifZbAclREyEF7TPAoKNiw",
                        "name": "bala-okta-http"
                      },
                      "directory": {
                        "directory_uuid_url": "aAgAKK45R6-uLK5U8o2iKw",
                        "name": "EAA Directory"
                      },
                      "resource_uri": {
                        "apps": "/api/v1/apps/rifZbAclREyEF7TPAoKNiw",
                        "directories": "/api/v1/directories/aAgAKK45R6-uLK5U8o2iKw",
                        "href": "/api/v1/appdirectories/-eGoXVYPTbKBEDtHlgtq1w"
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access Application creation properties.",
                  "type": "object",
                  "required": [
                    "app_type",
                    "name",
                    "app_profile"
                  ],
                  "properties": {
                    "agents": {
                      "description": "EAA application connector details.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the target connectors for deploying the application configuration.",
                        "type": "object",
                        "required": [
                          "compatible",
                          "name",
                          "uuid_url"
                        ],
                        "properties": {
                          "compatible": {
                            "description": "Whether the target connector is compatible with the application configuration.",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "The name of the connector.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "The UUID URL of the connector.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "app_category": {
                      "additionalProperties": false,
                      "description": "Specifies the category the application belongs to.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the category.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "uuid_url": {
                          "description": "The UUID of the category.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "app_deployed": {
                      "description": "Whether the application configuration is deployed.",
                      "type": "boolean"
                    },
                    "app_logo": {
                      "description": "A URL identifying the application configuration's logo icon.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "app_operational": {
                      "default": 1,
                      "description": "The operational status of the application configuration. Either `1` for No, `2` for Pending, or `3` for Okay.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3
                      ]
                    },
                    "app_profile": {
                      "default": 1,
                      "description": "The access application profile. Either `1` for HTTP, `2` for SharePoint, `3` for Jira, `4` for RDP, `5` for VNC, `6` for ssh, `7` for Jenkins, `8` for Confluence, or `9` for TCP.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9
                      ]
                    },
                    "app_status": {
                      "default": 1,
                      "description": "The status of the application configuration. Either `1` for not ready, `2` for ready, `3` for pending, `4` for deployed, `5` for failed, `6` for cloud deployed, or `7` for connector deployed.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7
                      ]
                    },
                    "app_type": {
                      "description": "The type of application configuration. Either `1` for Enterprise Hosted, `2` for SAAS, `3` for Bookmark, `4` for Tunnel, or `5` for Enterprise Threat Protector.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ]
                    },
                    "auth_agent": {
                      "description": "The connector for the application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "auth_enabled": {
                      "default": "true",
                      "description": "Enables authentication.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "auth_type": {
                      "default": 1,
                      "description": "The type of authentication used. Either `1` for Cloud, `2` for Enterprise, or `3` for Third Party.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3
                      ]
                    },
                    "bookmark_url": {
                      "description": "The Okta Bookmark app URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "cert": {
                      "description": "A valid certificate string for front-end SSL connections. Used if you configure your domain as the external hostname. Specify `null` if you want to name it later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "client_app_mode": {
                      "default": 1,
                      "description": "The mode of client app. `1` for TCP or `2` for Tunnel.",
                      "type": "integer",
                      "enum": [
                        1,
                        2
                      ]
                    },
                    "cname": {
                      "description": "The upstream URL for a CNAME redirect.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the application object's creation.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "data_agent": {
                      "description": "The data connector for the application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "directories": {
                      "description": "Application directory details.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Specifies the directory for validating user accounts.",
                        "type": "object",
                        "required": [
                          "type",
                          "name",
                          "user_count",
                          "uuid_url"
                        ],
                        "properties": {
                          "name": {
                            "description": "The name of the directory.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of directory. Select `1` for EAA Cloud Directory, `2` for Active Directory, `3` for LDAP, or `4` for Active Directory LDS.",
                            "type": "string",
                            "enum": [
                              "1",
                              "2",
                              "3",
                              "4"
                            ]
                          },
                          "user_count": {
                            "description": "The total number of user accounts configured on the directory.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "uuid_url": {
                            "description": "The UUID URL of the directory.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "domain": {
                      "default": 1,
                      "description": "The type of access domain. Select `1` for custom or `2` for Akamai.",
                      "type": "integer",
                      "enum": [
                        1,
                        2
                      ]
                    },
                    "domain_suffix": {
                      "description": "The domain suffix. For example, `.com`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "host": {
                      "description": "The external default hostname for the application.",
                      "format": "hostname",
                      "type": "string"
                    },
                    "idp": {
                      "additionalProperties": false,
                      "description": "Specifies the identity provider (IDP) for authenticating user requests.",
                      "type": "object",
                      "properties": {
                        "client_cert_auth": {
                          "description": "Enables certificate-based authentication for the client.",
                          "type": "boolean"
                        },
                        "client_cert_user_param": {
                          "description": "Relevant Cert based parameters for client authentication.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "idp_id": {
                          "description": "The ID of the IDP configuration.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the IDP configuration.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "type": {
                          "default": 1,
                          "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, or `9` for Azure.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8,
                            9
                          ]
                        }
                      }
                    },
                    "modified_at": {
                      "description": "Name of the user who most recently modified this application object. If the object wasn't modified since first being created, the value matches `createdAt`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the application configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "oidc": {
                      "description": "Enables OpenID Connect (OIDC).",
                      "type": "boolean"
                    },
                    "oidc_settings": {
                      "additionalProperties": false,
                      "description": "JSON settings to implement OIDC.",
                      "type": "object",
                      "required": [
                        "userinfo_endpoint",
                        "certs_uri",
                        "jwks_uri",
                        "check_session_iframe",
                        "token_endpoint",
                        "openid_metadata",
                        "end_session_endpoint",
                        "authorization_endpoint",
                        "discovery_url"
                      ],
                      "properties": {
                        "authorization_endpoint": {
                          "description": "The OIDC endpoint where end users authenticate and grant the client application consent to access their identity information.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "certs_uri": {
                          "description": "The URI of the relaying party's CA certificate.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "check_session_iframe": {
                          "description": "The iframe URL used to check session status.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "discovery_url": {
                          "description": "The OIDC endpoint the client uses to discover OpenID features and other provider endpoints.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "end_session_endpoint": {
                          "description": "The OIDC endpoint that triggers single sign out.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "jwks_uri": {
                          "description": "The publishing location of the JSON web keys (JWK). Used for both the open provider and the relaying party.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "openid_metadata": {
                          "description": "Metadata that describes the OIDC provider's configuration.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "token_endpoint": {
                          "description": "The OIDC endpoint that tokens and authenticates client application requests.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "userinfo_endpoint": {
                          "description": "The OIDC endpoint where the client sends requests for identity claims.",
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/app-oidc-settings.yaml"
                      }
                    },
                    "origin_host": {
                      "description": "The IP address or FQDN of the application origin server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "pop": {
                      "description": "The identifier for the target region to deploy the application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "popName": {
                      "description": "The target region to deploy the application. For example, `US-West` or `US-East`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "rdp_version": {
                      "description": "The version of remote desktop protocol (RDP).",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource": {
                      "description": "Name of resource mapping to an entity or set of entities. For example, `apps`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_status": {
                      "additionalProperties": false,
                      "description": "The most recent status of various application resources.",
                      "type": "object",
                      "required": [
                        "host_reachable",
                        "directories_status",
                        "cname_dns_status",
                        "data_agent_status",
                        "cert_status",
                        "host_dns_status",
                        "origin_host_status",
                        "dialin_server_status",
                        "pop_status",
                        "internal_host_status"
                      ],
                      "properties": {
                        "cert_status": {
                          "default": 1,
                          "description": "The certificate resource status. Either `1` for Not Added, `2` for Expired, `3` for Invalid CNAME, `4` for Invalid CA, `5` for No Private Key, `6` for Okay, or `7` for Invalid CA User Parameter.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                          ]
                        },
                        "cname_dns_status": {
                          "default": 1,
                          "description": "The CNAME DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Okay.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ]
                        },
                        "data_agent_status": {
                          "default": 1,
                          "description": "The data agent resource status. Either `1` for Not Added, `2` for Not Installed, `3` for Not Approved, `4` for Not Reachable, `5` for Okay, or `6` for Not Compatible.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6
                          ]
                        },
                        "dialin_server_status": {
                          "default": 1,
                          "description": "The dialin server resource status. Either `1` for Not Configured, `2` for Configured, `3` for Not Created, `4` for Not Resolved, and `5` for Okay.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ]
                        },
                        "directories_status": {
                          "default": 1,
                          "description": "The directories resource status. Either `1` for Not Added, `2` for Added, `3` for No Connector, `4` for Pending, `5` for Not Reachable, or `6` for Okay.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6
                          ]
                        },
                        "host_dns_status": {
                          "default": 1,
                          "description": "The host DNS resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Resolved, `5` for Not Created, `6` for Okay, or `7` for CNAME Mismatch.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7
                          ]
                        },
                        "host_reachable": {
                          "default": false,
                          "description": "Indicates whether the host is reachable.",
                          "type": "boolean"
                        },
                        "internal_host_status": {
                          "default": 1,
                          "description": "The internal host resource status. Either `1` for Not Configured or `2` for Okay.",
                          "type": "integer",
                          "enum": [
                            1,
                            2
                          ]
                        },
                        "origin_host_status": {
                          "default": 1,
                          "description": "The origin host resource status. Either `1` for Not Configured, `2` for Configured, `3` for Ready, `4` for Not Reachable, or `5` for Okay.",
                          "type": "integer",
                          "enum": [
                            1,
                            2,
                            3,
                            4,
                            5
                          ]
                        },
                        "pop_status": {
                          "default": 1,
                          "description": "The pop resource status. Either `1` for Not Configured) or `2` for Okay.",
                          "type": "integer",
                          "enum": [
                            1,
                            2
                          ]
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/app-resource-status.yaml"
                      }
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Resource URIs for the application.",
                      "type": "object",
                      "required": [
                        "directories",
                        "groups",
                        "href",
                        "pop",
                        "services",
                        "sites"
                      ],
                      "properties": {
                        "directories": {
                          "description": "The URI location of an associated directory resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "groups": {
                          "description": "The URI location of an associated group resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The URI location of an associated href resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "pop": {
                          "description": "The URI location of an associated pop resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "services": {
                          "description": "The URI location of an associated service resource.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "sites": {
                          "description": "The URI location of an associated site resource.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "saml": {
                      "description": "Enables SAML for the application.",
                      "type": "boolean"
                    },
                    "saml_settings": {
                      "description": "SAML configuration for an application.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "SAML configuration for an application.",
                        "type": "object",
                        "required": [
                          "sp",
                          "attrmap",
                          "idp",
                          "subject"
                        ],
                        "properties": {
                          "attrmap": {
                            "description": "SAML attribute mapping details.",
                            "minItems": 1,
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                              "additionalProperties": false,
                              "description": "Specifies mapped attributes for the SAML configuration.",
                              "type": "object",
                              "required": [
                                "name",
                                "fmt",
                                "src"
                              ],
                              "properties": {
                                "fmt": {
                                  "description": "The name format of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "fname": {
                                  "description": "The fname of the attribute.",
                                  "minLength": 0,
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "rule": {
                                  "description": "The custom rule language for the attribute. ",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "src": {
                                  "description": "The source of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "val": {
                                  "description": "The value of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "idp": {
                            "additionalProperties": false,
                            "description": "Specifies identity provider (IDP) settings for the SAML configuration.",
                            "type": "object",
                            "required": [
                              "self_signed",
                              "ecp_resp_signature",
                              "slo_url",
                              "entity_id",
                              "resp_bind",
                              "sign_key",
                              "sign_cert",
                              "sign_algo",
                              "ecp_enable",
                              "metadata"
                            ],
                            "properties": {
                              "ecp_enable": {
                                "default": false,
                                "description": "Enables enhanced client or proxy (ECP).",
                                "type": "boolean"
                              },
                              "ecp_resp_signature": {
                                "default": false,
                                "description": "The ECP response signature.",
                                "type": "boolean"
                              },
                              "entity_id": {
                                "description": "The entity ID of the identity provider.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "metadata": {
                                "description": "Additional metadata for the service provider configuration. Specify `null` if you want to provide this later.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "resp_bind": {
                                "default": "post",
                                "description": "The response binding. Set to `post`.",
                                "type": "string",
                                "enum": [
                                  "post"
                                ]
                              },
                              "self_signed": {
                                "default": true,
                                "description": "Enables a self-signed certificate.",
                                "type": "boolean"
                              },
                              "sign_algo": {
                                "default": "SHA256",
                                "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                                "type": "string",
                                "enum": [
                                  "SHA256",
                                  "SHA1"
                                ]
                              },
                              "sign_cert": {
                                "description": "The signing certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sign_key": {
                                "description": "The signing key.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "slo_url": {
                                "description": "The single log-out URL.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "sp": {
                            "additionalProperties": false,
                            "description": "Specifies service provider (SP) settings for the SAML configuration.",
                            "type": "object",
                            "required": [
                              "entity_id",
                              "acs_url",
                              "req_bind",
                              "default_relay_state",
                              "force_auth",
                              "req_verify",
                              "resp_encr",
                              "encr_cert",
                              "encr_algo"
                            ],
                            "properties": {
                              "acs_url": {
                                "description": "The single sign-on (ACS) URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "default_relay_state": {
                                "description": "The default relay state. Specify `null` if you want to provide this later.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "dst_url": {
                                "description": "The destination URL.",
                                "minLength": 0,
                                "type": "string"
                              },
                              "encr_algo": {
                                "default": "aes256-cbc",
                                "description": "The response encryption algorithm. Either `aes256-cbc` or `aes128-cbc`.",
                                "type": "string",
                                "enum": [
                                  "aes256-cbc",
                                  "aes128-cbc"
                                ]
                              },
                              "encr_cert": {
                                "description": "The response encryption certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "entity_id": {
                                "description": "The entity ID.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "force_auth": {
                                "default": false,
                                "description": "Forces encryption using the `httponly` flag in the session cookie.",
                                "type": "boolean"
                              },
                              "metadata": {
                                "description": "Additional metadata for the IDP configuration. Specify `null` if you want to provide this later.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "req_bind": {
                                "default": "redirect",
                                "description": "The response binding. Either `redirect` or `post`.",
                                "type": "string",
                                "enum": [
                                  "redirect",
                                  "post"
                                ]
                              },
                              "req_verify": {
                                "default": false,
                                "description": "Enables request verification.",
                                "type": "boolean"
                              },
                              "resp_encr": {
                                "default": false,
                                "description": "Enables encryption on the responses.",
                                "type": "boolean"
                              },
                              "sign_cert": {
                                "description": "The request signing certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "slo_bind": {
                                "default": "post",
                                "description": "The single log-out binding. Either `post` or `redirect`.",
                                "type": "string",
                                "enum": [
                                  "post",
                                  "redirect"
                                ]
                              },
                              "slo_req_verify": {
                                "default": true,
                                "description": "Enables single log-out request verification.",
                                "type": "boolean"
                              },
                              "slo_url": {
                                "description": "The single log-out URL.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "subject": {
                            "additionalProperties": false,
                            "description": "Specifies the subject settings for the SAML configuration.",
                            "type": "object",
                            "required": [
                              "fmt",
                              "src"
                            ],
                            "properties": {
                              "fmt": {
                                "description": "The format for the `NameID` element of the subject. Either `email`, `persistent`, `unspecified`, or `transient`.",
                                "minLength": 1,
                                "type": "string",
                                "enum": [
                                  "email",
                                  "persistent",
                                  "unspecified",
                                  "transient"
                                ]
                              },
                              "rule": {
                                "description": "Processing rule for the subject. If omitted from requests, the API responds with a `null` value you can fill out later.",
                                "minLength": 1,
                                "nullable": true,
                                "type": "string"
                              },
                              "src": {
                                "description": "The source of the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "val": {
                                "description": "The value of the subject.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/app-saml-settings.yaml"
                      }
                    },
                    "servers": {
                      "description": "EAA application server details.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Origin server details of the internal application within your network.",
                        "type": "object",
                        "required": [
                          "origin_protocol",
                          "name",
                          "orig_tls",
                          "origin_host",
                          "origin_port"
                        ],
                        "properties": {
                          "name": {
                            "description": "The name of the origin server.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "orig_tls": {
                            "description": "Enables TLS on the origin server.",
                            "type": "boolean"
                          },
                          "origin_host": {
                            "description": "The IP address or FQDN of the origin server.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "origin_port": {
                            "description": "The port number of the origin server.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "origin_protocol": {
                            "description": "The protocol of the origin server connection. Either `ssh` or `http`.",
                            "type": "string",
                            "enum": [
                              "ssh",
                              "http"
                            ]
                          }
                        }
                      }
                    },
                    "services": {
                      "description": "EAA application service details.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "A list of services enabled on the application configuration.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the service.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "sites": {
                      "description": "List of associated site resources.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the application.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "wsfed": {
                      "description": "Enables Web Services Federation (WSFED) identity federation.",
                      "type": "boolean"
                    },
                    "wsfed_settings": {
                      "description": "JSON settings to implement WSFED.",
                      "minItems": 1,
                      "title": "Web Services Federation (WSFED) settings",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Web Services Federation (WSFED) configuration for an application.",
                        "type": "object",
                        "required": [
                          "sp",
                          "attrmap",
                          "idp",
                          "subject"
                        ],
                        "properties": {
                          "attrmap": {
                            "description": "Contains mapped attributes for the WSFED configuration.",
                            "minItems": 1,
                            "type": "array",
                            "uniqueItems": true,
                            "items": {
                              "additionalProperties": false,
                              "description": "Mapped attributes for the WSFED configuration.",
                              "type": "object",
                              "required": [
                                "fmt"
                              ],
                              "properties": {
                                "custom_fmt": {
                                  "description": "The custom format of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "fmt": {
                                  "description": "The name format of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "rule": {
                                  "description": "The custom rule language for the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "src": {
                                  "description": "The source of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "val": {
                                  "description": "The value of the attribute.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "idp": {
                            "additionalProperties": false,
                            "description": "Specifies identity provider (IDP) settings for the WSFED configuration.",
                            "type": "object",
                            "required": [
                              "entity_id",
                              "sign_key",
                              "sign_cert",
                              "sign_algo"
                            ],
                            "properties": {
                              "entity_id": {
                                "description": "The entity ID of the identity provider.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sign_algo": {
                                "default": "SHA256",
                                "description": "The type of signing algorithm. Either `SHA256` or `SHA1`.",
                                "type": "string",
                                "enum": [
                                  "SHA256",
                                  "SHA1"
                                ]
                              },
                              "sign_cert": {
                                "description": "The signing certificate.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "sign_key": {
                                "description": "The signing key.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "sp": {
                            "additionalProperties": false,
                            "description": "Specifies service provider settings for the WSFED configuration.",
                            "type": "object",
                            "required": [
                              "entity_id",
                              "slo_url",
                              "dst_url",
                              "resp_bind",
                              "token_life"
                            ],
                            "properties": {
                              "dst_url": {
                                "description": "The destination URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "entity_id": {
                                "description": "The entity ID of the service provider.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "resp_bind": {
                                "default": "post",
                                "description": "The response binding. Set to `post`.",
                                "type": "string",
                                "enum": [
                                  "post"
                                ]
                              },
                              "slo_url": {
                                "description": "The single log-out URL.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "token_life": {
                                "default": 3600,
                                "description": "The number of seconds a token is valid.",
                                "minimum": 0,
                                "type": "integer"
                              }
                            }
                          },
                          "subject": {
                            "additionalProperties": false,
                            "description": "Specifies subject settings for the WSFED configuration.",
                            "type": "object",
                            "required": [
                              "fmt"
                            ],
                            "properties": {
                              "custom_fmt": {
                                "description": "The custom format of the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "fmt": {
                                "description": "The format for the `NameID` element of the subject. Either `email`, `persistent`, `unspecified`, or `transient`.",
                                "minLength": 1,
                                "type": "string",
                                "enum": [
                                  "email",
                                  "persistent",
                                  "unspecified",
                                  "transient"
                                ]
                              },
                              "rule": {
                                "description": "The custom rule language for the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "src": {
                                "description": "The source of the subject.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "val": {
                                "description": "The value of the subject.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/app-wsfed-settings.yaml"
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/application.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each directory.",
          "example": "{{directory_id}}",
          "in": "path",
          "name": "directory_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/directory_id-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/directories/{directory_id}/deleteusers": {
      "post": {
        "description": "Deletes users in bulk for a cloud directory.",
        "operationId": "post-users-delete",
        "summary": "Bulk delete user",
        "tags": [
          "User administration"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-users-delete"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "user_list": [
                  "43pATzNCTrWMbieFfGQiGw",
                  "-PMZRhFxSf-rteD60F7Z_A"
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Users for bulk deletion.",
                "type": "object",
                "required": [
                  "user_list"
                ],
                "properties": {
                  "user_list": {
                    "description": "Users to bulk delete.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/users-delete-bulk.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "failed": 0,
                  "status": "complete",
                  "success": 2,
                  "total": 2,
                  "failed_details": []
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "The status of a bulk request with detailed information on any failures.",
                  "type": "object",
                  "required": [
                    "status"
                  ],
                  "properties": {
                    "failed": {
                      "description": "The number of failed actions for the request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "failed_details": {
                      "description": "Failed actions details.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "result": {
                      "description": "The location of the bulk action result JSON.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The request status.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "success": {
                      "description": "The successful actions for the request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "total": {
                      "description": "The number of actions in the request.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/status.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each directory.",
          "example": "{{directory_id}}",
          "in": "path",
          "name": "directory_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/directory_id-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/directories/{directory_id}/groups": {
      "get": {
        "description": "Gets a list of associated groups.",
        "operationId": "get-directory-groups",
        "summary": "List directory groups",
        "tags": [
          "Directory groups"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-directory-groups"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 5
                  },
                  "objects": [
                    {
                      "created_at": "2017-11-02T12:11:11.210052",
                      "description": "",
                      "group_type": 2,
                      "modified_at": "2017-11-02T12:11:11.210072",
                      "name": "demoGrp",
                      "resource": "groups",
                      "status": 1,
                      "user_count": 32,
                      "uuid_url": "NMC-zgOjR7GW88Z-GCjZeQ",
                      "resource_uri": {
                        "directory": "/api/v1/directories/aAgAKK45R6-uLK5U8o2iKw/",
                        "href": "/api/v1/groups/NMC-zgOjR7GW88Z-GCjZeQ",
                        "permissions": "/api/v1/groups/NMC-zgOjR7GW88Z-GCjZeQ/permissions/",
                        "users": "/api/v1/groups/NMC-zgOjR7GW88Z-GCjZeQ/users/"
                      }
                    },
                    {
                      "created_at": "2018-06-19T07:53:24.104005",
                      "description": "",
                      "group_type": 4,
                      "modified_at": "2018-06-19T07:53:24.104024",
                      "name": "Overlay group",
                      "resource": "groups",
                      "status": 1,
                      "user_count": 1,
                      "uuid_url": "0LtQnsKQSAWZoP-OiHl21g",
                      "resource_uri": {
                        "directory": "/api/v1/directories/aAgAKK45R6-uLK5U8o2iKw/",
                        "href": "/api/v1/groups/0LtQnsKQSAWZoP-OiHl21g",
                        "permissions": "/api/v1/groups/0LtQnsKQSAWZoP-OiHl21g/permissions/",
                        "users": "/api/v1/groups/0LtQnsKQSAWZoP-OiHl21g/users/"
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Application group information.",
                  "type": "object",
                  "required": [
                    "description",
                    "group_type",
                    "name",
                    "resource_uri",
                    "status",
                    "user_count",
                    "uuid_url"
                  ],
                  "properties": {
                    "created_at": {
                      "description": "ISO 8601 timestamp marking this directory object's creation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_type": {
                      "default": 1,
                      "description": "The type of group. Either `1` for Cloud, `2` for Active Directory, `3` for Organization Unit, or `4` for LDAP overlay.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4
                      ]
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking this directory object's last modification. ",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "The group name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of various group resources.",
                      "type": "object",
                      "required": [
                        "directory",
                        "href",
                        "permissions",
                        "users"
                      ],
                      "properties": {
                        "directory": {
                          "description": "The URL for directory details.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The URL for group details.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "permissions": {
                          "description": "The URL for the list of permissions.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "users": {
                          "description": "The URL for the list of users.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "default": 1,
                      "description": "The status of the group. Either `0` for Disabled or `1` for Enabled.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "user_count": {
                      "description": "The number of users in the group.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "uuid_url": {
                      "description": "The unique UUID URL of the group.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/group.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each directory.",
          "example": "{{directory_id}}",
          "in": "path",
          "name": "directory_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/directory_id-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/directories/{directory_id}/groups/{group_id}": {
      "get": {
        "description": "Gets the details of a group.",
        "operationId": "get-directory-group",
        "summary": "Get details for a directory group",
        "tags": [
          "Directory groups"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-directory-group"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "created_at": "2017-10-30T10:12:03.783055",
                  "description": "",
                  "group_type": 2,
                  "modified_at": "2017-10-30T10:12:03.783080",
                  "name": "Domain Users",
                  "resource": "groups",
                  "status": 1,
                  "user_count": 175,
                  "uuid_url": "lDezLHf5QaeFYJyaWOHqAw",
                  "resource_uri": {
                    "directory": "/api/v1/directories/aAgAKK45R6-uLK5U8o2iKw/",
                    "href": "/api/v1/groups/lDezLHf5QaeFYJyaWOHqAw",
                    "permissions": "/api/v1/groups/lDezLHf5QaeFYJyaWOHqAw/permissions/",
                    "users": "/api/v1/groups/lDezLHf5QaeFYJyaWOHqAw/users/"
                  }
                },
                "schema": {
                  "x-akamai": {
                    "file-path": "schemas/need-schema-here.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each group.",
          "example": "{{group_id}}",
          "in": "path",
          "name": "group_id",
          "required": true,
          "schema": {
            "example": "umtuOBTPRGSj8bSbDgJ7ng",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/group_id-path.yaml"
          }
        },
        {
          "description": "A unique identifier for each directory.",
          "example": "{{directory_id}}",
          "in": "path",
          "name": "directory_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/directory_id-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/directories/{directory_id}/groups/{group_id}/users": {
      "get": {
        "description": "Gets a list of users for a group.",
        "operationId": "get-directory-group-users",
        "summary": "List directory group users",
        "tags": [
          "Directory groups"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-directory-group-users"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": "?limit=20&offset=20",
                    "offset": 0,
                    "previous": null,
                    "total_count": 175
                  },
                  "objects": [
                    {
                      "description": "",
                      "name": "",
                      "status": 1,
                      "uuid_url": "7RBSRcmaQqq0YEUClWqL_w",
                      "group": {
                        "group_uuid_url": "lDezLHf5QaeFYJyaWOHqAw",
                        "name": "Domain Users"
                      },
                      "resource_uri": {
                        "groups": "/api/v1/groups/lDezLHf5QaeFYJyaWOHqAw",
                        "href": "/api/v1/groupmembership/7RBSRcmaQqq0YEUClWqL_w",
                        "users": "/api/v1/users/Cjy9Gxw2RpaKh8NrMo8_Lw"
                      },
                      "user": {
                        "created_at": "2018-06-29T18:11:29.074899",
                        "display_name": "",
                        "email": "",
                        "first_name": "Zach",
                        "last_name": "Doe",
                        "user_uuid_url": "Cjy9Gxw2RpaKh8NrMo8_Lw",
                        "username": "alfulani",
                        "normalized_attributes": {
                          "eaa.demo": "",
                          "eaa.test": "",
                          "eaa.userName": "sqauser12@eaaprod.daredevils.com",
                          "user.countryCode": 0,
                          "user.email": "",
                          "user.firstName": "zach",
                          "user.lastName": "smith",
                          "user.netbios": "EAA_lab",
                          "user.persistentId": "b232a4d4-50ec-4338-a4e0-296aca4c391f",
                          "user.phoneNumber": "",
                          "user.samAccountName": "sqauser12",
                          "user.userName": "sqa_zsmith",
                          "user.userPrincipleName": "sqa_zsmith@eaalab.daredevils.com",
                          "user.groups": []
                        }
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Enterprise Access Application user data.",
                  "type": "object",
                  "required": [
                    "country_code",
                    "display_name",
                    "first_name",
                    "last_admin_login",
                    "last_name",
                    "mfa",
                    "normalized_attributes",
                    "user_type",
                    "uuid_url"
                  ],
                  "properties": {
                    "country_code": {
                      "description": "The user's two-digit [ISO 3166](https://countrycode.org/) country code.",
                      "minimum": 10,
                      "nullable": true,
                      "type": "integer"
                    },
                    "display_name": {
                      "description": "The user's display name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "first_name": {
                      "description": "The user's first name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "last_admin_login": {
                      "description": "ISO 8601 timestamp marking the admin user's last login.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "last_name": {
                      "description": "The user's last name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mfa": {
                      "additionalProperties": false,
                      "description": "Multifactor authentication settings for the user.",
                      "type": "object",
                      "required": [
                        "admin_mfa",
                        "login_mfa"
                      ],
                      "properties": {
                        "admin_mfa": {
                          "description": "Enables administrator MFA.",
                          "type": "boolean"
                        },
                        "login_mfa": {
                          "description": "Enables login MFA.",
                          "type": "boolean"
                        }
                      }
                    },
                    "normalized_attributes": {
                      "additionalProperties": true,
                      "description": "The user's normalized attributes.",
                      "type": "object",
                      "properties": {
                        "eaa.demo": {
                          "description": "The user's EAA demo name.",
                          "type": "string"
                        },
                        "eaa.test": {
                          "description": "The user's EAA test name.",
                          "type": "string"
                        },
                        "eaa.userName": {
                          "description": "The user name.",
                          "type": "string"
                        },
                        "user.countryCode": {
                          "description": "The user's two-digit country code.",
                          "minimum": 10,
                          "type": "integer"
                        },
                        "user.email": {
                          "description": "The user name.",
                          "type": "string"
                        },
                        "user.firstName": {
                          "description": "The user name.",
                          "type": "string"
                        },
                        "user.groups": {
                          "description": "The groups the user belongs to.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "user.lastName": {
                          "description": "The user's last name.",
                          "type": "string"
                        },
                        "user.netbios": {
                          "description": "The user's NetBIOS name.",
                          "type": "string"
                        },
                        "user.persistentId": {
                          "description": "The user's unique persistent ID.",
                          "type": "string"
                        },
                        "user.phoneNumber": {
                          "description": "The user's phone number.",
                          "type": "string"
                        },
                        "user.samAccountName": {
                          "description": "The user's kerberos client principal name.",
                          "type": "string"
                        },
                        "user.userName": {
                          "description": "The user name.",
                          "type": "string"
                        },
                        "user.userPrincipleName": {
                          "description": "The user's principle name.",
                          "type": "string"
                        }
                      }
                    },
                    "user_type": {
                      "default": 1,
                      "description": "The type of user. Either `1` for cloud, `2` for enterprise, `3` for Akamai, or `4` for Akamai MSP.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4
                      ]
                    },
                    "uuid_url": {
                      "description": "A unique ID for the user account.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/user.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each group.",
          "example": "{{group_id}}",
          "in": "path",
          "name": "group_id",
          "required": true,
          "schema": {
            "example": "umtuOBTPRGSj8bSbDgJ7ng",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/group_id-path.yaml"
          }
        },
        {
          "description": "A unique identifier for each directory.",
          "example": "{{directory_id}}",
          "in": "path",
          "name": "directory_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/directory_id-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/directories/{directory_id}/reinviteusers": {
      "post": {
        "description": "Re-invite users for a cloud directory.",
        "operationId": "post-users-reinvite",
        "summary": "Re-invite user to a cloud directory group",
        "tags": [
          "User administration"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-users-reinvite"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "user_list": [
                  "a5hPUIBTTI2vkbXxDWfjaQ",
                  "43pATzNCTrWMbieFfGQiGw"
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Users to re-invite in bulk.",
                "type": "object",
                "required": [
                  "user_list"
                ],
                "properties": {
                  "user_list": {
                    "description": "Users to re-invite.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "minLength": 1,
                      "type": "string"
                    }
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/users-reinvite-bulk.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "cmdid": "a047d9cd-e36d-4f81-9abd-1250433238e2"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Command ID for the task.",
                  "type": "object",
                  "required": [
                    "cmdid"
                  ],
                  "properties": {
                    "cmdid": {
                      "description": "A unique identifier to track command progress.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/cmdid.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each directory.",
          "example": "{{directory_id}}",
          "in": "path",
          "name": "directory_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/directory_id-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/directories/{directory_id}/sync": {
      "post": {
        "description": "Synchronizes the external directory with EAA. Directories synchronize automatically every 6 hours.",
        "operationId": "post-sync",
        "summary": "Sync a directory",
        "tags": [
          "Directory administration"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-sync"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Syncing directories"
                },
                "schema": {
                  "x-akamai": {
                    "file-path": "schemas/need-schema-here.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each directory.",
          "example": "{{directory_id}}",
          "in": "path",
          "name": "directory_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/directory_id-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/directories/{directory_id}/users": {
      "post": {
        "description": "Invite an user to a cloud directory.",
        "operationId": "post-directory-user",
        "summary": "Invite an user to a directory group",
        "tags": [
          "User administration"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-directory-user"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "email": "example@akamai.com",
                "first_name": "Alice",
                "last_name": "Smith"
              },
              "schema": {
                "x-akamai": {
                  "file-path": "schemas/need-schema-here.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "cmdid": "a047d9cd-e36d-4f81-9abd-1250433238e2"
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Enterprise Access Application user data.",
                  "type": "object",
                  "required": [
                    "country_code",
                    "display_name",
                    "first_name",
                    "last_admin_login",
                    "last_name",
                    "mfa",
                    "normalized_attributes",
                    "user_type",
                    "uuid_url"
                  ],
                  "properties": {
                    "country_code": {
                      "description": "The user's two-digit [ISO 3166](https://countrycode.org/) country code.",
                      "minimum": 10,
                      "nullable": true,
                      "type": "integer"
                    },
                    "display_name": {
                      "description": "The user's display name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "first_name": {
                      "description": "The user's first name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "last_admin_login": {
                      "description": "ISO 8601 timestamp marking the admin user's last login.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "last_name": {
                      "description": "The user's last name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mfa": {
                      "additionalProperties": false,
                      "description": "Multifactor authentication settings for the user.",
                      "type": "object",
                      "required": [
                        "admin_mfa",
                        "login_mfa"
                      ],
                      "properties": {
                        "admin_mfa": {
                          "description": "Enables administrator MFA.",
                          "type": "boolean"
                        },
                        "login_mfa": {
                          "description": "Enables login MFA.",
                          "type": "boolean"
                        }
                      }
                    },
                    "normalized_attributes": {
                      "additionalProperties": true,
                      "description": "The user's normalized attributes.",
                      "type": "object",
                      "properties": {
                        "eaa.demo": {
                          "description": "The user's EAA demo name.",
                          "type": "string"
                        },
                        "eaa.test": {
                          "description": "The user's EAA test name.",
                          "type": "string"
                        },
                        "eaa.userName": {
                          "description": "The user name.",
                          "type": "string"
                        },
                        "user.countryCode": {
                          "description": "The user's two-digit country code.",
                          "minimum": 10,
                          "type": "integer"
                        },
                        "user.email": {
                          "description": "The user name.",
                          "type": "string"
                        },
                        "user.firstName": {
                          "description": "The user name.",
                          "type": "string"
                        },
                        "user.groups": {
                          "description": "The groups the user belongs to.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "user.lastName": {
                          "description": "The user's last name.",
                          "type": "string"
                        },
                        "user.netbios": {
                          "description": "The user's NetBIOS name.",
                          "type": "string"
                        },
                        "user.persistentId": {
                          "description": "The user's unique persistent ID.",
                          "type": "string"
                        },
                        "user.phoneNumber": {
                          "description": "The user's phone number.",
                          "type": "string"
                        },
                        "user.samAccountName": {
                          "description": "The user's kerberos client principal name.",
                          "type": "string"
                        },
                        "user.userName": {
                          "description": "The user name.",
                          "type": "string"
                        },
                        "user.userPrincipleName": {
                          "description": "The user's principle name.",
                          "type": "string"
                        }
                      }
                    },
                    "user_type": {
                      "default": 1,
                      "description": "The type of user. Either `1` for cloud, `2` for enterprise, `3` for Akamai, or `4` for Akamai MSP.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4
                      ]
                    },
                    "uuid_url": {
                      "description": "A unique ID for the user account.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/user.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Gets a list of users for a directory.",
        "operationId": "get-directory-users",
        "summary": "List directory users",
        "tags": [
          "User administration"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-directory-users"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": "?limit=20&offset=20",
                    "offset": 0,
                    "previous": null,
                    "total_count": 204
                  },
                  "objects": [
                    {
                      "attrib_hash": "49a5237caf14789fab7635cd9105aa58",
                      "country_code": 0,
                      "created_at": "2017-10-30T10:12:05.261965",
                      "display_name": "",
                      "dn": "CN=newuser12,CN=Users,DC=eaa,DC=daredevils,DC=com",
                      "email": "",
                      "first_name": "Albert",
                      "last_accessed_tenant_uuid_url": null,
                      "last_admin_login": null,
                      "last_login": null,
                      "last_name": "Smith",
                      "mfa_reset": false,
                      "modified_at": "2019-07-02T13:55:20.880278",
                      "netbios": "EAA",
                      "password": null,
                      "password_set": false,
                      "phone_num": "",
                      "registered": false,
                      "samaccountname": "bjones",
                      "status": 0,
                      "upn": "newuser12@eaa.daredevils.com",
                      "url_timestamp": "2017-10-30T10:12:05.262165",
                      "url_valid": false,
                      "user_type": 2,
                      "username": "hgildong",
                      "uuid_url": "P0M1yazIRsWaod0sMt2sGg",
                      "mfa": {
                        "admin_mfa": false,
                        "login_mfa": true
                      },
                      "normalized_attributes": {
                        "eaa.demo": "",
                        "eaa.test": "",
                        "eaa.userName": "newuser12@eaa.daredevils.com",
                        "user.countryCode": 0,
                        "user.email": "",
                        "user.firstName": "asmith",
                        "user.lastName": "",
                        "user.netbios": "EAA",
                        "user.persistentId": "21f7150a-499f-4c87-833e-16818146bd5d",
                        "user.phoneNumber": "",
                        "user.samAccountName": "asmith",
                        "user.userName": "asmith",
                        "user.userPrincipleName": "newuser12@eaa.daredevils.com",
                        "user.groups": [
                          "CN=demogroup,CN=Users,DC=eaa,DC=daredevils,DC=com"
                        ]
                      },
                      "resource_uri": {
                        "directory": "/api/v1/directories/aAgAKK45R6-uLK5U8o2iKw",
                        "groups": "/api/v1/users/P0M1yazIRsWaod0sMt2sGg/groups/",
                        "href": "/api/v1/users/P0M1yazIRsWaod0sMt2sGg",
                        "permissions": "/api/v1/users/P0M1yazIRsWaod0sMt2sGg/permissions/"
                      }
                    },
                    {
                      "attrib_hash": "5cb5de559077a277635c233896c9c2d8",
                      "country_code": 0,
                      "created_at": "2017-10-30T10:12:05.262296",
                      "display_name": "",
                      "dn": "CN=newuser10,CN=Users,DC=eaa,DC=daredevils,DC=com",
                      "email": "",
                      "first_name": "Charles",
                      "last_accessed_tenant_uuid_url": null,
                      "last_admin_login": null,
                      "last_login": null,
                      "last_name": "Miller",
                      "mfa_reset": false,
                      "modified_at": "2019-07-02T13:55:20.617409",
                      "netbios": "EAA",
                      "password": null,
                      "password_set": false,
                      "phone_num": "",
                      "registered": false,
                      "samaccountname": "zsmith",
                      "status": 0,
                      "upn": "newuser10@eaa.daredevils.com",
                      "url_timestamp": "2017-10-30T10:12:05.262469",
                      "url_valid": false,
                      "user_type": 2,
                      "username": "szhang",
                      "uuid_url": "SejVnwliRfSmlpV3oo2IRA",
                      "mfa": {
                        "admin_mfa": false,
                        "login_mfa": true
                      },
                      "normalized_attributes": {
                        "eaa.demo": "",
                        "eaa.test": "",
                        "eaa.userName": "newuser10@eaa.daredevils.com",
                        "user.countryCode": 0,
                        "user.email": "",
                        "user.firstName": "newuser10",
                        "user.lastName": "",
                        "user.netbios": "EAA",
                        "user.persistentId": "ec34e98c-8caf-45b8-ac61-e1f97221f53b",
                        "user.phoneNumber": "",
                        "user.samAccountName": "bjones",
                        "user.userName": "newuser10",
                        "user.userPrincipleName": "newuser10@eaa.daredevils.com",
                        "user.groups": [
                          "CN=alokgrp,CN=Users,DC=eaa,DC=daredevils,DC=com"
                        ]
                      },
                      "resource_uri": {
                        "directory": "/api/v1/directories/aAgAKK45R6-uLK5U8o2iKw",
                        "groups": "/api/v1/users/SejVnwliRfSmlpV3oo2IRA/groups/",
                        "href": "/api/v1/users/SejVnwliRfSmlpV3oo2IRA",
                        "permissions": "/api/v1/users/SejVnwliRfSmlpV3oo2IRA/permissions/"
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Enterprise Access Application user data.",
                  "type": "object",
                  "required": [
                    "country_code",
                    "display_name",
                    "first_name",
                    "last_admin_login",
                    "last_name",
                    "mfa",
                    "normalized_attributes",
                    "user_type",
                    "uuid_url"
                  ],
                  "properties": {
                    "country_code": {
                      "description": "The user's two-digit [ISO 3166](https://countrycode.org/) country code.",
                      "minimum": 10,
                      "nullable": true,
                      "type": "integer"
                    },
                    "display_name": {
                      "description": "The user's display name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "first_name": {
                      "description": "The user's first name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "last_admin_login": {
                      "description": "ISO 8601 timestamp marking the admin user's last login.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "last_name": {
                      "description": "The user's last name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mfa": {
                      "additionalProperties": false,
                      "description": "Multifactor authentication settings for the user.",
                      "type": "object",
                      "required": [
                        "admin_mfa",
                        "login_mfa"
                      ],
                      "properties": {
                        "admin_mfa": {
                          "description": "Enables administrator MFA.",
                          "type": "boolean"
                        },
                        "login_mfa": {
                          "description": "Enables login MFA.",
                          "type": "boolean"
                        }
                      }
                    },
                    "normalized_attributes": {
                      "additionalProperties": true,
                      "description": "The user's normalized attributes.",
                      "type": "object",
                      "properties": {
                        "eaa.demo": {
                          "description": "The user's EAA demo name.",
                          "type": "string"
                        },
                        "eaa.test": {
                          "description": "The user's EAA test name.",
                          "type": "string"
                        },
                        "eaa.userName": {
                          "description": "The user name.",
                          "type": "string"
                        },
                        "user.countryCode": {
                          "description": "The user's two-digit country code.",
                          "minimum": 10,
                          "type": "integer"
                        },
                        "user.email": {
                          "description": "The user name.",
                          "type": "string"
                        },
                        "user.firstName": {
                          "description": "The user name.",
                          "type": "string"
                        },
                        "user.groups": {
                          "description": "The groups the user belongs to.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "user.lastName": {
                          "description": "The user's last name.",
                          "type": "string"
                        },
                        "user.netbios": {
                          "description": "The user's NetBIOS name.",
                          "type": "string"
                        },
                        "user.persistentId": {
                          "description": "The user's unique persistent ID.",
                          "type": "string"
                        },
                        "user.phoneNumber": {
                          "description": "The user's phone number.",
                          "type": "string"
                        },
                        "user.samAccountName": {
                          "description": "The user's kerberos client principal name.",
                          "type": "string"
                        },
                        "user.userName": {
                          "description": "The user name.",
                          "type": "string"
                        },
                        "user.userPrincipleName": {
                          "description": "The user's principle name.",
                          "type": "string"
                        }
                      }
                    },
                    "user_type": {
                      "default": 1,
                      "description": "The type of user. Either `1` for cloud, `2` for enterprise, `3` for Akamai, or `4` for Akamai MSP.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4
                      ]
                    },
                    "uuid_url": {
                      "description": "A unique ID for the user account.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/user.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each directory.",
          "example": "{{directory_id}}",
          "in": "path",
          "name": "directory_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/directory_id-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/directories/{directory_id}/users/autocomplete": {
      "get": {
        "description": "Lists user email addresses matching the given string.",
        "operationId": "get-directory-users-autocomplete",
        "summary": "List users using autocomplete",
        "tags": [
          "User administration"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-directory-users-autocomplete"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": [
                  "abc",
                  "abc@eaa.daredevils.com",
                  "acluser1",
                  "acluser1@eaa.daredevils.com",
                  "acluser2",
                  "acluser2@eaa.daredevils.com",
                  "alok.nag",
                  "alok.nag@eaa.daredevils.com",
                  "aloknag@eaa.daredevils.com"
                ],
                "schema": {
                  "description": "List of email of users matching the query string.",
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "description": "Email of user.",
                    "format": "email",
                    "type": "string"
                  },
                  "x-akamai": {
                    "file-path": "schemas/usersAutocomplete.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Autocomplete string.",
            "example": "{{q}}",
            "in": "query",
            "name": "q",
            "required": true,
            "schema": {
              "example": "abc",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/q-query.yaml"
            }
          },
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each directory.",
          "example": "{{directory_id}}",
          "in": "path",
          "name": "directory_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/directory_id-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/directories/{directory_id}/users/byname/{user_id}": {
      "get": {
        "description": "Gets details of a user.",
        "operationId": "get-directory-user-details",
        "summary": "Get a directory user",
        "tags": [
          "User administration"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-directory-user-details"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "attrib_hash": "49a5237caf14789fab7635cd9105aa58",
                  "country_code": 0,
                  "created_at": "2017-10-30T10:12:05.261965",
                  "display_name": "",
                  "dn": "CN=newuser12,CN=Users,DC=eaa,DC=daredevils,DC=com",
                  "email": "",
                  "first_name": "Bob",
                  "last_accessed_tenant_uuid_url": null,
                  "last_admin_login": null,
                  "last_login": null,
                  "last_name": "Jones",
                  "mfa_reset": false,
                  "modified_at": "2019-07-02T13:55:20.880278",
                  "netbios": "EAA",
                  "password": null,
                  "password_set": false,
                  "phone_num": "",
                  "registered": false,
                  "samaccountname": "bjones",
                  "status": 0,
                  "upn": "newuser12@eaa.daredevils.com",
                  "url_timestamp": "2017-10-30T10:12:05.262165",
                  "url_valid": false,
                  "user_type": 2,
                  "username": "mrossi",
                  "uuid_url": "P0M1yazIRsWaod0sMt2sGg",
                  "mfa": {
                    "admin_mfa": false,
                    "login_mfa": true
                  },
                  "normalized_attributes": {
                    "eaa.demo": "",
                    "eaa.test": "",
                    "eaa.userName": "newuser12@eaa.daredevils.com",
                    "user.countryCode": 0,
                    "user.email": "",
                    "user.firstName": "asmith",
                    "user.lastName": "",
                    "user.netbios": "EAA",
                    "user.persistentId": "21f7150a-499f-4c87-833e-16818146bd5d",
                    "user.phoneNumber": "",
                    "user.samAccountName": "asmith",
                    "user.userName": "asmith",
                    "user.userPrincipleName": "newuser12@eaa.daredevils.com",
                    "user.groups": [
                      "CN=demogroup,CN=Users,DC=eaa,DC=daredevils,DC=com"
                    ]
                  },
                  "resource_uri": {
                    "directory": "/api/v1/directories/aAgAKK45R6-uLK5U8o2iKw",
                    "groups": "/api/v1/users/P0M1yazIRsWaod0sMt2sGg/groups/",
                    "href": "/api/v1/users/P0M1yazIRsWaod0sMt2sGg",
                    "permissions": "/api/v1/users/P0M1yazIRsWaod0sMt2sGg/permissions/"
                  }
                },
                "schema": {
                  "additionalProperties": true,
                  "description": "Enterprise Access Application user data.",
                  "type": "object",
                  "required": [
                    "country_code",
                    "display_name",
                    "first_name",
                    "last_admin_login",
                    "last_name",
                    "mfa",
                    "normalized_attributes",
                    "user_type",
                    "uuid_url"
                  ],
                  "properties": {
                    "country_code": {
                      "description": "The user's two-digit [ISO 3166](https://countrycode.org/) country code.",
                      "minimum": 10,
                      "nullable": true,
                      "type": "integer"
                    },
                    "display_name": {
                      "description": "The user's display name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "first_name": {
                      "description": "The user's first name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "last_admin_login": {
                      "description": "ISO 8601 timestamp marking the admin user's last login.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "last_name": {
                      "description": "The user's last name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mfa": {
                      "additionalProperties": false,
                      "description": "Multifactor authentication settings for the user.",
                      "type": "object",
                      "required": [
                        "admin_mfa",
                        "login_mfa"
                      ],
                      "properties": {
                        "admin_mfa": {
                          "description": "Enables administrator MFA.",
                          "type": "boolean"
                        },
                        "login_mfa": {
                          "description": "Enables login MFA.",
                          "type": "boolean"
                        }
                      }
                    },
                    "normalized_attributes": {
                      "additionalProperties": true,
                      "description": "The user's normalized attributes.",
                      "type": "object",
                      "properties": {
                        "eaa.demo": {
                          "description": "The user's EAA demo name.",
                          "type": "string"
                        },
                        "eaa.test": {
                          "description": "The user's EAA test name.",
                          "type": "string"
                        },
                        "eaa.userName": {
                          "description": "The user name.",
                          "type": "string"
                        },
                        "user.countryCode": {
                          "description": "The user's two-digit country code.",
                          "minimum": 10,
                          "type": "integer"
                        },
                        "user.email": {
                          "description": "The user name.",
                          "type": "string"
                        },
                        "user.firstName": {
                          "description": "The user name.",
                          "type": "string"
                        },
                        "user.groups": {
                          "description": "The groups the user belongs to.",
                          "minItems": 0,
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "user.lastName": {
                          "description": "The user's last name.",
                          "type": "string"
                        },
                        "user.netbios": {
                          "description": "The user's NetBIOS name.",
                          "type": "string"
                        },
                        "user.persistentId": {
                          "description": "The user's unique persistent ID.",
                          "type": "string"
                        },
                        "user.phoneNumber": {
                          "description": "The user's phone number.",
                          "type": "string"
                        },
                        "user.samAccountName": {
                          "description": "The user's kerberos client principal name.",
                          "type": "string"
                        },
                        "user.userName": {
                          "description": "The user name.",
                          "type": "string"
                        },
                        "user.userPrincipleName": {
                          "description": "The user's principle name.",
                          "type": "string"
                        }
                      }
                    },
                    "user_type": {
                      "default": 1,
                      "description": "The type of user. Either `1` for cloud, `2` for enterprise, `3` for Akamai, or `4` for Akamai MSP.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4
                      ]
                    },
                    "uuid_url": {
                      "description": "A unique ID for the user account.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/user.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each user.",
          "example": "{{user_id}}",
          "in": "path",
          "name": "user_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/user_id-path.yaml"
          }
        },
        {
          "description": "A unique identifier for each directory.",
          "example": "{{directory_id}}",
          "in": "path",
          "name": "directory_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/directory_id-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/groupmembership": {
      "post": {
        "description": "Creates a new directory group membership.",
        "operationId": "post-group-membership",
        "summary": "Create a directory group membership",
        "tags": [
          "Directory group membership"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-group-membership"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "accounts": [
                  "eY9q-j8GTCWiWzupFKLYrA"
                ],
                "groups": [
                  "cmsvv_YkTY2rcoeOS5cIzg"
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Contains information about group memberships.",
                "type": "object",
                "required": [
                  "description",
                  "name"
                ],
                "properties": {
                  "description": {
                    "description": "A description of the group membership.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "name": {
                    "description": "The group membership name.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource_uri": {
                    "description": "The group membership's URL.",
                    "example": "{{resource_uri}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "status": {
                    "description": "The group membership's status. Either `0` for disabled or `1` for enabled.",
                    "example": "{{status}}",
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ]
                  },
                  "uuid_url": {
                    "description": "The group membership's unique ID.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/groupmembership.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about group memberships.",
                  "type": "object",
                  "required": [
                    "description",
                    "name"
                  ],
                  "properties": {
                    "description": {
                      "description": "A description of the group membership.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "name": {
                      "description": "The group membership name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "description": "The group membership's URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The group membership's status. Either `0` for disabled or `1` for enabled.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "uuid_url": {
                      "description": "The group membership's unique ID.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/groupmembership.yaml"
                  }
                },
                "example": [
                  {
                    "description": null,
                    "group": "cmsvv_YkTY2rcoeOS5cIzg",
                    "name": null,
                    "status": 1,
                    "user": "eY9q-j8GTCWiWzupFKLYrA",
                    "user_email": "cmsvv_YkTY2rcoeOS5cIzg",
                    "uuid_url": "8UYkyhenThS0ot_9fH3DgQ",
                    "resource_uri": {
                      "groups": "/api/v1/groups/cmsvv_YkTY2rcoeOS5cIzg",
                      "href": "/api/v1/groupmembership/8UYkyhenThS0ot_9fH3DgQ",
                      "users": "/api/v1/users/eY9q-j8GTCWiWzupFKLYrA"
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists directory group memberships.",
        "operationId": "get-group-memberships",
        "summary": "List directory group memberships",
        "tags": [
          "Directory group membership"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-group-memberships"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 2,
                    "next": "?expand=true&limit=2&offset=4",
                    "offset": 2,
                    "previous": "?expand=true&limit=2&offset=0",
                    "total_count": 114764
                  },
                  "objects": [
                    {
                      "description": null,
                      "name": null,
                      "status": 1,
                      "uuid_url": "xdJdjiWLRb26jSUkI0-qPQ",
                      "group": {
                        "group_uuid_url": "GYbYGhfjQKqSzWIMK5VHcw",
                        "name": "1k_users_group"
                      },
                      "resource_uri": {
                        "groups": "/api/v1/groups/GYbYGhfjQKqSzWIMK5VHcw",
                        "href": "/api/v1/groupmembership/xdJdjiWLRb26jSUkI0-qPQ",
                        "users": "/api/v1/users/k8bFfDTiQluq4nX7GOdgsg"
                      },
                      "user": {
                        "created_at": "2020-03-18T05:36:58.666741",
                        "display_name": "ASmith",
                        "email": "asmith@eaaprod.daredevils.com",
                        "first_name": "alice",
                        "last_name": "smith",
                        "user_uuid_url": "k8bFfDTiQluq4nX7GOdgsg",
                        "username": "alfulani",
                        "normalized_attributes": {
                          "custom.6attribute": "asmith@eaa.daredevils.com",
                          "custom.employeeType": "",
                          "eaa.userName": "asmith",
                          "user.countryCode": 0,
                          "user.email": "asmith@eaa.daredevils.com",
                          "user.firstName": "alice",
                          "user.lastName": "smith",
                          "user.netbios": "EAA",
                          "user.persistentId": "cddc0d21-fdc9-4f62-a5d6-52285859f0a3",
                          "user.samAccountName": "asmith_HR",
                          "user.userPrincipleName": "2m_user_441@eaa.daredevils.com",
                          "user.groups": [
                            "CN=1.5m_users_group,CN=Users,DC=eaa,DC=daredevils,DC=com",
                            "CN=2m_users_group,CN=Users,DC=eaa,DC=daredevils,DC=com",
                            "CN=30k_users_group,CN=Users,DC=eaaprod,DC=daredevils,DC=com"
                          ],
                          "user.phoneNumber": []
                        }
                      }
                    },
                    {
                      "description": null,
                      "name": null,
                      "status": 1,
                      "uuid_url": "gn-9VpqlSNqK9sTqoK1LfQ",
                      "group": {
                        "group_uuid_url": "GYbYGhfjQKqSzWIMK5VHcw",
                        "name": "1k_users_group"
                      },
                      "resource_uri": {
                        "groups": "/api/v1/groups/GYbYGhfjQKqSzWIMK5VHcw",
                        "href": "/api/v1/groupmembership/gn-9VpqlSNqK9sTqoK1LfQ",
                        "users": "/api/v1/users/DPptf5lxSvOtZ0t1jwOQ3A"
                      },
                      "user": {
                        "created_at": "2020-03-18T05:36:58.666925",
                        "display_name": "",
                        "email": "example@eaaprod.daredevils.com",
                        "first_name": "Bob",
                        "last_name": "Jones",
                        "user_uuid_url": "DPptf5lxSvOtZ0t1jwOQ3A",
                        "username": "jkowalski",
                        "normalized_attributes": {
                          "custom.emailattribute": "example@eaaprod.daredevils.com",
                          "custom.employeeType": "FTE",
                          "eaa.userName": "bjones",
                          "user.countryCode": 0,
                          "user.email": "example@eaaprod.daredevils.com",
                          "user.firstName": "Bob",
                          "user.lastName": "Jones",
                          "user.netbios": "eaaprod",
                          "user.persistentId": "927f4527-40de-4798-9772-1762ef4f6a59",
                          "user.samAccountName": "bjones_qa",
                          "user.userPrincipleName": "bjones2@eaaprod.daredevils.com",
                          "user.groups": [
                            "CN=100_users_group,CN=Users,DC=eaaprod,DC=daredevils,DC=com",
                            "CN=1.3m_users_group,CN=Users,DC=eaaprod,DC=daredevils,DC=com",
                            "CN=100k_users_group,CN=Users,DC=eaaprod,DC=daredevils,DC=com"
                          ],
                          "user.phoneNumber": []
                        }
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about group memberships.",
                  "type": "object",
                  "required": [
                    "description",
                    "name"
                  ],
                  "properties": {
                    "description": {
                      "description": "A description of the group membership.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "name": {
                      "description": "The group membership name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "description": "The group membership's URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The group membership's status. Either `0` for disabled or `1` for enabled.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "uuid_url": {
                      "description": "The group membership's unique ID.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/groupmembership.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/mgmt-pop/groupmembership/{groupmembership_id}": {
      "get": {
        "description": "Gets a single group membership.",
        "operationId": "get-group-membership",
        "summary": "Get a directory group membership",
        "tags": [
          "Directory group membership"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-group-membership"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "description": null,
                  "name": null,
                  "status": 1,
                  "uuid_url": "xdJdjiWLRb26jSUkI0-qPQ",
                  "resource_uri": {
                    "groups": "/api/v1/groups/GYbYGhfjQKqSzWIMK5VHcw",
                    "href": "/api/v1/groupmembership/xdJdjiWLRb26jSUkI0-qPQ",
                    "users": "/api/v1/users/k8bFfDTiQluq4nX7GOdgsg"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about group memberships.",
                  "type": "object",
                  "required": [
                    "description",
                    "name"
                  ],
                  "properties": {
                    "description": {
                      "description": "A description of the group membership.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "name": {
                      "description": "The group membership name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "description": "The group membership's URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The group membership's status. Either `0` for disabled or `1` for enabled.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "uuid_url": {
                      "description": "The group membership's unique ID.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/groupmembership.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Deletes an existing group membership.",
        "operationId": "delete-group-membership",
        "summary": "Delete a directory group membership",
        "tags": [
          "Directory group membership"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-group-membership"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "message": "Successful"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Contains information about group memberships.",
                  "type": "object",
                  "required": [
                    "description",
                    "name"
                  ],
                  "properties": {
                    "description": {
                      "description": "A description of the group membership.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "name": {
                      "description": "The group membership name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "description": "The group membership's URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "description": "The group membership's status. Either `0` for disabled or `1` for enabled.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "uuid_url": {
                      "description": "The group membership's unique ID.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/groupmembership.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier of each group membership.",
          "example": "{{groupmembership_id}}",
          "in": "path",
          "name": "groupmembership_id",
          "required": true,
          "schema": {
            "example": "xdJdjiWLRb26jSUkI0-qPQ",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/groupmembership_id-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/idp": {
      "post": {
        "description": "Creates a new IDP.",
        "operationId": "post-idp",
        "summary": "Create an IDP",
        "tags": [
          "IDPs"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-idp"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "idp_type": 2,
                "name": "IDP"
              },
              "schema": {
                "additionalProperties": false,
                "description": "Identity provider (IDP) configuration settings.",
                "type": "object",
                "required": [
                  "name",
                  "idp_type"
                ],
                "properties": {
                  "attribute_map": {
                    "description": "Additional attributes to include with the `access_token` response.",
                    "example": "{{attribute_map}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "auth_request_signed": {
                    "description": "Whether the authentication request is signed.",
                    "example": "{{auth_request_signed}}",
                    "type": "boolean"
                  },
                  "auth_response_encrypt": {
                    "description": "Enables authentication response encryption.",
                    "example": "{{auth_response_encrypt}}",
                    "type": "boolean"
                  },
                  "background_image": {
                    "description": "The name of the background image.",
                    "example": "{{background_image}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "background_image_file_name": {
                    "description": "The filename of the portal background image.",
                    "example": "{{background_image_file_name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "client_principle_name": {
                    "description": "The principle name expected by the server in order to authenticate a client request.",
                    "example": "{{client_principle_name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "company_id": {
                    "description": "The company ID.",
                    "example": "{{company_id}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "cookie_expiry": {
                    "description": "The number of minutes the session cookie expires.",
                    "example": "{{cookie_expiry}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking the IDP configuration's creation. ",
                    "example": "{{created_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "default_language": {
                    "description": "The default language.",
                    "example": "{{default_language}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the IDP configuration.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "dns_added": {
                    "description": "Whether the authentication request includes the DNS information.",
                    "example": "{{dns_added}}",
                    "type": "boolean"
                  },
                  "enable_access_client": {
                    "description": "Enables the access client.",
                    "example": "{{enable_access_client}}",
                    "type": "boolean"
                  },
                  "enable_mfa": {
                    "description": "Enables multifactor authentication.",
                    "example": "{{enable_mfa}}",
                    "type": "boolean"
                  },
                  "favicon_image": {
                    "description": "The filename of the portal favicon image.",
                    "example": "{{favicon_image}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "helpdesk_email": {
                    "description": "The email address for contacting helpdesk with issues.",
                    "example": "{{helpdesk_email}}",
                    "format": "email",
                    "type": "string"
                  },
                  "idp_type": {
                    "default": 1,
                    "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, and `9` for Azure.",
                    "example": "{{idp_type}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7,
                      8,
                      9
                    ]
                  },
                  "iwa_keytab": {
                    "description": "A unique keytab for a service principle name (SPN) used for Integrated Windows Authentication (IWA).",
                    "example": "{{iwa_keytab}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "lockout_interval": {
                    "default": 15,
                    "description": "The number of minutes to lock out the user, `15` by default.",
                    "example": "{{lockout_interval}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "login_cname": {
                    "description": "The login cname URL.",
                    "example": "{{login_cname}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "login_dialin_server": {
                    "description": "The URL of the login dialin server.",
                    "example": "{{login_dialin_server}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "login_domain": {
                    "description": "The type of portal domain that end users access. Either `1` for custom login domain or `2` for WAPP login domain.",
                    "example": "{{login_domain}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2
                    ]
                  },
                  "login_host": {
                    "description": "The service provider login host.",
                    "example": "{{login_host}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "login_lockout": {
                    "default": "off",
                    "description": "Enables a temporary lockout for failed login attempts when set to `on`. The default value is `off`.",
                    "example": "{{login_lockout}}",
                    "type": "string",
                    "enum": [
                      "on",
                      "off"
                    ]
                  },
                  "logo": {
                    "description": "The name of the portal logo.",
                    "example": "{{logo}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "logo_file_name": {
                    "description": "The portal logo filename.",
                    "example": "{{logo_file_name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "logout_url": {
                    "description": "The single logout URL for SSO.",
                    "example": "{{logout_url}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "max_login_failures": {
                    "default": 5,
                    "description": "The number of login failures allowed per user before temporary lock out. The default value is `5`.",
                    "example": "{{max_login_failures}}",
                    "minimum": 1,
                    "type": "integer"
                  },
                  "metadata": {
                    "description": "The Metadata of the SAML type IDP.",
                    "example": "{{metadata}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "mfa_settings": {
                    "description": "Multifactor authentication settings for the IDP configuration.",
                    "example": "{{mfa_settings}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "modified_at": {
                    "description": "The ISO 8601 timestamp marking the last modification.",
                    "example": "{{modified_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "multilang_fields": {
                    "description": "Multi language field for SAML message configuration.",
                    "example": "{{multilang_fields}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the IDP configuration.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource_uri": {
                    "additionalProperties": false,
                    "description": "Specifies the location of various IDP resources.",
                    "type": "object",
                    "required": [
                      "directories",
                      "sites",
                      "pop",
                      "href",
                      "groups",
                      "services"
                    ],
                    "properties": {
                      "directories": {
                        "description": "The directories resource URI.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "groups": {
                        "description": "The groups resource URI.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "href": {
                        "description": "The href resource URI.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "pop": {
                        "description": "The pop resource URI.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "services": {
                        "description": "The services resource URI.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "sites": {
                        "description": "The sites resource URI.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "saml_url": {
                    "description": "The URL of the service provider SAML interface.",
                    "example": "{{saml_url}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "settings": {
                    "description": "Login portal settings for an IDP configuration.",
                    "example": "{{settings}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "status": {
                    "default": 1,
                    "description": "The IDP configuration status. Either `1` for Not Ready, `2` for Ready, `3` for Pending, `4` for Deployed, `5` for Failed, `6` for Cloud Deployed, or `7` for Connector Deployed.",
                    "example": "{{status}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7
                    ]
                  },
                  "trust_expiry": {
                    "description": "The number of seconds to expire the authentication request.",
                    "example": "{{trust_expiry}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "uuid_url": {
                    "description": "The unique UUID URL of the IDP configuration.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/idp.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "app_count": 0,
                  "auth_request_signed": false,
                  "auth_response_encrypt": false,
                  "background_image": null,
                  "background_image_file_name": null,
                  "cert": null,
                  "client_cert": null,
                  "client_principle_name": "<sAMAccountName>",
                  "company_id": "regv3ds",
                  "cookie_expiry": 120,
                  "created_at": "2019-07-08T10:31:20.007541",
                  "default_language": "english",
                  "description": null,
                  "directory_count": 0,
                  "dns_added": false,
                  "domain_suffix": "login.stage.sohacloud.net",
                  "enable_access_client": false,
                  "enable_mfa": false,
                  "favicon_image": null,
                  "helpdesk_email": "contact@mail.com",
                  "idp_deployed": false,
                  "idp_operational": 1,
                  "idp_status": 1,
                  "idp_type": 2,
                  "lockout_interval": 1,
                  "login_cname": null,
                  "login_dialin_server": null,
                  "login_domain": 2,
                  "login_host": null,
                  "login_lockout": "off",
                  "login_suffix": "login.stage.sohacloud.net",
                  "logo": null,
                  "logo_file_name": null,
                  "logout_url": null,
                  "max_login_failures": 5,
                  "metadata": null,
                  "modified_at": "2019-07-08T10:31:20.139938",
                  "multilang_fields": null,
                  "name": "IDP",
                  "ocsp": null,
                  "pop": "dDOXO4w0QYGdsKq4zC-YOg",
                  "popName": "us-west-coast-1",
                  "resource": "idp",
                  "saml_url": null,
                  "status": 1,
                  "trust_expiry": 365,
                  "uuid_url": "ZVZU1zvGRieOyLibfcKc-A",
                  "directory_list": [],
                  "domains": [],
                  "iwa_keytab": [],
                  "attribute_map": {},
                  "mfa_settings": {
                    "duo_akey": "",
                    "duo_api_hostname": "",
                    "duo_integration_key": "",
                    "duo_secret_key": "",
                    "duo_umap": "user.email",
                    "idp_notification_org_name": "",
                    "mfa_email_immutable": "false",
                    "mfa_email_preset": "false",
                    "mfa_factor_duo": "false",
                    "mfa_factor_email": "true",
                    "mfa_factor_sms": "true",
                    "mfa_factor_totp": "false",
                    "mfa_pci_dss": "false",
                    "mfa_sms_immutable": "false",
                    "mfa_sms_preset": "false"
                  },
                  "resource_uri": {
                    "href": "/api/v1/idp/ZVZU1zvGRieOyLibfcKc-A",
                    "idp": "/api/v1/idp/ZVZU1zvGRieOyLibfcKc-A/idp/"
                  },
                  "settings": {
                    "captive_portal": "true",
                    "client_cert_auth": "false",
                    "client_cert_auth_onboard_criteria": "nocert",
                    "client_cert_auth_onboard_url": "",
                    "client_cert_auth_validation_method": null,
                    "client_cert_auth_validation_responder": "",
                    "client_cert_exp_warn_interval": 0,
                    "client_cert_identity_username": "false",
                    "client_cert_renewal": "",
                    "client_cert_user_param": "",
                    "eaac_bin_base_url": "",
                    "enable_authorization": "false",
                    "enable_device_posture": "false",
                    "enable_favrt": "false",
                    "enable_oidc_saml_bridging": "false",
                    "force_login": "true",
                    "force_login_after": 7200,
                    "g2o_enabled": "false",
                    "g2o_key": null,
                    "g2o_nonce": null,
                    "group_attr_name": "Group",
                    "idp_cdn_enabled": "false",
                    "idp_iwa_check_cert": "false",
                    "idp_iwa_check_os": "",
                    "idp_iwa_check_prem": "false",
                    "idp_iwa_check_ua": "",
                    "idp_iwa_krb5_spn": "",
                    "idp_iwa_mode": "off",
                    "idp_iwa_onpremise_path": "false",
                    "login_terms": null,
                    "login_title": null,
                    "persistent_cookie": "true",
                    "portal_background": "./assets/img/body-bg.png",
                    "portal_change_password_url": "",
                    "portal_logo_height": "256",
                    "portal_logo_url": "./assets/img/logo.png",
                    "portal_logo_width": "256",
                    "portal_new_user_signup_url": "",
                    "portal_terms_box": "false",
                    "portal_theme": "bubblewrapp",
                    "portal_title_box": "false",
                    "single_logout_supported": "false",
                    "trusted_network_enable": "false",
                    "trusted_network_hostname_ip": "",
                    "trusted_network_searchdomain": "",
                    "xframe_options": "false",
                    "xframe_urls": null,
                    "infra_prem_gateways": [],
                    "form_text": {
                      "user_placeholder": "Username"
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Identity provider (IDP) configuration settings.",
                  "type": "object",
                  "required": [
                    "name",
                    "idp_type"
                  ],
                  "properties": {
                    "attribute_map": {
                      "description": "Additional attributes to include with the `access_token` response.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "auth_request_signed": {
                      "description": "Whether the authentication request is signed.",
                      "type": "boolean"
                    },
                    "auth_response_encrypt": {
                      "description": "Enables authentication response encryption.",
                      "type": "boolean"
                    },
                    "background_image": {
                      "description": "The name of the background image.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "background_image_file_name": {
                      "description": "The filename of the portal background image.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "client_principle_name": {
                      "description": "The principle name expected by the server in order to authenticate a client request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "company_id": {
                      "description": "The company ID.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "cookie_expiry": {
                      "description": "The number of minutes the session cookie expires.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the IDP configuration's creation. ",
                      "format": "date-time",
                      "type": "string"
                    },
                    "default_language": {
                      "description": "The default language.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the IDP configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "dns_added": {
                      "description": "Whether the authentication request includes the DNS information.",
                      "type": "boolean"
                    },
                    "enable_access_client": {
                      "description": "Enables the access client.",
                      "type": "boolean"
                    },
                    "enable_mfa": {
                      "description": "Enables multifactor authentication.",
                      "type": "boolean"
                    },
                    "favicon_image": {
                      "description": "The filename of the portal favicon image.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "helpdesk_email": {
                      "description": "The email address for contacting helpdesk with issues.",
                      "format": "email",
                      "type": "string"
                    },
                    "idp_type": {
                      "default": 1,
                      "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, and `9` for Azure.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9
                      ]
                    },
                    "iwa_keytab": {
                      "description": "A unique keytab for a service principle name (SPN) used for Integrated Windows Authentication (IWA).",
                      "minLength": 1,
                      "type": "string"
                    },
                    "lockout_interval": {
                      "default": 15,
                      "description": "The number of minutes to lock out the user, `15` by default.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "login_cname": {
                      "description": "The login cname URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "login_dialin_server": {
                      "description": "The URL of the login dialin server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "login_domain": {
                      "description": "The type of portal domain that end users access. Either `1` for custom login domain or `2` for WAPP login domain.",
                      "type": "integer",
                      "enum": [
                        1,
                        2
                      ]
                    },
                    "login_host": {
                      "description": "The service provider login host.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "login_lockout": {
                      "default": "off",
                      "description": "Enables a temporary lockout for failed login attempts when set to `on`. The default value is `off`.",
                      "type": "string",
                      "enum": [
                        "on",
                        "off"
                      ]
                    },
                    "logo": {
                      "description": "The name of the portal logo.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "logo_file_name": {
                      "description": "The portal logo filename.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "logout_url": {
                      "description": "The single logout URL for SSO.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "max_login_failures": {
                      "default": 5,
                      "description": "The number of login failures allowed per user before temporary lock out. The default value is `5`.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "metadata": {
                      "description": "The Metadata of the SAML type IDP.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mfa_settings": {
                      "description": "Multifactor authentication settings for the IDP configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "The ISO 8601 timestamp marking the last modification.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "multilang_fields": {
                      "description": "Multi language field for SAML message configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the IDP configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of various IDP resources.",
                      "type": "object",
                      "required": [
                        "directories",
                        "sites",
                        "pop",
                        "href",
                        "groups",
                        "services"
                      ],
                      "properties": {
                        "directories": {
                          "description": "The directories resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "groups": {
                          "description": "The groups resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The href resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "pop": {
                          "description": "The pop resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "services": {
                          "description": "The services resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "sites": {
                          "description": "The sites resource URI.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "saml_url": {
                      "description": "The URL of the service provider SAML interface.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "settings": {
                      "description": "Login portal settings for an IDP configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "default": 1,
                      "description": "The IDP configuration status. Either `1` for Not Ready, `2` for Ready, `3` for Pending, `4` for Deployed, `5` for Failed, `6` for Cloud Deployed, or `7` for Connector Deployed.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7
                      ]
                    },
                    "trust_expiry": {
                      "description": "The number of seconds to expire the authentication request.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "uuid_url": {
                      "description": "The unique UUID URL of the IDP configuration.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/idp.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists IDPs.",
        "operationId": "get-idps",
        "summary": "List IDPs",
        "tags": [
          "IDPs"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-idps"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 2
                  },
                  "objects": [
                    {
                      "app_count": 0,
                      "auth_request_signed": false,
                      "auth_response_encrypt": false,
                      "background_image": null,
                      "background_image_file_name": null,
                      "cert": null,
                      "client_cert": null,
                      "client_principle_name": "<sAMAccountName>",
                      "company_id": "regv3ds",
                      "cookie_expiry": 120,
                      "created_at": "2019-07-08T10:31:20.007541",
                      "default_language": "english",
                      "description": null,
                      "directory_count": 0,
                      "dns_added": false,
                      "domain_suffix": "login.stage.sohacloud.net",
                      "enable_access_client": false,
                      "enable_mfa": false,
                      "favicon_image": null,
                      "helpdesk_email": "contact@mail.com",
                      "idp_deployed": false,
                      "idp_operational": 1,
                      "idp_status": 1,
                      "idp_type": 2,
                      "lockout_interval": 1,
                      "login_cname": null,
                      "login_dialin_server": null,
                      "login_domain": 2,
                      "login_host": null,
                      "login_lockout": "off",
                      "login_suffix": "login.stage.sohacloud.net",
                      "logo": null,
                      "logo_file_name": null,
                      "logout_url": null,
                      "max_login_failures": 5,
                      "metadata": null,
                      "modified_at": "2019-07-08T10:31:20.139938",
                      "multilang_fields": null,
                      "name": "IDP",
                      "ocsp": null,
                      "pop": "dDOXO4w0QYGdsKq4zC-YOg",
                      "popName": "us-west-coast-1",
                      "resource": "idp",
                      "saml_url": null,
                      "status": 1,
                      "trust_expiry": 365,
                      "uuid_url": "ZVZU1zvGRieOyLibfcKc-A",
                      "directory_list": [],
                      "domains": [],
                      "iwa_keytab": [],
                      "attribute_map": {},
                      "mfa_settings": {
                        "duo_akey": "",
                        "duo_api_hostname": "",
                        "duo_integration_key": "",
                        "duo_secret_key": "",
                        "duo_umap": "user.email",
                        "idp_notification_org_name": "",
                        "mfa_email_immutable": "false",
                        "mfa_email_preset": "false",
                        "mfa_factor_duo": "false",
                        "mfa_factor_email": "true",
                        "mfa_factor_sms": "true",
                        "mfa_factor_totp": "false",
                        "mfa_pci_dss": "false",
                        "mfa_sms_immutable": "false",
                        "mfa_sms_preset": "false"
                      },
                      "resource_uri": {
                        "href": "/api/v1/idp/ZVZU1zvGRieOyLibfcKc-A",
                        "idp": "/api/v1/idp/ZVZU1zvGRieOyLibfcKc-A/idp/"
                      },
                      "settings": {
                        "captive_portal": "true",
                        "client_cert_auth": "false",
                        "client_cert_auth_onboard_criteria": "nocert",
                        "client_cert_auth_onboard_url": "",
                        "client_cert_auth_validation_method": null,
                        "client_cert_auth_validation_responder": "",
                        "client_cert_exp_warn_interval": 0,
                        "client_cert_identity_username": "false",
                        "client_cert_renewal": "",
                        "client_cert_user_param": "",
                        "eaac_bin_base_url": "",
                        "enable_authorization": "false",
                        "enable_device_posture": "false",
                        "enable_favrt": "false",
                        "enable_oidc_saml_bridging": "false",
                        "force_login": "true",
                        "force_login_after": 7200,
                        "g2o_enabled": "false",
                        "g2o_key": null,
                        "g2o_nonce": null,
                        "group_attr_name": "Group",
                        "idp_cdn_enabled": "false",
                        "idp_iwa_check_cert": "false",
                        "idp_iwa_check_os": "",
                        "idp_iwa_check_prem": "false",
                        "idp_iwa_check_ua": "",
                        "idp_iwa_krb5_spn": "",
                        "idp_iwa_mode": "off",
                        "idp_iwa_onpremise_path": "false",
                        "login_terms": null,
                        "login_title": null,
                        "persistent_cookie": "true",
                        "portal_background": "./assets/img/body-bg.png",
                        "portal_change_password_url": "",
                        "portal_logo_height": "256",
                        "portal_logo_url": "./assets/img/logo.png",
                        "portal_logo_width": "256",
                        "portal_new_user_signup_url": "",
                        "portal_terms_box": "false",
                        "portal_theme": "bubblewrapp",
                        "portal_title_box": "false",
                        "single_logout_supported": "false",
                        "trusted_network_enable": "false",
                        "trusted_network_hostname_ip": "",
                        "trusted_network_searchdomain": "",
                        "xframe_options": "false",
                        "xframe_urls": null,
                        "infra_prem_gateways": [],
                        "form_text": {
                          "user_placeholder": "Username"
                        }
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Identity provider (IDP) configuration settings.",
                  "type": "object",
                  "required": [
                    "name",
                    "idp_type"
                  ],
                  "properties": {
                    "attribute_map": {
                      "description": "Additional attributes to include with the `access_token` response.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "auth_request_signed": {
                      "description": "Whether the authentication request is signed.",
                      "type": "boolean"
                    },
                    "auth_response_encrypt": {
                      "description": "Enables authentication response encryption.",
                      "type": "boolean"
                    },
                    "background_image": {
                      "description": "The name of the background image.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "background_image_file_name": {
                      "description": "The filename of the portal background image.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "client_principle_name": {
                      "description": "The principle name expected by the server in order to authenticate a client request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "company_id": {
                      "description": "The company ID.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "cookie_expiry": {
                      "description": "The number of minutes the session cookie expires.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the IDP configuration's creation. ",
                      "format": "date-time",
                      "type": "string"
                    },
                    "default_language": {
                      "description": "The default language.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the IDP configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "dns_added": {
                      "description": "Whether the authentication request includes the DNS information.",
                      "type": "boolean"
                    },
                    "enable_access_client": {
                      "description": "Enables the access client.",
                      "type": "boolean"
                    },
                    "enable_mfa": {
                      "description": "Enables multifactor authentication.",
                      "type": "boolean"
                    },
                    "favicon_image": {
                      "description": "The filename of the portal favicon image.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "helpdesk_email": {
                      "description": "The email address for contacting helpdesk with issues.",
                      "format": "email",
                      "type": "string"
                    },
                    "idp_type": {
                      "default": 1,
                      "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, and `9` for Azure.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9
                      ]
                    },
                    "iwa_keytab": {
                      "description": "A unique keytab for a service principle name (SPN) used for Integrated Windows Authentication (IWA).",
                      "minLength": 1,
                      "type": "string"
                    },
                    "lockout_interval": {
                      "default": 15,
                      "description": "The number of minutes to lock out the user, `15` by default.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "login_cname": {
                      "description": "The login cname URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "login_dialin_server": {
                      "description": "The URL of the login dialin server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "login_domain": {
                      "description": "The type of portal domain that end users access. Either `1` for custom login domain or `2` for WAPP login domain.",
                      "type": "integer",
                      "enum": [
                        1,
                        2
                      ]
                    },
                    "login_host": {
                      "description": "The service provider login host.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "login_lockout": {
                      "default": "off",
                      "description": "Enables a temporary lockout for failed login attempts when set to `on`. The default value is `off`.",
                      "type": "string",
                      "enum": [
                        "on",
                        "off"
                      ]
                    },
                    "logo": {
                      "description": "The name of the portal logo.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "logo_file_name": {
                      "description": "The portal logo filename.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "logout_url": {
                      "description": "The single logout URL for SSO.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "max_login_failures": {
                      "default": 5,
                      "description": "The number of login failures allowed per user before temporary lock out. The default value is `5`.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "metadata": {
                      "description": "The Metadata of the SAML type IDP.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mfa_settings": {
                      "description": "Multifactor authentication settings for the IDP configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "The ISO 8601 timestamp marking the last modification.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "multilang_fields": {
                      "description": "Multi language field for SAML message configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the IDP configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of various IDP resources.",
                      "type": "object",
                      "required": [
                        "directories",
                        "sites",
                        "pop",
                        "href",
                        "groups",
                        "services"
                      ],
                      "properties": {
                        "directories": {
                          "description": "The directories resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "groups": {
                          "description": "The groups resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The href resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "pop": {
                          "description": "The pop resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "services": {
                          "description": "The services resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "sites": {
                          "description": "The sites resource URI.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "saml_url": {
                      "description": "The URL of the service provider SAML interface.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "settings": {
                      "description": "Login portal settings for an IDP configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "default": 1,
                      "description": "The IDP configuration status. Either `1` for Not Ready, `2` for Ready, `3` for Pending, `4` for Deployed, `5` for Failed, `6` for Cloud Deployed, or `7` for Connector Deployed.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7
                      ]
                    },
                    "trust_expiry": {
                      "description": "The number of seconds to expire the authentication request.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "uuid_url": {
                      "description": "The unique UUID URL of the IDP configuration.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/idp.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "When set to `true`, includes additional members in the request.",
            "example": "{{expand}}",
            "in": "query",
            "name": "expand",
            "schema": {
              "example": true,
              "type": "boolean"
            },
            "x-akamai": {
              "file-path": "parameters/expand-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/mgmt-pop/idp/{idp_id}": {
      "get": {
        "description": "Gets a single IDP.",
        "operationId": "get-idp",
        "summary": "Get an IDP",
        "tags": [
          "IDPs"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-idp"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "app_count": 2,
                  "auth_request_signed": false,
                  "auth_response_encrypt": false,
                  "background_image": "",
                  "background_image_file_name": "",
                  "cert": null,
                  "client_cert": null,
                  "client_principle_name": "<sAMAccountName>",
                  "company_id": "regv3ds",
                  "cookie_expiry": 120,
                  "created_at": "2019-03-20T10:28:23.080189",
                  "default_language": "english",
                  "description": null,
                  "directory_count": 1,
                  "dns_added": false,
                  "domain_suffix": "login.stage.sohacloud.net",
                  "enable_access_client": true,
                  "enable_mfa": false,
                  "favicon_image": null,
                  "helpdesk_email": "contact@mail.com",
                  "idp_deployed": false,
                  "idp_operational": 1,
                  "idp_status": 4,
                  "idp_type": 1,
                  "lockout_interval": 1,
                  "login_cname": "regv3ds.login.stage.sohacloud.net",
                  "login_dialin_server": "regv3ds.login.dialin.stage.sohacloud.net",
                  "login_domain": 2,
                  "login_host": "regv3ds",
                  "login_lockout": "off",
                  "login_suffix": "login.stage.sohacloud.net",
                  "logo": "",
                  "logo_file_name": "",
                  "logout_url": "",
                  "max_login_failures": 5,
                  "metadata": null,
                  "modified_at": "2019-05-28T08:05:43.330112",
                  "multilang_fields": null,
                  "name": "regv3ds",
                  "ocsp": null,
                  "oidcclients": "vD2FCQeaRlieatrLStp3xw",
                  "pop": "dDOXO4w0QYGdsKq4zC-YOg",
                  "popName": "us-west-coast-1",
                  "resource": "idp",
                  "saml_url": "",
                  "status": 4,
                  "trust_expiry": 365,
                  "uuid_url": "6IlO8WcjS3iOgWYi55bMOw",
                  "directory_list": [
                    "GbIfrXwtTKaqBrXD0ZkGBA"
                  ],
                  "domains": [],
                  "iwa_keytab": [],
                  "attribute_map": {},
                  "mfa_settings": {
                    "duo_akey": "",
                    "duo_api_hostname": "",
                    "duo_integration_key": "",
                    "duo_secret_key": "",
                    "duo_umap": "user.email",
                    "idp_notification_org_name": "",
                    "mfa_email_immutable": "false",
                    "mfa_email_preset": "false",
                    "mfa_factor_duo": "false",
                    "mfa_factor_email": "true",
                    "mfa_factor_sms": "true",
                    "mfa_factor_totp": "false",
                    "mfa_pci_dss": "false",
                    "mfa_sms_immutable": "false",
                    "mfa_sms_preset": "false"
                  },
                  "resource_uri": {
                    "href": "/api/v1/idp/6IlO8WcjS3iOgWYi55bMOw",
                    "idp": "/api/v1/idp/6IlO8WcjS3iOgWYi55bMOw/idp/"
                  },
                  "settings": {
                    "client_cert_auth": "false",
                    "client_cert_auth_onboard_criteria": "nocert",
                    "client_cert_auth_onboard_url": "",
                    "client_cert_auth_validation_method": null,
                    "client_cert_auth_validation_responder": "",
                    "client_cert_exp_warn_interval": 0,
                    "client_cert_identity_username": "false",
                    "client_cert_renewal": "",
                    "client_cert_user_param": "",
                    "eaac_bin_base_url": "",
                    "enable_authorization": "false",
                    "enable_device_posture": "false",
                    "enable_favrt": "false",
                    "enable_oidc_saml_bridging": "false",
                    "force_login": "true",
                    "force_login_after": "7200",
                    "g2o_enabled": "false",
                    "g2o_key": null,
                    "g2o_nonce": null,
                    "group_attr_name": "Group",
                    "idp_iwa_check_cert": "false",
                    "idp_iwa_check_os": "",
                    "idp_iwa_check_prem": "false",
                    "idp_iwa_check_ua": "",
                    "idp_iwa_krb5_spn": "",
                    "idp_iwa_mode": "off",
                    "idp_iwa_onpremise_path": "false",
                    "login_terms": null,
                    "login_title": null,
                    "persistent_cookie": "true",
                    "portal_background": "./assets/img/body-bg.png",
                    "portal_change_password_url": "",
                    "portal_logo_height": "256",
                    "portal_logo_url": "./assets/img/logo.png",
                    "portal_logo_width": "256",
                    "portal_new_user_signup_url": "",
                    "portal_terms_box": "false",
                    "portal_theme": "bubblewrapp",
                    "portal_title_box": "false",
                    "single_logout_supported": "false",
                    "xframe_options": "false",
                    "form_text": {
                      "user_placeholder": "Username"
                    },
                    "infra_prem_gateways": [
                      {
                        "value": ""
                      }
                    ],
                    "xframe_urls": [
                      {
                        "url": ""
                      }
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Identity provider (IDP) configuration settings.",
                  "type": "object",
                  "required": [
                    "name",
                    "idp_type"
                  ],
                  "properties": {
                    "attribute_map": {
                      "description": "Additional attributes to include with the `access_token` response.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "auth_request_signed": {
                      "description": "Whether the authentication request is signed.",
                      "type": "boolean"
                    },
                    "auth_response_encrypt": {
                      "description": "Enables authentication response encryption.",
                      "type": "boolean"
                    },
                    "background_image": {
                      "description": "The name of the background image.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "background_image_file_name": {
                      "description": "The filename of the portal background image.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "client_principle_name": {
                      "description": "The principle name expected by the server in order to authenticate a client request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "company_id": {
                      "description": "The company ID.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "cookie_expiry": {
                      "description": "The number of minutes the session cookie expires.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the IDP configuration's creation. ",
                      "format": "date-time",
                      "type": "string"
                    },
                    "default_language": {
                      "description": "The default language.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the IDP configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "dns_added": {
                      "description": "Whether the authentication request includes the DNS information.",
                      "type": "boolean"
                    },
                    "enable_access_client": {
                      "description": "Enables the access client.",
                      "type": "boolean"
                    },
                    "enable_mfa": {
                      "description": "Enables multifactor authentication.",
                      "type": "boolean"
                    },
                    "favicon_image": {
                      "description": "The filename of the portal favicon image.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "helpdesk_email": {
                      "description": "The email address for contacting helpdesk with issues.",
                      "format": "email",
                      "type": "string"
                    },
                    "idp_type": {
                      "default": 1,
                      "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, and `9` for Azure.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9
                      ]
                    },
                    "iwa_keytab": {
                      "description": "A unique keytab for a service principle name (SPN) used for Integrated Windows Authentication (IWA).",
                      "minLength": 1,
                      "type": "string"
                    },
                    "lockout_interval": {
                      "default": 15,
                      "description": "The number of minutes to lock out the user, `15` by default.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "login_cname": {
                      "description": "The login cname URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "login_dialin_server": {
                      "description": "The URL of the login dialin server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "login_domain": {
                      "description": "The type of portal domain that end users access. Either `1` for custom login domain or `2` for WAPP login domain.",
                      "type": "integer",
                      "enum": [
                        1,
                        2
                      ]
                    },
                    "login_host": {
                      "description": "The service provider login host.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "login_lockout": {
                      "default": "off",
                      "description": "Enables a temporary lockout for failed login attempts when set to `on`. The default value is `off`.",
                      "type": "string",
                      "enum": [
                        "on",
                        "off"
                      ]
                    },
                    "logo": {
                      "description": "The name of the portal logo.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "logo_file_name": {
                      "description": "The portal logo filename.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "logout_url": {
                      "description": "The single logout URL for SSO.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "max_login_failures": {
                      "default": 5,
                      "description": "The number of login failures allowed per user before temporary lock out. The default value is `5`.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "metadata": {
                      "description": "The Metadata of the SAML type IDP.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mfa_settings": {
                      "description": "Multifactor authentication settings for the IDP configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "The ISO 8601 timestamp marking the last modification.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "multilang_fields": {
                      "description": "Multi language field for SAML message configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the IDP configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of various IDP resources.",
                      "type": "object",
                      "required": [
                        "directories",
                        "sites",
                        "pop",
                        "href",
                        "groups",
                        "services"
                      ],
                      "properties": {
                        "directories": {
                          "description": "The directories resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "groups": {
                          "description": "The groups resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The href resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "pop": {
                          "description": "The pop resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "services": {
                          "description": "The services resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "sites": {
                          "description": "The sites resource URI.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "saml_url": {
                      "description": "The URL of the service provider SAML interface.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "settings": {
                      "description": "Login portal settings for an IDP configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "default": 1,
                      "description": "The IDP configuration status. Either `1` for Not Ready, `2` for Ready, `3` for Pending, `4` for Deployed, `5` for Failed, `6` for Cloud Deployed, or `7` for Connector Deployed.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7
                      ]
                    },
                    "trust_expiry": {
                      "description": "The number of seconds to expire the authentication request.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "uuid_url": {
                      "description": "The unique UUID URL of the IDP configuration.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/idp.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates an existing IDP.",
        "operationId": "put-idp",
        "summary": "Modify an IDP",
        "tags": [
          "IDPs"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-idp"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "app_count": 2,
                  "auth_request_signed": false,
                  "auth_response_encrypt": false,
                  "background_image": "",
                  "background_image_file_name": "",
                  "cert": null,
                  "client_cert": null,
                  "client_principle_name": "<sAMAccountName>",
                  "company_id": "regv3ds",
                  "cookie_expiry": 120,
                  "created_at": "2019-03-20T10:28:23.080189",
                  "default_language": "english",
                  "description": null,
                  "directory_count": 1,
                  "dns_added": false,
                  "domain_suffix": "login.stage.sohacloud.net",
                  "enable_access_client": true,
                  "enable_mfa": false,
                  "favicon_image": null,
                  "helpdesk_email": "contact@mail.com",
                  "idp_deployed": false,
                  "idp_operational": 1,
                  "idp_status": 4,
                  "idp_type": 1,
                  "lockout_interval": 1,
                  "login_cname": "regv3ds.login.stage.sohacloud.net",
                  "login_dialin_server": "regv3ds.login.dialin.stage.sohacloud.net",
                  "login_domain": 2,
                  "login_host": "regv3ds",
                  "login_lockout": "off",
                  "login_suffix": "login.stage.sohacloud.net",
                  "logo": "",
                  "logo_file_name": "",
                  "logout_url": "",
                  "max_login_failures": 5,
                  "metadata": null,
                  "modified_at": "2019-05-28T08:05:43.330112",
                  "multilang_fields": null,
                  "name": "regv3ds",
                  "ocsp": null,
                  "oidcclients": "vD2FCQeaRlieatrLStp3xw",
                  "pop": "dDOXO4w0QYGdsKq4zC-YOg",
                  "popName": "us-west-coast-1",
                  "resource": "idp",
                  "saml_url": "",
                  "status": 4,
                  "trust_expiry": 365,
                  "uuid_url": "6IlO8WcjS3iOgWYi55bMOw",
                  "directory_list": [
                    "GbIfrXwtTKaqBrXD0ZkGBA"
                  ],
                  "domains": [],
                  "iwa_keytab": [],
                  "attribute_map": {},
                  "mfa_settings": {
                    "duo_akey": "",
                    "duo_api_hostname": "",
                    "duo_integration_key": "",
                    "duo_secret_key": "",
                    "duo_umap": "user.email",
                    "idp_notification_org_name": "",
                    "mfa_email_immutable": "false",
                    "mfa_email_preset": "false",
                    "mfa_factor_duo": "false",
                    "mfa_factor_email": "true",
                    "mfa_factor_sms": "true",
                    "mfa_factor_totp": "false",
                    "mfa_pci_dss": "false",
                    "mfa_sms_immutable": "false",
                    "mfa_sms_preset": "false"
                  },
                  "resource_uri": {
                    "href": "/api/v1/idp/6IlO8WcjS3iOgWYi55bMOw",
                    "idp": "/api/v1/idp/6IlO8WcjS3iOgWYi55bMOw/idp/"
                  },
                  "settings": {
                    "client_cert_auth": "false",
                    "client_cert_auth_onboard_criteria": "nocert",
                    "client_cert_auth_onboard_url": "",
                    "client_cert_auth_validation_method": null,
                    "client_cert_auth_validation_responder": "",
                    "client_cert_exp_warn_interval": 0,
                    "client_cert_identity_username": "false",
                    "client_cert_renewal": "",
                    "client_cert_user_param": "",
                    "eaac_bin_base_url": "",
                    "enable_authorization": "false",
                    "enable_device_posture": "false",
                    "enable_favrt": "false",
                    "enable_oidc_saml_bridging": "false",
                    "force_login": "true",
                    "force_login_after": "7200",
                    "g2o_enabled": "false",
                    "g2o_key": null,
                    "g2o_nonce": null,
                    "group_attr_name": "Group",
                    "idp_iwa_check_cert": "false",
                    "idp_iwa_check_os": "",
                    "idp_iwa_check_prem": "false",
                    "idp_iwa_check_ua": "",
                    "idp_iwa_krb5_spn": "",
                    "idp_iwa_mode": "off",
                    "idp_iwa_onpremise_path": "false",
                    "login_terms": null,
                    "login_title": null,
                    "persistent_cookie": "true",
                    "portal_background": "./assets/img/body-bg.png",
                    "portal_change_password_url": "",
                    "portal_logo_height": "256",
                    "portal_logo_url": "./assets/img/logo.png",
                    "portal_logo_width": "256",
                    "portal_new_user_signup_url": "",
                    "portal_terms_box": "false",
                    "portal_theme": "bubblewrapp",
                    "portal_title_box": "false",
                    "single_logout_supported": "false",
                    "xframe_options": "false",
                    "form_text": {
                      "user_placeholder": "Username"
                    },
                    "infra_prem_gateways": [
                      {
                        "value": ""
                      }
                    ],
                    "xframe_urls": [
                      {
                        "url": ""
                      }
                    ]
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Identity provider (IDP) configuration settings.",
                  "type": "object",
                  "required": [
                    "name",
                    "idp_type"
                  ],
                  "properties": {
                    "attribute_map": {
                      "description": "Additional attributes to include with the `access_token` response.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "auth_request_signed": {
                      "description": "Whether the authentication request is signed.",
                      "type": "boolean"
                    },
                    "auth_response_encrypt": {
                      "description": "Enables authentication response encryption.",
                      "type": "boolean"
                    },
                    "background_image": {
                      "description": "The name of the background image.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "background_image_file_name": {
                      "description": "The filename of the portal background image.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "client_principle_name": {
                      "description": "The principle name expected by the server in order to authenticate a client request.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "company_id": {
                      "description": "The company ID.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "cookie_expiry": {
                      "description": "The number of minutes the session cookie expires.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the IDP configuration's creation. ",
                      "format": "date-time",
                      "type": "string"
                    },
                    "default_language": {
                      "description": "The default language.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the IDP configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "dns_added": {
                      "description": "Whether the authentication request includes the DNS information.",
                      "type": "boolean"
                    },
                    "enable_access_client": {
                      "description": "Enables the access client.",
                      "type": "boolean"
                    },
                    "enable_mfa": {
                      "description": "Enables multifactor authentication.",
                      "type": "boolean"
                    },
                    "favicon_image": {
                      "description": "The filename of the portal favicon image.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "helpdesk_email": {
                      "description": "The email address for contacting helpdesk with issues.",
                      "format": "email",
                      "type": "string"
                    },
                    "idp_type": {
                      "default": 1,
                      "description": "The type of IDP. Select `1` for Default, `2` for EAA, `3` for SAML, `4` for Okta, `5` for PingOne, `6` for OneLogin, `7` for Google, `8` for OIDC, and `9` for Azure.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9
                      ]
                    },
                    "iwa_keytab": {
                      "description": "A unique keytab for a service principle name (SPN) used for Integrated Windows Authentication (IWA).",
                      "minLength": 1,
                      "type": "string"
                    },
                    "lockout_interval": {
                      "default": 15,
                      "description": "The number of minutes to lock out the user, `15` by default.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "login_cname": {
                      "description": "The login cname URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "login_dialin_server": {
                      "description": "The URL of the login dialin server.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "login_domain": {
                      "description": "The type of portal domain that end users access. Either `1` for custom login domain or `2` for WAPP login domain.",
                      "type": "integer",
                      "enum": [
                        1,
                        2
                      ]
                    },
                    "login_host": {
                      "description": "The service provider login host.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "login_lockout": {
                      "default": "off",
                      "description": "Enables a temporary lockout for failed login attempts when set to `on`. The default value is `off`.",
                      "type": "string",
                      "enum": [
                        "on",
                        "off"
                      ]
                    },
                    "logo": {
                      "description": "The name of the portal logo.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "logo_file_name": {
                      "description": "The portal logo filename.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "logout_url": {
                      "description": "The single logout URL for SSO.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "max_login_failures": {
                      "default": 5,
                      "description": "The number of login failures allowed per user before temporary lock out. The default value is `5`.",
                      "minimum": 1,
                      "type": "integer"
                    },
                    "metadata": {
                      "description": "The Metadata of the SAML type IDP.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mfa_settings": {
                      "description": "Multifactor authentication settings for the IDP configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "The ISO 8601 timestamp marking the last modification.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "multilang_fields": {
                      "description": "Multi language field for SAML message configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the IDP configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of various IDP resources.",
                      "type": "object",
                      "required": [
                        "directories",
                        "sites",
                        "pop",
                        "href",
                        "groups",
                        "services"
                      ],
                      "properties": {
                        "directories": {
                          "description": "The directories resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "groups": {
                          "description": "The groups resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The href resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "pop": {
                          "description": "The pop resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "services": {
                          "description": "The services resource URI.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "sites": {
                          "description": "The sites resource URI.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "saml_url": {
                      "description": "The URL of the service provider SAML interface.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "settings": {
                      "description": "Login portal settings for an IDP configuration.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "status": {
                      "default": 1,
                      "description": "The IDP configuration status. Either `1` for Not Ready, `2` for Ready, `3` for Pending, `4` for Deployed, `5` for Failed, `6` for Cloud Deployed, or `7` for Connector Deployed.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7
                      ]
                    },
                    "trust_expiry": {
                      "description": "The number of seconds to expire the authentication request.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "uuid_url": {
                      "description": "The unique UUID URL of the IDP configuration.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/idp.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Deletes an existing IDP.",
        "operationId": "delete-idp",
        "summary": "Delete an IDP",
        "tags": [
          "IDPs"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-idp"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for the IDP.",
          "example": "{{idp_id}}",
          "in": "path",
          "name": "idp_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/idp_id-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/idp/{idp_id}/directories_membership": {
      "get": {
        "description": "Retrieves associated directory membership of an IDP.",
        "operationId": "get-idp-directories-membership",
        "summary": "Get an IDP directory membership",
        "tags": [
          "Directory membership"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-idp-directories-membership"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 20,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 1
                  },
                  "objects": [
                    {
                      "resource": "idpdirectory",
                      "uuid_url": "hp7EQTGxThCzRmWFNsd-1A",
                      "directory": {
                        "directory_uuid_url": "GbIfrXwtTKaqBrXD0ZkGBA",
                        "name": "Cloud Directory"
                      },
                      "idp": {
                        "idp_uuid_url": "6IlO8WcjS3iOgWYi55bMOw",
                        "name": "regv3ds"
                      },
                      "resource_uri": {
                        "directory": "/api/v1/directory/GbIfrXwtTKaqBrXD0ZkGBA",
                        "href": "/api/v1/idpdirectory/hp7EQTGxThCzRmWFNsd-1A",
                        "idp": "/api/v1/idp/6IlO8WcjS3iOgWYi55bMOw"
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "List of IDP associated directories.",
                  "type": "object",
                  "properties": {
                    "directory": {
                      "additionalProperties": false,
                      "description": "IDP directory properties.",
                      "type": "object",
                      "properties": {
                        "directory_uuid_url": {
                          "description": "The directory's unique ID.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The directory name. ",
                          "type": "string"
                        }
                      }
                    },
                    "idp": {
                      "additionalProperties": false,
                      "description": "IDP properties.",
                      "type": "object",
                      "properties": {
                        "idp_uuid_url": {
                          "description": "The unique IDP ID",
                          "type": "string"
                        },
                        "name": {
                          "description": "The IDP name.",
                          "type": "string"
                        }
                      }
                    },
                    "resource": {
                      "description": "The resource name.",
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Resource URIs for the IDP.",
                      "type": "object",
                      "properties": {
                        "directory": {
                          "description": "The directory's resource ID",
                          "type": "string"
                        },
                        "href": {
                          "description": "The resource's href ID.",
                          "type": "string"
                        },
                        "idp": {
                          "description": "The IDP's resource ID.",
                          "type": "string"
                        }
                      }
                    },
                    "uuid_url": {
                      "description": "The resource ID.",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/idp-directories-membership.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for the IDP.",
          "example": "{{idp_id}}",
          "in": "path",
          "name": "idp_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/idp_id-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/idp/{idp_id}/g2o": {
      "post": {
        "description": "Enable G2O for an IDP.",
        "operationId": "post-idp-g2o",
        "summary": "Enable ghost to origin (G2O) for an IDP",
        "tags": [
          "Ghost to origin"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-idp-g2o"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "g2o_enabled": "true",
                  "g2o_key": "2557853b61e3962e2e0b8646c9a7794f",
                  "g2o_nonce": "0862646f"
                },
                "schema": {
                  "x-akamai": {
                    "file-path": "schemas/need-schema-here.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for the IDP.",
          "example": "{{idp_id}}",
          "in": "path",
          "name": "idp_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/idp_id-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/idp/{idp_id}/metadata": {
      "post": {
        "description": "Uploads metadata to add or update to the IDP.",
        "operationId": "post-idp-metadata",
        "summary": "Upload metadata of an IDP",
        "tags": [
          "Metadata"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-idp-metadata"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "metadata": "..."
                },
                "schema": {
                  "x-akamai": {
                    "file-path": "schemas/need-schema-here.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for the IDP.",
          "example": "{{idp_id}}",
          "in": "path",
          "name": "idp_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/idp_id-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/idp/{idp_id}/status": {
      "get": {
        "description": "Retrieves the current IDP status.",
        "operationId": "get-idp-status",
        "summary": "Get an IDP status",
        "tags": [
          "Status"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-idp-status"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "idp_deployed": true,
                  "login_cert_status": 6,
                  "login_directories_status": 6,
                  "login_host_dns_status": 6,
                  "login_oidc_status": 2,
                  "login_pop_status": 2,
                  "login_saml_status": 2,
                  "manual_override": false
                },
                "schema": {
                  "additionalProperties": false,
                  "type": "object",
                  "required": [
                    "idp_deployed",
                    "login_cert_status",
                    "login_directories_status",
                    "login_host_dns_status",
                    "login_oidc_status",
                    "login_pop_status",
                    "login_saml_status",
                    "manual_override"
                  ],
                  "properties": {
                    "idp_deployed": {
                      "description": "If `true`, the IDP deployed successfully.",
                      "type": "boolean"
                    },
                    "login_cert_status": {
                      "default": 1,
                      "description": "Login certificate status. Either `1` for not added, `2` for expired, `3` for invalid CNAME, `4` for invalid CA, `5` for no private key), `6` for OK, `7` for invalid CA user parameter, or `8` for about to expire.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8
                      ]
                    },
                    "login_directories_status": {
                      "default": 1,
                      "description": "Login directories status. Either `1` for not added, `2` for added, `3` for no agent, `4` for pending, `5` for unreachable, or `6` for OK.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ]
                    },
                    "login_host_dns_status": {
                      "default": 1,
                      "description": "Login host DNS status. Either `1` for not configured, `2` for configured, `3` for ready, `4` for not resolved, `5` for not created, `6` for OK, or `7` for CNAME mismatch.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7
                      ]
                    },
                    "login_oidc_status": {
                      "default": 1,
                      "description": "Login OIDC status. Either `1` for not added or `2` for added.",
                      "type": "integer",
                      "enum": [
                        1,
                        2
                      ]
                    },
                    "login_pop_status": {
                      "default": 1,
                      "description": "Login POP status. Either `1` for not configured or `2` for OK.",
                      "type": "integer",
                      "enum": [
                        1,
                        2
                      ]
                    },
                    "login_saml_status": {
                      "default": 1,
                      "description": "Login SAML status. Either `1` for not added or `2` for added.",
                      "type": "integer",
                      "enum": [
                        1,
                        2
                      ]
                    },
                    "manual_override": {
                      "description": "Indicates a manual override of the IDP. ",
                      "type": "boolean"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/idp-actions.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for the IDP.",
          "example": "{{idp_id}}",
          "in": "path",
          "name": "idp_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/idp_id-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/idpblockuser/idp/{idp_id}/block": {
      "post": {
        "description": "Blocks a user from accessing an IDP.",
        "operationId": "post-user-block-idp-access",
        "summary": "Block a user from accessing an IDP",
        "tags": [
          "Block user"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-user-block-idp-access"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "user_list": [
                  {
                    "directory_id": "U59wJq3dQNuanDH8VMc1Gg",
                    "user_id": "UcxX2qmATBeyADMt2oRxNw"
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Blocks an IDP user from accessing an application.",
                "type": "object",
                "required": [
                  "first_name",
                  "last_name",
                  "user_uuid_url"
                ],
                "properties": {
                  "created_at": {
                    "description": "ISO 8601 timestamp marking the user's creation.",
                    "example": "{{created_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "The unique ID of admin who created the user.",
                    "example": "{{created_by}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "first_name": {
                    "description": "The user's first name.",
                    "example": "{{first_name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "last_name": {
                    "description": "The user's last name.",
                    "example": "{{last_name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking the user's last modification.",
                    "example": "{{modified_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "user_uuid_url": {
                    "description": "A unique ID for the user's account.",
                    "example": "{{user_uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "username": {
                    "description": "The user's account name.",
                    "example": "{{username}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/idpblockuser.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "failed": 0,
                  "success": 1,
                  "total": 1,
                  "failed_details": []
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Blocks an IDP user from accessing an application.",
                  "type": "object",
                  "required": [
                    "first_name",
                    "last_name",
                    "user_uuid_url"
                  ],
                  "properties": {
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the user's creation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "created_by": {
                      "description": "The unique ID of admin who created the user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "first_name": {
                      "description": "The user's first name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "last_name": {
                      "description": "The user's last name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the user's last modification.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "user_uuid_url": {
                      "description": "A unique ID for the user's account.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "username": {
                      "description": "The user's account name.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/idpblockuser.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for the IDP.",
          "example": "{{idp_id}}",
          "in": "path",
          "name": "idp_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/idp_id-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/idpblockuser/idp/{idp_id}/unblock": {
      "post": {
        "description": "Unblocks a user from accessing an IDP.",
        "operationId": "post-user-unblock-idp-access",
        "summary": "Unblock a user from accessing an IDP",
        "tags": [
          "Unblock user"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-user-unblock-idp-access"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "user_list": [
                  {
                    "directory_id": "U59wJq3dQNuanDH8VMc1Gg",
                    "user_id": "UcxX2qmATBeyFELt2oRxNw"
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Blocks an IDP user from accessing an application.",
                "type": "object",
                "required": [
                  "first_name",
                  "last_name",
                  "user_uuid_url"
                ],
                "properties": {
                  "created_at": {
                    "description": "ISO 8601 timestamp marking the user's creation.",
                    "example": "{{created_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "created_by": {
                    "description": "The unique ID of admin who created the user.",
                    "example": "{{created_by}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "first_name": {
                    "description": "The user's first name.",
                    "example": "{{first_name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "last_name": {
                    "description": "The user's last name.",
                    "example": "{{last_name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking the user's last modification.",
                    "example": "{{modified_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "user_uuid_url": {
                    "description": "A unique ID for the user's account.",
                    "example": "{{user_uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "username": {
                    "description": "The user's account name.",
                    "example": "{{username}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/idpblockuser.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "failed": 0,
                  "success": 1,
                  "total": 1,
                  "failed_details": []
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Blocks an IDP user from accessing an application.",
                  "type": "object",
                  "required": [
                    "first_name",
                    "last_name",
                    "user_uuid_url"
                  ],
                  "properties": {
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the user's creation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "created_by": {
                      "description": "The unique ID of admin who created the user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "first_name": {
                      "description": "The user's first name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "last_name": {
                      "description": "The user's last name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the user's last modification.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "user_uuid_url": {
                      "description": "A unique ID for the user's account.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "username": {
                      "description": "The user's account name.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/idpblockuser.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for the IDP.",
          "example": "{{idp_id}}",
          "in": "path",
          "name": "idp_id",
          "required": true,
          "schema": {
            "example": "ojxkXzwyQZiBkoRee0XcnA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/idp_id-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/idpdirectory": {
      "post": {
        "description": "Creates a new IDP directory.",
        "operationId": "post-idp-directory",
        "summary": "Create an IDP directory",
        "tags": [
          "IDP directories"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-idp-directory"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "idp": "xz_HqmAdSNeSnoCWss9Phg",
                "directories": [
                  "AtjdKbXqQFmp0TDD9TtaHg"
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Enterprise Access IDP directory information.",
                "type": "object",
                "required": [
                  "admin_user",
                  "agents",
                  "api_key",
                  "attribute_map",
                  "auth_request_signed",
                  "auth_response_encrypt",
                  "chase_referral",
                  "cname",
                  "company_id",
                  "conf_state",
                  "description",
                  "dialin_sni",
                  "directory_status",
                  "directory_type",
                  "domains",
                  "global_catalog",
                  "group_base_dn",
                  "group_count",
                  "group_members",
                  "group_name",
                  "group_object_classes",
                  "group_search_filter",
                  "group_token",
                  "host",
                  "kerb_realms",
                  "last_sync",
                  "logout_url",
                  "metadata",
                  "mfa",
                  "name",
                  "nameidformat",
                  "ou_attr",
                  "ou_filter",
                  "ou_object_classes",
                  "password_change_allow",
                  "password_change_threshold",
                  "password_complexity_message",
                  "password_expire_warn_threshold",
                  "password_filter",
                  "password_policy_default",
                  "password_reset_allow",
                  "port",
                  "resource",
                  "resource_uri",
                  "root_dn",
                  "schema_attributes",
                  "server_cert_validate",
                  "service",
                  "signed_request",
                  "ssl",
                  "status",
                  "sync_interval",
                  "sync_state",
                  "user_base_dn",
                  "user_count",
                  "user_display_name",
                  "user_email",
                  "user_fname",
                  "user_lname",
                  "user_memberof",
                  "user_memberuid",
                  "user_object_classes",
                  "user_phone_num",
                  "user_principal",
                  "user_samaccountname",
                  "user_search_filter",
                  "user_upn"
                ],
                "properties": {
                  "admin_user": {
                    "description": "The administrator user account for the IDP directory.",
                    "example": "{{admin_user}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "agents": {
                    "description": "Connectors assigned to this IDP directory.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Connectors assigned to this IDP directory.",
                      "type": "object",
                      "required": [
                        "name",
                        "uuid_url"
                      ],
                      "properties": {
                        "name": {
                          "description": "The name of the connector.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "uuid_url": {
                          "description": "A unique identifier for the connector.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "api_key": {
                    "description": "The API key of the IDP directory.",
                    "example": "{{api_key}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "attribute_map": {
                    "additionalProperties": false,
                    "description": "The attribute mapping for the IDP directory.",
                    "type": "object",
                    "required": [
                      "user.countryCode",
                      "user.email",
                      "user.firstName",
                      "user.lastName",
                      "user.netbios",
                      "user.persistentId",
                      "user.phoneNumber",
                      "user.samAccountName",
                      "user.userPrincipleName"
                    ],
                    "properties": {
                      "user.countryCode": {
                        "description": "The user's country code.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.email": {
                        "description": "The user's email address.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.firstName": {
                        "description": "The user's first name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.lastName": {
                        "description": "The user's last name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.netbios": {
                        "description": "The user's NetBIOS name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.persistentId": {
                        "description": "The user persistent ID.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.phoneNumber": {
                        "description": "The user's phone number.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.samAccountName": {
                        "description": "The user's Security Account Manager (SAM) account name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.userPrincipleName": {
                        "description": "The user's principle name.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "auth_request_signed": {
                    "description": "Whether the authentication request is signed.",
                    "example": "{{auth_request_signed}}",
                    "type": "boolean"
                  },
                  "auth_response_encrypt": {
                    "description": "Whether the authentication response is encrypted.",
                    "example": "{{auth_response_encrypt}}",
                    "type": "boolean"
                  },
                  "chase_referral": {
                    "description": "Whether to chase referral.",
                    "example": "{{chase_referral}}",
                    "type": "boolean"
                  },
                  "cname": {
                    "description": "The IDP directory cname.",
                    "example": "{{cname}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "company_id": {
                    "description": "The company ID of the IDP directory.",
                    "example": "{{company_id}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "conf_state": {
                    "description": "The configuration state of the IDP directory. Either `0` for not configured or `1` for configured.",
                    "example": "{{conf_state}}",
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ]
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking the IDP directory object's creation.",
                    "example": "{{created_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "description": {
                    "description": "ISO 8601 timestamp marking the IDP directory object's creation.",
                    "example": "{{description}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "dialin_sni": {
                    "description": "The dial-in SNI for the IDP directory.",
                    "example": "{{dialin_sni}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "directory_status": {
                    "description": "The status of the directory. Either `1` for not added, `2` for added, `3` for no agent, `4` for pending, `5` for unreachable, or `6` for okay.",
                    "example": "{{directory_status}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ]
                  },
                  "directory_type": {
                    "default": 2,
                    "description": "The type of directory. Either `1` for cloud, `2` for enterprise, `3` for third party, `4` for Akamai, or `5` for Akamai MSP.",
                    "example": "{{directory_type}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ]
                  },
                  "domains": {
                    "description": "Contains a list of domains for a directory.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "description": "The domain name.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "global_catalog": {
                    "description": "Enables global catalog.",
                    "example": "{{global_catalog}}",
                    "type": "boolean"
                  },
                  "group_base_dn": {
                    "description": "The base Distinguished Name (DN) that identifies the group entry in an IDP directory. Contains a series of comma-delimited pairs formed as `key=value`.",
                    "example": "{{group_base_dn}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "group_count": {
                    "description": "The number of groups for the IDP directory.",
                    "example": "{{group_count}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "group_members": {
                    "description": "The members of the group.",
                    "example": "{{group_members}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "group_name": {
                    "description": "The name of the group.",
                    "example": "{{group_name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "group_object_classes": {
                    "description": "Group object classes that define custom LDAP mappings of users and groups.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Group object classes for custom LDAP mappings of users and groups.",
                      "type": "object",
                      "properties": {
                        "group": {
                          "description": "The groups synchronized with the IDP directory.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "groupOfNames": {
                          "description": "All active directory groups.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "group_search_filter": {
                    "description": "The search filter for the group, such as `(objectClass=group)`.",
                    "example": "{{group_search_filter}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "group_token": {
                    "description": "The primary group token.",
                    "example": "{{group_token}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "host": {
                    "description": "The IDP directory host.",
                    "example": "{{host}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "kerb_realms": {
                    "description": "Kerberos realms for the IDP directory.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "kdclist",
                        "realm"
                      ],
                      "properties": {
                        "kdclist": {
                          "additionalProperties": false,
                          "description": "Kerberos Key Distribution Centers (KDC) information.",
                          "type": "object",
                          "required": [
                            "ip",
                            "port"
                          ],
                          "properties": {
                            "ip": {
                              "description": "The IP address of the KDC.",
                              "format": "ipv4",
                              "type": "string"
                            },
                            "port": {
                              "description": "The port number of the KDC.",
                              "minimum": 0,
                              "type": "integer"
                            }
                          }
                        },
                        "realm": {
                          "description": "The kerberos realm.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "last_sync": {
                    "description": "ISO 8601 timestamp marking the IDP directory's last synchronization.",
                    "example": "{{last_sync}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "logout_url": {
                    "description": "The logout URL for the directory.",
                    "example": "{{logout_url}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "metadata": {
                    "description": "The IDP directory metadata.",
                    "example": "{{metadata}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "mfa": {
                    "description": "Enables multifactor authentication. Either an `on` or `off` string.",
                    "example": "{{mfa}}",
                    "type": "string",
                    "enum": [
                      "on",
                      "off"
                    ]
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking the directory's last modification.",
                    "example": "{{modified_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the IDP directory.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "nameidformat": {
                    "description": "The name ID format.",
                    "example": "{{nameidformat}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "ou_attr": {
                    "description": "The organization unit's attributes.",
                    "example": "{{ou_attr}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "ou_filter": {
                    "description": "The organization unit to filter by. Specify `null` if you want to provide this later.",
                    "example": "{{ou_filter}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "ou_object_classes": {
                    "description": "The organization unit's object classes.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "description": "The organization unit's object classes.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "password_change_allow": {
                    "description": "Whether password change is allowed.",
                    "example": "{{password_change_allow}}",
                    "type": "boolean"
                  },
                  "password_change_threshold": {
                    "description": "The password change threshold in seconds.",
                    "example": "{{password_change_threshold}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "password_complexity_message": {
                    "description": "The password complexity message.",
                    "example": "{{password_complexity_message}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "password_expire_warn_threshold": {
                    "description": "The password expiration warning threshold in seconds.",
                    "example": "{{password_expire_warn_threshold}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "password_filter": {
                    "additionalProperties": false,
                    "description": "The password format requirement filters.",
                    "type": "object",
                    "properties": {
                      "min-char-groups": {
                        "description": "Minimum number of character groups for the password. ",
                        "minimum": 2,
                        "type": "integer"
                      },
                      "min-lower": {
                        "description": "Minimum number of lowercase characters for the password.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "min-num": {
                        "description": "Minimum number of numbers for the password. ",
                        "minimum": 2,
                        "type": "integer"
                      },
                      "min-other": {
                        "description": "Minimum number of other characters for the password.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "min-special": {
                        "description": "Minimum number of special characters for the password.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "min-upper": {
                        "description": "Minimum number of uppercase characters for the password.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "name-check": {
                        "description": "Checks whether the password contains the user's name.",
                        "type": "boolean"
                      },
                      "uid-check": {
                        "description": "Checks whether the password contains the user ID.",
                        "type": "boolean"
                      }
                    }
                  },
                  "password_policy_default": {
                    "description": "The default password policy for the IDP directory.",
                    "example": "{{password_policy_default}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "password_reset_allow": {
                    "description": "Whether to allow password reset.",
                    "example": "{{password_reset_allow}}",
                    "type": "boolean"
                  },
                  "port": {
                    "description": "The port number of the IDP directory.",
                    "example": "{{port}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "resource": {
                    "description": "The IDP directory resource name.",
                    "example": "{{resource}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource_uri": {
                    "additionalProperties": false,
                    "description": "Specifies the location of various IDP directory resources.",
                    "type": "object",
                    "required": [
                      "groups",
                      "href",
                      "users"
                    ],
                    "properties": {
                      "groups": {
                        "description": "The URL for group details.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "href": {
                        "description": "The URL for IDP directory details.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "users": {
                        "description": "The URL for the list of users.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "root_dn": {
                    "description": "The root distinguished name of the IDP directory. Contains a series of comma-delimited pairs formed as `key=value`.",
                    "example": "{{root_dn}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "schema_attributes": {
                    "description": "The directory schema attributes.",
                    "example": "{{schema_attributes}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "server_cert_validate": {
                    "description": "Whether to validate server certificates.",
                    "example": "{{server_cert_validate}}",
                    "type": "boolean"
                  },
                  "service": {
                    "description": "The type of directory service. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                    "example": "{{service}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7,
                      8,
                      9,
                      10,
                      11
                    ]
                  },
                  "signed_request": {
                    "description": "Whether the request is signed.",
                    "example": "{{signed_request}}",
                    "type": "boolean"
                  },
                  "ssl": {
                    "description": "Enables SSL.",
                    "example": "{{ssl}}",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The directory status. Either `0` for disabled or `1` for enabled.",
                    "example": "{{status}}",
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ]
                  },
                  "sync_interval": {
                    "description": "The synchronization interval of the IDP directory in seconds.",
                    "example": "{{sync_interval}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "sync_state": {
                    "description": "The IDP directory synchronization state. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                    "example": "{{sync_state}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ]
                  },
                  "user_base_dn": {
                    "description": "The base distinguished name of a user. Contains a series of comma-delimited pairs formed as `key=value`.",
                    "example": "{{user_base_dn}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_count": {
                    "description": "The total count of users in the IDP directory.",
                    "example": "{{user_count}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "user_display_name": {
                    "description": "The display name of a user.",
                    "example": "{{user_display_name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_email": {
                    "description": "The email of a user.",
                    "example": "{{user_email}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_fname": {
                    "description": "The first name of a user.",
                    "example": "{{user_fname}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_lname": {
                    "description": "The last name of a user.",
                    "example": "{{user_lname}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_memberof": {
                    "description": "The member status of a user.",
                    "example": "{{user_memberof}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_memberuid": {
                    "description": "The member UID of a user.",
                    "example": "{{user_memberuid}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_object_classes": {
                    "description": "The user's object class.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "description": "The object class of a user.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "user_phone_num": {
                    "description": "The phone number of a user.",
                    "example": "{{user_phone_num}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_principal": {
                    "description": "The login of a user.",
                    "example": "{{user_principal}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_samaccountname": {
                    "description": "The kerberos client principal name.",
                    "example": "{{user_samaccountname}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_search_filter": {
                    "description": "The search filter for a user.",
                    "example": "{{user_search_filter}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_upn": {
                    "description": "The principal name of a user.",
                    "example": "{{user_upn}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "uuid_url": {
                    "description": "A unique identifier for the directory.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/idpdirectory.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access IDP directory information.",
                  "type": "object",
                  "required": [
                    "admin_user",
                    "agents",
                    "api_key",
                    "attribute_map",
                    "auth_request_signed",
                    "auth_response_encrypt",
                    "chase_referral",
                    "cname",
                    "company_id",
                    "conf_state",
                    "description",
                    "dialin_sni",
                    "directory_status",
                    "directory_type",
                    "domains",
                    "global_catalog",
                    "group_base_dn",
                    "group_count",
                    "group_members",
                    "group_name",
                    "group_object_classes",
                    "group_search_filter",
                    "group_token",
                    "host",
                    "kerb_realms",
                    "last_sync",
                    "logout_url",
                    "metadata",
                    "mfa",
                    "name",
                    "nameidformat",
                    "ou_attr",
                    "ou_filter",
                    "ou_object_classes",
                    "password_change_allow",
                    "password_change_threshold",
                    "password_complexity_message",
                    "password_expire_warn_threshold",
                    "password_filter",
                    "password_policy_default",
                    "password_reset_allow",
                    "port",
                    "resource",
                    "resource_uri",
                    "root_dn",
                    "schema_attributes",
                    "server_cert_validate",
                    "service",
                    "signed_request",
                    "ssl",
                    "status",
                    "sync_interval",
                    "sync_state",
                    "user_base_dn",
                    "user_count",
                    "user_display_name",
                    "user_email",
                    "user_fname",
                    "user_lname",
                    "user_memberof",
                    "user_memberuid",
                    "user_object_classes",
                    "user_phone_num",
                    "user_principal",
                    "user_samaccountname",
                    "user_search_filter",
                    "user_upn"
                  ],
                  "properties": {
                    "admin_user": {
                      "description": "The administrator user account for the IDP directory.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "agents": {
                      "description": "Connectors assigned to this IDP directory.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Connectors assigned to this IDP directory.",
                        "type": "object",
                        "required": [
                          "name",
                          "uuid_url"
                        ],
                        "properties": {
                          "name": {
                            "description": "The name of the connector.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the connector.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "api_key": {
                      "description": "The API key of the IDP directory.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "attribute_map": {
                      "additionalProperties": false,
                      "description": "The attribute mapping for the IDP directory.",
                      "type": "object",
                      "required": [
                        "user.countryCode",
                        "user.email",
                        "user.firstName",
                        "user.lastName",
                        "user.netbios",
                        "user.persistentId",
                        "user.phoneNumber",
                        "user.samAccountName",
                        "user.userPrincipleName"
                      ],
                      "properties": {
                        "user.countryCode": {
                          "description": "The user's country code.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.email": {
                          "description": "The user's email address.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.firstName": {
                          "description": "The user's first name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.lastName": {
                          "description": "The user's last name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.netbios": {
                          "description": "The user's NetBIOS name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.persistentId": {
                          "description": "The user persistent ID.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.phoneNumber": {
                          "description": "The user's phone number.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.samAccountName": {
                          "description": "The user's Security Account Manager (SAM) account name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.userPrincipleName": {
                          "description": "The user's principle name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "auth_request_signed": {
                      "description": "Whether the authentication request is signed.",
                      "type": "boolean"
                    },
                    "auth_response_encrypt": {
                      "description": "Whether the authentication response is encrypted.",
                      "type": "boolean"
                    },
                    "chase_referral": {
                      "description": "Whether to chase referral.",
                      "type": "boolean"
                    },
                    "cname": {
                      "description": "The IDP directory cname.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "company_id": {
                      "description": "The company ID of the IDP directory.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "conf_state": {
                      "description": "The configuration state of the IDP directory. Either `0` for not configured or `1` for configured.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the IDP directory object's creation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "description": "ISO 8601 timestamp marking the IDP directory object's creation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "dialin_sni": {
                      "description": "The dial-in SNI for the IDP directory.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "directory_status": {
                      "description": "The status of the directory. Either `1` for not added, `2` for added, `3` for no agent, `4` for pending, `5` for unreachable, or `6` for okay.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ]
                    },
                    "directory_type": {
                      "default": 2,
                      "description": "The type of directory. Either `1` for cloud, `2` for enterprise, `3` for third party, `4` for Akamai, or `5` for Akamai MSP.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ]
                    },
                    "domains": {
                      "description": "Contains a list of domains for a directory.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "description": "The domain name.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "global_catalog": {
                      "description": "Enables global catalog.",
                      "type": "boolean"
                    },
                    "group_base_dn": {
                      "description": "The base Distinguished Name (DN) that identifies the group entry in an IDP directory. Contains a series of comma-delimited pairs formed as `key=value`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_count": {
                      "description": "The number of groups for the IDP directory.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "group_members": {
                      "description": "The members of the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_name": {
                      "description": "The name of the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_object_classes": {
                      "description": "Group object classes that define custom LDAP mappings of users and groups.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Group object classes for custom LDAP mappings of users and groups.",
                        "type": "object",
                        "properties": {
                          "group": {
                            "description": "The groups synchronized with the IDP directory.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "groupOfNames": {
                            "description": "All active directory groups.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "group_search_filter": {
                      "description": "The search filter for the group, such as `(objectClass=group)`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_token": {
                      "description": "The primary group token.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "host": {
                      "description": "The IDP directory host.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "kerb_realms": {
                      "description": "Kerberos realms for the IDP directory.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "kdclist",
                          "realm"
                        ],
                        "properties": {
                          "kdclist": {
                            "additionalProperties": false,
                            "description": "Kerberos Key Distribution Centers (KDC) information.",
                            "type": "object",
                            "required": [
                              "ip",
                              "port"
                            ],
                            "properties": {
                              "ip": {
                                "description": "The IP address of the KDC.",
                                "format": "ipv4",
                                "type": "string"
                              },
                              "port": {
                                "description": "The port number of the KDC.",
                                "minimum": 0,
                                "type": "integer"
                              }
                            }
                          },
                          "realm": {
                            "description": "The kerberos realm.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "last_sync": {
                      "description": "ISO 8601 timestamp marking the IDP directory's last synchronization.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "logout_url": {
                      "description": "The logout URL for the directory.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "metadata": {
                      "description": "The IDP directory metadata.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mfa": {
                      "description": "Enables multifactor authentication. Either an `on` or `off` string.",
                      "type": "string",
                      "enum": [
                        "on",
                        "off"
                      ]
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the directory's last modification.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the IDP directory.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "nameidformat": {
                      "description": "The name ID format.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "ou_attr": {
                      "description": "The organization unit's attributes.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "ou_filter": {
                      "description": "The organization unit to filter by. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "ou_object_classes": {
                      "description": "The organization unit's object classes.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "description": "The organization unit's object classes.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "password_change_allow": {
                      "description": "Whether password change is allowed.",
                      "type": "boolean"
                    },
                    "password_change_threshold": {
                      "description": "The password change threshold in seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "password_complexity_message": {
                      "description": "The password complexity message.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "password_expire_warn_threshold": {
                      "description": "The password expiration warning threshold in seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "password_filter": {
                      "additionalProperties": false,
                      "description": "The password format requirement filters.",
                      "type": "object",
                      "properties": {
                        "min-char-groups": {
                          "description": "Minimum number of character groups for the password. ",
                          "minimum": 2,
                          "type": "integer"
                        },
                        "min-lower": {
                          "description": "Minimum number of lowercase characters for the password.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "min-num": {
                          "description": "Minimum number of numbers for the password. ",
                          "minimum": 2,
                          "type": "integer"
                        },
                        "min-other": {
                          "description": "Minimum number of other characters for the password.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "min-special": {
                          "description": "Minimum number of special characters for the password.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "min-upper": {
                          "description": "Minimum number of uppercase characters for the password.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "name-check": {
                          "description": "Checks whether the password contains the user's name.",
                          "type": "boolean"
                        },
                        "uid-check": {
                          "description": "Checks whether the password contains the user ID.",
                          "type": "boolean"
                        }
                      }
                    },
                    "password_policy_default": {
                      "description": "The default password policy for the IDP directory.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "password_reset_allow": {
                      "description": "Whether to allow password reset.",
                      "type": "boolean"
                    },
                    "port": {
                      "description": "The port number of the IDP directory.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "resource": {
                      "description": "The IDP directory resource name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of various IDP directory resources.",
                      "type": "object",
                      "required": [
                        "groups",
                        "href",
                        "users"
                      ],
                      "properties": {
                        "groups": {
                          "description": "The URL for group details.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The URL for IDP directory details.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "users": {
                          "description": "The URL for the list of users.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "root_dn": {
                      "description": "The root distinguished name of the IDP directory. Contains a series of comma-delimited pairs formed as `key=value`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "schema_attributes": {
                      "description": "The directory schema attributes.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "server_cert_validate": {
                      "description": "Whether to validate server certificates.",
                      "type": "boolean"
                    },
                    "service": {
                      "description": "The type of directory service. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11
                      ]
                    },
                    "signed_request": {
                      "description": "Whether the request is signed.",
                      "type": "boolean"
                    },
                    "ssl": {
                      "description": "Enables SSL.",
                      "type": "boolean"
                    },
                    "status": {
                      "description": "The directory status. Either `0` for disabled or `1` for enabled.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "sync_interval": {
                      "description": "The synchronization interval of the IDP directory in seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "sync_state": {
                      "description": "The IDP directory synchronization state. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ]
                    },
                    "user_base_dn": {
                      "description": "The base distinguished name of a user. Contains a series of comma-delimited pairs formed as `key=value`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_count": {
                      "description": "The total count of users in the IDP directory.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "user_display_name": {
                      "description": "The display name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_email": {
                      "description": "The email of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_fname": {
                      "description": "The first name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_lname": {
                      "description": "The last name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_memberof": {
                      "description": "The member status of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_memberuid": {
                      "description": "The member UID of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_object_classes": {
                      "description": "The user's object class.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "description": "The object class of a user.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "user_phone_num": {
                      "description": "The phone number of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_principal": {
                      "description": "The login of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_samaccountname": {
                      "description": "The kerberos client principal name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_search_filter": {
                      "description": "The search filter for a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_upn": {
                      "description": "The principal name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the directory.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/idpdirectory.yaml"
                  }
                },
                "example": [
                  {
                    "directory": "AtjdKbXqQFmp0TDD9TtaHg",
                    "resource": "idpdirectory",
                    "uuid_url": "dDg9SKXXQgugaNCB3x8nrg",
                    "resource_uri": {
                      "directory": "/api/v1/directory/AtjdKbXqQFmp0TDD9TtaHg",
                      "href": "/api/v1/idpdirectory/dDg9SKXXQgugaNCB3x8nrg",
                      "idp": "/api/v1/idp/xz_HqmAdSNeSnoCWss9Phg"
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Gets a list of IDP directories.",
        "operationId": "get-idp-directories",
        "summary": "List IDP directories",
        "tags": [
          "IDP directories"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-idp-directories"
        },
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 1000,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 5
                  },
                  "objects": [
                    {
                      "admin_user": null,
                      "api_key": null,
                      "auth_request_signed": false,
                      "auth_response_encrypt": false,
                      "chase_referral": false,
                      "cname": null,
                      "company_id": null,
                      "conf_state": 1,
                      "created_at": "2017-01-04T14:58:29.884927",
                      "description": null,
                      "dialin_sni": null,
                      "directory_status": 3,
                      "directory_type": 1,
                      "global_catalog": false,
                      "group_base_dn": null,
                      "group_count": 11,
                      "group_members": "member",
                      "group_name": "cn",
                      "group_search_filter": "(objectClass=group)",
                      "group_token": "primaryGroupToken",
                      "host": null,
                      "last_sync": "2017-01-04T14:58:29.885037",
                      "logout_url": null,
                      "metadata": null,
                      "mfa": "off",
                      "modified_at": "2018-05-18T04:37:13.487706",
                      "name": "Cloud Directory",
                      "nameidformat": null,
                      "ou_attr": null,
                      "ou_filter": null,
                      "password_change_allow": false,
                      "password_change_threshold": 0,
                      "password_complexity_message": null,
                      "password_expire_warn_threshold": 0,
                      "password_policy_default": "",
                      "password_reset_allow": false,
                      "port": 636,
                      "resource": "directories",
                      "root_dn": null,
                      "schema_attributes": "{}",
                      "server_cert_validate": true,
                      "service": 6,
                      "signed_request": false,
                      "ssl": true,
                      "status": 1,
                      "sync_interval": 21600,
                      "sync_state": 1,
                      "user_base_dn": null,
                      "user_count": 11,
                      "user_display_name": "displayName",
                      "user_email": "mail",
                      "user_fname": "givenName",
                      "user_lname": "sn",
                      "user_memberof": "memberOf",
                      "user_memberuid": "memberUid",
                      "user_phone_num": "telephoneNumber",
                      "user_principal": "sAMAccountName",
                      "user_samaccountname": "sAMAccountName",
                      "user_search_filter": "(&(objectClass=user)(objectClass=person))",
                      "user_upn": "userPrincipalName",
                      "uuid_url": "U59wJq3dQNuanDH8VMc1Gg",
                      "agents": [],
                      "domains": [],
                      "group_object_classes": [
                        "group",
                        "groupOfNames"
                      ],
                      "kerb_realms": [],
                      "ou_object_classes": [
                        "organizationalUnit"
                      ],
                      "user_object_classes": [
                        "person",
                        "organizationalPerson",
                        "user",
                        "inetOrgPerson"
                      ],
                      "attribute_map": {
                        "user.countryCode": "cloud.country_code",
                        "user.email": "cloud.email",
                        "user.firstName": "cloud.first_name",
                        "user.lastName": "cloud.last_name",
                        "user.netbios": "cloud.netbios",
                        "user.persistentId": "cloud.uuid",
                        "user.phoneNumber": "cloud.phone_number",
                        "user.samAccountName": "cloud.samaccountname",
                        "user.userPrincipleName": "cloud.user_principle_name"
                      },
                      "password_filter": {},
                      "resource_uri": {
                        "groups": "/api/v1/directories/U59wJq3dQNuanDH8VMc1Gg/groups/",
                        "href": "/api/v1/directories/U59wJq3dQNuanDH8VMc1Gg",
                        "users": "/api/v1/directories/U59wJq3dQNuanDH8VMc1Gg/users/"
                      }
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access IDP directory data.",
                  "type": "object",
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "type": "object",
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "Contains IDP directory data.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Enterprise Access IDP directory information.",
                        "type": "object",
                        "required": [
                          "admin_user",
                          "agents",
                          "api_key",
                          "attribute_map",
                          "auth_request_signed",
                          "auth_response_encrypt",
                          "chase_referral",
                          "cname",
                          "company_id",
                          "conf_state",
                          "description",
                          "dialin_sni",
                          "directory_status",
                          "directory_type",
                          "domains",
                          "global_catalog",
                          "group_base_dn",
                          "group_count",
                          "group_members",
                          "group_name",
                          "group_object_classes",
                          "group_search_filter",
                          "group_token",
                          "host",
                          "kerb_realms",
                          "last_sync",
                          "logout_url",
                          "metadata",
                          "mfa",
                          "name",
                          "nameidformat",
                          "ou_attr",
                          "ou_filter",
                          "ou_object_classes",
                          "password_change_allow",
                          "password_change_threshold",
                          "password_complexity_message",
                          "password_expire_warn_threshold",
                          "password_filter",
                          "password_policy_default",
                          "password_reset_allow",
                          "port",
                          "resource",
                          "resource_uri",
                          "root_dn",
                          "schema_attributes",
                          "server_cert_validate",
                          "service",
                          "signed_request",
                          "ssl",
                          "status",
                          "sync_interval",
                          "sync_state",
                          "user_base_dn",
                          "user_count",
                          "user_display_name",
                          "user_email",
                          "user_fname",
                          "user_lname",
                          "user_memberof",
                          "user_memberuid",
                          "user_object_classes",
                          "user_phone_num",
                          "user_principal",
                          "user_samaccountname",
                          "user_search_filter",
                          "user_upn"
                        ],
                        "properties": {
                          "admin_user": {
                            "description": "The administrator user account for the IDP directory.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "agents": {
                            "description": "Connectors assigned to this IDP directory.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Connectors assigned to this IDP directory.",
                              "type": "object",
                              "required": [
                                "name",
                                "uuid_url"
                              ],
                              "properties": {
                                "name": {
                                  "description": "The name of the connector.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "uuid_url": {
                                  "description": "A unique identifier for the connector.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "api_key": {
                            "description": "The API key of the IDP directory.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "attribute_map": {
                            "additionalProperties": false,
                            "description": "The attribute mapping for the IDP directory.",
                            "type": "object",
                            "required": [
                              "user.countryCode",
                              "user.email",
                              "user.firstName",
                              "user.lastName",
                              "user.netbios",
                              "user.persistentId",
                              "user.phoneNumber",
                              "user.samAccountName",
                              "user.userPrincipleName"
                            ],
                            "properties": {
                              "user.countryCode": {
                                "description": "The user's country code.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "user.email": {
                                "description": "The user's email address.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "user.firstName": {
                                "description": "The user's first name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "user.lastName": {
                                "description": "The user's last name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "user.netbios": {
                                "description": "The user's NetBIOS name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "user.persistentId": {
                                "description": "The user persistent ID.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "user.phoneNumber": {
                                "description": "The user's phone number.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "user.samAccountName": {
                                "description": "The user's Security Account Manager (SAM) account name.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "user.userPrincipleName": {
                                "description": "The user's principle name.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "auth_request_signed": {
                            "description": "Whether the authentication request is signed.",
                            "type": "boolean"
                          },
                          "auth_response_encrypt": {
                            "description": "Whether the authentication response is encrypted.",
                            "type": "boolean"
                          },
                          "chase_referral": {
                            "description": "Whether to chase referral.",
                            "type": "boolean"
                          },
                          "cname": {
                            "description": "The IDP directory cname.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "company_id": {
                            "description": "The company ID of the IDP directory.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "conf_state": {
                            "description": "The configuration state of the IDP directory. Either `0` for not configured or `1` for configured.",
                            "type": "integer",
                            "enum": [
                              0,
                              1
                            ]
                          },
                          "created_at": {
                            "description": "ISO 8601 timestamp marking the IDP directory object's creation.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "description": {
                            "description": "ISO 8601 timestamp marking the IDP directory object's creation.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "dialin_sni": {
                            "description": "The dial-in SNI for the IDP directory.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "directory_status": {
                            "description": "The status of the directory. Either `1` for not added, `2` for added, `3` for no agent, `4` for pending, `5` for unreachable, or `6` for okay.",
                            "type": "integer",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6
                            ]
                          },
                          "directory_type": {
                            "default": 2,
                            "description": "The type of directory. Either `1` for cloud, `2` for enterprise, `3` for third party, `4` for Akamai, or `5` for Akamai MSP.",
                            "type": "integer",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5
                            ]
                          },
                          "domains": {
                            "description": "Contains a list of domains for a directory.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "description": "The domain name.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "global_catalog": {
                            "description": "Enables global catalog.",
                            "type": "boolean"
                          },
                          "group_base_dn": {
                            "description": "The base Distinguished Name (DN) that identifies the group entry in an IDP directory. Contains a series of comma-delimited pairs formed as `key=value`.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "group_count": {
                            "description": "The number of groups for the IDP directory.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "group_members": {
                            "description": "The members of the group.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "group_name": {
                            "description": "The name of the group.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "group_object_classes": {
                            "description": "Group object classes that define custom LDAP mappings of users and groups.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "description": "Group object classes for custom LDAP mappings of users and groups.",
                              "type": "object",
                              "properties": {
                                "group": {
                                  "description": "The groups synchronized with the IDP directory.",
                                  "minLength": 1,
                                  "type": "string"
                                },
                                "groupOfNames": {
                                  "description": "All active directory groups.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "group_search_filter": {
                            "description": "The search filter for the group, such as `(objectClass=group)`.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "group_token": {
                            "description": "The primary group token.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "host": {
                            "description": "The IDP directory host.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "kerb_realms": {
                            "description": "Kerberos realms for the IDP directory.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "additionalProperties": false,
                              "type": "object",
                              "required": [
                                "kdclist",
                                "realm"
                              ],
                              "properties": {
                                "kdclist": {
                                  "additionalProperties": false,
                                  "description": "Kerberos Key Distribution Centers (KDC) information.",
                                  "type": "object",
                                  "required": [
                                    "ip",
                                    "port"
                                  ],
                                  "properties": {
                                    "ip": {
                                      "description": "The IP address of the KDC.",
                                      "format": "ipv4",
                                      "type": "string"
                                    },
                                    "port": {
                                      "description": "The port number of the KDC.",
                                      "minimum": 0,
                                      "type": "integer"
                                    }
                                  }
                                },
                                "realm": {
                                  "description": "The kerberos realm.",
                                  "minLength": 1,
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "last_sync": {
                            "description": "ISO 8601 timestamp marking the IDP directory's last synchronization.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "logout_url": {
                            "description": "The logout URL for the directory.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "metadata": {
                            "description": "The IDP directory metadata.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "mfa": {
                            "description": "Enables multifactor authentication. Either an `on` or `off` string.",
                            "type": "string",
                            "enum": [
                              "on",
                              "off"
                            ]
                          },
                          "modified_at": {
                            "description": "ISO 8601 timestamp marking the directory's last modification.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the IDP directory.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "nameidformat": {
                            "description": "The name ID format.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "ou_attr": {
                            "description": "The organization unit's attributes.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "ou_filter": {
                            "description": "The organization unit to filter by. Specify `null` if you want to provide this later.",
                            "minLength": 1,
                            "nullable": true,
                            "type": "string"
                          },
                          "ou_object_classes": {
                            "description": "The organization unit's object classes.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "description": "The organization unit's object classes.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "password_change_allow": {
                            "description": "Whether password change is allowed.",
                            "type": "boolean"
                          },
                          "password_change_threshold": {
                            "description": "The password change threshold in seconds.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "password_complexity_message": {
                            "description": "The password complexity message.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "password_expire_warn_threshold": {
                            "description": "The password expiration warning threshold in seconds.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "password_filter": {
                            "additionalProperties": false,
                            "description": "The password format requirement filters.",
                            "type": "object",
                            "properties": {
                              "min-char-groups": {
                                "description": "Minimum number of character groups for the password. ",
                                "minimum": 2,
                                "type": "integer"
                              },
                              "min-lower": {
                                "description": "Minimum number of lowercase characters for the password.",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "min-num": {
                                "description": "Minimum number of numbers for the password. ",
                                "minimum": 2,
                                "type": "integer"
                              },
                              "min-other": {
                                "description": "Minimum number of other characters for the password.",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "min-special": {
                                "description": "Minimum number of special characters for the password.",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "min-upper": {
                                "description": "Minimum number of uppercase characters for the password.",
                                "minimum": 1,
                                "type": "integer"
                              },
                              "name-check": {
                                "description": "Checks whether the password contains the user's name.",
                                "type": "boolean"
                              },
                              "uid-check": {
                                "description": "Checks whether the password contains the user ID.",
                                "type": "boolean"
                              }
                            }
                          },
                          "password_policy_default": {
                            "description": "The default password policy for the IDP directory.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "password_reset_allow": {
                            "description": "Whether to allow password reset.",
                            "type": "boolean"
                          },
                          "port": {
                            "description": "The port number of the IDP directory.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "resource": {
                            "description": "The IDP directory resource name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource_uri": {
                            "additionalProperties": false,
                            "description": "Specifies the location of various IDP directory resources.",
                            "type": "object",
                            "required": [
                              "groups",
                              "href",
                              "users"
                            ],
                            "properties": {
                              "groups": {
                                "description": "The URL for group details.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "href": {
                                "description": "The URL for IDP directory details.",
                                "minLength": 1,
                                "type": "string"
                              },
                              "users": {
                                "description": "The URL for the list of users.",
                                "minLength": 1,
                                "type": "string"
                              }
                            }
                          },
                          "root_dn": {
                            "description": "The root distinguished name of the IDP directory. Contains a series of comma-delimited pairs formed as `key=value`.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "schema_attributes": {
                            "description": "The directory schema attributes.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "server_cert_validate": {
                            "description": "Whether to validate server certificates.",
                            "type": "boolean"
                          },
                          "service": {
                            "description": "The type of directory service. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                            "type": "integer",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6,
                              7,
                              8,
                              9,
                              10,
                              11
                            ]
                          },
                          "signed_request": {
                            "description": "Whether the request is signed.",
                            "type": "boolean"
                          },
                          "ssl": {
                            "description": "Enables SSL.",
                            "type": "boolean"
                          },
                          "status": {
                            "description": "The directory status. Either `0` for disabled or `1` for enabled.",
                            "type": "integer",
                            "enum": [
                              0,
                              1
                            ]
                          },
                          "sync_interval": {
                            "description": "The synchronization interval of the IDP directory in seconds.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "sync_state": {
                            "description": "The IDP directory synchronization state. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                            "type": "integer",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6
                            ]
                          },
                          "user_base_dn": {
                            "description": "The base distinguished name of a user. Contains a series of comma-delimited pairs formed as `key=value`.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_count": {
                            "description": "The total count of users in the IDP directory.",
                            "minimum": 0,
                            "type": "integer"
                          },
                          "user_display_name": {
                            "description": "The display name of a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_email": {
                            "description": "The email of a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_fname": {
                            "description": "The first name of a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_lname": {
                            "description": "The last name of a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_memberof": {
                            "description": "The member status of a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_memberuid": {
                            "description": "The member UID of a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_object_classes": {
                            "description": "The user's object class.",
                            "minItems": 1,
                            "type": "array",
                            "items": {
                              "description": "The object class of a user.",
                              "minLength": 1,
                              "type": "string"
                            }
                          },
                          "user_phone_num": {
                            "description": "The phone number of a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_principal": {
                            "description": "The login of a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_samaccountname": {
                            "description": "The kerberos client principal name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_search_filter": {
                            "description": "The search filter for a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "user_upn": {
                            "description": "The principal name of a user.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the directory.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/idpdirectory.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/idpdirectories.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/mgmt-pop/idpdirectory/{idpdirectory_id}": {
      "get": {
        "description": "Gets the specified IDP directory.",
        "operationId": "get-idp-directory",
        "summary": "Get an IDP directory",
        "tags": [
          "IDP directories"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-idp-directory"
        },
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "example": {
                  "admin_user": null,
                  "api_key": null,
                  "auth_request_signed": false,
                  "auth_response_encrypt": false,
                  "chase_referral": false,
                  "cname": null,
                  "company_id": null,
                  "conf_state": 1,
                  "created_at": "2017-01-04T14:58:29.884927",
                  "description": null,
                  "dialin_sni": null,
                  "directory_status": 3,
                  "directory_type": 1,
                  "global_catalog": false,
                  "group_base_dn": null,
                  "group_count": 11,
                  "group_members": "asmith",
                  "group_name": "cn",
                  "group_search_filter": "(objectClass=group)",
                  "group_token": "primaryGroupToken",
                  "host": null,
                  "last_sync": "2017-01-04T14:58:29.885037",
                  "logout_url": null,
                  "metadata": null,
                  "mfa": "off",
                  "modified_at": "2018-05-18T04:37:13.487706",
                  "name": "Cloud Directory",
                  "nameidformat": null,
                  "ou_attr": null,
                  "ou_filter": null,
                  "password_change_allow": false,
                  "password_change_threshold": 0,
                  "password_complexity_message": null,
                  "password_expire_warn_threshold": 0,
                  "password_policy_default": "",
                  "password_reset_allow": false,
                  "port": 636,
                  "resource": "directories",
                  "root_dn": null,
                  "schema_attributes": "{}",
                  "server_cert_validate": true,
                  "service": 6,
                  "signed_request": false,
                  "ssl": true,
                  "status": 1,
                  "sync_interval": 21600,
                  "sync_state": 1,
                  "user_base_dn": null,
                  "user_count": 11,
                  "user_display_name": "Anne Smith",
                  "user_email": "asmith@tech.com",
                  "user_fname": "Anne",
                  "user_lname": "smith",
                  "user_memberof": "US_IT",
                  "user_memberuid": "asmith",
                  "user_phone_num": "8005551213",
                  "user_principal": "asmith",
                  "user_samaccountname": "asmith",
                  "user_search_filter": "(&(objectClass=user)(objectClass=person))",
                  "user_upn": "asmith",
                  "uuid_url": "U59wJq3dQNuanDH8VMc1Gg",
                  "agents": [],
                  "domains": [],
                  "group_object_classes": [
                    "group",
                    "groupOfNames"
                  ],
                  "kerb_realms": [],
                  "ou_object_classes": [
                    "organizationalUnit"
                  ],
                  "user_object_classes": [
                    "person",
                    "organizationalPerson",
                    "user",
                    "inetOrgPerson"
                  ],
                  "attribute_map": {
                    "user.countryCode": "cloud.US",
                    "user.email": "cloud.asmith@tech.com",
                    "user.firstName": "cloud.anne",
                    "user.lastName": "cloud.smith",
                    "user.netbios": "cloud.netbios",
                    "user.persistentId": "cloud.uuid",
                    "user.phoneNumber": "cloud.8005551213",
                    "user.samAccountName": "cloud.annesmith",
                    "user.userPrincipleName": "cloud.annesmith"
                  },
                  "password_filter": {
                    "min-char-groups": 2,
                    "min-lower": 1,
                    "min-num": 2,
                    "min-other": 0,
                    "min-special": 1,
                    "min-upper": 1,
                    "name-check": true,
                    "uid-check": true
                  },
                  "resource_uri": {
                    "groups": "/api/v1/directories/U59wJq3dQNuanDH8VMc1Gg/groups/",
                    "href": "/api/v1/directories/U59wJq3dQNuanDH8VMc1Gg",
                    "users": "/api/v1/directories/U59wJq3dQNuanDH8VMc1Gg/users/"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access IDP directory information.",
                  "type": "object",
                  "required": [
                    "admin_user",
                    "agents",
                    "api_key",
                    "attribute_map",
                    "auth_request_signed",
                    "auth_response_encrypt",
                    "chase_referral",
                    "cname",
                    "company_id",
                    "conf_state",
                    "description",
                    "dialin_sni",
                    "directory_status",
                    "directory_type",
                    "domains",
                    "global_catalog",
                    "group_base_dn",
                    "group_count",
                    "group_members",
                    "group_name",
                    "group_object_classes",
                    "group_search_filter",
                    "group_token",
                    "host",
                    "kerb_realms",
                    "last_sync",
                    "logout_url",
                    "metadata",
                    "mfa",
                    "name",
                    "nameidformat",
                    "ou_attr",
                    "ou_filter",
                    "ou_object_classes",
                    "password_change_allow",
                    "password_change_threshold",
                    "password_complexity_message",
                    "password_expire_warn_threshold",
                    "password_filter",
                    "password_policy_default",
                    "password_reset_allow",
                    "port",
                    "resource",
                    "resource_uri",
                    "root_dn",
                    "schema_attributes",
                    "server_cert_validate",
                    "service",
                    "signed_request",
                    "ssl",
                    "status",
                    "sync_interval",
                    "sync_state",
                    "user_base_dn",
                    "user_count",
                    "user_display_name",
                    "user_email",
                    "user_fname",
                    "user_lname",
                    "user_memberof",
                    "user_memberuid",
                    "user_object_classes",
                    "user_phone_num",
                    "user_principal",
                    "user_samaccountname",
                    "user_search_filter",
                    "user_upn"
                  ],
                  "properties": {
                    "admin_user": {
                      "description": "The administrator user account for the IDP directory.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "agents": {
                      "description": "Connectors assigned to this IDP directory.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Connectors assigned to this IDP directory.",
                        "type": "object",
                        "required": [
                          "name",
                          "uuid_url"
                        ],
                        "properties": {
                          "name": {
                            "description": "The name of the connector.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the connector.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "api_key": {
                      "description": "The API key of the IDP directory.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "attribute_map": {
                      "additionalProperties": false,
                      "description": "The attribute mapping for the IDP directory.",
                      "type": "object",
                      "required": [
                        "user.countryCode",
                        "user.email",
                        "user.firstName",
                        "user.lastName",
                        "user.netbios",
                        "user.persistentId",
                        "user.phoneNumber",
                        "user.samAccountName",
                        "user.userPrincipleName"
                      ],
                      "properties": {
                        "user.countryCode": {
                          "description": "The user's country code.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.email": {
                          "description": "The user's email address.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.firstName": {
                          "description": "The user's first name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.lastName": {
                          "description": "The user's last name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.netbios": {
                          "description": "The user's NetBIOS name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.persistentId": {
                          "description": "The user persistent ID.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.phoneNumber": {
                          "description": "The user's phone number.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.samAccountName": {
                          "description": "The user's Security Account Manager (SAM) account name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.userPrincipleName": {
                          "description": "The user's principle name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "auth_request_signed": {
                      "description": "Whether the authentication request is signed.",
                      "type": "boolean"
                    },
                    "auth_response_encrypt": {
                      "description": "Whether the authentication response is encrypted.",
                      "type": "boolean"
                    },
                    "chase_referral": {
                      "description": "Whether to chase referral.",
                      "type": "boolean"
                    },
                    "cname": {
                      "description": "The IDP directory cname.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "company_id": {
                      "description": "The company ID of the IDP directory.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "conf_state": {
                      "description": "The configuration state of the IDP directory. Either `0` for not configured or `1` for configured.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the IDP directory object's creation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "description": "ISO 8601 timestamp marking the IDP directory object's creation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "dialin_sni": {
                      "description": "The dial-in SNI for the IDP directory.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "directory_status": {
                      "description": "The status of the directory. Either `1` for not added, `2` for added, `3` for no agent, `4` for pending, `5` for unreachable, or `6` for okay.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ]
                    },
                    "directory_type": {
                      "default": 2,
                      "description": "The type of directory. Either `1` for cloud, `2` for enterprise, `3` for third party, `4` for Akamai, or `5` for Akamai MSP.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ]
                    },
                    "domains": {
                      "description": "Contains a list of domains for a directory.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "description": "The domain name.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "global_catalog": {
                      "description": "Enables global catalog.",
                      "type": "boolean"
                    },
                    "group_base_dn": {
                      "description": "The base Distinguished Name (DN) that identifies the group entry in an IDP directory. Contains a series of comma-delimited pairs formed as `key=value`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_count": {
                      "description": "The number of groups for the IDP directory.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "group_members": {
                      "description": "The members of the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_name": {
                      "description": "The name of the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_object_classes": {
                      "description": "Group object classes that define custom LDAP mappings of users and groups.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Group object classes for custom LDAP mappings of users and groups.",
                        "type": "object",
                        "properties": {
                          "group": {
                            "description": "The groups synchronized with the IDP directory.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "groupOfNames": {
                            "description": "All active directory groups.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "group_search_filter": {
                      "description": "The search filter for the group, such as `(objectClass=group)`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_token": {
                      "description": "The primary group token.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "host": {
                      "description": "The IDP directory host.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "kerb_realms": {
                      "description": "Kerberos realms for the IDP directory.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "kdclist",
                          "realm"
                        ],
                        "properties": {
                          "kdclist": {
                            "additionalProperties": false,
                            "description": "Kerberos Key Distribution Centers (KDC) information.",
                            "type": "object",
                            "required": [
                              "ip",
                              "port"
                            ],
                            "properties": {
                              "ip": {
                                "description": "The IP address of the KDC.",
                                "format": "ipv4",
                                "type": "string"
                              },
                              "port": {
                                "description": "The port number of the KDC.",
                                "minimum": 0,
                                "type": "integer"
                              }
                            }
                          },
                          "realm": {
                            "description": "The kerberos realm.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "last_sync": {
                      "description": "ISO 8601 timestamp marking the IDP directory's last synchronization.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "logout_url": {
                      "description": "The logout URL for the directory.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "metadata": {
                      "description": "The IDP directory metadata.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mfa": {
                      "description": "Enables multifactor authentication. Either an `on` or `off` string.",
                      "type": "string",
                      "enum": [
                        "on",
                        "off"
                      ]
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the directory's last modification.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the IDP directory.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "nameidformat": {
                      "description": "The name ID format.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "ou_attr": {
                      "description": "The organization unit's attributes.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "ou_filter": {
                      "description": "The organization unit to filter by. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "ou_object_classes": {
                      "description": "The organization unit's object classes.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "description": "The organization unit's object classes.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "password_change_allow": {
                      "description": "Whether password change is allowed.",
                      "type": "boolean"
                    },
                    "password_change_threshold": {
                      "description": "The password change threshold in seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "password_complexity_message": {
                      "description": "The password complexity message.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "password_expire_warn_threshold": {
                      "description": "The password expiration warning threshold in seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "password_filter": {
                      "additionalProperties": false,
                      "description": "The password format requirement filters.",
                      "type": "object",
                      "properties": {
                        "min-char-groups": {
                          "description": "Minimum number of character groups for the password. ",
                          "minimum": 2,
                          "type": "integer"
                        },
                        "min-lower": {
                          "description": "Minimum number of lowercase characters for the password.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "min-num": {
                          "description": "Minimum number of numbers for the password. ",
                          "minimum": 2,
                          "type": "integer"
                        },
                        "min-other": {
                          "description": "Minimum number of other characters for the password.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "min-special": {
                          "description": "Minimum number of special characters for the password.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "min-upper": {
                          "description": "Minimum number of uppercase characters for the password.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "name-check": {
                          "description": "Checks whether the password contains the user's name.",
                          "type": "boolean"
                        },
                        "uid-check": {
                          "description": "Checks whether the password contains the user ID.",
                          "type": "boolean"
                        }
                      }
                    },
                    "password_policy_default": {
                      "description": "The default password policy for the IDP directory.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "password_reset_allow": {
                      "description": "Whether to allow password reset.",
                      "type": "boolean"
                    },
                    "port": {
                      "description": "The port number of the IDP directory.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "resource": {
                      "description": "The IDP directory resource name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of various IDP directory resources.",
                      "type": "object",
                      "required": [
                        "groups",
                        "href",
                        "users"
                      ],
                      "properties": {
                        "groups": {
                          "description": "The URL for group details.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The URL for IDP directory details.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "users": {
                          "description": "The URL for the list of users.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "root_dn": {
                      "description": "The root distinguished name of the IDP directory. Contains a series of comma-delimited pairs formed as `key=value`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "schema_attributes": {
                      "description": "The directory schema attributes.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "server_cert_validate": {
                      "description": "Whether to validate server certificates.",
                      "type": "boolean"
                    },
                    "service": {
                      "description": "The type of directory service. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11
                      ]
                    },
                    "signed_request": {
                      "description": "Whether the request is signed.",
                      "type": "boolean"
                    },
                    "ssl": {
                      "description": "Enables SSL.",
                      "type": "boolean"
                    },
                    "status": {
                      "description": "The directory status. Either `0` for disabled or `1` for enabled.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "sync_interval": {
                      "description": "The synchronization interval of the IDP directory in seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "sync_state": {
                      "description": "The IDP directory synchronization state. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ]
                    },
                    "user_base_dn": {
                      "description": "The base distinguished name of a user. Contains a series of comma-delimited pairs formed as `key=value`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_count": {
                      "description": "The total count of users in the IDP directory.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "user_display_name": {
                      "description": "The display name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_email": {
                      "description": "The email of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_fname": {
                      "description": "The first name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_lname": {
                      "description": "The last name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_memberof": {
                      "description": "The member status of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_memberuid": {
                      "description": "The member UID of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_object_classes": {
                      "description": "The user's object class.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "description": "The object class of a user.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "user_phone_num": {
                      "description": "The phone number of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_principal": {
                      "description": "The login of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_samaccountname": {
                      "description": "The kerberos client principal name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_search_filter": {
                      "description": "The search filter for a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_upn": {
                      "description": "The principal name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the directory.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/idpdirectory.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates an existing IDP directory.",
        "operationId": "put-idp-directory",
        "summary": "Modify an IDP directory",
        "tags": [
          "IDP directories"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-idp-directory"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "admin_pwd": "3244234323",
                "admin_user": "admmin",
                "api_key": null,
                "auth_request_signed": false,
                "auth_response_encrypt": false,
                "chase_referral": false,
                "cname": "dir-jex2kaugr-gimcthdupzza.login.stage.akamai-access.com",
                "company_id": null,
                "conf_state": 1,
                "created_at": "2019-07-23T05:55:18.577022",
                "description": null,
                "dialin_sni": "dir-jex2kaugr-gimcthdupzza.login.dialin.stage.akamai-access.com",
                "directory_status": 3,
                "directory_type": 2,
                "global_catalog": false,
                "group_base_dn": "ldapdomain",
                "group_count": 0,
                "group_members": "member",
                "group_name": "cn",
                "group_search_filter": "(|(objectClass=posixGroup)(objectClass=groupOfNames))",
                "group_token": "gidNumber",
                "host": "ldap.company.com",
                "last_sync": "2019-07-23T05:55:18.577146",
                "logout_url": null,
                "metadata": null,
                "mfa": "off",
                "name": "idpDirectory#1",
                "nameidformat": null,
                "ou_attr": null,
                "ou_filter": null,
                "password_change_allow": false,
                "password_change_threshold": 0,
                "password_complexity_message": "",
                "password_expire_warn_threshold": 0,
                "password_policy_default": "",
                "password_reset_allow": false,
                "port": 636,
                "resource": "directories",
                "root_dn": "ldapdomain",
                "schema_attributes": "{}",
                "server_cert_validate": true,
                "service": 2,
                "signed_request": false,
                "ssl": true,
                "status": 1,
                "sync_interval": 21600,
                "sync_state": 1,
                "user_base_dn": "ldapdomain",
                "user_count": 0,
                "user_display_name": "displayName",
                "user_email": "mail",
                "user_fname": "givenName",
                "user_lname": "sn",
                "user_memberof": "gidNumber",
                "user_memberuid": "memberUid",
                "user_phone_num": "telephoneNumber",
                "user_principal": "uid",
                "user_samaccountname": "uid",
                "user_search_filter": "(&(objectClass=inetOrgPerson)(objectClass=posixAccount))",
                "user_upn": "userPrincipalName",
                "agents": [],
                "group_object_classes": [
                  "group",
                  "groupOfNames",
                  "posixGroup"
                ],
                "kerb_realms": [],
                "ou_object_classes": [
                  "organizationalUnit"
                ],
                "user_object_classes": [
                  "person",
                  "organizationalPerson",
                  "user",
                  "inetOrgPerson"
                ],
                "attribute_map": {
                  "user.countryCode": "countryCode",
                  "user.email": "mail",
                  "user.firstName": "givenName",
                  "user.groups": "member",
                  "user.lastName": "sn",
                  "user.netbios": "",
                  "user.persistentId": "entryUUID",
                  "user.phoneNumber": "telephoneNumber",
                  "user.samAccountName": "uid",
                  "user.userPrincipleName": "userPrincipalName"
                },
                "password_filter": {},
                "domains": [
                  {
                    "name": ""
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Enterprise Access IDP directory information.",
                "type": "object",
                "required": [
                  "admin_user",
                  "agents",
                  "api_key",
                  "attribute_map",
                  "auth_request_signed",
                  "auth_response_encrypt",
                  "chase_referral",
                  "cname",
                  "company_id",
                  "conf_state",
                  "description",
                  "dialin_sni",
                  "directory_status",
                  "directory_type",
                  "domains",
                  "global_catalog",
                  "group_base_dn",
                  "group_count",
                  "group_members",
                  "group_name",
                  "group_object_classes",
                  "group_search_filter",
                  "group_token",
                  "host",
                  "kerb_realms",
                  "last_sync",
                  "logout_url",
                  "metadata",
                  "mfa",
                  "name",
                  "nameidformat",
                  "ou_attr",
                  "ou_filter",
                  "ou_object_classes",
                  "password_change_allow",
                  "password_change_threshold",
                  "password_complexity_message",
                  "password_expire_warn_threshold",
                  "password_filter",
                  "password_policy_default",
                  "password_reset_allow",
                  "port",
                  "resource",
                  "resource_uri",
                  "root_dn",
                  "schema_attributes",
                  "server_cert_validate",
                  "service",
                  "signed_request",
                  "ssl",
                  "status",
                  "sync_interval",
                  "sync_state",
                  "user_base_dn",
                  "user_count",
                  "user_display_name",
                  "user_email",
                  "user_fname",
                  "user_lname",
                  "user_memberof",
                  "user_memberuid",
                  "user_object_classes",
                  "user_phone_num",
                  "user_principal",
                  "user_samaccountname",
                  "user_search_filter",
                  "user_upn"
                ],
                "properties": {
                  "admin_user": {
                    "description": "The administrator user account for the IDP directory.",
                    "example": "{{admin_user}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "agents": {
                    "description": "Connectors assigned to this IDP directory.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Connectors assigned to this IDP directory.",
                      "type": "object",
                      "required": [
                        "name",
                        "uuid_url"
                      ],
                      "properties": {
                        "name": {
                          "description": "The name of the connector.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "uuid_url": {
                          "description": "A unique identifier for the connector.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "api_key": {
                    "description": "The API key of the IDP directory.",
                    "example": "{{api_key}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "attribute_map": {
                    "additionalProperties": false,
                    "description": "The attribute mapping for the IDP directory.",
                    "type": "object",
                    "required": [
                      "user.countryCode",
                      "user.email",
                      "user.firstName",
                      "user.lastName",
                      "user.netbios",
                      "user.persistentId",
                      "user.phoneNumber",
                      "user.samAccountName",
                      "user.userPrincipleName"
                    ],
                    "properties": {
                      "user.countryCode": {
                        "description": "The user's country code.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.email": {
                        "description": "The user's email address.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.firstName": {
                        "description": "The user's first name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.lastName": {
                        "description": "The user's last name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.netbios": {
                        "description": "The user's NetBIOS name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.persistentId": {
                        "description": "The user persistent ID.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.phoneNumber": {
                        "description": "The user's phone number.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.samAccountName": {
                        "description": "The user's Security Account Manager (SAM) account name.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "user.userPrincipleName": {
                        "description": "The user's principle name.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "auth_request_signed": {
                    "description": "Whether the authentication request is signed.",
                    "example": "{{auth_request_signed}}",
                    "type": "boolean"
                  },
                  "auth_response_encrypt": {
                    "description": "Whether the authentication response is encrypted.",
                    "example": "{{auth_response_encrypt}}",
                    "type": "boolean"
                  },
                  "chase_referral": {
                    "description": "Whether to chase referral.",
                    "example": "{{chase_referral}}",
                    "type": "boolean"
                  },
                  "cname": {
                    "description": "The IDP directory cname.",
                    "example": "{{cname}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "company_id": {
                    "description": "The company ID of the IDP directory.",
                    "example": "{{company_id}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "conf_state": {
                    "description": "The configuration state of the IDP directory. Either `0` for not configured or `1` for configured.",
                    "example": "{{conf_state}}",
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ]
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking the IDP directory object's creation.",
                    "example": "{{created_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "description": {
                    "description": "ISO 8601 timestamp marking the IDP directory object's creation.",
                    "example": "{{description}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "dialin_sni": {
                    "description": "The dial-in SNI for the IDP directory.",
                    "example": "{{dialin_sni}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "directory_status": {
                    "description": "The status of the directory. Either `1` for not added, `2` for added, `3` for no agent, `4` for pending, `5` for unreachable, or `6` for okay.",
                    "example": "{{directory_status}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ]
                  },
                  "directory_type": {
                    "default": 2,
                    "description": "The type of directory. Either `1` for cloud, `2` for enterprise, `3` for third party, `4` for Akamai, or `5` for Akamai MSP.",
                    "example": "{{directory_type}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5
                    ]
                  },
                  "domains": {
                    "description": "Contains a list of domains for a directory.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "description": "The domain name.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "global_catalog": {
                    "description": "Enables global catalog.",
                    "example": "{{global_catalog}}",
                    "type": "boolean"
                  },
                  "group_base_dn": {
                    "description": "The base Distinguished Name (DN) that identifies the group entry in an IDP directory. Contains a series of comma-delimited pairs formed as `key=value`.",
                    "example": "{{group_base_dn}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "group_count": {
                    "description": "The number of groups for the IDP directory.",
                    "example": "{{group_count}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "group_members": {
                    "description": "The members of the group.",
                    "example": "{{group_members}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "group_name": {
                    "description": "The name of the group.",
                    "example": "{{group_name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "group_object_classes": {
                    "description": "Group object classes that define custom LDAP mappings of users and groups.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "Group object classes for custom LDAP mappings of users and groups.",
                      "type": "object",
                      "properties": {
                        "group": {
                          "description": "The groups synchronized with the IDP directory.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "groupOfNames": {
                          "description": "All active directory groups.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "group_search_filter": {
                    "description": "The search filter for the group, such as `(objectClass=group)`.",
                    "example": "{{group_search_filter}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "group_token": {
                    "description": "The primary group token.",
                    "example": "{{group_token}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "host": {
                    "description": "The IDP directory host.",
                    "example": "{{host}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "kerb_realms": {
                    "description": "Kerberos realms for the IDP directory.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "type": "object",
                      "required": [
                        "kdclist",
                        "realm"
                      ],
                      "properties": {
                        "kdclist": {
                          "additionalProperties": false,
                          "description": "Kerberos Key Distribution Centers (KDC) information.",
                          "type": "object",
                          "required": [
                            "ip",
                            "port"
                          ],
                          "properties": {
                            "ip": {
                              "description": "The IP address of the KDC.",
                              "format": "ipv4",
                              "type": "string"
                            },
                            "port": {
                              "description": "The port number of the KDC.",
                              "minimum": 0,
                              "type": "integer"
                            }
                          }
                        },
                        "realm": {
                          "description": "The kerberos realm.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    }
                  },
                  "last_sync": {
                    "description": "ISO 8601 timestamp marking the IDP directory's last synchronization.",
                    "example": "{{last_sync}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "logout_url": {
                    "description": "The logout URL for the directory.",
                    "example": "{{logout_url}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "metadata": {
                    "description": "The IDP directory metadata.",
                    "example": "{{metadata}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "mfa": {
                    "description": "Enables multifactor authentication. Either an `on` or `off` string.",
                    "example": "{{mfa}}",
                    "type": "string",
                    "enum": [
                      "on",
                      "off"
                    ]
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking the directory's last modification.",
                    "example": "{{modified_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the IDP directory.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "nameidformat": {
                    "description": "The name ID format.",
                    "example": "{{nameidformat}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "ou_attr": {
                    "description": "The organization unit's attributes.",
                    "example": "{{ou_attr}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "ou_filter": {
                    "description": "The organization unit to filter by. Specify `null` if you want to provide this later.",
                    "example": "{{ou_filter}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "ou_object_classes": {
                    "description": "The organization unit's object classes.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "description": "The organization unit's object classes.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "password_change_allow": {
                    "description": "Whether password change is allowed.",
                    "example": "{{password_change_allow}}",
                    "type": "boolean"
                  },
                  "password_change_threshold": {
                    "description": "The password change threshold in seconds.",
                    "example": "{{password_change_threshold}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "password_complexity_message": {
                    "description": "The password complexity message.",
                    "example": "{{password_complexity_message}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "password_expire_warn_threshold": {
                    "description": "The password expiration warning threshold in seconds.",
                    "example": "{{password_expire_warn_threshold}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "password_filter": {
                    "additionalProperties": false,
                    "description": "The password format requirement filters.",
                    "type": "object",
                    "properties": {
                      "min-char-groups": {
                        "description": "Minimum number of character groups for the password. ",
                        "minimum": 2,
                        "type": "integer"
                      },
                      "min-lower": {
                        "description": "Minimum number of lowercase characters for the password.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "min-num": {
                        "description": "Minimum number of numbers for the password. ",
                        "minimum": 2,
                        "type": "integer"
                      },
                      "min-other": {
                        "description": "Minimum number of other characters for the password.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "min-special": {
                        "description": "Minimum number of special characters for the password.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "min-upper": {
                        "description": "Minimum number of uppercase characters for the password.",
                        "minimum": 1,
                        "type": "integer"
                      },
                      "name-check": {
                        "description": "Checks whether the password contains the user's name.",
                        "type": "boolean"
                      },
                      "uid-check": {
                        "description": "Checks whether the password contains the user ID.",
                        "type": "boolean"
                      }
                    }
                  },
                  "password_policy_default": {
                    "description": "The default password policy for the IDP directory.",
                    "example": "{{password_policy_default}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "password_reset_allow": {
                    "description": "Whether to allow password reset.",
                    "example": "{{password_reset_allow}}",
                    "type": "boolean"
                  },
                  "port": {
                    "description": "The port number of the IDP directory.",
                    "example": "{{port}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "resource": {
                    "description": "The IDP directory resource name.",
                    "example": "{{resource}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource_uri": {
                    "additionalProperties": false,
                    "description": "Specifies the location of various IDP directory resources.",
                    "type": "object",
                    "required": [
                      "groups",
                      "href",
                      "users"
                    ],
                    "properties": {
                      "groups": {
                        "description": "The URL for group details.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "href": {
                        "description": "The URL for IDP directory details.",
                        "minLength": 1,
                        "type": "string"
                      },
                      "users": {
                        "description": "The URL for the list of users.",
                        "minLength": 1,
                        "type": "string"
                      }
                    }
                  },
                  "root_dn": {
                    "description": "The root distinguished name of the IDP directory. Contains a series of comma-delimited pairs formed as `key=value`.",
                    "example": "{{root_dn}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "schema_attributes": {
                    "description": "The directory schema attributes.",
                    "example": "{{schema_attributes}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "server_cert_validate": {
                    "description": "Whether to validate server certificates.",
                    "example": "{{server_cert_validate}}",
                    "type": "boolean"
                  },
                  "service": {
                    "description": "The type of directory service. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                    "example": "{{service}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6,
                      7,
                      8,
                      9,
                      10,
                      11
                    ]
                  },
                  "signed_request": {
                    "description": "Whether the request is signed.",
                    "example": "{{signed_request}}",
                    "type": "boolean"
                  },
                  "ssl": {
                    "description": "Enables SSL.",
                    "example": "{{ssl}}",
                    "type": "boolean"
                  },
                  "status": {
                    "description": "The directory status. Either `0` for disabled or `1` for enabled.",
                    "example": "{{status}}",
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ]
                  },
                  "sync_interval": {
                    "description": "The synchronization interval of the IDP directory in seconds.",
                    "example": "{{sync_interval}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "sync_state": {
                    "description": "The IDP directory synchronization state. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                    "example": "{{sync_state}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ]
                  },
                  "user_base_dn": {
                    "description": "The base distinguished name of a user. Contains a series of comma-delimited pairs formed as `key=value`.",
                    "example": "{{user_base_dn}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_count": {
                    "description": "The total count of users in the IDP directory.",
                    "example": "{{user_count}}",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "user_display_name": {
                    "description": "The display name of a user.",
                    "example": "{{user_display_name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_email": {
                    "description": "The email of a user.",
                    "example": "{{user_email}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_fname": {
                    "description": "The first name of a user.",
                    "example": "{{user_fname}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_lname": {
                    "description": "The last name of a user.",
                    "example": "{{user_lname}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_memberof": {
                    "description": "The member status of a user.",
                    "example": "{{user_memberof}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_memberuid": {
                    "description": "The member UID of a user.",
                    "example": "{{user_memberuid}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_object_classes": {
                    "description": "The user's object class.",
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "description": "The object class of a user.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "user_phone_num": {
                    "description": "The phone number of a user.",
                    "example": "{{user_phone_num}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_principal": {
                    "description": "The login of a user.",
                    "example": "{{user_principal}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_samaccountname": {
                    "description": "The kerberos client principal name.",
                    "example": "{{user_samaccountname}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_search_filter": {
                    "description": "The search filter for a user.",
                    "example": "{{user_search_filter}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "user_upn": {
                    "description": "The principal name of a user.",
                    "example": "{{user_upn}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "uuid_url": {
                    "description": "A unique identifier for the directory.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/idpdirectory.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "example": {
                  "admin_pwd": "3244234323",
                  "admin_user": "admmin",
                  "api_key": null,
                  "auth_request_signed": false,
                  "auth_response_encrypt": false,
                  "chase_referral": false,
                  "cname": "dir-jex2kaugr-gimcthdupzza.login.stage.akamai-access.com",
                  "company_id": null,
                  "conf_state": 1,
                  "created_at": "2019-07-23T05:55:18.577022",
                  "description": null,
                  "dialin_sni": "dir-jex2kaugr-gimcthdupzza.login.dialin.stage.akamai-access.com",
                  "directory_status": 3,
                  "directory_type": 2,
                  "global_catalog": false,
                  "group_base_dn": "ldapdomain",
                  "group_count": 0,
                  "group_members": "member",
                  "group_name": "cn",
                  "group_search_filter": "(|(objectClass=posixGroup)(objectClass=groupOfNames))",
                  "group_token": "gidNumber",
                  "host": "ldap.company.com",
                  "last_sync": "2019-07-23T05:55:18.577146",
                  "logout_url": "",
                  "metadata": null,
                  "mfa": "off",
                  "modified_at": "2019-07-23T06:02:33.582676",
                  "name": "idpDirectory#1",
                  "nameidformat": null,
                  "ou_attr": null,
                  "ou_filter": null,
                  "password_change_allow": false,
                  "password_change_threshold": 0,
                  "password_complexity_message": "",
                  "password_expire_warn_threshold": 0,
                  "password_policy_default": "",
                  "password_reset_allow": false,
                  "port": 636,
                  "resource": "directories",
                  "root_dn": "ldapdomain",
                  "schema_attributes": "{}",
                  "server_cert_validate": true,
                  "service": 2,
                  "signed_request": false,
                  "ssl": true,
                  "status": 1,
                  "sync_interval": 21600,
                  "sync_state": 1,
                  "user_base_dn": "ldapdomain",
                  "user_count": 0,
                  "user_display_name": "displayName",
                  "user_email": "mail",
                  "user_fname": "givenName",
                  "user_lname": "sn",
                  "user_memberof": "gidNumber",
                  "user_memberuid": "memberUid",
                  "user_phone_num": "telephoneNumber",
                  "user_principal": "uid",
                  "user_samaccountname": "uid",
                  "user_search_filter": "(&(objectClass=inetOrgPerson)(objectClass=posixAccount))",
                  "user_upn": "userPrincipalName",
                  "uuid_url": "JEX2kaugR-GImctHdUpZzA",
                  "agents": [],
                  "domains": [],
                  "group_object_classes": [
                    "group",
                    "groupOfNames",
                    "posixGroup"
                  ],
                  "kerb_realms": [],
                  "ou_object_classes": [
                    "organizationalUnit"
                  ],
                  "user_object_classes": [
                    "person",
                    "organizationalPerson",
                    "user",
                    "inetOrgPerson"
                  ],
                  "attribute_map": {
                    "user.countryCode": "countryCode",
                    "user.email": "mail",
                    "user.firstName": "givenName",
                    "user.groups": "member",
                    "user.lastName": "sn",
                    "user.netbios": "",
                    "user.persistentId": "entryUUID",
                    "user.phoneNumber": "telephoneNumber",
                    "user.samAccountName": "uid",
                    "user.userPrincipleName": "userPrincipalName"
                  },
                  "password_filter": {},
                  "resource_uri": {
                    "groups": "/api/v1/directories/JEX2kaugR-GImctHdUpZzA/groups/",
                    "href": "/api/v1/directories/JEX2kaugR-GImctHdUpZzA",
                    "users": "/api/v1/directories/JEX2kaugR-GImctHdUpZzA/users/"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access IDP directory information.",
                  "type": "object",
                  "required": [
                    "admin_user",
                    "agents",
                    "api_key",
                    "attribute_map",
                    "auth_request_signed",
                    "auth_response_encrypt",
                    "chase_referral",
                    "cname",
                    "company_id",
                    "conf_state",
                    "description",
                    "dialin_sni",
                    "directory_status",
                    "directory_type",
                    "domains",
                    "global_catalog",
                    "group_base_dn",
                    "group_count",
                    "group_members",
                    "group_name",
                    "group_object_classes",
                    "group_search_filter",
                    "group_token",
                    "host",
                    "kerb_realms",
                    "last_sync",
                    "logout_url",
                    "metadata",
                    "mfa",
                    "name",
                    "nameidformat",
                    "ou_attr",
                    "ou_filter",
                    "ou_object_classes",
                    "password_change_allow",
                    "password_change_threshold",
                    "password_complexity_message",
                    "password_expire_warn_threshold",
                    "password_filter",
                    "password_policy_default",
                    "password_reset_allow",
                    "port",
                    "resource",
                    "resource_uri",
                    "root_dn",
                    "schema_attributes",
                    "server_cert_validate",
                    "service",
                    "signed_request",
                    "ssl",
                    "status",
                    "sync_interval",
                    "sync_state",
                    "user_base_dn",
                    "user_count",
                    "user_display_name",
                    "user_email",
                    "user_fname",
                    "user_lname",
                    "user_memberof",
                    "user_memberuid",
                    "user_object_classes",
                    "user_phone_num",
                    "user_principal",
                    "user_samaccountname",
                    "user_search_filter",
                    "user_upn"
                  ],
                  "properties": {
                    "admin_user": {
                      "description": "The administrator user account for the IDP directory.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "agents": {
                      "description": "Connectors assigned to this IDP directory.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Connectors assigned to this IDP directory.",
                        "type": "object",
                        "required": [
                          "name",
                          "uuid_url"
                        ],
                        "properties": {
                          "name": {
                            "description": "The name of the connector.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "uuid_url": {
                            "description": "A unique identifier for the connector.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "api_key": {
                      "description": "The API key of the IDP directory.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "attribute_map": {
                      "additionalProperties": false,
                      "description": "The attribute mapping for the IDP directory.",
                      "type": "object",
                      "required": [
                        "user.countryCode",
                        "user.email",
                        "user.firstName",
                        "user.lastName",
                        "user.netbios",
                        "user.persistentId",
                        "user.phoneNumber",
                        "user.samAccountName",
                        "user.userPrincipleName"
                      ],
                      "properties": {
                        "user.countryCode": {
                          "description": "The user's country code.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.email": {
                          "description": "The user's email address.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.firstName": {
                          "description": "The user's first name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.lastName": {
                          "description": "The user's last name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.netbios": {
                          "description": "The user's NetBIOS name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.persistentId": {
                          "description": "The user persistent ID.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.phoneNumber": {
                          "description": "The user's phone number.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.samAccountName": {
                          "description": "The user's Security Account Manager (SAM) account name.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "user.userPrincipleName": {
                          "description": "The user's principle name.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "auth_request_signed": {
                      "description": "Whether the authentication request is signed.",
                      "type": "boolean"
                    },
                    "auth_response_encrypt": {
                      "description": "Whether the authentication response is encrypted.",
                      "type": "boolean"
                    },
                    "chase_referral": {
                      "description": "Whether to chase referral.",
                      "type": "boolean"
                    },
                    "cname": {
                      "description": "The IDP directory cname.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "company_id": {
                      "description": "The company ID of the IDP directory.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "conf_state": {
                      "description": "The configuration state of the IDP directory. Either `0` for not configured or `1` for configured.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the IDP directory object's creation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "description": "ISO 8601 timestamp marking the IDP directory object's creation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "dialin_sni": {
                      "description": "The dial-in SNI for the IDP directory.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "directory_status": {
                      "description": "The status of the directory. Either `1` for not added, `2` for added, `3` for no agent, `4` for pending, `5` for unreachable, or `6` for okay.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ]
                    },
                    "directory_type": {
                      "default": 2,
                      "description": "The type of directory. Either `1` for cloud, `2` for enterprise, `3` for third party, `4` for Akamai, or `5` for Akamai MSP.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5
                      ]
                    },
                    "domains": {
                      "description": "Contains a list of domains for a directory.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "description": "The domain name.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "global_catalog": {
                      "description": "Enables global catalog.",
                      "type": "boolean"
                    },
                    "group_base_dn": {
                      "description": "The base Distinguished Name (DN) that identifies the group entry in an IDP directory. Contains a series of comma-delimited pairs formed as `key=value`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_count": {
                      "description": "The number of groups for the IDP directory.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "group_members": {
                      "description": "The members of the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_name": {
                      "description": "The name of the group.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_object_classes": {
                      "description": "Group object classes that define custom LDAP mappings of users and groups.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "Group object classes for custom LDAP mappings of users and groups.",
                        "type": "object",
                        "properties": {
                          "group": {
                            "description": "The groups synchronized with the IDP directory.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "groupOfNames": {
                            "description": "All active directory groups.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "group_search_filter": {
                      "description": "The search filter for the group, such as `(objectClass=group)`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "group_token": {
                      "description": "The primary group token.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "host": {
                      "description": "The IDP directory host.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "kerb_realms": {
                      "description": "Kerberos realms for the IDP directory.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "type": "object",
                        "required": [
                          "kdclist",
                          "realm"
                        ],
                        "properties": {
                          "kdclist": {
                            "additionalProperties": false,
                            "description": "Kerberos Key Distribution Centers (KDC) information.",
                            "type": "object",
                            "required": [
                              "ip",
                              "port"
                            ],
                            "properties": {
                              "ip": {
                                "description": "The IP address of the KDC.",
                                "format": "ipv4",
                                "type": "string"
                              },
                              "port": {
                                "description": "The port number of the KDC.",
                                "minimum": 0,
                                "type": "integer"
                              }
                            }
                          },
                          "realm": {
                            "description": "The kerberos realm.",
                            "minLength": 1,
                            "type": "string"
                          }
                        }
                      }
                    },
                    "last_sync": {
                      "description": "ISO 8601 timestamp marking the IDP directory's last synchronization.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "logout_url": {
                      "description": "The logout URL for the directory.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "metadata": {
                      "description": "The IDP directory metadata.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "mfa": {
                      "description": "Enables multifactor authentication. Either an `on` or `off` string.",
                      "type": "string",
                      "enum": [
                        "on",
                        "off"
                      ]
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the directory's last modification.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the IDP directory.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "nameidformat": {
                      "description": "The name ID format.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "ou_attr": {
                      "description": "The organization unit's attributes.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "ou_filter": {
                      "description": "The organization unit to filter by. Specify `null` if you want to provide this later.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "ou_object_classes": {
                      "description": "The organization unit's object classes.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "description": "The organization unit's object classes.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "password_change_allow": {
                      "description": "Whether password change is allowed.",
                      "type": "boolean"
                    },
                    "password_change_threshold": {
                      "description": "The password change threshold in seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "password_complexity_message": {
                      "description": "The password complexity message.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "password_expire_warn_threshold": {
                      "description": "The password expiration warning threshold in seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "password_filter": {
                      "additionalProperties": false,
                      "description": "The password format requirement filters.",
                      "type": "object",
                      "properties": {
                        "min-char-groups": {
                          "description": "Minimum number of character groups for the password. ",
                          "minimum": 2,
                          "type": "integer"
                        },
                        "min-lower": {
                          "description": "Minimum number of lowercase characters for the password.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "min-num": {
                          "description": "Minimum number of numbers for the password. ",
                          "minimum": 2,
                          "type": "integer"
                        },
                        "min-other": {
                          "description": "Minimum number of other characters for the password.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "min-special": {
                          "description": "Minimum number of special characters for the password.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "min-upper": {
                          "description": "Minimum number of uppercase characters for the password.",
                          "minimum": 1,
                          "type": "integer"
                        },
                        "name-check": {
                          "description": "Checks whether the password contains the user's name.",
                          "type": "boolean"
                        },
                        "uid-check": {
                          "description": "Checks whether the password contains the user ID.",
                          "type": "boolean"
                        }
                      }
                    },
                    "password_policy_default": {
                      "description": "The default password policy for the IDP directory.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "password_reset_allow": {
                      "description": "Whether to allow password reset.",
                      "type": "boolean"
                    },
                    "port": {
                      "description": "The port number of the IDP directory.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "resource": {
                      "description": "The IDP directory resource name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "Specifies the location of various IDP directory resources.",
                      "type": "object",
                      "required": [
                        "groups",
                        "href",
                        "users"
                      ],
                      "properties": {
                        "groups": {
                          "description": "The URL for group details.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "href": {
                          "description": "The URL for IDP directory details.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "users": {
                          "description": "The URL for the list of users.",
                          "minLength": 1,
                          "type": "string"
                        }
                      }
                    },
                    "root_dn": {
                      "description": "The root distinguished name of the IDP directory. Contains a series of comma-delimited pairs formed as `key=value`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "schema_attributes": {
                      "description": "The directory schema attributes.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "server_cert_validate": {
                      "description": "Whether to validate server certificates.",
                      "type": "boolean"
                    },
                    "service": {
                      "description": "The type of directory service. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11
                      ]
                    },
                    "signed_request": {
                      "description": "Whether the request is signed.",
                      "type": "boolean"
                    },
                    "ssl": {
                      "description": "Enables SSL.",
                      "type": "boolean"
                    },
                    "status": {
                      "description": "The directory status. Either `0` for disabled or `1` for enabled.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "sync_interval": {
                      "description": "The synchronization interval of the IDP directory in seconds.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "sync_state": {
                      "description": "The IDP directory synchronization state. Refer to [Directory service configuration](https://techdocs.akamai.com/eaa-api/reference/directory-configuration) for available values.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ]
                    },
                    "user_base_dn": {
                      "description": "The base distinguished name of a user. Contains a series of comma-delimited pairs formed as `key=value`.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_count": {
                      "description": "The total count of users in the IDP directory.",
                      "minimum": 0,
                      "type": "integer"
                    },
                    "user_display_name": {
                      "description": "The display name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_email": {
                      "description": "The email of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_fname": {
                      "description": "The first name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_lname": {
                      "description": "The last name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_memberof": {
                      "description": "The member status of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_memberuid": {
                      "description": "The member UID of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_object_classes": {
                      "description": "The user's object class.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "description": "The object class of a user.",
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "user_phone_num": {
                      "description": "The phone number of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_principal": {
                      "description": "The login of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_samaccountname": {
                      "description": "The kerberos client principal name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_search_filter": {
                      "description": "The search filter for a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "user_upn": {
                      "description": "The principal name of a user.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "uuid_url": {
                      "description": "A unique identifier for the directory.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/idpdirectory.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Deletes an existing IDP directory.",
        "operationId": "delete-idp-directory",
        "summary": "Delete an IDP directory",
        "tags": [
          "IDP directories"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-idp-directory"
        },
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each IDP directory.",
          "example": "{{idpdirectory_id}}",
          "in": "path",
          "name": "idpdirectory_id",
          "required": true,
          "schema": {
            "example": "xz_Hq325SNeSno6Wss9Phg",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/idpdirectory_id-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/services": {
      "post": {
        "description": "Creates a new rule.",
        "operationId": "post-rule",
        "summary": "Create a rule",
        "tags": [
          "Rules"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-rule"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "name": "rule#1",
                "rule_type": 1
              },
              "schema": {
                "additionalProperties": false,
                "description": "Enterprise Access rule settings to update.",
                "type": "object",
                "required": [
                  "action",
                  "description",
                  "global_rule",
                  "merge_global",
                  "name",
                  "rule_type",
                  "status",
                  "uuid_url"
                ],
                "properties": {
                  "action": {
                    "description": "The action the rule takes. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for available values.",
                    "example": "{{action}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      4,
                      8,
                      16,
                      32,
                      64,
                      128,
                      256,
                      512
                    ]
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking the rule creation.",
                    "example": "{{created_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the rule.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "global_rule": {
                    "description": "Whether the rule is global.",
                    "example": "{{global_rule}}",
                    "type": "boolean"
                  },
                  "merge_global": {
                    "description": "Whether to merge global rules.",
                    "example": "{{merge_global}}",
                    "type": "boolean"
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking the last rule modification.",
                    "example": "{{modified_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "name": {
                    "description": "The rule name.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "rule_type": {
                    "description": "The rule type. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for available values.",
                    "example": "{{rule_type}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ]
                  },
                  "status": {
                    "description": "The rule status. Either `0` for disabled or `1` for enabled.",
                    "example": "{{status}}",
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ]
                  },
                  "uuid_url": {
                    "description": "Unique URL for the rule.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/rules-post.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "action": 1,
                  "created_at": "2019-07-17T10:47:25.588550",
                  "description": null,
                  "global_rule": false,
                  "merge_global": true,
                  "modified_at": "2019-07-17T10:47:25.588564",
                  "name": "rule#1",
                  "partner_uuid": "e2901d96-cc1b-41fc-906c-e29135cc1fe0",
                  "partner_uuid_url": "4pAdlswbQfyQbOKRNcwf4A",
                  "rule_type": 1,
                  "service": "b-IAzsVvQfeTT5DTEiXZuw",
                  "status": 1,
                  "tenant_uuid": "bfaecce4-2b73-4768-9f5c-e8da2479d8e2",
                  "uuid_url": "3dnJ7oNoTzm9lYSaLRGAdg",
                  "resource_uri": {
                    "href": "/api/v1/rules/3dnJ7oNoTzm9lYSaLRGAdg",
                    "service": "/api/v1/services/b-IAzsVvQfeTT5DTEiXZuw"
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access rule settings to update.",
                  "type": "object",
                  "required": [
                    "action",
                    "description",
                    "global_rule",
                    "merge_global",
                    "name",
                    "rule_type",
                    "status",
                    "uuid_url"
                  ],
                  "properties": {
                    "action": {
                      "description": "The action the rule takes. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for available values.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        4,
                        8,
                        16,
                        32,
                        64,
                        128,
                        256,
                        512
                      ]
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the rule creation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the rule.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "global_rule": {
                      "description": "Whether the rule is global.",
                      "type": "boolean"
                    },
                    "merge_global": {
                      "description": "Whether to merge global rules.",
                      "type": "boolean"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the last rule modification.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "The rule name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "rule_type": {
                      "description": "The rule type. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for available values.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ]
                    },
                    "status": {
                      "description": "The rule status. Either `0` for disabled or `1` for enabled.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "uuid_url": {
                      "description": "Unique URL for the rule.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/rules-post.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "get": {
        "description": "Lists rules.",
        "operationId": "get-rules",
        "summary": "List rules",
        "tags": [
          "Rules"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-rules"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "meta": {
                    "limit": 1000,
                    "next": null,
                    "offset": 0,
                    "previous": null,
                    "total_count": 1
                  },
                  "objects": [
                    {
                      "action": 1,
                      "created_at": "2019-07-17T10:47:25.588550",
                      "description": null,
                      "global_rule": false,
                      "merge_global": true,
                      "modified_at": "2019-07-17T10:48:23.377706",
                      "name": "rule#1",
                      "rule_type": 1,
                      "status": 1,
                      "uuid_url": "3dnJ7oNoTzm9lYSaLRGAdg",
                      "resource_uri": {
                        "href": "/api/v1/rules/3dnJ7oNoTzm9lYSaLRGAdg",
                        "service": "/api/v1/services/b-IAzsVvQfeTT5DTEiXZuw"
                      },
                      "settings": [
                        {
                          "operator": "==",
                          "type": "user",
                          "value": "sd"
                        }
                      ]
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access rules.",
                  "type": "object",
                  "required": [
                    "meta",
                    "objects"
                  ],
                  "properties": {
                    "meta": {
                      "additionalProperties": false,
                      "description": "Paging settings for requested data.",
                      "type": "object",
                      "required": [
                        "total_count",
                        "next",
                        "limit",
                        "offset",
                        "previous"
                      ],
                      "properties": {
                        "limit": {
                          "description": "The number of items requested, maximum of 250.",
                          "maximum": 250,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "next": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the last page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "offset": {
                          "description": "The offset from the beginning of the underlying object list, starting at 0.",
                          "minimum": 0,
                          "type": "integer"
                        },
                        "previous": {
                          "description": "To navigate, replace the current URL's query string with this value, then GET that modified URL. This value is `null` when you're on the first page.",
                          "minLength": 1,
                          "nullable": true,
                          "type": "string"
                        },
                        "total_count": {
                          "description": "The total count of resources that are in the underlying object list.",
                          "minimum": 0,
                          "type": "integer"
                        }
                      },
                      "x-akamai": {
                        "file-path": "schemas/pageable.yaml"
                      }
                    },
                    "objects": {
                      "description": "Enterprise Access rule details.",
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "additionalProperties": true,
                        "type": "object",
                        "required": [
                          "action",
                          "description",
                          "global_rule",
                          "merge_global",
                          "name",
                          "resource_uri",
                          "rule_type",
                          "status",
                          "uuid_url"
                        ],
                        "properties": {
                          "action": {
                            "description": "The action the rule takes. Refer to [ref:rule-types-actions](Rule types & actions) for more information.",
                            "type": "integer",
                            "enum": [
                              1,
                              2,
                              4,
                              8,
                              16,
                              32,
                              64,
                              128,
                              256,
                              512
                            ]
                          },
                          "created_at": {
                            "description": "ISO 8601 timestamp marking the rule's creation.",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                          },
                          "description": {
                            "description": "A description of the rule.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "global_rule": {
                            "description": "Whether to apply a rule globally. You can disable a rewrite rule for a specific content type if global application of a rule results in issues or conflicts with other rewrite rules.",
                            "type": "boolean"
                          },
                          "merge_global": {
                            "description": "Whether to merge with global rules. You can write custom rules that target specific content using the content type and URL or path, while applying global rules to non-specified content.",
                            "type": "boolean"
                          },
                          "modified_at": {
                            "description": "ISO 8601 timestamp marking the rule's last modification.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "name": {
                            "description": "The rule's name.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "resource_uri": {
                            "description": "The rule's resource URL.",
                            "minLength": 1,
                            "type": "string"
                          },
                          "rule_type": {
                            "description": "The rule type. Refer to [ref:rule-types-actions](Rule types & actions) for the complete list.",
                            "type": "integer",
                            "enum": [
                              1,
                              2,
                              3,
                              4,
                              5,
                              6
                            ]
                          },
                          "status": {
                            "description": "The rule status. Either `0` for disabled or `1` for enabled.",
                            "type": "integer",
                            "enum": [
                              0,
                              1
                            ]
                          },
                          "uuid_url": {
                            "description": "The unique ID of the rule.",
                            "minLength": 1,
                            "type": "string"
                          }
                        },
                        "x-akamai": {
                          "file-path": "schemas/rules.yaml"
                        }
                      }
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/rules-list.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "The number of items to include on each page of results. Returns 250 items if you request more than that.",
            "example": "{{limit}}",
            "in": "query",
            "name": "limit",
            "schema": {
              "example": 30,
              "maximum": 250,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_limit.yaml"
            }
          },
          {
            "description": "Used for pagination. The first member of the underlying object list for the response.",
            "example": "{{offset}}",
            "in": "query",
            "name": "offset",
            "schema": {
              "example": 10,
              "type": "integer"
            },
            "x-akamai": {
              "file-path": "parameters/pageable_offset.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    },
    "/mgmt-pop/services/{id}": {
      "get": {
        "description": "Gets a single rule by ID.",
        "operationId": "get-rule",
        "summary": "Get a rule",
        "tags": [
          "Rules"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/get-rule"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "action": 1,
                  "created_at": "2019-07-17T10:47:25.588550",
                  "description": null,
                  "global_rule": false,
                  "merge_global": true,
                  "modified_at": "2019-07-17T10:48:23.377706",
                  "name": "DB apps",
                  "rule_type": 1,
                  "status": 1,
                  "uuid_url": "3dnJ7oNoTzm9lYSaLRGAdg",
                  "resource_uri": {
                    "href": "/api/v1/rules/3dnJ7oNoTzm9lYSaLRGAdg",
                    "service": "/api/v1/services/b-IAzsVvQfeTT5DTEiXZuw"
                  },
                  "settings": [
                    {
                      "operator": "==",
                      "type": "user",
                      "value": "sd"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "required": [
                    "action",
                    "description",
                    "global_rule",
                    "merge_global",
                    "name",
                    "resource_uri",
                    "rule_type",
                    "status",
                    "uuid_url"
                  ],
                  "properties": {
                    "action": {
                      "description": "The action the rule takes. Refer to [ref:rule-types-actions](Rule types & actions) for more information.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        4,
                        8,
                        16,
                        32,
                        64,
                        128,
                        256,
                        512
                      ]
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the rule's creation.",
                      "format": "date-time",
                      "readOnly": true,
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the rule.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "global_rule": {
                      "description": "Whether to apply a rule globally. You can disable a rewrite rule for a specific content type if global application of a rule results in issues or conflicts with other rewrite rules.",
                      "type": "boolean"
                    },
                    "merge_global": {
                      "description": "Whether to merge with global rules. You can write custom rules that target specific content using the content type and URL or path, while applying global rules to non-specified content.",
                      "type": "boolean"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the rule's last modification.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "The rule's name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "description": "The rule's resource URL.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "rule_type": {
                      "description": "The rule type. Refer to [ref:rule-types-actions](Rule types & actions) for the complete list.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ]
                    },
                    "status": {
                      "description": "The rule status. Either `0` for disabled or `1` for enabled.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "uuid_url": {
                      "description": "The unique ID of the rule.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/rules.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates an existing rule.",
        "operationId": "put-rule",
        "summary": "Modify a rule",
        "tags": [
          "Rules"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-rule"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "action": 1,
                "created_at": "2019-07-17T10:47:25.588550",
                "description": null,
                "global_rule": false,
                "merge_global": true,
                "modified_at": "2019-07-17T10:47:25.588564",
                "name": "rule#1",
                "partner_uuid": "e2901d96-cc1b-41fc-906c-e29135cc1fe0",
                "partner_uuid_url": "4pAdlswbQfyQbOKRNcwf4A",
                "rule_type": 1,
                "service": "b-IAzsVvQfeTT5DTEiXZuw",
                "status": 1,
                "tenant_uuid": "bfaecce4-2b73-4768-9f5c-e8da2479d8e2",
                "settings": [
                  {
                    "operator": "==",
                    "type": "user",
                    "value": "sd"
                  }
                ]
              },
              "schema": {
                "additionalProperties": false,
                "description": "Enterprise Access rule settings.",
                "type": "object",
                "required": [
                  "action",
                  "description",
                  "global_rule",
                  "merge_global",
                  "name",
                  "rule_type",
                  "status",
                  "uuid_url"
                ],
                "properties": {
                  "action": {
                    "description": "The action the rule takes. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for available values.",
                    "example": "{{action}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      4,
                      8,
                      16,
                      32,
                      64,
                      128
                    ]
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking the rule creation.",
                    "example": "{{created_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the rule.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "global_rule": {
                    "description": "Whether the rule is global.",
                    "example": "{{global_rule}}",
                    "type": "boolean"
                  },
                  "merge_global": {
                    "description": "Whether to merge global rules.",
                    "example": "{{merge_global}}",
                    "type": "boolean"
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking the last rule modification.",
                    "example": "{{modified_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "name": {
                    "description": "The rule name.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "rule_type": {
                    "description": "The rule type. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for available values.",
                    "example": "{{rule_type}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      3,
                      4,
                      5,
                      6
                    ]
                  },
                  "status": {
                    "description": "The rule status. Either `0` for disabled or `1` for enabled.",
                    "example": "{{status}}",
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ]
                  },
                  "uuid_url": {
                    "description": "Unique URL for the rule.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/rules-put.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "action": 1,
                  "created_at": "2019-07-17T10:47:25.588550",
                  "description": null,
                  "global_rule": false,
                  "merge_global": true,
                  "modified_at": "2019-07-17T10:48:23.377706",
                  "name": "DB apps",
                  "rule_type": 1,
                  "status": 1,
                  "uuid_url": "3dnJ7oNoTzm9lYSaLRGAdg",
                  "resource_uri": {
                    "href": "/api/v1/rules/3dnJ7oNoTzm9lYSaLRGAdg",
                    "service": "/api/v1/services/b-IAzsVvQfeTT5DTEiXZuw"
                  },
                  "settings": [
                    {
                      "operator": "==",
                      "type": "user",
                      "value": "sd"
                    }
                  ]
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Enterprise Access rule settings.",
                  "type": "object",
                  "required": [
                    "action",
                    "description",
                    "global_rule",
                    "merge_global",
                    "name",
                    "rule_type",
                    "status",
                    "uuid_url"
                  ],
                  "properties": {
                    "action": {
                      "description": "The action the rule takes. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for available values.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        4,
                        8,
                        16,
                        32,
                        64,
                        128
                      ]
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the rule creation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the rule.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "global_rule": {
                      "description": "Whether the rule is global.",
                      "type": "boolean"
                    },
                    "merge_global": {
                      "description": "Whether to merge global rules.",
                      "type": "boolean"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the last rule modification.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "The rule name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "rule_type": {
                      "description": "The rule type. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for available values.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6
                      ]
                    },
                    "status": {
                      "description": "The rule status. Either `0` for disabled or `1` for enabled.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "uuid_url": {
                      "description": "Unique URL for the rule.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/rules-put.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "delete": {
        "description": "Deletes an existing rule.",
        "operationId": "delete-rule",
        "summary": "Delete a rule",
        "tags": [
          "Rules"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/delete-rule"
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "*/*": {}
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each access control rule.",
          "example": "{{id}}",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "example": "HaYkWaXESw34nFi6VevZmA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/id-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/services/{id}/rules": {
      "post": {
        "description": "Creates a new access control rule.",
        "operationId": "post-access-control-rule",
        "summary": "Create an access control rule",
        "tags": [
          "Rules"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-access-control-rule"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "examples": {
                "deny group rule": {
                  "value": {
                    "action": 1,
                    "created_at": "2023-06-19T07:19:56.370497",
                    "description": null,
                    "global_rule": false,
                    "merge_global": true,
                    "modified_at": "2023-06-19T07:19:56.370509",
                    "name": "aak-group-rule",
                    "partner_uuid": "a3bee1ee-2084-11e5-b9e3-0eeb61816b5b",
                    "partner_uuid_url": "o77h7iCEEeW54w7rYYFrWw",
                    "rule_type": 1,
                    "service": "qqoGNzqcSaqllAI6hiFa2w",
                    "status": 1,
                    "tenant_uuid": "a046f1f6-4876-4f80-ad92-a353919109d1",
                    "settings": [
                      {
                        "operator": "==",
                        "type": "group",
                        "value": "group_name"
                      }
                    ]
                  }
                },
                "deny method": {
                  "value": {
                    "action": 1,
                    "created_at": "2023-06-19T07:25:02.679301",
                    "description": null,
                    "global_rule": false,
                    "merge_global": true,
                    "modified_at": "2023-06-19T07:25:02.679313",
                    "name": "aak-rule-3",
                    "partner_uuid": "a3bee1ee-2084-11e5-b9e3-0eeb61816b5b",
                    "partner_uuid_url": "o77h7iCEEeW54w7rYYFrWw",
                    "rule_type": 1,
                    "service": "qqoGNzqcSaqllAI6hiFa2w",
                    "status": 1,
                    "tenant_uuid": "a046f1f6-4876-4f80-ad92-a353919109d1",
                    "settings": [
                      {
                        "operator": "!=",
                        "type": "method",
                        "value": "GET"
                      }
                    ]
                  }
                },
                "deny region rule": {
                  "value": {
                    "action": 1,
                    "created_at": "2023-06-19T07:28:35.212008",
                    "description": null,
                    "global_rule": false,
                    "merge_global": true,
                    "modified_at": "2023-06-19T07:28:35.212021",
                    "name": "aak-rule-4",
                    "partner_uuid": "a3bee1ee-2084-11e5-b9e3-0eeb61816b5b",
                    "partner_uuid_url": "o77h7iCEEeW54w7rYYFrWw",
                    "rule_type": 1,
                    "service": "qqoGNzqcSaqllAI6hiFa2w",
                    "status": 1,
                    "tenant_uuid": "a046f1f6-4876-4f80-ad92-a353919109d1",
                    "settings": [
                      {
                        "operator": "!=",
                        "type": "country",
                        "value": "US"
                      }
                    ]
                  }
                },
                "deny url": {
                  "value": {
                    "action": 1,
                    "created_at": "2023-06-19T07:12:55.194840",
                    "description": null,
                    "global_rule": false,
                    "merge_global": true,
                    "modified_at": "2023-06-19T07:12:55.194855",
                    "name": "aak-test-rule",
                    "partner_uuid": "a3bee1ee-2084-11e5-b9e3-0eeb61816b5b",
                    "partner_uuid_url": "o77h7iCEEeW54w7rYYFrWw",
                    "rule_type": 1,
                    "service": "qqoGNzqcSaqllAI6hiFa2w",
                    "status": 1,
                    "tenant_uuid": "a046f1f6-4876-4f80-ad92-a353919109d1",
                    "settings": [
                      {
                        "operator": "==",
                        "type": "url",
                        "value": "www.google.com"
                      }
                    ]
                  }
                },
                "deny user": {
                  "value": {
                    "action": 1,
                    "created_at": "2023-06-19T07:22:41.685670",
                    "description": null,
                    "global_rule": false,
                    "merge_global": true,
                    "modified_at": "2023-06-19T07:22:41.685685",
                    "name": "denyusers_US",
                    "partner_uuid": "a3bee1ee-2084-11e5-b9e3-0eeb61816b5b",
                    "partner_uuid_url": "o77h7iCEEeW54w7rYYFrWw",
                    "rule_type": 1,
                    "service": "qqoGNzqcSaqllAI6hiFa2w",
                    "status": 1,
                    "tenant_uuid": "a046f1f6-4876-4f80-ad92-a353919109d1",
                    "settings": [
                      {
                        "operator": "!=",
                        "type": "user",
                        "value": "username"
                      }
                    ]
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "Properties to create and assign rules to restrict access to an application based on username, group name, time, or other conditions.",
                "type": "object",
                "required": [
                  "action",
                  "description",
                  "global_rule",
                  "merge_global",
                  "name",
                  "resource_uri",
                  "rule_type",
                  "settings",
                  "status",
                  "uuid_url"
                ],
                "properties": {
                  "action": {
                    "description": "The action the rule takes. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for more information. In case of access rules rule type will always be 1.",
                    "example": "{{action}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      4,
                      8,
                      16,
                      32,
                      64,
                      128,
                      256,
                      512
                    ]
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking the rule's creation.",
                    "example": "{{created_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the rule.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "global_rule": {
                    "description": "Whether to apply a rule globally. You can disable a rewrite rule for a specific content type if global application of a rule results in issues or conflicts with other rewrite rules.",
                    "example": "{{global_rule}}",
                    "type": "boolean"
                  },
                  "merge_global": {
                    "description": "Whether to merge with global rules. You can write custom rules that target specific content using the content type and URL or path while applying global rules to non-specified content.",
                    "example": "{{merge_global}}",
                    "type": "boolean"
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking the rule's last modification.",
                    "example": "{{modified_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "name": {
                    "description": "The rule's name.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "resource_uri": {
                    "additionalProperties": false,
                    "description": "A plural bundle of navigable hypermedia links to other API resources.",
                    "type": "object",
                    "required": [
                      "href",
                      "service"
                    ],
                    "properties": {
                      "href": {
                        "description": "The href resource URI.",
                        "type": "string"
                      },
                      "service": {
                        "description": "The service resource URI.",
                        "type": "string"
                      }
                    }
                  },
                  "rule_type": {
                    "description": "The action the rule takes. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for more information. In case of access rules rule type will always be 1.",
                    "example": "{{rule_type}}",
                    "type": "integer",
                    "enum": [
                      1
                    ]
                  },
                  "settings": {
                    "description": "Array containing settings object for rules that have been defined. ",
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "The objects specify the rule definiton like the kind of rule, operator and value.",
                      "type": "object",
                      "properties": {
                        "custom": {
                          "description": "Defaults to `false` for access rules. Custom content types are used only for rewrite rules.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "The logical operator, either `==` for is, or `!=` for is not.",
                          "type": "string",
                          "enum": [
                            "==",
                            "!="
                          ]
                        },
                        "type": {
                          "description": "The access control type. Either `method`, `group`, `client_IP`, `user`, `region`, `country`, and `time`.",
                          "type": "string",
                          "enum": [
                            "method",
                            "group",
                            "client_IP",
                            "user",
                            "region",
                            "country",
                            "time"
                          ]
                        },
                        "value": {
                          "description": "The values for the selected `type`.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "status": {
                    "description": "The rule status. Either `0` for disabled or `1` for enabled.",
                    "example": "{{status}}",
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ]
                  },
                  "uuid_url": {
                    "description": "The unique ID of the rule.",
                    "example": "{{uuid_url}}",
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/access-rule.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "examples": {
                  "deny group rule": {
                    "value": {
                      "action": 1,
                      "created_at": "2023-06-19T07:19:56.370497",
                      "description": null,
                      "global_rule": false,
                      "merge_global": true,
                      "modified_at": "2023-06-19T07:20:19.750670",
                      "name": "aak-group-rule",
                      "rule_type": 1,
                      "status": 1,
                      "uuid_url": "NuAt1yMGSM6oKdEuMq4WbA",
                      "resource_uri": {
                        "href": "/api/v1/rules/NuAt1yMGSM6oKdEuMq4WbA",
                        "service": "/api/v1/services/qqoGNzqcSaqllAI6hiFa2w"
                      },
                      "settings": [
                        {
                          "custom": false,
                          "operator": "==",
                          "type": "group",
                          "value": "group_name"
                        }
                      ]
                    }
                  },
                  "deny method": {
                    "value": {
                      "action": 1,
                      "created_at": "2023-06-19T07:25:02.679301",
                      "description": null,
                      "global_rule": false,
                      "merge_global": true,
                      "modified_at": "2023-06-19T07:25:42.202627",
                      "name": "aak-rule-3",
                      "rule_type": 1,
                      "status": 1,
                      "uuid_url": "SAzHpIoFQP-nCu3dfUtO4A",
                      "resource_uri": {
                        "href": "/api/v1/rules/SAzHpIoFQP-nCu3dfUtO4A",
                        "service": "/api/v1/services/qqoGNzqcSaqllAI6hiFa2w"
                      },
                      "settings": [
                        {
                          "custom": false,
                          "operator": "!=",
                          "type": "method",
                          "value": "GET"
                        }
                      ]
                    }
                  },
                  "deny region rule": {
                    "value": {
                      "action": 1,
                      "created_at": "2023-06-19T07:28:35.212008",
                      "description": null,
                      "global_rule": false,
                      "merge_global": true,
                      "modified_at": "2023-06-19T07:29:27.419958",
                      "name": "aak-rule-4",
                      "rule_type": 1,
                      "status": 1,
                      "uuid_url": "tVDo1UhZRde_7WZjj7txuQ",
                      "resource_uri": {
                        "href": "/api/v1/rules/tVDo1UhZRde_7WZjj7txuQ",
                        "service": "/api/v1/services/qqoGNzqcSaqllAI6hiFa2w"
                      },
                      "settings": [
                        {
                          "custom": false,
                          "operator": "!=",
                          "type": "country",
                          "value": "US"
                        }
                      ]
                    }
                  },
                  "deny url": {
                    "value": {
                      "action": 1,
                      "created_at": "2023-06-19T07:12:55.194840",
                      "description": null,
                      "global_rule": false,
                      "merge_global": true,
                      "modified_at": "2023-06-19T07:13:27.853937",
                      "name": "aak-rule",
                      "rule_type": 1,
                      "status": 1,
                      "uuid_url": "sF-OF7fLTxC895h_l9LouA",
                      "resource_uri": {
                        "href": "/api/v1/rules/sF-OF7fLTxC895h_l9LouA",
                        "service": "/api/v1/services/qqoGNzqcSaqllAI6hiFa2w"
                      },
                      "settings": [
                        {
                          "custom": false,
                          "operator": "==",
                          "type": "url",
                          "value": "www.google.com"
                        }
                      ]
                    }
                  },
                  "deny user": {
                    "value": {
                      "action": 1,
                      "created_at": "2023-06-19T07:22:41.685670",
                      "description": null,
                      "global_rule": false,
                      "merge_global": true,
                      "modified_at": "2023-06-19T07:22:56.308761",
                      "name": "aak-rule-2",
                      "rule_type": 1,
                      "status": 1,
                      "uuid_url": "hJVLit4FSpyU16llVByXxg",
                      "resource_uri": {
                        "href": "/api/v1/rules/hJVLit4FSpyU16llVByXxg",
                        "service": "/api/v1/services/qqoGNzqcSaqllAI6hiFa2w"
                      },
                      "settings": [
                        {
                          "custom": false,
                          "operator": "!=",
                          "type": "user",
                          "value": "username"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Properties to create and assign rules to restrict access to an application based on username, group name, time, or other conditions.",
                  "type": "object",
                  "required": [
                    "action",
                    "description",
                    "global_rule",
                    "merge_global",
                    "name",
                    "resource_uri",
                    "rule_type",
                    "settings",
                    "status",
                    "uuid_url"
                  ],
                  "properties": {
                    "action": {
                      "description": "The action the rule takes. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for more information. In case of access rules rule type will always be 1.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        4,
                        8,
                        16,
                        32,
                        64,
                        128,
                        256,
                        512
                      ]
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the rule's creation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the rule.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "global_rule": {
                      "description": "Whether to apply a rule globally. You can disable a rewrite rule for a specific content type if global application of a rule results in issues or conflicts with other rewrite rules.",
                      "type": "boolean"
                    },
                    "merge_global": {
                      "description": "Whether to merge with global rules. You can write custom rules that target specific content using the content type and URL or path while applying global rules to non-specified content.",
                      "type": "boolean"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the rule's last modification.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "The rule's name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "resource_uri": {
                      "additionalProperties": false,
                      "description": "A plural bundle of navigable hypermedia links to other API resources.",
                      "type": "object",
                      "required": [
                        "href",
                        "service"
                      ],
                      "properties": {
                        "href": {
                          "description": "The href resource URI.",
                          "type": "string"
                        },
                        "service": {
                          "description": "The service resource URI.",
                          "type": "string"
                        }
                      }
                    },
                    "rule_type": {
                      "description": "The action the rule takes. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for more information. In case of access rules rule type will always be 1.",
                      "type": "integer",
                      "enum": [
                        1
                      ]
                    },
                    "settings": {
                      "description": "Array containing settings object for rules that have been defined. ",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "The objects specify the rule definiton like the kind of rule, operator and value.",
                        "type": "object",
                        "properties": {
                          "custom": {
                            "description": "Defaults to `false` for access rules. Custom content types are used only for rewrite rules.",
                            "type": "boolean"
                          },
                          "operator": {
                            "description": "The logical operator, either `==` for is, or `!=` for is not.",
                            "type": "string",
                            "enum": [
                              "==",
                              "!="
                            ]
                          },
                          "type": {
                            "description": "The access control type. Either `method`, `group`, `client_IP`, `user`, `region`, `country`, and `time`.",
                            "type": "string",
                            "enum": [
                              "method",
                              "group",
                              "client_IP",
                              "user",
                              "region",
                              "country",
                              "time"
                            ]
                          },
                          "value": {
                            "description": "The values for the selected `type`.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "status": {
                      "description": "The rule status. Either `0` for disabled or `1` for enabled.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    },
                    "uuid_url": {
                      "description": "The unique ID of the rule.",
                      "minLength": 1,
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/access-rule.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "description": "Updates an existing access control rule.",
        "operationId": "put-access-control-rule",
        "summary": "Modify an access control rule",
        "tags": [
          "Rules"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/put-access-control-rule"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "examples": {
                "update deny group": {
                  "value": {
                    "action": 1,
                    "created_at": "2023-06-19T07:19:56.370497",
                    "description": null,
                    "global_rule": false,
                    "merge_global": true,
                    "modified_at": "2023-06-19T07:20:19.750670",
                    "name": "aak-group-rule",
                    "rule_type": 1,
                    "status": 1,
                    "settings": [
                      {
                        "custom": false,
                        "operator": "==",
                        "type": "group",
                        "value": "group_name_changed"
                      }
                    ]
                  }
                },
                "update deny region": {
                  "value": {
                    "action": 1,
                    "created_at": "2023-06-19T07:28:35.212008",
                    "description": null,
                    "global_rule": false,
                    "merge_global": true,
                    "modified_at": "2023-06-19T07:29:27.419958",
                    "name": "aak-rule-4",
                    "rule_type": 1,
                    "status": 1,
                    "settings": [
                      {
                        "custom": false,
                        "operator": "!=",
                        "type": "country",
                        "value": "VN"
                      }
                    ]
                  }
                },
                "update deny url": {
                  "value": {
                    "action": 1,
                    "created_at": "2023-06-19T07:22:41.685670",
                    "description": null,
                    "global_rule": false,
                    "merge_global": true,
                    "modified_at": "2023-06-19T07:22:56.308761",
                    "name": "aak-rule-2",
                    "rule_type": 1,
                    "status": 1,
                    "settings": [
                      {
                        "custom": false,
                        "operator": "!=",
                        "type": "user",
                        "value": "username_changed"
                      }
                    ]
                  }
                },
                "update deny user": {
                  "value": {
                    "action": 1,
                    "created_at": "2023-06-19T07:12:55.194840",
                    "description": null,
                    "global_rule": false,
                    "merge_global": true,
                    "modified_at": "2023-06-19T07:13:27.853937",
                    "name": "aak-rule",
                    "rule_type": 1,
                    "status": 1,
                    "settings": [
                      {
                        "custom": false,
                        "operator": "==",
                        "type": "url",
                        "value": "www.example.com"
                      }
                    ]
                  }
                }
              },
              "schema": {
                "additionalProperties": false,
                "description": "Properties to create and assign rules to restrict access to an application based on username, group name, time, or other conditions.",
                "type": "object",
                "required": [
                  "action",
                  "description",
                  "global_rule",
                  "merge_global",
                  "name",
                  "rule_type",
                  "settings",
                  "status"
                ],
                "properties": {
                  "action": {
                    "description": "The action the rule takes. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for more information. In case of access rules rule type will always be 1.",
                    "example": "{{action}}",
                    "type": "integer",
                    "enum": [
                      1,
                      2,
                      4,
                      8,
                      16,
                      32,
                      64,
                      128,
                      256,
                      512
                    ]
                  },
                  "created_at": {
                    "description": "ISO 8601 timestamp marking the rule's creation.",
                    "example": "{{created_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of the rule.",
                    "example": "{{description}}",
                    "minLength": 1,
                    "nullable": true,
                    "type": "string"
                  },
                  "global_rule": {
                    "description": "Whether to apply a rule globally. You can disable a rewrite rule for a specific content type if global application of a rule results in issues or conflicts with other rewrite rules.",
                    "example": "{{global_rule}}",
                    "type": "boolean"
                  },
                  "merge_global": {
                    "description": "Whether to merge with global rules. You can write custom rules that target specific content using the content type and URL or path while applying global rules to non-specified content.",
                    "example": "{{merge_global}}",
                    "type": "boolean"
                  },
                  "modified_at": {
                    "description": "ISO 8601 timestamp marking the rule's last modification.",
                    "example": "{{modified_at}}",
                    "format": "date-time",
                    "type": "string"
                  },
                  "name": {
                    "description": "The rule's name.",
                    "example": "{{name}}",
                    "minLength": 1,
                    "type": "string"
                  },
                  "rule_type": {
                    "description": "The action the rule takes. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for more information. In case of access rules rule type will always be 1.",
                    "example": "{{rule_type}}",
                    "type": "integer",
                    "enum": [
                      1
                    ]
                  },
                  "settings": {
                    "description": "Array containing settings object for rules that have been defined. ",
                    "type": "array",
                    "items": {
                      "additionalProperties": false,
                      "description": "The objects specify the rule definiton like the kind of rule, operator and value.",
                      "type": "object",
                      "properties": {
                        "custom": {
                          "description": "Defaults to `false` for access rules. Custom content types are used only for rewrite rules.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "The logical operator, either `==` for is, or `!=` for is not.",
                          "type": "string",
                          "enum": [
                            "==",
                            "!="
                          ]
                        },
                        "type": {
                          "description": "The access control type. Either `method`, `group`, `client_IP`, `user`, `region`, `country`, and `time`.",
                          "type": "string",
                          "enum": [
                            "method",
                            "group",
                            "client_IP",
                            "user",
                            "region",
                            "country",
                            "time"
                          ]
                        },
                        "value": {
                          "description": "The values for the selected `type`.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "status": {
                    "description": "The rule status. Either `0` for disabled or `1` for enabled.",
                    "example": "{{status}}",
                    "type": "integer",
                    "enum": [
                      0,
                      1
                    ]
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/update-access-control-rule.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "examples": {
                  "update deny group": {
                    "value": {
                      "action": 1,
                      "created_at": "2023-06-19T07:19:56.370497",
                      "description": null,
                      "global_rule": false,
                      "merge_global": true,
                      "modified_at": "2023-06-22T04:09:09.709250",
                      "name": "aak-group-rule",
                      "rule_type": 1,
                      "status": 1,
                      "uuid_url": "NuAt1yMGSM6oKdEuMq4WbA",
                      "resource_uri": {
                        "href": "/api/v1/rules/NuAt1yMGSM6oKdEuMq4WbA",
                        "service": "/api/v1/services/qqoGNzqcSaqllAI6hiFa2w"
                      },
                      "settings": [
                        {
                          "custom": false,
                          "operator": "==",
                          "type": "group",
                          "value": "group_name_changed"
                        }
                      ]
                    }
                  },
                  "update deny region": {
                    "value": {
                      "action": 1,
                      "created_at": "2023-06-19T07:28:35.212008",
                      "description": null,
                      "global_rule": false,
                      "merge_global": true,
                      "modified_at": "2023-06-22T04:18:34.995927",
                      "name": "aak-rule-4",
                      "rule_type": 1,
                      "status": 1,
                      "uuid_url": "tVDo1UhZRde_7WZjj7txuQ",
                      "resource_uri": {
                        "href": "/api/v1/rules/tVDo1UhZRde_7WZjj7txuQ",
                        "service": "/api/v1/services/qqoGNzqcSaqllAI6hiFa2w"
                      },
                      "settings": [
                        {
                          "custom": false,
                          "operator": "!=",
                          "type": "country",
                          "value": "VN"
                        }
                      ]
                    }
                  },
                  "update deny url": {
                    "value": {
                      "action": 1,
                      "created_at": "2023-06-19T07:12:55.194840",
                      "description": null,
                      "global_rule": false,
                      "merge_global": true,
                      "modified_at": "2023-06-22T04:13:37.615065",
                      "name": "aak-rule",
                      "rule_type": 1,
                      "status": 1,
                      "uuid_url": "sF-OF7fLTxC895h_l9LouA",
                      "resource_uri": {
                        "href": "/api/v1/rules/sF-OF7fLTxC895h_l9LouA",
                        "service": "/api/v1/services/qqoGNzqcSaqllAI6hiFa2w"
                      },
                      "settings": [
                        {
                          "custom": false,
                          "operator": "==",
                          "type": "url",
                          "value": "www.example.com"
                        }
                      ]
                    }
                  },
                  "update deny user": {
                    "value": {
                      "action": 1,
                      "created_at": "2023-06-19T07:22:41.685670",
                      "description": null,
                      "global_rule": false,
                      "merge_global": true,
                      "modified_at": "2023-06-22T04:15:53.502949",
                      "name": "aak-rule-2",
                      "rule_type": 1,
                      "status": 1,
                      "uuid_url": "hJVLit4FSpyU16llVByXxg",
                      "resource_uri": {
                        "href": "/api/v1/rules/hJVLit4FSpyU16llVByXxg",
                        "service": "/api/v1/services/qqoGNzqcSaqllAI6hiFa2w"
                      },
                      "settings": [
                        {
                          "custom": false,
                          "operator": "!=",
                          "type": "user",
                          "value": "username_changed"
                        }
                      ]
                    }
                  }
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "Properties to create and assign rules to restrict access to an application based on username, group name, time, or other conditions.",
                  "type": "object",
                  "required": [
                    "action",
                    "description",
                    "global_rule",
                    "merge_global",
                    "name",
                    "rule_type",
                    "settings",
                    "status"
                  ],
                  "properties": {
                    "action": {
                      "description": "The action the rule takes. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for more information. In case of access rules rule type will always be 1.",
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        4,
                        8,
                        16,
                        32,
                        64,
                        128,
                        256,
                        512
                      ]
                    },
                    "created_at": {
                      "description": "ISO 8601 timestamp marking the rule's creation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "description": "A description of the rule.",
                      "minLength": 1,
                      "nullable": true,
                      "type": "string"
                    },
                    "global_rule": {
                      "description": "Whether to apply a rule globally. You can disable a rewrite rule for a specific content type if global application of a rule results in issues or conflicts with other rewrite rules.",
                      "type": "boolean"
                    },
                    "merge_global": {
                      "description": "Whether to merge with global rules. You can write custom rules that target specific content using the content type and URL or path while applying global rules to non-specified content.",
                      "type": "boolean"
                    },
                    "modified_at": {
                      "description": "ISO 8601 timestamp marking the rule's last modification.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "name": {
                      "description": "The rule's name.",
                      "minLength": 1,
                      "type": "string"
                    },
                    "rule_type": {
                      "description": "The action the rule takes. Refer to [Rule types & actions](https://techdocs.akamai.com/eaa-api/reference/rule-types-actions) for more information. In case of access rules rule type will always be 1.",
                      "type": "integer",
                      "enum": [
                        1
                      ]
                    },
                    "settings": {
                      "description": "Array containing settings object for rules that have been defined. ",
                      "type": "array",
                      "items": {
                        "additionalProperties": false,
                        "description": "The objects specify the rule definiton like the kind of rule, operator and value.",
                        "type": "object",
                        "properties": {
                          "custom": {
                            "description": "Defaults to `false` for access rules. Custom content types are used only for rewrite rules.",
                            "type": "boolean"
                          },
                          "operator": {
                            "description": "The logical operator, either `==` for is, or `!=` for is not.",
                            "type": "string",
                            "enum": [
                              "==",
                              "!="
                            ]
                          },
                          "type": {
                            "description": "The access control type. Either `method`, `group`, `client_IP`, `user`, `region`, `country`, and `time`.",
                            "type": "string",
                            "enum": [
                              "method",
                              "group",
                              "client_IP",
                              "user",
                              "region",
                              "country",
                              "time"
                            ]
                          },
                          "value": {
                            "description": "The values for the selected `type`.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "status": {
                      "description": "The rule status. Either `0` for disabled or `1` for enabled.",
                      "type": "integer",
                      "enum": [
                        0,
                        1
                      ]
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/update-access-control-rule.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      },
      "parameters": [
        {
          "description": "A unique identifier for each access control rule.",
          "example": "{{id}}",
          "in": "path",
          "name": "id",
          "required": true,
          "schema": {
            "example": "HaYkWaXESw34nFi6VevZmA",
            "type": "string"
          },
          "x-akamai": {
            "file-path": "parameters/id-path.yaml"
          }
        }
      ]
    },
    "/mgmt-pop/tenant/mfa/reset": {
      "post": {
        "description": "Resets the one time password (OTP) of a user.",
        "operationId": "post-tenant-mfa-reset",
        "summary": "Reset MFA user password",
        "tags": [
          "User administration"
        ],
        "externalDocs": {
          "description": "See documentation for this operation in Akamai's Enterprise Application Access API",
          "url": "https://techdocs.akamai.com/eaa-api/reference/post-tenant-mfa-reset"
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "example": {
                "otp_type": "login_mfa",
                "user_id": "UcxX2qmATBeyADMt2oRxNw"
              },
              "schema": {
                "additionalProperties": false,
                "description": "MFA user settings.",
                "type": "object",
                "required": [
                  "otp_type",
                  "user_id"
                ],
                "properties": {
                  "otp_type": {
                    "description": "The one-time password type. Either `login_mfa` or `admin_mfa`. Use `login_mfa` for this operation.",
                    "example": "{{otp_type}}",
                    "type": "string",
                    "enum": [
                      "login_mfa",
                      "admin_mfa"
                    ]
                  },
                  "user_id": {
                    "description": "The user's unique identifier. ",
                    "example": "{{user_id}}",
                    "type": "string"
                  }
                },
                "x-akamai": {
                  "file-path": "schemas/mfauser-reset.yaml"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response.",
            "content": {
              "application/json": {
                "example": {
                  "status": "success"
                },
                "schema": {
                  "additionalProperties": false,
                  "description": "MFA user settings.",
                  "type": "object",
                  "required": [
                    "otp_type",
                    "user_id"
                  ],
                  "properties": {
                    "otp_type": {
                      "description": "The one-time password type. Either `login_mfa` or `admin_mfa`. Use `login_mfa` for this operation.",
                      "type": "string",
                      "enum": [
                        "login_mfa",
                        "admin_mfa"
                      ]
                    },
                    "user_id": {
                      "description": "The user's unique identifier. ",
                      "type": "string"
                    }
                  },
                  "x-akamai": {
                    "file-path": "schemas/mfauser-reset.yaml"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Akamai contract identifier for your Enterprise Application Access product.",
            "example": "{{contractId}}",
            "in": "query",
            "name": "contractId",
            "required": true,
            "schema": {
              "example": "F-EMGSGV",
              "type": "string"
            },
            "x-akamai": {
              "file-path": "parameters/contractId-query.yaml"
            }
          },
          {
            "description": "For customers who manage more than one account, this [runs the operation from another account](https://techdocs.akamai.com/developer/docs/manage-many-accounts-with-one-api-client). The Identity and Access Management API provides a [list of available account switch keys](https://techdocs.akamai.com/iam-api/reference/get-client-account-switch-keys).",
            "example": "{{accountSwitchKey}}",
            "in": "query",
            "name": "accountSwitchKey",
            "required": false,
            "schema": {
              "example": "1-5C0YLB:1-8BYUX",
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "x-readme": {
    "samples-languages": [
      "curl",
      "python",
      "node"
    ]
  },
  "servers": [
    {
      "url": "https://{hostname}/crux/v1"
    }
  ]
}