type: object
description: |-
  Enterprise connector data.
  
x-akamai:
  file-path: schemas/agent.yaml
additionalProperties: false
required:
- name
- package
properties:
  name:
    type: string
    description: |
      Name of the connector. 
    minLength: 1
  description:
    type: string
    description: |
      A description for the connector.
    minLength: 1
  admin_pwd:
    type: string
    description: |
      Hash of the admin password.
    minLength: 1
  agent_type:
    type: integer
    description: |
      The type of connector. Either `1` for VM, `2` for IPSEC, or `3` for GRE.
    default: 1
    enum:
    - 1
    - 2
    - 3
  agent_upgrade_enabled:
    type: boolean
    description: |
      Whether the connector is upgradeable.
  agent_upgrade_suspended:
    type: boolean
    description: |
      Suspends upgrades for a connector.
  agent_version:
    type: string
    description: |
      The connector software version currently installed in the connector. For example, `AGENT-4.3.0-2449+`.
    minLength: 1
  auth_service:
    type: boolean
    description: |
      Enables the authorization service.
  cpu:
    type: string
    description: |
      CPU of the connector. Specify `null` if you want to provide this later.
    nullable: true
    minLength: 1
  created_at:
    type: string
    description: |
      ISO 8601 timestamp marking the connector's creation.
    format: date-time
  data_service:
    type: boolean
    description: |
      Enables the data service.
  debug_channel_permitted:
    type: boolean
    description: |
      Enables Akamai Support to run commands on the connector through the debug channel.
  dhcp:
    type: string
    description: |
      Enables DHCP for the connector.
    minLength: 1
  disk_size:
    type: integer
    description: |
      The disk size of the connector.
    minimum: 0
  dns_server:
    type: string
    description: |
      DNS Server of the connector.
    minLength: 1
  download_url:
    type: string
    description: |
      S3 URL to download the package. Specify `null` if you want to provide this later.
    nullable: true
  gateway:
    type: string
    description: |
      Gateway of the connector. Specify `null` if you want to provide this later.
    nullable: true
    minLength: 1
  hostname:
    type: string
    description: |
      Machine name of the connector. 
    format: hostname
  ip_addr:
    type: string
    description: |
      IP address of the connector. Specify `null` if you want to provide this later.
    nullable: true
    format: ipv4
  last_checkin:
    type: string
    description: |
      ISO 8601 timestamp marking when the connector last checked in with the server.
    format: date-time
  last_stage_status:
    type: integer
    description: |
      Status of the last staging. Either `1` for success or `4` for failure.
    enum:
    - 1
    - 4
  last_upgrade_failed_date:
    type: string
    description: |
      ISO 8601 timestamp marking the last upgrade failure.
    format: date-time
  last_upgrade_failed_in:
    type: string
    description: |
      Location of the last upgrade failure, expressed as a string-formatted integer. Either `1` for none, `2` for pending, `3` for downloading, `4` for verifying, `5` for upgrade in progress, `6` for cleaning up, `7` for rollback in progress, `8` for completed, or `9` for metadata. Specify `null` if not applicable.
    nullable: true
    enum:
    - '1'
    - '2'
    - '3'
    - '4'
    - '5'
    - '6'
    - '7'
    - '8'
    - '9'
  last_upgrade_status:
    type: integer
    description: |
      Status of the last upgrade. Either `1` for success or `4` for failure.
    enum:
    - 1
    - 4
  last_upgrade_success_date:
    type: string
    description: |
      ISO 8601 timestamp marking the last successful upgrade.
    format: date-time
  last_upgrade_success_version:
    type: string
    description: |
      Last version of connector software successfully installed in the connector. Specify `null` if not applicable.
    nullable: true
    minLength: 1
  latest_stage_attempt_date:
    type: string
    description: |
      ISO 8601 timestamp of the last staging attempt. Specify `null` if not applicable.
    nullable: true
    format: date-time
  latest_stage_attempt_version:
    type: string
    description: |
      Latest connector binary version staging attempted. Specify `null` if not applicable.
    nullable: true
    minLength: 1
  latest_upgrade_attempt_date:
    type: string
    description: |
      ISO 8601 timestamp of the last upgrade attempt. Specify `null` if not applicable.
    format: date-time
  latest_upgrade_attempt_state:
    type: string
    description: |
      Status of the last upgrade attempt on the connector.
    minLength: 1
  latest_upgrade_attempt_version:
    type: string
    description: |
      Last version of connector software attempted on the connector.
    minLength: 1
  logging_settings:
    type: string
    description: |
      JSON logging settings.
    minLength: 1
  mac:
    type: string
    description: |
      MAC address of the connector.
    minLength: 1
  manual_override:
    type: boolean
    description: |
      When `true`, the connector cannot be upgraded.
  modified_at:
    type: string
    description: |
      ISO 8601 timestamp marking the connector configuration's last modification.
    format: date-time
  os_version:
    type: string
    description: |
      OS version of the connector.
    minLength: 1
  package:
    type: integer
    description: |
      Type of package for the connector. Refer to [Connector package types](ref:connector-package-types) for available values.
    enum:
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
  policy:
    type: string
    description: |
      The schedule policy ID for the connector.
    minLength: 1
  private_ip:
    type: string
    description: |
      Private IP address of the connector.
    format: ipv4
  public_ip:
    type: string
    description: |
      Public IP address of the connector.
    format: ipv4
  pwd_comments:
    type: string
    description: |
      Status of the set password attempt on the connector. Either `Success` or `Failed`.
    enum:
    - Success
    - Failed
  pwdsyncflag:
    type: boolean
    description: |
      Syncs the connector password with the back-end database.
  ram_size:
    type: integer
    description: |
      RAM size of the connector. Specify `null` if you want to provide this later. 
    nullable: true
    minimum: 0
  reach:
    type: integer
    description: |
      Connector reachability status. Either `0` for unreachable or `1` for reachable.
    default: 1
    enum:
    - 0
    - 1
  region:
    type: string
    description: |
      The region of the connector. For example, `Central`.
    minLength: 1
  resource_uri:
    type: object
    description: |
      Contains resource locations for the connector.
    additionalProperties: false
    required:
    - href
    properties:
      href:
        type: string
        description: |
          The location of connector details.
        minLength: 1
  setpwd_attempt:
    type: integer
    description: |
      The number of unique password setting attempts.
    minimum: 0
  state:
    type: integer
    description: |
      State of the connector. Either `0` for not created, `1` for created, `2` for not installed, `3` for not verified, `4` for verified, `5` for unenrolled, `6` for enrolled, `7` for not configured, or `8` for configured.
    default: 0
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
  status:
    type: integer
    description: |
      Status of the connector. Either `0` for disabled or `1` for enabled.
    enum:
    - 0
    - 1
  subnet:
    type: string
    description: |
      Subnet of the connector. Specify `null` if you want to provide this later.
    nullable: true
    minLength: 1
  tz:
    type: string
    description: |
      Time zone of the connector. For example, `America/Los_Angeles`.
    minLength: 1
  uuid_url:
    type: string
    description: |
      A unique identifier for the connector.
    minLength: 1
